{"mappings":"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","sources":["<anon>","node_modules/@jsplumb/browser-ui/js/jsplumb.browser-ui.es.js","src/scripts/whiteboard-main.ts","src/scripts/whiteboard-lib.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire22e7\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire22e7\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gYAp4\", function(module, exports) {\n\n$parcel$export(module.exports, \"FlowchartConnector\", () => FlowchartConnector);\n$parcel$export(module.exports, \"newInstance\", () => newInstance);\n$parcel$export(module.exports, \"ready\", () => ready);\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") _typeof = function(obj) {\n        return typeof obj;\n    };\n    else _typeof = function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) return call;\n    return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else result = Super.apply(this, arguments);\n        return _possibleConstructorReturn(this, result);\n    };\n}\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = _getPrototypeOf(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) _get = Reflect.get;\n    else _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.get) return desc.get.call(receiver);\n        return desc.value;\n    };\n    return _get(target, property, receiver || target);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction filterList(list, value, missingIsFalse) {\n    if (list === \"*\") return true;\n    return list.length > 0 ? list.indexOf(value) !== -1 : !missingIsFalse;\n}\nfunction extend(o1, o2, keys) {\n    var i;\n    o1 = o1 || {};\n    o2 = o2 || {};\n    var _o1 = o1, _o2 = o2;\n    if (keys) for(i = 0; i < keys.length; i++)_o1[keys[i]] = _o2[keys[i]];\n    else for(i in _o2)_o1[i] = _o2[i];\n    return o1;\n}\nfunction isNumber(n) {\n    return Object.prototype.toString.call(n) === \"[object Number]\";\n}\nfunction isString(s) {\n    return typeof s === \"string\";\n}\nfunction isBoolean(s) {\n    return typeof s === \"boolean\";\n}\nfunction isObject(o) {\n    return o == null ? false : Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction isDate(o) {\n    return Object.prototype.toString.call(o) === \"[object Date]\";\n}\nfunction isFunction(o) {\n    return Object.prototype.toString.call(o) === \"[object Function]\";\n}\nfunction isNamedFunction(o) {\n    return isFunction(o) && o.name != null && o.name.length > 0;\n}\nfunction isEmpty(o) {\n    for(var i in o){\n        if (o.hasOwnProperty(i)) return false;\n    }\n    return true;\n}\nfunction clone(a) {\n    if (isString(a)) return \"\" + a;\n    else if (isBoolean(a)) return !!a;\n    else if (isDate(a)) return new Date(a.getTime());\n    else if (isFunction(a)) return a;\n    else if (Array.isArray(a)) {\n        var _b = [];\n        for(var i = 0; i < a.length; i++)_b.push(clone(a[i]));\n        return _b;\n    } else if (isObject(a)) {\n        var c = {};\n        for(var j in a)c[j] = clone(a[j]);\n        return c;\n    } else return a;\n}\nfunction filterNull(obj) {\n    var o = {};\n    for(var k in obj)if (obj[k] != null) o[k] = obj[k];\n    return o;\n}\nfunction merge(a, b, collations, overwrites) {\n    var cMap = {}, ar, i, oMap = {};\n    collations = collations || [];\n    overwrites = overwrites || [];\n    for(i = 0; i < collations.length; i++)cMap[collations[i]] = true;\n    for(i = 0; i < overwrites.length; i++)oMap[overwrites[i]] = true;\n    var c = clone(a);\n    for(i in b){\n        if (c[i] == null || oMap[i]) c[i] = b[i];\n        else if (cMap[i]) {\n            ar = [];\n            ar.push.apply(ar, Array.isArray(c[i]) ? c[i] : [\n                c[i]\n            ]);\n            ar.push(b[i]);\n            c[i] = ar;\n        } else if (isString(b[i]) || isBoolean(b[i]) || isFunction(b[i]) || isNumber(b[i])) c[i] = b[i];\n        else {\n            if (Array.isArray(b[i])) {\n                ar = [];\n                if (Array.isArray(c[i])) ar.push.apply(ar, c[i]);\n                ar.push.apply(ar, b[i]);\n                c[i] = ar;\n            } else if (isObject(b[i])) {\n                if (!isObject(c[i])) c[i] = {};\n                for(var j in b[i])c[i][j] = b[i][j];\n            }\n        }\n    }\n    return c;\n}\nfunction _areEqual(a, b) {\n    if (a != null && b == null) return false;\n    else {\n        if ((a == null || isString(a) || isBoolean(a) || isNumber(a)) && a !== b) return false;\n        else {\n            if (Array.isArray(a)) {\n                if (!Array.isArray(b)) return false;\n                else {\n                    if (!arraysEqual(a, b)) return false;\n                }\n            } else if (isObject(a)) {\n                if (!isObject(a)) return false;\n                else {\n                    if (!objectsEqual(a, b)) return false;\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction arraysEqual(a, b) {\n    if (a == null && b == null) return true;\n    else if (a == null && b != null) return false;\n    else if (a != null && b == null) return false;\n    if (a.length !== b.length) return false;\n    else for(var i = 0; i < a.length; i++){\n        if (!_areEqual(a[i], b[i])) return false;\n    }\n    return true;\n}\nfunction objectsEqual(a, b) {\n    if (a == null && b == null) return true;\n    else if (a == null && b != null) return false;\n    else if (a != null && b == null) return false;\n    for(var key in a){\n        var va = a[key], vb = b[key];\n        if (!_areEqual(va, vb)) return false;\n    }\n    return true;\n}\nfunction replace(inObj, path, value) {\n    if (inObj == null) return;\n    var q = inObj, t = q;\n    path.replace(/([^\\.])+/g, function(term, lc, pos, str) {\n        var array = term.match(/([^\\[0-9]+){1}(\\[)([0-9+])/), last = pos + term.length >= str.length, _getArray = function _getArray() {\n            return t[array[1]] || function() {\n                t[array[1]] = [];\n                return t[array[1]];\n            }();\n        };\n        if (last) {\n            if (array) _getArray()[array[3]] = value;\n            else t[term] = value;\n        } else if (array) {\n            var _a2 = _getArray();\n            t = _a2[array[3]] || function() {\n                _a2[array[3]] = {};\n                return _a2[array[3]];\n            }();\n        } else t = t[term] || function() {\n            t[term] = {};\n            return t[term];\n        }();\n        return \"\";\n    });\n    return inObj;\n}\nfunction functionChain(successValue, failValue, fns) {\n    for(var i = 0; i < fns.length; i++){\n        var o = fns[i][0][fns[i][1]].apply(fns[i][0], fns[i][2]);\n        if (o === failValue) return o;\n    }\n    return successValue;\n}\nfunction populate(model, values, functionPrefix, doNotExpandFunctions) {\n    var getValue = function getValue(fromString) {\n        var matches = fromString.match(/(\\${.*?})/g);\n        if (matches != null) for(var i = 0; i < matches.length; i++){\n            var val = values[matches[i].substring(2, matches[i].length - 1)] || \"\";\n            if (val != null) fromString = fromString.replace(matches[i], val);\n        }\n        matches = fromString.match(/({{.*?}})/g);\n        if (matches != null) for(var _i = 0; _i < matches.length; _i++){\n            var _val = values[matches[_i].substring(2, matches[_i].length - 2)] || \"\";\n            if (_val != null) fromString = fromString.replace(matches[_i], _val);\n        }\n        return fromString;\n    };\n    var _one = function _one(d) {\n        if (d != null) {\n            if (isString(d)) return getValue(d);\n            else if (isFunction(d) && !doNotExpandFunctions && (functionPrefix == null || (d.name || \"\").indexOf(functionPrefix) === 0)) return d(values);\n            else if (Array.isArray(d)) {\n                var r = [];\n                for(var i = 0; i < d.length; i++)r.push(_one(d[i]));\n                return r;\n            } else if (isObject(d)) {\n                var s = {};\n                for(var j in d)s[j] = _one(d[j]);\n                return s;\n            } else return d;\n        }\n    };\n    return _one(model);\n}\nfunction forEach(a, f) {\n    if (a) for(var i = 0; i < a.length; i++)f(a[i]);\n    else return null;\n}\nfunction findWithFunction(a, f) {\n    if (a) for(var i = 0; i < a.length; i++){\n        if (f(a[i])) return i;\n    }\n    return -1;\n}\nfunction findAllWithFunction(a, predicate) {\n    var o = [];\n    if (a) {\n        for(var i = 0; i < a.length; i++)if (predicate(a[i])) o.push(i);\n    }\n    return o;\n}\nfunction getWithFunction(a, f) {\n    var idx = findWithFunction(a, f);\n    return idx === -1 ? null : a[idx];\n}\nfunction getAllWithFunction(a, f) {\n    var indexes = findAllWithFunction(a, f);\n    return indexes.map(function(i) {\n        return a[i];\n    });\n}\nfunction getFromSetWithFunction(s, f) {\n    var out = null;\n    s.forEach(function(t) {\n        if (f(t)) out = t;\n    });\n    return out;\n}\nfunction setToArray(s) {\n    var a = [];\n    s.forEach(function(t) {\n        a.push(t);\n    });\n    return a;\n}\nfunction removeWithFunction(a, f) {\n    var idx = findWithFunction(a, f);\n    if (idx > -1) a.splice(idx, 1);\n    return idx !== -1;\n}\nfunction fromArray(a) {\n    if (Array.fromArray != null) return Array.from(a);\n    else {\n        var arr = [];\n        Array.prototype.push.apply(arr, a);\n        return arr;\n    }\n}\nfunction remove(l, v) {\n    var idx = l.indexOf(v);\n    if (idx > -1) l.splice(idx, 1);\n    return idx !== -1;\n}\nfunction addWithFunction(list, item, hashFunction) {\n    if (findWithFunction(list, hashFunction) === -1) list.push(item);\n}\nfunction addToDictionary(map, key, value, insertAtStart) {\n    var l = map[key];\n    if (l == null) {\n        l = [];\n        map[key] = l;\n    }\n    l[insertAtStart ? \"unshift\" : \"push\"](value);\n    return l;\n}\nfunction addToList(map, key, value, insertAtStart) {\n    var l = map.get(key);\n    if (l == null) {\n        l = [];\n        map.set(key, l);\n    }\n    l[insertAtStart ? \"unshift\" : \"push\"](value);\n    return l;\n}\nfunction suggest(list, item, insertAtHead) {\n    if (list.indexOf(item) === -1) {\n        if (insertAtHead) list.unshift(item);\n        else list.push(item);\n        return true;\n    }\n    return false;\n}\nvar lut$1 = [];\nfor(var i$1 = 0; i$1 < 256; i$1++)lut$1[i$1] = (i$1 < 16 ? \"0\" : \"\") + i$1.toString(16);\nfunction uuid() {\n    var d0 = Math.random() * 0xffffffff | 0;\n    var d1 = Math.random() * 0xffffffff | 0;\n    var d2 = Math.random() * 0xffffffff | 0;\n    var d3 = Math.random() * 0xffffffff | 0;\n    return lut$1[d0 & 0xff] + lut$1[d0 >> 8 & 0xff] + lut$1[d0 >> 16 & 0xff] + lut$1[d0 >> 24 & 0xff] + \"-\" + lut$1[d1 & 0xff] + lut$1[d1 >> 8 & 0xff] + \"-\" + lut$1[d1 >> 16 & 0x0f | 0x40] + lut$1[d1 >> 24 & 0xff] + \"-\" + lut$1[d2 & 0x3f | 0x80] + lut$1[d2 >> 8 & 0xff] + \"-\" + lut$1[d2 >> 16 & 0xff] + lut$1[d2 >> 24 & 0xff] + lut$1[d3 & 0xff] + lut$1[d3 >> 8 & 0xff] + lut$1[d3 >> 16 & 0xff] + lut$1[d3 >> 24 & 0xff];\n}\nfunction rotatePoint(point, center, rotation) {\n    var radial = {\n        x: point.x - center.x,\n        y: point.y - center.y\n    }, cr = Math.cos(rotation / 360 * Math.PI * 2), sr = Math.sin(rotation / 360 * Math.PI * 2);\n    return {\n        x: radial.x * cr - radial.y * sr + center.x,\n        y: radial.y * cr + radial.x * sr + center.y,\n        cr: cr,\n        sr: sr\n    };\n}\nfunction rotateAnchorOrientation(orientation, rotation) {\n    var r = rotatePoint({\n        x: orientation[0],\n        y: orientation[1]\n    }, {\n        x: 0,\n        y: 0\n    }, rotation);\n    return [\n        Math.round(r.x),\n        Math.round(r.y)\n    ];\n}\nfunction fastTrim(s) {\n    if (s == null) return null;\n    var str = s.replace(/^\\s\\s*/, \"\"), ws = /\\s/, i = str.length;\n    while(ws.test(str.charAt(--i)));\n    return str.slice(0, i + 1);\n}\nfunction each(obj, fn) {\n    obj = obj.length == null || typeof obj === \"string\" ? [\n        obj\n    ] : obj;\n    for(var _i2 = 0; _i2 < obj.length; _i2++)fn(obj[_i2]);\n}\nfunction map(obj, fn) {\n    var o = [];\n    for(var _i3 = 0; _i3 < obj.length; _i3++)o.push(fn(obj[_i3]));\n    return o;\n}\nvar logEnabled = true;\nfunction log() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n    if (typeof console !== \"undefined\") try {\n        var msg = arguments[arguments.length - 1];\n        console.log(msg);\n    } catch (e) {}\n}\nfunction sgn$1(x) {\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\nfunction wrap(wrappedFunction, newFunction, returnOnThisValue) {\n    return function() {\n        var r = null;\n        try {\n            if (newFunction != null) r = newFunction.apply(this, arguments);\n        } catch (e) {\n            log(\"jsPlumb function failed : \" + e);\n        }\n        if (wrappedFunction != null && (returnOnThisValue == null || r !== returnOnThisValue)) try {\n            r = wrappedFunction.apply(this, arguments);\n        } catch (e) {\n            log(\"wrapped function failed : \" + e);\n        }\n        return r;\n    };\n}\nfunction getsert(map, key, valueGenerator) {\n    if (!map.has(key)) map.set(key, valueGenerator());\n    return map.get(key);\n}\nfunction isAssignableFrom(object, cls) {\n    var proto = object.__proto__;\n    while(proto != null){\n        if (proto instanceof cls) return true;\n        else proto = proto.__proto__;\n    }\n    return false;\n}\nfunction insertSorted(value, array, comparator, sortDescending) {\n    if (array.length === 0) array.push(value);\n    else {\n        var flip = sortDescending ? -1 : 1;\n        var min = 0;\n        var max = array.length;\n        var index = Math.floor((min + max) / 2);\n        while(max > min){\n            var c = comparator(value, array[index]) * flip;\n            if (c < 0) max = index;\n            else min = index + 1;\n            index = Math.floor((min + max) / 2);\n        }\n        array.splice(index, 0, value);\n    }\n}\nfunction matchesSelector$1(el, selector, ctx) {\n    ctx = ctx || el.parentNode;\n    var possibles = ctx.querySelectorAll(selector);\n    for(var i = 0; i < possibles.length; i++){\n        if (possibles[i] === el) return true;\n    }\n    return false;\n}\nfunction consume(e, doNotPreventDefault) {\n    if (e.stopPropagation) e.stopPropagation();\n    else e.returnValue = false;\n    if (!doNotPreventDefault && e.preventDefault) e.preventDefault();\n}\nfunction findParent(el, selector, container, matchOnElementAlso) {\n    if (matchOnElementAlso && matchesSelector$1(el, selector, container)) return el;\n    else el = el.parentNode;\n    while(el != null && el !== container){\n        if (matchesSelector$1(el, selector)) return el;\n        else el = el.parentNode;\n    }\n}\nfunction getEventSource(e) {\n    return e.srcElement || e.target;\n}\nfunction _setClassName(el, cn, classList) {\n    cn = fastTrim(cn);\n    if (typeof el.className.baseVal !== \"undefined\") el.className.baseVal = cn;\n    else el.className = cn;\n    try {\n        var cl = el.classList;\n        if (cl != null) {\n            while(cl.length > 0)cl.remove(cl.item(0));\n            for(var i = 0; i < classList.length; i++)if (classList[i]) cl.add(classList[i]);\n        }\n    } catch (e) {\n        log(\"WARN: cannot set class list\", e);\n    }\n}\nfunction _getClassName(el) {\n    return el.className != null ? typeof el.className.baseVal === \"undefined\" ? el.className : el.className.baseVal : \"\";\n}\nfunction _classManip(el, classesToAdd, classesToRemove) {\n    var cta = classesToAdd == null ? [] : Array.isArray(classesToAdd) ? classesToAdd : classesToAdd.split(/\\s+/);\n    var ctr = classesToRemove == null ? [] : Array.isArray(classesToRemove) ? classesToRemove : classesToRemove.split(/\\s+/);\n    var className = _getClassName(el), curClasses = className.split(/\\s+/);\n    var _oneSet = function _oneSet(add, classes) {\n        for(var i = 0; i < classes.length; i++){\n            if (add) {\n                if (curClasses.indexOf(classes[i]) === -1) curClasses.push(classes[i]);\n            } else {\n                var idx = curClasses.indexOf(classes[i]);\n                if (idx !== -1) curClasses.splice(idx, 1);\n            }\n        }\n    };\n    _oneSet(true, cta);\n    _oneSet(false, ctr);\n    _setClassName(el, curClasses.join(\" \"), curClasses);\n}\nfunction isNodeList(el) {\n    return !isString(el) && !Array.isArray(el) && el.length != null && el.documentElement == null && el.nodeType == null;\n}\nfunction isArrayLike(el) {\n    return !isString(el) && (Array.isArray(el) || isNodeList(el));\n}\nfunction getClass(el) {\n    return _getClassName(el);\n}\nfunction addClass(el, clazz) {\n    var _one = function _one(el, clazz) {\n        if (el != null && clazz != null && clazz.length > 0) {\n            if (el.classList) {\n                var parts = fastTrim(clazz).split(/\\s+/);\n                forEach(parts, function(part) {\n                    el.classList.add(part);\n                });\n            } else _classManip(el, clazz);\n        }\n    };\n    if (isNodeList(el)) forEach(el, function(el) {\n        return _one(el, clazz);\n    });\n    else _one(el, clazz);\n}\nfunction hasClass(el, clazz) {\n    if (el.classList) return el.classList.contains(clazz);\n    else return _getClassName(el).indexOf(clazz) !== -1;\n}\nfunction removeClass(el, clazz) {\n    var _one = function _one(el, clazz) {\n        if (el != null && clazz != null && clazz.length > 0) {\n            if (el.classList) {\n                var parts = fastTrim(clazz).split(/\\s+/);\n                parts.forEach(function(part) {\n                    el.classList.remove(part);\n                });\n            } else _classManip(el, null, clazz);\n        }\n    };\n    if (isNodeList(el)) forEach(el, function(el) {\n        return _one(el, clazz);\n    });\n    else _one(el, clazz);\n}\nfunction toggleClass(el, clazz) {\n    var _this = this;\n    var _one = function _one(el, clazz) {\n        if (el != null && clazz != null && clazz.length > 0) {\n            if (el.classList) el.classList.toggle(clazz);\n            else if (_this.hasClass(el, clazz)) _this.removeClass(el, clazz);\n            else _this.addClass(el, clazz);\n        }\n    };\n    if (isNodeList(el)) forEach(el, function(el) {\n        return _one(el, clazz);\n    });\n    else _one(el, clazz);\n}\nfunction createElement(tag, style, clazz, atts) {\n    return createElementNS(null, tag, style, clazz, atts);\n}\nfunction createElementNS(ns, tag, style, clazz, atts) {\n    var e = ns == null ? document.createElement(tag) : document.createElementNS(ns, tag);\n    var i;\n    style = style || {};\n    for(i in style)e.style[i] = style[i];\n    if (clazz) e.className = clazz;\n    atts = atts || {};\n    for(i in atts)e.setAttribute(i, \"\" + atts[i]);\n    return e;\n}\nfunction offsetRelativeToRoot(el) {\n    var box = el.getBoundingClientRect(), body = document.body, docElem = document.documentElement, scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop, scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft, clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0, top = box.top + scrollTop - clientTop, left = box.left + scrollLeft - clientLeft;\n    return {\n        x: Math.round(left),\n        y: Math.round(top)\n    };\n}\nfunction offsetSize(el) {\n    return {\n        w: el.offsetWidth,\n        h: el.offsetHeight\n    };\n}\nfunction svgWidthHeightSize(el) {\n    try {\n        return {\n            w: parseFloat(el.width.baseVal.value),\n            h: parseFloat(el.height.baseVal.value)\n        };\n    } catch (e) {\n        return {\n            w: 0,\n            h: 0\n        };\n    }\n}\nfunction svgXYPosition(el) {\n    try {\n        return {\n            x: parseFloat(el.x.baseVal.value),\n            y: parseFloat(el.y.baseVal.value)\n        };\n    } catch (e) {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n}\nfunction getElementPosition(el, instance) {\n    var pc = instance.getContainer().getBoundingClientRect();\n    var ec = el.getBoundingClientRect();\n    var z = instance.currentZoom;\n    return {\n        x: (ec.left - pc.left) / z,\n        y: (ec.top - pc.top) / z\n    };\n}\nfunction getElementSize(el, instance) {\n    var ec = el.getBoundingClientRect();\n    var z = instance.currentZoom;\n    return {\n        w: ec.width / z,\n        h: ec.height / z\n    };\n}\nvar ElementTypes;\n(function(ElementTypes) {\n    ElementTypes[\"SVG\"] = \"SVG\";\n    ElementTypes[\"HTML\"] = \"HTML\";\n})(ElementTypes || (ElementTypes = {}));\nfunction getElementType(el) {\n    return el instanceof SVGElement ? ElementTypes.SVG : ElementTypes.HTML;\n}\nfunction isSVGElement(el) {\n    return getElementType(el) === ElementTypes.SVG;\n}\nfunction onDocumentReady(f) {\n    var _do = function _do() {\n        if (/complete|loaded|interactive/.test(document.readyState) && typeof document.body !== \"undefined\" && document.body != null) f();\n        else setTimeout(_do, 9);\n    };\n    _do();\n}\nfunction cls() {\n    for(var _len = arguments.length, className = new Array(_len), _key = 0; _key < _len; _key++)className[_key] = arguments[_key];\n    return className.map(function(cn) {\n        return \".\" + cn;\n    }).join(\",\");\n}\nfunction classList() {\n    for(var _len2 = arguments.length, className = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)className[_key2] = arguments[_key2];\n    return className.join(\" \");\n}\nfunction att() {\n    for(var _len3 = arguments.length, attName = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)attName[_key3] = arguments[_key3];\n    return attName.map(function(an) {\n        return \"[\" + an + \"]\";\n    }).join(\",\");\n}\nvar SOURCE = \"source\";\nvar TARGET = \"target\";\nvar BLOCK = \"block\";\nvar NONE = \"none\";\nvar SOURCE_INDEX = 0;\nvar TARGET_INDEX = 1;\nvar ABSOLUTE = \"absolute\";\nvar FIXED = \"fixed\";\nvar STATIC = \"static\";\nvar ATTRIBUTE_GROUP = \"data-jtk-group\";\nvar ATTRIBUTE_MANAGED = \"data-jtk-managed\";\nvar ATTRIBUTE_NOT_DRAGGABLE = \"data-jtk-not-draggable\";\nvar ATTRIBUTE_TABINDEX = \"tabindex\";\nvar ATTRIBUTE_SCOPE = \"data-jtk-scope\";\nvar ATTRIBUTE_SCOPE_PREFIX = ATTRIBUTE_SCOPE + \"-\";\nvar CHECK_CONDITION = \"checkCondition\";\nvar CHECK_DROP_ALLOWED = \"checkDropAllowed\";\nvar CLASS_CONNECTOR = \"jtk-connector\";\nvar CLASS_CONNECTOR_OUTLINE = \"jtk-connector-outline\";\nvar CLASS_CONNECTED = \"jtk-connected\";\nvar CLASS_ENDPOINT = \"jtk-endpoint\";\nvar CLASS_ENDPOINT_CONNECTED = \"jtk-endpoint-connected\";\nvar CLASS_ENDPOINT_FULL = \"jtk-endpoint-full\";\nvar CLASS_ENDPOINT_FLOATING = \"jtk-floating-endpoint\";\nvar CLASS_ENDPOINT_DROP_ALLOWED = \"jtk-endpoint-drop-allowed\";\nvar CLASS_ENDPOINT_DROP_FORBIDDEN = \"jtk-endpoint-drop-forbidden\";\nvar CLASS_ENDPOINT_ANCHOR_PREFIX = \"jtk-endpoint-anchor\";\nvar CLASS_GROUP_COLLAPSED = \"jtk-group-collapsed\";\nvar CLASS_GROUP_EXPANDED = \"jtk-group-expanded\";\nvar CLASS_OVERLAY = \"jtk-overlay\";\nvar EVENT_ANCHOR_CHANGED = \"anchor:changed\";\nvar EVENT_CONNECTION = \"connection\";\nvar EVENT_INTERNAL_CONNECTION = \"internal.connection\";\nvar EVENT_CONNECTION_DETACHED = \"connection:detach\";\nvar EVENT_CONNECTION_MOVED = \"connection:move\";\nvar EVENT_CONTAINER_CHANGE = \"container:change\";\nvar EVENT_ENDPOINT_REPLACED = \"endpoint:replaced\";\nvar EVENT_INTERNAL_ENDPOINT_UNREGISTERED = \"internal.endpoint:unregistered\";\nvar EVENT_INTERNAL_CONNECTION_DETACHED = \"internal.connection:detached\";\nvar EVENT_MANAGE_ELEMENT = \"element:manage\";\nvar EVENT_GROUP_ADDED = \"group:added\";\nvar EVENT_GROUP_COLLAPSE = \"group:collapse\";\nvar EVENT_GROUP_EXPAND = \"group:expand\";\nvar EVENT_GROUP_MEMBER_ADDED = \"group:member:added\";\nvar EVENT_GROUP_MEMBER_REMOVED = \"group:member:removed\";\nvar EVENT_GROUP_REMOVED = \"group:removed\";\nvar EVENT_MAX_CONNECTIONS = \"maxConnections\";\nvar EVENT_NESTED_GROUP_ADDED = \"group:nested:added\";\nvar EVENT_NESTED_GROUP_REMOVED = \"group:nested:removed\";\nvar EVENT_UNMANAGE_ELEMENT = \"element:unmanage\";\nvar EVENT_ZOOM = \"zoom\";\nvar IS_DETACH_ALLOWED = \"isDetachAllowed\";\nvar INTERCEPT_BEFORE_DRAG = \"beforeDrag\";\nvar INTERCEPT_BEFORE_DROP = \"beforeDrop\";\nvar INTERCEPT_BEFORE_DETACH = \"beforeDetach\";\nvar INTERCEPT_BEFORE_START_DETACH = \"beforeStartDetach\";\nvar SELECTOR_MANAGED_ELEMENT = att(ATTRIBUTE_MANAGED);\nvar ERROR_SOURCE_ENDPOINT_FULL = \"Cannot establish connection: source endpoint is full\";\nvar ERROR_TARGET_ENDPOINT_FULL = \"Cannot establish connection: target endpoint is full\";\nvar ERROR_SOURCE_DOES_NOT_EXIST = \"Cannot establish connection: source does not exist\";\nvar ERROR_TARGET_DOES_NOT_EXIST = \"Cannot establish connection: target does not exist\";\nvar KEY_CONNECTION_OVERLAYS = \"connectionOverlays\";\nvar svgAttributeMap = {\n    \"stroke-linejoin\": \"stroke-linejoin\",\n    \"stroke-dashoffset\": \"stroke-dashoffset\",\n    \"stroke-linecap\": \"stroke-linecap\"\n};\nvar STROKE_DASHARRAY = \"stroke-dasharray\";\nvar DASHSTYLE = \"dashstyle\";\nvar FILL = \"fill\";\nvar STROKE = \"stroke\";\nvar STROKE_WIDTH = \"stroke-width\";\nvar LINE_WIDTH = \"strokeWidth\";\nvar ELEMENT_SVG = \"svg\";\nvar ELEMENT_PATH = \"path\";\nvar ns = {\n    svg: \"http://www.w3.org/2000/svg\"\n};\nfunction _attr(node, attributes) {\n    for(var i in attributes)node.setAttribute(i, \"\" + attributes[i]);\n}\nfunction _node(name, attributes) {\n    attributes = attributes || {};\n    attributes.version = \"1.1\";\n    attributes.xmlns = ns.svg;\n    return createElementNS(ns.svg, name, null, null, attributes);\n}\nfunction _pos(d) {\n    return \"position:absolute;left:\" + d[0] + \"px;top:\" + d[1] + \"px\";\n}\nfunction _applyStyles(parent, node, style) {\n    node.setAttribute(FILL, style.fill ? style.fill : NONE);\n    node.setAttribute(STROKE, style.stroke ? style.stroke : NONE);\n    if (style.strokeWidth) node.setAttribute(STROKE_WIDTH, style.strokeWidth);\n    if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {\n        var sep = style[DASHSTYLE].indexOf(\",\") === -1 ? \" \" : \",\", parts = style[DASHSTYLE].split(sep), styleToUse = \"\";\n        forEach(parts, function(p) {\n            styleToUse += Math.floor(p * style.strokeWidth) + sep;\n        });\n        node.setAttribute(STROKE_DASHARRAY, styleToUse);\n    } else if (style[STROKE_DASHARRAY]) node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);\n    for(var i in svgAttributeMap)if (style[i]) node.setAttribute(svgAttributeMap[i], style[i]);\n}\nfunction _appendAtIndex(svg, path, idx) {\n    if (svg.childNodes.length > idx) svg.insertBefore(path, svg.childNodes[idx]);\n    else svg.appendChild(path);\n}\nvar svg = {\n    attr: _attr,\n    node: _node,\n    ns: ns\n};\nfunction compoundEvent(stem, event, subevent) {\n    var a = [\n        stem,\n        event\n    ];\n    if (subevent) a.push(subevent);\n    return a.join(\":\");\n}\nvar ATTRIBUTE_CONTAINER = \"data-jtk-container\";\nvar ATTRIBUTE_GROUP_CONTENT = \"data-jtk-group-content\";\nvar ATTRIBUTE_JTK_ENABLED = \"data-jtk-enabled\";\nvar ATTRIBUTE_JTK_SCOPE = \"data-jtk-scope\";\nvar ENDPOINT = \"endpoint\";\nvar ELEMENT = \"element\";\nvar CONNECTION = \"connection\";\nvar ELEMENT_DIV = \"div\";\nvar EVENT_CLICK = \"click\";\nvar EVENT_CONTEXTMENU = \"contextmenu\";\nvar EVENT_DBL_CLICK = \"dblclick\";\nvar EVENT_DBL_TAP = \"dbltap\";\nvar EVENT_FOCUS = \"focus\";\nvar EVENT_MOUSEDOWN = \"mousedown\";\nvar EVENT_MOUSEENTER = \"mouseenter\";\nvar EVENT_MOUSEEXIT = \"mouseexit\";\nvar EVENT_MOUSEMOVE = \"mousemove\";\nvar EVENT_MOUSEUP = \"mouseup\";\nvar EVENT_MOUSEOUT = \"mouseout\";\nvar EVENT_MOUSEOVER = \"mouseover\";\nvar EVENT_TAP = \"tap\";\nvar EVENT_TOUCHSTART = \"touchstart\";\nvar EVENT_TOUCHEND = \"touchend\";\nvar EVENT_TOUCHMOVE = \"touchmove\";\nvar EVENT_DRAG_MOVE = \"drag:move\";\nvar EVENT_DRAG_STOP = \"drag:stop\";\nvar EVENT_DRAG_START = \"drag:start\";\nvar EVENT_REVERT = \"revert\";\nvar EVENT_CONNECTION_ABORT = \"connection:abort\";\nvar EVENT_CONNECTION_DRAG = \"connection:drag\";\nvar EVENT_ELEMENT_CLICK = compoundEvent(ELEMENT, EVENT_CLICK);\nvar EVENT_ELEMENT_DBL_CLICK = compoundEvent(ELEMENT, EVENT_DBL_CLICK);\nvar EVENT_ELEMENT_DBL_TAP = compoundEvent(ELEMENT, EVENT_DBL_TAP);\nvar EVENT_ELEMENT_MOUSE_OUT = compoundEvent(ELEMENT, EVENT_MOUSEOUT);\nvar EVENT_ELEMENT_MOUSE_OVER = compoundEvent(ELEMENT, EVENT_MOUSEOVER);\nvar EVENT_ELEMENT_MOUSE_MOVE = compoundEvent(ELEMENT, EVENT_MOUSEMOVE);\nvar EVENT_ELEMENT_MOUSE_UP = compoundEvent(ELEMENT, EVENT_MOUSEUP);\nvar EVENT_ELEMENT_MOUSE_DOWN = compoundEvent(ELEMENT, EVENT_MOUSEDOWN);\nvar EVENT_ELEMENT_CONTEXTMENU = compoundEvent(ELEMENT, EVENT_CONTEXTMENU);\nvar EVENT_ELEMENT_TAP = compoundEvent(ELEMENT, EVENT_TAP);\nvar EVENT_ENDPOINT_CLICK = compoundEvent(ENDPOINT, EVENT_CLICK);\nvar EVENT_ENDPOINT_DBL_CLICK = compoundEvent(ENDPOINT, EVENT_DBL_CLICK);\nvar EVENT_ENDPOINT_DBL_TAP = compoundEvent(ENDPOINT, EVENT_DBL_TAP);\nvar EVENT_ENDPOINT_MOUSEOUT = compoundEvent(ENDPOINT, EVENT_MOUSEOUT);\nvar EVENT_ENDPOINT_MOUSEOVER = compoundEvent(ENDPOINT, EVENT_MOUSEOVER);\nvar EVENT_ENDPOINT_MOUSEUP = compoundEvent(ENDPOINT, EVENT_MOUSEUP);\nvar EVENT_ENDPOINT_MOUSEDOWN = compoundEvent(ENDPOINT, EVENT_MOUSEDOWN);\nvar EVENT_ENDPOINT_TAP = compoundEvent(ENDPOINT, EVENT_TAP);\nvar EVENT_CONNECTION_CLICK = compoundEvent(CONNECTION, EVENT_CLICK);\nvar EVENT_CONNECTION_DBL_CLICK = compoundEvent(CONNECTION, EVENT_DBL_CLICK);\nvar EVENT_CONNECTION_DBL_TAP = compoundEvent(CONNECTION, EVENT_DBL_TAP);\nvar EVENT_CONNECTION_MOUSEOUT = compoundEvent(CONNECTION, EVENT_MOUSEOUT);\nvar EVENT_CONNECTION_MOUSEOVER = compoundEvent(CONNECTION, EVENT_MOUSEOVER);\nvar EVENT_CONNECTION_MOUSEUP = compoundEvent(CONNECTION, EVENT_MOUSEUP);\nvar EVENT_CONNECTION_MOUSEDOWN = compoundEvent(CONNECTION, EVENT_MOUSEDOWN);\nvar EVENT_CONNECTION_CONTEXTMENU = compoundEvent(CONNECTION, EVENT_CONTEXTMENU);\nvar EVENT_CONNECTION_TAP = compoundEvent(CONNECTION, EVENT_TAP);\nvar PROPERTY_POSITION = \"position\";\nvar SELECTOR_CONNECTOR = cls(CLASS_CONNECTOR);\nvar SELECTOR_ENDPOINT = cls(CLASS_ENDPOINT);\nvar SELECTOR_GROUP = att(ATTRIBUTE_GROUP);\nvar SELECTOR_GROUP_CONTAINER = att(ATTRIBUTE_GROUP_CONTENT);\nvar SELECTOR_OVERLAY = cls(CLASS_OVERLAY);\nvar PerimeterAnchorShapes;\n(function(PerimeterAnchorShapes) {\n    PerimeterAnchorShapes[\"Circle\"] = \"Circle\";\n    PerimeterAnchorShapes[\"Ellipse\"] = \"Ellipse\";\n    PerimeterAnchorShapes[\"Triangle\"] = \"Triangle\";\n    PerimeterAnchorShapes[\"Diamond\"] = \"Diamond\";\n    PerimeterAnchorShapes[\"Rectangle\"] = \"Rectangle\";\n    PerimeterAnchorShapes[\"Square\"] = \"Square\";\n})(PerimeterAnchorShapes || (PerimeterAnchorShapes = {}));\nvar AnchorLocations;\n(function(AnchorLocations) {\n    AnchorLocations[\"Assign\"] = \"Assign\";\n    AnchorLocations[\"AutoDefault\"] = \"AutoDefault\";\n    AnchorLocations[\"Bottom\"] = \"Bottom\";\n    AnchorLocations[\"BottomLeft\"] = \"BottomLeft\";\n    AnchorLocations[\"BottomRight\"] = \"BottomRight\";\n    AnchorLocations[\"Center\"] = \"Center\";\n    AnchorLocations[\"Continuous\"] = \"Continuous\";\n    AnchorLocations[\"ContinuousBottom\"] = \"ContinuousBottom\";\n    AnchorLocations[\"ContinuousLeft\"] = \"ContinuousLeft\";\n    AnchorLocations[\"ContinuousRight\"] = \"ContinuousRight\";\n    AnchorLocations[\"ContinuousTop\"] = \"ContinuousTop\";\n    AnchorLocations[\"ContinuousLeftRight\"] = \"ContinuousLeftRight\";\n    AnchorLocations[\"ContinuousTopBottom\"] = \"ContinuousTopBottom\";\n    AnchorLocations[\"Left\"] = \"Left\";\n    AnchorLocations[\"Perimeter\"] = \"Perimeter\";\n    AnchorLocations[\"Right\"] = \"Right\";\n    AnchorLocations[\"Top\"] = \"Top\";\n    AnchorLocations[\"TopLeft\"] = \"TopLeft\";\n    AnchorLocations[\"TopRight\"] = \"TopRight\";\n})(AnchorLocations || (AnchorLocations = {}));\nfunction noSuchPoint() {\n    return {\n        d: Infinity,\n        x: null,\n        y: null,\n        l: null,\n        x1: null,\n        y1: null,\n        x2: null,\n        y2: null\n    };\n}\nfunction EMPTY_BOUNDS() {\n    return {\n        xmin: Infinity,\n        xmax: -Infinity,\n        ymin: Infinity,\n        ymax: -Infinity\n    };\n}\nvar AbstractSegment = function() {\n    function AbstractSegment(params) {\n        _classCallCheck(this, AbstractSegment);\n        this.params = params;\n        _defineProperty(this, \"x1\", void 0);\n        _defineProperty(this, \"x2\", void 0);\n        _defineProperty(this, \"y1\", void 0);\n        _defineProperty(this, \"y2\", void 0);\n        _defineProperty(this, \"extents\", EMPTY_BOUNDS());\n        _defineProperty(this, \"type\", void 0);\n        this.x1 = params.x1;\n        this.y1 = params.y1;\n        this.x2 = params.x2;\n        this.y2 = params.y2;\n    }\n    _createClass(AbstractSegment, [\n        {\n            key: \"findClosestPointOnPath\",\n            value: function findClosestPointOnPath(x, y) {\n                return noSuchPoint();\n            }\n        },\n        {\n            key: \"lineIntersection\",\n            value: function lineIntersection(x1, y1, x2, y2) {\n                return [];\n            }\n        },\n        {\n            key: \"boxIntersection\",\n            value: function boxIntersection(x, y, w, h) {\n                var a = [];\n                a.push.apply(a, this.lineIntersection(x, y, x + w, y));\n                a.push.apply(a, this.lineIntersection(x + w, y, x + w, y + h));\n                a.push.apply(a, this.lineIntersection(x + w, y + h, x, y + h));\n                a.push.apply(a, this.lineIntersection(x, y + h, x, y));\n                return a;\n            }\n        },\n        {\n            key: \"boundingBoxIntersection\",\n            value: function boundingBoxIntersection(box) {\n                return this.boxIntersection(box.x, box.y, box.w, box.h);\n            }\n        }\n    ]);\n    return AbstractSegment;\n}();\nvar UNDEFINED = \"undefined\";\nvar DEFAULT = \"default\";\nvar TRUE$1 = \"true\";\nvar FALSE$1 = \"false\";\nvar WILDCARD = \"*\";\nvar _touchMap, _tapProfiles2;\nfunction _touch(target, pageX, pageY, screenX, screenY, clientX, clientY) {\n    return new Touch({\n        target: target,\n        identifier: uuid(),\n        pageX: pageX,\n        pageY: pageY,\n        screenX: screenX,\n        screenY: screenY,\n        clientX: clientX || screenX,\n        clientY: clientY || screenY\n    });\n}\nfunction _touchList() {\n    var list = [];\n    list.push.apply(list, arguments);\n    list.item = function(index) {\n        return this[index];\n    };\n    return list;\n}\nfunction _touchAndList(target, pageX, pageY, screenX, screenY, clientX, clientY) {\n    return _touchList(_touch(target, pageX, pageY, screenX, screenY, clientX, clientY));\n}\nfunction matchesSelector(el, selector, ctx) {\n    ctx = ctx || el.parentNode;\n    var possibles = ctx.querySelectorAll(selector);\n    for(var i = 0; i < possibles.length; i++){\n        if (possibles[i] === el) return true;\n    }\n    return false;\n}\nfunction _t(e) {\n    return e.srcElement || e.target;\n}\nfunction _pi(e, target, obj, doCompute) {\n    if (!doCompute) return {\n        path: [\n            target\n        ],\n        end: 1\n    };\n    else {\n        var path = e.composedPath ? e.composedPath() : e.path;\n        if (typeof path !== \"undefined\" && path.indexOf) return {\n            path: path,\n            end: path.indexOf(obj)\n        };\n        else {\n            var out = {\n                path: [],\n                end: -1\n            }, _one = function _one(el) {\n                out.path.push(el);\n                if (el === obj) out.end = out.path.length - 1;\n                else if (el.parentNode != null) _one(el.parentNode);\n            };\n            _one(target);\n            return out;\n        }\n    }\n}\nfunction _d(l, fn) {\n    var i = 0, j;\n    for(i = 0, j = l.length; i < j; i++){\n        if (l[i][0] === fn) break;\n    }\n    if (i < l.length) l.splice(i, 1);\n}\nvar guid = 1;\nvar forceTouchEvents = false;\nvar forceMouseEvents = false;\nfunction isTouchDevice() {\n    return forceTouchEvents || \"ontouchstart\" in document.documentElement || navigator.maxTouchPoints != null && navigator.maxTouchPoints > 0;\n}\nfunction isMouseDevice() {\n    return forceMouseEvents || \"onmousedown\" in document.documentElement;\n}\nvar touchMap = (_touchMap = {}, _defineProperty(_touchMap, EVENT_MOUSEDOWN, EVENT_TOUCHSTART), _defineProperty(_touchMap, EVENT_MOUSEUP, EVENT_TOUCHEND), _defineProperty(_touchMap, EVENT_MOUSEMOVE, EVENT_TOUCHMOVE), _touchMap);\nvar PAGE = \"page\";\nvar SCREEN = \"screen\";\nvar CLIENT = \"client\";\nfunction _genLoc(e, prefix) {\n    if (e == null) return {\n        x: 0,\n        y: 0\n    };\n    var ts = touches(e), t = getTouch(ts, 0);\n    return {\n        x: t[prefix + \"X\"],\n        y: t[prefix + \"Y\"]\n    };\n}\nfunction pageLocation(e) {\n    return _genLoc(e, PAGE);\n}\nfunction screenLocation(e) {\n    return _genLoc(e, SCREEN);\n}\nfunction clientLocation(e) {\n    return _genLoc(e, CLIENT);\n}\nfunction getTouch(touches, idx) {\n    return touches.item ? touches.item(idx) : touches[idx];\n}\nfunction touches(e) {\n    return e.touches && e.touches.length > 0 ? e.touches : e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches : e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches : [\n        e\n    ];\n}\nfunction touchCount(e) {\n    return touches(e).length;\n}\nfunction getPageLocation(e) {\n    if (e == null) return {\n        x: 0,\n        y: 0\n    };\n    else if (e.pageX !== null) return {\n        x: e.pageX,\n        y: e.pageY\n    };\n    else {\n        var ts = touches(e), t = getTouch(ts, 0);\n        if (t != null && t.pageX != null) return {\n            x: t.pageX,\n            y: t.pageY\n        };\n        else return {\n            x: 0,\n            y: 0\n        };\n    }\n}\nfunction _bind(obj, type, fn, originalFn, options) {\n    _store(obj, type, fn);\n    originalFn.__tauid = fn.__tauid;\n    if (obj.addEventListener) obj.addEventListener(type, fn, false, options);\n    else if (obj.attachEvent) {\n        var key = type + fn.__tauid;\n        obj[\"e\" + key] = fn;\n        obj[key] = function() {\n            obj[\"e\" + key] && obj[\"e\" + key](window.event);\n        };\n        obj.attachEvent(\"on\" + type, obj[key]);\n    }\n}\nfunction _unbind(obj, type, fn) {\n    var _this = this;\n    if (fn == null) return;\n    _each$1(obj, function(_el) {\n        _unstore(_el, type, fn);\n        if (fn.__tauid != null) {\n            if (_el.removeEventListener) {\n                _el.removeEventListener(type, fn, false);\n                if (isTouchDevice() && touchMap[type]) _el.removeEventListener(touchMap[type], fn, false);\n            } else if (_this.detachEvent) {\n                var key = type + fn.__tauid;\n                _el[key] && _el.detachEvent(\"on\" + type, _el[key]);\n                _el[key] = null;\n                _el[\"e\" + key] = null;\n            }\n        }\n        if (fn.__taTouchProxy) _unbind(obj, fn.__taTouchProxy[1], fn.__taTouchProxy[0]);\n    });\n}\nfunction _each$1(obj, fn) {\n    if (obj == null) return;\n    var entries = typeof obj === \"string\" ? document.querySelectorAll(obj) : obj.length != null ? obj : [\n        obj\n    ];\n    for(var i = 0; i < entries.length; i++)fn(entries[i]);\n}\nfunction _store(obj, event, fn) {\n    var g = guid++;\n    obj.__ta = obj.__ta || {};\n    obj.__ta[event] = obj.__ta[event] || {};\n    obj.__ta[event][g] = fn;\n    fn.__tauid = g;\n    return g;\n}\nfunction _unstore(obj, event, fn) {\n    obj.__ta && obj.__ta[event] && delete obj.__ta[event][fn.__tauid];\n    if (fn.__taExtra) {\n        for(var i = 0; i < fn.__taExtra.length; i++)_unbind(obj, fn.__taExtra[i][0], fn.__taExtra[i][1]);\n        fn.__taExtra.length = 0;\n    }\n    fn.__taUnstore && fn.__taUnstore();\n}\nvar NOT_SELECTOR_REGEX = /:not\\(([^)]+)\\)/;\nfunction _curryChildFilter(children, obj, fn, evt) {\n    if (children == null) return fn;\n    else {\n        var c = children.split(\",\"), pc = [], nc = [];\n        forEach(c, function(sel) {\n            var m = sel.match(NOT_SELECTOR_REGEX);\n            if (m != null) nc.push(m[1]);\n            else pc.push(sel);\n        });\n        if (nc.length > 0 && pc.length === 0) pc.push(WILDCARD);\n        var _fn = function _fn(e) {\n            _fn.__tauid = fn.__tauid;\n            var t = _t(e);\n            var done = false;\n            var target = t;\n            var pathInfo = _pi(e, t, obj, children != null);\n            if (pathInfo.end != -1) for(var p = 0; !done && p < pathInfo.end; p++){\n                target = pathInfo.path[p];\n                for(var i = 0; i < nc.length; i++){\n                    if (matchesSelector(target, nc[i], obj)) return;\n                }\n                for(var _i = 0; !done && _i < pc.length; _i++)if (matchesSelector(target, pc[_i], obj)) {\n                    fn.apply(target, [\n                        e,\n                        target\n                    ]);\n                    done = true;\n                    break;\n                }\n            }\n        };\n        registerExtraFunction(fn, evt, _fn);\n        return _fn;\n    }\n}\nfunction registerExtraFunction(fn, evt, newFn) {\n    fn.__taExtra = fn.__taExtra || [];\n    fn.__taExtra.push([\n        evt,\n        newFn\n    ]);\n}\nvar DefaultHandler = function DefaultHandler(obj, evt, fn, children, options) {\n    if (isTouchDevice() && touchMap[evt]) {\n        var tfn = _curryChildFilter(children, obj, fn, touchMap[evt]);\n        _bind(obj, touchMap[evt], tfn, fn, options);\n    }\n    if (evt === EVENT_FOCUS && obj.getAttribute(ATTRIBUTE_TABINDEX) == null) obj.setAttribute(ATTRIBUTE_TABINDEX, \"1\");\n    _bind(obj, evt, _curryChildFilter(children, obj, fn, evt), fn, options);\n};\nvar _tapProfiles = (_tapProfiles2 = {}, _defineProperty(_tapProfiles2, EVENT_TAP, {\n    touches: 1,\n    taps: 1\n}), _defineProperty(_tapProfiles2, EVENT_DBL_TAP, {\n    touches: 1,\n    taps: 2\n}), _defineProperty(_tapProfiles2, EVENT_CONTEXTMENU, {\n    touches: 2,\n    taps: 1\n}), _tapProfiles2);\nfunction meeHelper(type, evt, obj, target) {\n    for(var i in obj.__tamee[type])if (obj.__tamee[type].hasOwnProperty(i)) obj.__tamee[type][i].apply(target, [\n        evt\n    ]);\n}\nvar TapHandler = function() {\n    function TapHandler() {\n        _classCallCheck(this, TapHandler);\n    }\n    _createClass(TapHandler, null, [\n        {\n            key: \"generate\",\n            value: function generate(clickThreshold, dblClickThreshold) {\n                return function(obj, evt, fn, children) {\n                    if (evt == EVENT_CONTEXTMENU && isMouseDevice()) DefaultHandler(obj, evt, fn, children);\n                    else {\n                        if (obj.__taTapHandler == null) {\n                            var tt = obj.__taTapHandler = {\n                                tap: [],\n                                dbltap: [],\n                                down: false,\n                                taps: 0,\n                                downSelectors: []\n                            };\n                            var down = function down(e) {\n                                var target = _t(e), pathInfo = _pi(e, target, obj, children != null), finished = false;\n                                for(var p = 0; p < pathInfo.end; p++){\n                                    if (finished) return;\n                                    target = pathInfo.path[p];\n                                    for(var i = 0; i < tt.downSelectors.length; i++)if (tt.downSelectors[i] == null || matchesSelector(target, tt.downSelectors[i], obj)) {\n                                        tt.down = true;\n                                        setTimeout(clearSingle, clickThreshold);\n                                        setTimeout(clearDouble, dblClickThreshold);\n                                        finished = true;\n                                        break;\n                                    }\n                                }\n                            }, up = function up(e) {\n                                if (tt.down) {\n                                    var target = _t(e), currentTarget, pathInfo;\n                                    tt.taps++;\n                                    var tc = touchCount(e);\n                                    for(var eventId in _tapProfiles)if (_tapProfiles.hasOwnProperty(eventId)) {\n                                        var p = _tapProfiles[eventId];\n                                        if (p.touches === tc && (p.taps === 1 || p.taps === tt.taps)) for(var i = 0; i < tt[eventId].length; i++){\n                                            pathInfo = _pi(e, target, obj, tt[eventId][i][1] != null);\n                                            for(var pLoop = 0; pLoop < pathInfo.end; pLoop++){\n                                                currentTarget = pathInfo.path[pLoop];\n                                                if (tt[eventId][i][1] == null || matchesSelector(currentTarget, tt[eventId][i][1], obj)) {\n                                                    tt[eventId][i][0].apply(currentTarget, [\n                                                        e,\n                                                        currentTarget\n                                                    ]);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }, clearSingle = function clearSingle() {\n                                tt.down = false;\n                            }, clearDouble = function clearDouble() {\n                                tt.taps = 0;\n                            };\n                            obj.__taTapHandler.downHandler = down;\n                            obj.__taTapHandler.upHandler = up;\n                            DefaultHandler(obj, EVENT_MOUSEDOWN, down);\n                            DefaultHandler(obj, EVENT_MOUSEUP, up);\n                        }\n                        obj.__taTapHandler.downSelectors.push(children);\n                        obj.__taTapHandler[evt].push([\n                            fn,\n                            children\n                        ]);\n                        fn.__taUnstore = function() {\n                            if (obj.__taTapHandler != null) {\n                                removeWithFunction(obj.__taTapHandler.downSelectors, function(ds) {\n                                    return ds === children;\n                                });\n                                _d(obj.__taTapHandler[evt], fn);\n                                if (obj.__taTapHandler.downSelectors.length === 0) {\n                                    _unbind(obj, EVENT_MOUSEDOWN, obj.__taTapHandler.downHandler);\n                                    _unbind(obj, EVENT_MOUSEUP, obj.__taTapHandler.upHandler);\n                                    delete obj.__taTapHandler;\n                                }\n                            }\n                        };\n                    }\n                };\n            }\n        }\n    ]);\n    return TapHandler;\n}();\nvar MouseEnterExitHandler = function() {\n    function MouseEnterExitHandler() {\n        _classCallCheck(this, MouseEnterExitHandler);\n    }\n    _createClass(MouseEnterExitHandler, null, [\n        {\n            key: \"generate\",\n            value: function generate() {\n                var activeElements = [];\n                return function(obj, evt, fn, children) {\n                    if (!obj.__tamee) {\n                        obj.__tamee = {\n                            over: false,\n                            mouseenter: [],\n                            mouseexit: []\n                        };\n                        var over = function over(e) {\n                            var t = _t(e);\n                            if (children == null && t == obj && !obj.__tamee.over || matchesSelector(t, children, obj) && (t.__tamee == null || !t.__tamee.over)) {\n                                meeHelper(EVENT_MOUSEENTER, e, obj, t);\n                                t.__tamee = t.__tamee || {};\n                                t.__tamee.over = true;\n                                activeElements.push(t);\n                            }\n                        }, out = function out(e) {\n                            var t = _t(e);\n                            for(var i = 0; i < activeElements.length; i++)if (t == activeElements[i] && !matchesSelector(e.relatedTarget || e.toElement, \"*\", t)) {\n                                t.__tamee.over = false;\n                                activeElements.splice(i, 1);\n                                meeHelper(EVENT_MOUSEEXIT, e, obj, t);\n                            }\n                        };\n                        _bind(obj, EVENT_MOUSEOVER, _curryChildFilter(children, obj, over, EVENT_MOUSEOVER), over);\n                        _bind(obj, EVENT_MOUSEOUT, _curryChildFilter(children, obj, out, EVENT_MOUSEOUT), out);\n                    }\n                    fn.__taUnstore = function() {\n                        delete obj.__tamee[evt][fn.__tauid];\n                    };\n                    _store(obj, evt, fn);\n                    obj.__tamee[evt][fn.__tauid] = fn;\n                };\n            }\n        }\n    ]);\n    return MouseEnterExitHandler;\n}();\nvar EventManager = function() {\n    function EventManager(params) {\n        _classCallCheck(this, EventManager);\n        _defineProperty(this, \"clickThreshold\", void 0);\n        _defineProperty(this, \"dblClickThreshold\", void 0);\n        _defineProperty(this, \"tapHandler\", void 0);\n        _defineProperty(this, \"mouseEnterExitHandler\", void 0);\n        params = params || {};\n        this.clickThreshold = params.clickThreshold || 250;\n        this.dblClickThreshold = params.dblClickThreshold || 450;\n        this.mouseEnterExitHandler = MouseEnterExitHandler.generate();\n        this.tapHandler = TapHandler.generate(this.clickThreshold, this.dblClickThreshold);\n    }\n    _createClass(EventManager, [\n        {\n            key: \"_doBind\",\n            value: function _doBind(el, evt, fn, children, options) {\n                if (fn == null) return;\n                var jel = el;\n                if (evt === EVENT_TAP || evt === EVENT_DBL_TAP || evt === EVENT_CONTEXTMENU) this.tapHandler(jel, evt, fn, children, options);\n                else if (evt === EVENT_MOUSEENTER || evt == EVENT_MOUSEEXIT) this.mouseEnterExitHandler(jel, evt, fn, children, options);\n                else DefaultHandler(jel, evt, fn, children, options);\n            }\n        },\n        {\n            key: \"on\",\n            value: function on(el, event, children, fn, options) {\n                var _c = fn == null ? null : children, _f = fn == null ? children : fn;\n                this._doBind(el, event, _f, _c, options);\n                return this;\n            }\n        },\n        {\n            key: \"off\",\n            value: function off(el, event, fn) {\n                _unbind(el, event, fn);\n                return this;\n            }\n        },\n        {\n            key: \"trigger\",\n            value: function trigger(el, event, originalEvent, payload, detail) {\n                var originalIsMouse = isMouseDevice() && (typeof MouseEvent === \"undefined\" || originalEvent == null || originalEvent.constructor === MouseEvent);\n                var eventToBind = isTouchDevice() && !isMouseDevice() && touchMap[event] ? touchMap[event] : event, bindingAMouseEvent = !(isTouchDevice() && !isMouseDevice() && touchMap[event]);\n                var pl = pageLocation(originalEvent), sl = screenLocation(originalEvent), cl = clientLocation(originalEvent);\n                _each$1(el, function(_el) {\n                    var evt;\n                    originalEvent = originalEvent || {\n                        screenX: sl.x,\n                        screenY: sl.y,\n                        clientX: cl.x,\n                        clientY: cl.y\n                    };\n                    var _decorate = function _decorate(_evt) {\n                        if (payload) _evt.payload = payload;\n                    };\n                    var eventGenerators = {\n                        \"TouchEvent\": function TouchEvent(evt) {\n                            var touchList = _touchAndList(_el, pl.x, pl.y, sl.x, sl.y, cl.x, cl.y), init = evt.initTouchEvent || evt.initEvent;\n                            init(eventToBind, true, true, window, null, sl.x, sl.y, cl.x, cl.y, false, false, false, false, touchList, touchList, touchList, 1, 0);\n                        },\n                        \"MouseEvents\": function MouseEvents(evt) {\n                            evt.initMouseEvent(eventToBind, true, true, window, detail == null ? 1 : detail, sl.x, sl.y, cl.x, cl.y, false, false, false, false, 1, _el);\n                        }\n                    };\n                    var ite = !bindingAMouseEvent && !originalIsMouse && isTouchDevice() && touchMap[event], evtName = ite ? \"TouchEvent\" : \"MouseEvents\";\n                    evt = document.createEvent(evtName);\n                    eventGenerators[evtName](evt);\n                    _decorate(evt);\n                    _el.dispatchEvent(evt);\n                });\n                return this;\n            }\n        }\n    ]);\n    return EventManager;\n}();\nfunction setForceTouchEvents(value) {\n    forceTouchEvents = value;\n}\nfunction setForceMouseEvents(value) {\n    forceMouseEvents = value;\n}\nvar segmentMultipliers = [\n    null,\n    [\n        1,\n        -1\n    ],\n    [\n        1,\n        1\n    ],\n    [\n        -1,\n        1\n    ],\n    [\n        -1,\n        -1\n    ]\n];\nvar inverseSegmentMultipliers = [\n    null,\n    [\n        -1,\n        -1\n    ],\n    [\n        -1,\n        1\n    ],\n    [\n        1,\n        1\n    ],\n    [\n        1,\n        -1\n    ]\n];\nvar TWO_PI = 2 * Math.PI;\nfunction add(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}\nfunction subtract(p1, p2) {\n    return {\n        x: p1.x - p2.x,\n        y: p1.y - p2.y\n    };\n}\nfunction gradient(p1, p2) {\n    if (p2.x === p1.x) return p2.y > p1.y ? Infinity : -Infinity;\n    else if (p2.y === p1.y) return p2.x > p1.x ? 0 : -0;\n    else return (p2.y - p1.y) / (p2.x - p1.x);\n}\nfunction normal(p1, p2) {\n    return -1 / gradient(p1, p2);\n}\nfunction lineLength(p1, p2) {\n    return Math.sqrt(Math.pow(p2.y - p1.y, 2) + Math.pow(p2.x - p1.x, 2));\n}\nfunction quadrant(p1, p2) {\n    if (p2.x > p1.x) return p2.y > p1.y ? 2 : 1;\n    else if (p2.x == p1.x) return p2.y > p1.y ? 2 : 1;\n    else return p2.y > p1.y ? 3 : 4;\n}\nfunction theta(p1, p2) {\n    var m = gradient(p1, p2), t = Math.atan(m), s = quadrant(p1, p2);\n    if (s == 4 || s == 3) t += Math.PI;\n    if (t < 0) t += 2 * Math.PI;\n    return t;\n}\nfunction intersects(r1, r2) {\n    var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h, a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h;\n    return x1 <= a1 && a1 <= x2 && y1 <= b1 && b1 <= y2 || x1 <= a2 && a2 <= x2 && y1 <= b1 && b1 <= y2 || x1 <= a1 && a1 <= x2 && y1 <= b2 && b2 <= y2 || x1 <= a2 && a1 <= x2 && y1 <= b2 && b2 <= y2 || a1 <= x1 && x1 <= a2 && b1 <= y1 && y1 <= b2 || a1 <= x2 && x2 <= a2 && b1 <= y1 && y1 <= b2 || a1 <= x1 && x1 <= a2 && b1 <= y2 && y2 <= b2 || a1 <= x2 && x1 <= a2 && b1 <= y2 && y2 <= b2;\n}\nfunction toABC(line) {\n    var A = line[1].y - line[0].y;\n    var B = line[0].x - line[1].x;\n    return {\n        A: A,\n        B: B,\n        C: fixPrecision(A * line[0].x + B * line[0].y)\n    };\n}\nfunction fixPrecision(n, digits) {\n    digits = digits == null ? 3 : digits;\n    return Math.floor(n * Math.pow(10, digits)) / Math.pow(10, digits);\n}\nfunction lineIntersection(l1, l2) {\n    var abc1 = toABC(l1), abc2 = toABC(l2), det = abc1.A * abc2.B - abc2.A * abc1.B;\n    if (det == 0) return null;\n    else {\n        var candidate = {\n            x: Math.round((abc2.B * abc1.C - abc1.B * abc2.C) / det),\n            y: Math.round((abc1.A * abc2.C - abc2.A * abc1.C) / det)\n        }, l1xmin = Math.floor(Math.min(l1[0].x, l1[1].x)), l1xmax = Math.round(Math.max(l1[0].x, l1[1].x)), l1ymin = Math.floor(Math.min(l1[0].y, l1[1].y)), l1ymax = Math.round(Math.max(l1[0].y, l1[1].y)), l2xmin = Math.floor(Math.min(l2[0].x, l2[1].x)), l2xmax = Math.round(Math.max(l2[0].x, l2[1].x)), l2ymin = Math.floor(Math.min(l2[0].y, l2[1].y)), l2ymax = Math.round(Math.max(l2[0].y, l2[1].y));\n        if (candidate.x >= l1xmin && candidate.x <= l1xmax && candidate.y >= l1ymin && candidate.y <= l1ymax && candidate.x >= l2xmin && candidate.x <= l2xmax && candidate.y >= l2ymin && candidate.y <= l2ymax) return candidate;\n        else return null;\n    }\n}\nfunction lineRectangleIntersection(line, r) {\n    var out = [], rectangleLines = [\n        [\n            {\n                x: r.x,\n                y: r.y\n            },\n            {\n                x: r.x + r.w,\n                y: r.y\n            }\n        ],\n        [\n            {\n                x: r.x + r.w,\n                y: r.y\n            },\n            {\n                x: r.x + r.w,\n                y: r.y + r.h\n            }\n        ],\n        [\n            {\n                x: r.x,\n                y: r.y\n            },\n            {\n                x: r.x,\n                y: r.y + r.h\n            }\n        ],\n        [\n            {\n                x: r.x,\n                y: r.y + r.h\n            },\n            {\n                x: r.x + r.w,\n                y: r.y + r.h\n            }\n        ]\n    ];\n    forEach(rectangleLines, function(rLine) {\n        var intersection = lineIntersection(line, rLine);\n        if (intersection != null) out.push(intersection);\n    });\n    return out;\n}\nfunction encloses(r1, r2, allowSharedEdges) {\n    var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h, a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h, c = function c(v1, v2, v3, v4) {\n        return allowSharedEdges ? v1 <= v2 && v3 >= v4 : v1 < v2 && v3 > v4;\n    };\n    return c(x1, a1, x2, a2) && c(y1, b1, y2, b2);\n}\nfunction pointOnLine(fromPoint, toPoint, distance) {\n    var m = gradient(fromPoint, toPoint), s = quadrant(fromPoint, toPoint), segmentMultiplier = distance > 0 ? segmentMultipliers[s] : inverseSegmentMultipliers[s], theta = Math.atan(m), y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1], x = Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];\n    return {\n        x: fromPoint.x + x,\n        y: fromPoint.y + y\n    };\n}\nfunction perpendicularLineTo(fromPoint, toPoint, length1) {\n    var m = gradient(fromPoint, toPoint), theta2 = Math.atan(-1 / m), y = length1 / 2 * Math.sin(theta2), x = length1 / 2 * Math.cos(theta2);\n    return [\n        {\n            x: toPoint.x + x,\n            y: toPoint.y + y\n        },\n        {\n            x: toPoint.x - x,\n            y: toPoint.y - y\n        }\n    ];\n}\nfunction snapToGrid(pos, grid, thresholdX, thresholdY) {\n    thresholdX = thresholdX == null ? grid.thresholdX == null ? grid.w / 2 : grid.thresholdX : thresholdX;\n    thresholdY = thresholdY == null ? grid.thresholdY == null ? grid.h / 2 : grid.thresholdY : thresholdY;\n    var _dx = Math.floor(pos.x / grid.w), _dxl = grid.w * _dx, _dxt = _dxl + grid.w, x = Math.abs(pos.x - _dxl) <= thresholdX ? _dxl : Math.abs(_dxt - pos.x) <= thresholdX ? _dxt : pos.x;\n    var _dy = Math.floor(pos.y / grid.h), _dyl = grid.h * _dy, _dyt = _dyl + grid.h, y = Math.abs(pos.y - _dyl) <= thresholdY ? _dyl : Math.abs(_dyt - pos.y) <= thresholdY ? _dyt : pos.y;\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction findDelegateElement(parentElement, childElement, selector) {\n    if (matchesSelector$1(childElement, selector, parentElement)) return childElement;\n    else {\n        var currentParent = childElement.parentNode;\n        while(currentParent != null && currentParent !== parentElement){\n            if (matchesSelector$1(currentParent, selector, parentElement)) return currentParent;\n            else currentParent = currentParent.parentNode;\n        }\n    }\n}\nfunction _assignId(obj) {\n    if (typeof obj === \"function\") {\n        obj._katavorioId = uuid();\n        return obj._katavorioId;\n    } else return obj;\n}\nfunction isInsideParent(instance, _el, pos) {\n    var p = _el.parentNode, s = instance.getSize(p), ss = instance.getSize(_el), leftEdge = pos.x, rightEdge = leftEdge + ss.w, topEdge = pos.y, bottomEdge = topEdge + ss.h;\n    return rightEdge > 0 && leftEdge < s.w && bottomEdge > 0 && topEdge < s.h;\n}\nfunction findMatchingSelector(availableSelectors, parentElement, childElement) {\n    var el = null;\n    var draggableId = parentElement.getAttribute(\"katavorio-draggable\"), prefix = draggableId != null ? \"[katavorio-draggable='\" + draggableId + \"'] \" : \"\";\n    for(var i = 0; i < availableSelectors.length; i++){\n        el = findDelegateElement(parentElement, childElement, prefix + availableSelectors[i].selector);\n        if (el != null) {\n            if (availableSelectors[i].filter) {\n                var matches = matchesSelector$1(childElement, availableSelectors[i].filter, el), exclude = availableSelectors[i].filterExclude === true;\n                if (exclude && !matches || matches) return null;\n            }\n            return [\n                availableSelectors[i],\n                el\n            ];\n        }\n    }\n    return null;\n}\nvar EVENT_START = \"start\";\nvar EVENT_BEFORE_START = \"beforeStart\";\nvar EVENT_DRAG = \"drag\";\nvar EVENT_DROP = \"drop\";\nvar EVENT_OVER = \"over\";\nvar EVENT_OUT = \"out\";\nvar EVENT_STOP = \"stop\";\nvar ATTRIBUTE_DRAGGABLE = \"katavorio-draggable\";\nvar CLASS_DRAGGABLE$1 = ATTRIBUTE_DRAGGABLE;\nvar DEFAULT_GRID_X = 10;\nvar DEFAULT_GRID_Y = 10;\nvar TRUE = function TRUE() {\n    return true;\n};\nvar FALSE = function FALSE() {\n    return false;\n};\nvar _classes = {\n    delegatedDraggable: \"katavorio-delegated-draggable\",\n    draggable: CLASS_DRAGGABLE$1,\n    drag: \"katavorio-drag\",\n    selected: \"katavorio-drag-selected\",\n    noSelect: \"katavorio-drag-no-select\",\n    ghostProxy: \"katavorio-ghost-proxy\",\n    clonedDrag: \"katavorio-clone-drag\"\n};\nvar PositioningStrategies;\n(function(PositioningStrategies) {\n    PositioningStrategies[\"absolutePosition\"] = \"absolutePosition\";\n    PositioningStrategies[\"transform\"] = \"transform\";\n    PositioningStrategies[\"xyAttributes\"] = \"xyAttributes\";\n})(PositioningStrategies || (PositioningStrategies = {}));\nvar positionerSetters = new Map();\npositionerSetters.set(PositioningStrategies.absolutePosition, function(el, p) {\n    el.style.left = \"\".concat(p.x, \"px\");\n    el.style.top = \"\".concat(p.y, \"px\");\n});\npositionerSetters.set(PositioningStrategies.xyAttributes, function(el, p) {\n    el.setAttribute(\"x\", \"\".concat(p.x));\n    el.setAttribute(\"y\", \"\".concat(p.y));\n});\nvar positionerGetters = new Map();\npositionerGetters.set(PositioningStrategies.absolutePosition, function(el) {\n    return {\n        x: el.offsetLeft,\n        y: el.offsetTop\n    };\n});\npositionerGetters.set(PositioningStrategies.xyAttributes, function(el) {\n    return {\n        x: parseFloat(el.getAttribute(\"x\")),\n        y: parseFloat(el.getAttribute(\"y\"))\n    };\n});\nvar sizeSetters = new Map();\nsizeSetters.set(PositioningStrategies.absolutePosition, function(el, s) {\n    el.style.width = \"\".concat(s.w, \"px\");\n    el.style.height = \"\".concat(s.h, \"px\");\n});\nsizeSetters.set(PositioningStrategies.xyAttributes, function(el, s) {\n    el.setAttribute(\"width\", \"\".concat(s.w));\n    el.setAttribute(\"height\", \"\".concat(s.h));\n});\nvar sizeGetters = new Map();\nsizeGetters.set(PositioningStrategies.absolutePosition, function(el) {\n    return {\n        w: el.offsetWidth,\n        h: el.offsetHeight\n    };\n});\nsizeGetters.set(PositioningStrategies.xyAttributes, function(el) {\n    return {\n        w: parseFloat(el.getAttribute(\"width\")),\n        h: parseFloat(el.getAttribute(\"height\"))\n    };\n});\nvar _events = [\n    EVENT_STOP,\n    EVENT_START,\n    EVENT_DRAG,\n    EVENT_DROP,\n    EVENT_OVER,\n    EVENT_OUT,\n    EVENT_BEFORE_START\n];\nvar _devNull = function _devNull() {};\nvar _each = function _each(obj, fn) {\n    if (obj == null) return;\n    obj = !isString(obj) && obj.tagName == null && obj.length != null ? obj : [\n        obj\n    ];\n    for(var i = 0; i < obj.length; i++)fn.apply(obj[i], [\n        obj[i]\n    ]);\n};\nvar _inputFilter = function _inputFilter(e, el, collicat) {\n    var t = e.srcElement || e.target;\n    return !matchesSelector$1(t, collicat.getInputFilterSelector(), el);\n};\nvar Base = function() {\n    function Base(el, manager) {\n        _classCallCheck(this, Base);\n        this.el = el;\n        this.manager = manager;\n        _defineProperty(this, \"_class\", void 0);\n        _defineProperty(this, \"uuid\", uuid());\n        _defineProperty(this, \"enabled\", true);\n        _defineProperty(this, \"scopes\", []);\n        _defineProperty(this, \"eventManager\", void 0);\n        this.eventManager = manager.eventManager;\n    }\n    _createClass(Base, [\n        {\n            key: \"setEnabled\",\n            value: function setEnabled(e) {\n                this.enabled = e;\n            }\n        },\n        {\n            key: \"isEnabled\",\n            value: function isEnabled() {\n                return this.enabled;\n            }\n        },\n        {\n            key: \"toggleEnabled\",\n            value: function toggleEnabled() {\n                this.enabled = !this.enabled;\n            }\n        },\n        {\n            key: \"addScope\",\n            value: function addScope(scopes) {\n                var m = {};\n                _each(this.scopes, function(s) {\n                    m[s] = true;\n                });\n                _each(scopes ? scopes.split(/\\s+/) : [], function(s) {\n                    m[s] = true;\n                });\n                this.scopes.length = 0;\n                for(var i in m)this.scopes.push(i);\n            }\n        },\n        {\n            key: \"removeScope\",\n            value: function removeScope(scopes) {\n                var m = {};\n                _each(this.scopes, function(s) {\n                    m[s] = true;\n                });\n                _each(scopes ? scopes.split(/\\s+/) : [], function(s) {\n                    delete m[s];\n                });\n                this.scopes.length = 0;\n                for(var i in m)this.scopes.push(i);\n            }\n        },\n        {\n            key: \"toggleScope\",\n            value: function toggleScope(scopes) {\n                var m = {};\n                _each(this.scopes, function(s) {\n                    m[s] = true;\n                });\n                _each(scopes ? scopes.split(/\\s+/) : [], function(s) {\n                    if (m[s]) delete m[s];\n                    else m[s] = true;\n                });\n                this.scopes.length = 0;\n                for(var i in m)this.scopes.push(i);\n            }\n        }\n    ]);\n    return Base;\n}();\nfunction getConstrainingRectangle(el) {\n    return {\n        w: el.parentNode.offsetWidth + el.parentNode.scrollLeft,\n        h: el.parentNode.offsetHeight + el.parentNode.scrollTop\n    };\n}\nvar ContainmentType;\n(function(ContainmentType) {\n    ContainmentType[\"notNegative\"] = \"notNegative\";\n    ContainmentType[\"parent\"] = \"parent\";\n    ContainmentType[\"parentEnclosed\"] = \"parentEnclosed\";\n})(ContainmentType || (ContainmentType = {}));\nvar Drag = function(_Base) {\n    _inherits(Drag, _Base);\n    var _super = _createSuper(Drag);\n    function Drag(el, params, manager) {\n        var _this;\n        _classCallCheck(this, Drag);\n        _this = _super.call(this, el, manager);\n        _defineProperty(_assertThisInitialized(_this), \"_class\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"rightButtonCanDrag\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"consumeStartEvent\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"clone\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"scroll\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"trackScroll\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_downAt\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_posAtDown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_pagePosAtDown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_pageDelta\", {\n            x: 0,\n            y: 0\n        });\n        _defineProperty(_assertThisInitialized(_this), \"_moving\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_lastPosition\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_lastScrollValues\", {\n            x: 0,\n            y: 0\n        });\n        _defineProperty(_assertThisInitialized(_this), \"_initialScroll\", {\n            x: 0,\n            y: 0\n        });\n        _defineProperty(_assertThisInitialized(_this), \"_size\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_currentParentPosition\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_ghostParentPosition\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_dragEl\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_multipleDrop\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_ghostProxyOffsets\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_ghostDx\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_ghostDy\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_isConstrained\", false);\n        _defineProperty(_assertThisInitialized(_this), \"_ghostProxyParent\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_useGhostProxy\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_ghostProxyFunction\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_activeSelectorParams\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_availableSelectors\", []);\n        _defineProperty(_assertThisInitialized(_this), \"_canDrag\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_consumeFilteredEvents\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_parent\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_ignoreZoom\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_filters\", {});\n        _defineProperty(_assertThisInitialized(_this), \"_constrainRect\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementToDrag\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"downListener\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"moveListener\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"upListener\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"scrollTracker\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"listeners\", {\n            \"start\": [],\n            \"drag\": [],\n            \"stop\": [],\n            \"over\": [],\n            \"out\": [],\n            \"beforeStart\": [],\n            \"revert\": []\n        });\n        _this._class = _this.manager.css.draggable;\n        addClass(_this.el, _this._class);\n        _this.downListener = _this._downListener.bind(_assertThisInitialized(_this));\n        _this.upListener = _this._upListener.bind(_assertThisInitialized(_this));\n        _this.moveListener = _this._moveListener.bind(_assertThisInitialized(_this));\n        _this.rightButtonCanDrag = params.rightButtonCanDrag === true;\n        _this.consumeStartEvent = params.consumeStartEvent !== false;\n        _this._dragEl = _this.el;\n        _this.clone = params.clone === true;\n        _this.scroll = params.scroll === true;\n        _this.trackScroll = params.trackScroll !== false;\n        _this._multipleDrop = params.multipleDrop !== false;\n        _this._canDrag = params.canDrag || TRUE;\n        _this._consumeFilteredEvents = params.consumeFilteredEvents;\n        _this._parent = params.parent;\n        _this._ignoreZoom = params.ignoreZoom === true;\n        _this._ghostProxyParent = params.ghostProxyParent;\n        if (_this.trackScroll) {\n            _this.scrollTracker = _this._trackScroll.bind(_assertThisInitialized(_this));\n            document.addEventListener(\"scroll\", _this.scrollTracker);\n        }\n        if (params.ghostProxy === true) _this._useGhostProxy = TRUE;\n        else if (params.ghostProxy && typeof params.ghostProxy === \"function\") _this._useGhostProxy = params.ghostProxy;\n        else _this._useGhostProxy = function(container, dragEl) {\n            if (_this._activeSelectorParams && _this._activeSelectorParams.useGhostProxy) return _this._activeSelectorParams.useGhostProxy(container, dragEl);\n            else return false;\n        };\n        if (params.makeGhostProxy) _this._ghostProxyFunction = params.makeGhostProxy;\n        else _this._ghostProxyFunction = function(el) {\n            if (_this._activeSelectorParams && _this._activeSelectorParams.makeGhostProxy) return _this._activeSelectorParams.makeGhostProxy(el);\n            else return el.cloneNode(true);\n        };\n        if (params.selector) {\n            var draggableId = _this.el.getAttribute(ATTRIBUTE_DRAGGABLE);\n            if (draggableId == null) {\n                draggableId = \"\" + new Date().getTime();\n                _this.el.setAttribute(\"katavorio-draggable\", draggableId);\n            }\n            _this._availableSelectors.push(params);\n        }\n        _this.eventManager.on(_this.el, EVENT_MOUSEDOWN, _this.downListener);\n        return _this;\n    }\n    _createClass(Drag, [\n        {\n            key: \"_trackScroll\",\n            value: function _trackScroll(e) {\n                if (this._moving) {\n                    var currentScrollValues = {\n                        x: document.documentElement.scrollLeft,\n                        y: document.documentElement.scrollTop\n                    }, dsx = currentScrollValues.x - this._lastScrollValues.x, dsy = currentScrollValues.y - this._lastScrollValues.y, _pos = {\n                        x: dsx + this._lastPosition.x,\n                        y: dsy + this._lastPosition.y\n                    }, dx = _pos.x - this._downAt.x, dy = _pos.y - this._downAt.y, _z = this._ignoreZoom ? 1 : this.manager.getZoom();\n                    if (this._dragEl && this._dragEl.parentNode) {\n                        dx += this._dragEl.parentNode.scrollLeft - this._initialScroll.x;\n                        dy += this._dragEl.parentNode.scrollTop - this._initialScroll.y;\n                    }\n                    dx /= _z;\n                    dy /= _z;\n                    this.moveBy(dx, dy, e);\n                    this._lastPosition = _pos;\n                    this._lastScrollValues = currentScrollValues;\n                }\n            }\n        },\n        {\n            key: \"on\",\n            value: function on(evt, fn) {\n                if (this.listeners[evt]) this.listeners[evt].push(fn);\n            }\n        },\n        {\n            key: \"off\",\n            value: function off(evt, fn) {\n                if (this.listeners[evt]) {\n                    var l = [];\n                    for(var i = 0; i < this.listeners[evt].length; i++)if (this.listeners[evt][i] !== fn) l.push(this.listeners[evt][i]);\n                    this.listeners[evt] = l;\n                }\n            }\n        },\n        {\n            key: \"_upListener\",\n            value: function _upListener(e) {\n                if (this._downAt) {\n                    this._downAt = null;\n                    this.eventManager.off(document, EVENT_MOUSEMOVE, this.moveListener);\n                    this.eventManager.off(document, EVENT_MOUSEUP, this.upListener);\n                    removeClass(document.body, _classes.noSelect);\n                    this.unmark(e);\n                    this.stop(e);\n                    this._moving = false;\n                    if (this.clone) {\n                        this._dragEl && this._dragEl.parentNode && this._dragEl.parentNode.removeChild(this._dragEl);\n                        this._dragEl = null;\n                    } else {\n                        if (this._activeSelectorParams && this._activeSelectorParams.revertFunction) {\n                            if (this._activeSelectorParams.revertFunction(this._dragEl, this.manager.getPosition(this._dragEl)) === true) {\n                                this.manager.setPosition(this._dragEl, this._posAtDown);\n                                this._dispatch(EVENT_REVERT, this._dragEl);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"_downListener\",\n            value: function _downListener(e) {\n                if (e.defaultPrevented) return;\n                var isNotRightClick = this.rightButtonCanDrag || e.which !== 3 && e.button !== 2;\n                if (isNotRightClick && this.isEnabled() && this._canDrag()) {\n                    var _f = this._testFilter(e) && _inputFilter(e, this.el, this.manager);\n                    if (_f) {\n                        this._activeSelectorParams = null;\n                        this._elementToDrag = null;\n                        if (this._availableSelectors.length === 0) console.log(\"JSPLUMB: no available drag selectors\");\n                        var eventTarget = e.target || e.srcElement;\n                        var match = findMatchingSelector(this._availableSelectors, this.el, eventTarget);\n                        if (match != null) {\n                            this._activeSelectorParams = match[0];\n                            this._elementToDrag = match[1];\n                        }\n                        if (this._activeSelectorParams == null || this._elementToDrag == null) return;\n                        var initial = this._activeSelectorParams.dragInit ? this._activeSelectorParams.dragInit(this._elementToDrag, e) : null;\n                        if (initial != null) this._elementToDrag = initial;\n                        if (this.clone) {\n                            this._dragEl = this._elementToDrag.cloneNode(true);\n                            addClass(this._dragEl, _classes.clonedDrag);\n                            this._dragEl.setAttribute(\"id\", null);\n                            this._dragEl.style.position = \"absolute\";\n                            if (this._parent != null) {\n                                var _p2 = this.manager.getPosition(this.el);\n                                this._dragEl.style.left = _p2.x + \"px\";\n                                this._dragEl.style.top = _p2.y + \"px\";\n                                this._parent.appendChild(this._dragEl);\n                            } else {\n                                var b = offsetRelativeToRoot(this._elementToDrag);\n                                this._dragEl.style.left = b.x + \"px\";\n                                this._dragEl.style.top = b.y + \"px\";\n                                document.body.appendChild(this._dragEl);\n                            }\n                        } else this._dragEl = this._elementToDrag;\n                        if (this.consumeStartEvent) consume(e);\n                        this._downAt = pageLocation(e);\n                        if (this._dragEl && this._dragEl.parentNode) this._initialScroll = {\n                            x: this._dragEl.parentNode.scrollLeft,\n                            y: this._dragEl.parentNode.scrollTop\n                        };\n                        this._posAtDown = this.manager.getPosition(this._dragEl);\n                        this._pagePosAtDown = offsetRelativeToRoot(this._dragEl);\n                        this._pageDelta = {\n                            x: this._pagePosAtDown.x - this._posAtDown.x,\n                            y: this._pagePosAtDown.y - this._posAtDown.y\n                        };\n                        this._size = this.manager.getSize(this._dragEl);\n                        this.eventManager.on(document, EVENT_MOUSEMOVE, this.moveListener);\n                        this.eventManager.on(document, EVENT_MOUSEUP, this.upListener);\n                        addClass(document.body, _classes.noSelect);\n                        this._dispatch(EVENT_BEFORE_START, {\n                            el: this.el,\n                            pos: this._posAtDown,\n                            e: e,\n                            drag: this,\n                            size: this._size\n                        });\n                    } else if (this._consumeFilteredEvents) consume(e);\n                }\n            }\n        },\n        {\n            key: \"_moveListener\",\n            value: function _moveListener(e) {\n                if (this._downAt) {\n                    if (!this._moving) {\n                        var dispatchResult = this._dispatch(EVENT_START, {\n                            el: this.el,\n                            pos: this._posAtDown,\n                            e: e,\n                            drag: this,\n                            size: this._size\n                        });\n                        if (dispatchResult !== false) {\n                            if (!this._downAt) return;\n                            this.mark(dispatchResult);\n                            this._moving = true;\n                        } else this.abort();\n                    }\n                    if (this._downAt) {\n                        var _pos2 = pageLocation(e), dx = _pos2.x - this._downAt.x, dy = _pos2.y - this._downAt.y, _z2 = this._ignoreZoom ? 1 : this.manager.getZoom();\n                        this._lastPosition = {\n                            x: _pos2.x,\n                            y: _pos2.y\n                        };\n                        this._lastScrollValues = {\n                            x: document.documentElement.scrollLeft,\n                            y: document.documentElement.scrollTop\n                        };\n                        if (this._dragEl && this._dragEl.parentNode) {\n                            dx += this._dragEl.parentNode.scrollLeft - this._initialScroll.x;\n                            dy += this._dragEl.parentNode.scrollTop - this._initialScroll.y;\n                        }\n                        dx /= _z2;\n                        dy /= _z2;\n                        this.moveBy(dx, dy, e);\n                    }\n                }\n            }\n        },\n        {\n            key: \"getDragDelta\",\n            value: function getDragDelta() {\n                if (this._posAtDown != null && this._downAt != null) return {\n                    x: this._downAt.x - this._posAtDown.x,\n                    y: this._downAt.y - this._posAtDown.y\n                };\n                else return {\n                    x: 0,\n                    y: 0\n                };\n            }\n        },\n        {\n            key: \"mark\",\n            value: function mark(payload) {\n                this._posAtDown = this.manager.getPosition(this._dragEl);\n                this._pagePosAtDown = offsetRelativeToRoot(this._dragEl);\n                this._pageDelta = {\n                    x: this._pagePosAtDown.x - this._posAtDown.x,\n                    y: this._pagePosAtDown.y - this._posAtDown.y\n                };\n                this._size = this.manager.getSize(this._dragEl);\n                addClass(this._dragEl, this.manager.css.drag);\n                this._constrainRect = getConstrainingRectangle(this._dragEl);\n                this._ghostDx = 0;\n                this._ghostDy = 0;\n            }\n        },\n        {\n            key: \"unmark\",\n            value: function unmark(e) {\n                if (this._isConstrained && this._useGhostProxy(this._elementToDrag, this._dragEl)) {\n                    this._ghostProxyOffsets = {\n                        x: this._dragEl.offsetLeft - this._ghostDx,\n                        y: this._dragEl.offsetTop - this._ghostDy\n                    };\n                    this._dragEl.parentNode.removeChild(this._dragEl);\n                    this._dragEl = this._elementToDrag;\n                } else this._ghostProxyOffsets = null;\n                removeClass(this._dragEl, this.manager.css.drag);\n                this._isConstrained = false;\n            }\n        },\n        {\n            key: \"moveBy\",\n            value: function moveBy(dx, dy, e) {\n                var desiredLoc = this.toGrid({\n                    x: this._posAtDown.x + dx,\n                    y: this._posAtDown.y + dy\n                }), cPos = this._doConstrain(desiredLoc, this._dragEl, this._constrainRect, this._size, e);\n                if (cPos != null) {\n                    if (this._useGhostProxy(this.el, this._dragEl)) {\n                        if (desiredLoc.x !== cPos.x || desiredLoc.y !== cPos.y) {\n                            if (!this._isConstrained) {\n                                var gp = this._ghostProxyFunction(this._elementToDrag);\n                                addClass(gp, _classes.ghostProxy);\n                                if (this._ghostProxyParent) {\n                                    this._ghostProxyParent.appendChild(gp);\n                                    this._currentParentPosition = offsetRelativeToRoot(this._elementToDrag.parentNode);\n                                    this._ghostParentPosition = offsetRelativeToRoot(this._ghostProxyParent);\n                                    this._ghostDx = this._currentParentPosition.x - this._ghostParentPosition.x;\n                                    this._ghostDy = this._currentParentPosition.y - this._ghostParentPosition.y;\n                                } else this._elementToDrag.parentNode.appendChild(gp);\n                                this._dragEl = gp;\n                                this._isConstrained = true;\n                            }\n                            cPos = desiredLoc;\n                        } else if (this._isConstrained) {\n                            this._dragEl.parentNode.removeChild(this._dragEl);\n                            this._dragEl = this._elementToDrag;\n                            this._isConstrained = false;\n                            this._currentParentPosition = null;\n                            this._ghostParentPosition = null;\n                            this._ghostDx = 0;\n                            this._ghostDy = 0;\n                        }\n                    }\n                    this.manager.setPosition(this._dragEl, {\n                        x: cPos.x + this._ghostDx,\n                        y: cPos.y + this._ghostDy\n                    });\n                    this._dispatch(EVENT_DRAG, {\n                        el: this.el,\n                        pos: cPos,\n                        e: e,\n                        drag: this,\n                        size: this._size,\n                        originalPos: this._posAtDown\n                    });\n                }\n            }\n        },\n        {\n            key: \"abort\",\n            value: function abort() {\n                if (this._downAt != null) this._upListener();\n            }\n        },\n        {\n            key: \"getDragElement\",\n            value: function getDragElement(retrieveOriginalElement) {\n                return retrieveOriginalElement ? this._elementToDrag || this.el : this._dragEl || this.el;\n            }\n        },\n        {\n            key: \"stop\",\n            value: function stop(e, force) {\n                if (force || this._moving) {\n                    var positions = [], dPos = this.manager.getPosition(this._dragEl);\n                    positions.push([\n                        this._dragEl,\n                        dPos,\n                        this,\n                        this._size\n                    ]);\n                    this._dispatch(EVENT_STOP, {\n                        el: this._dragEl,\n                        pos: this._ghostProxyOffsets || dPos,\n                        finalPos: dPos,\n                        e: e,\n                        drag: this,\n                        selection: positions,\n                        size: this._size,\n                        originalPos: {\n                            x: this._posAtDown.x,\n                            y: this._posAtDown.y\n                        }\n                    });\n                } else if (!this._moving) this._activeSelectorParams.dragAbort && this._activeSelectorParams.dragAbort(this._elementToDrag);\n            }\n        },\n        {\n            key: \"_dispatch\",\n            value: function _dispatch(evt, value) {\n                var result = null;\n                if (this._activeSelectorParams && this._activeSelectorParams[evt]) result = this._activeSelectorParams[evt](value);\n                else if (this.listeners[evt]) {\n                    for(var i = 0; i < this.listeners[evt].length; i++)try {\n                        var v = this.listeners[evt][i](value);\n                        if (v != null) result = v;\n                    } catch (e) {}\n                }\n                return result;\n            }\n        },\n        {\n            key: \"resolveGrid\",\n            value: function resolveGrid() {\n                var out = {\n                    grid: null,\n                    thresholdX: DEFAULT_GRID_X / 2,\n                    thresholdY: DEFAULT_GRID_Y / 2\n                };\n                if (this._activeSelectorParams != null && this._activeSelectorParams.grid != null) {\n                    out.grid = this._activeSelectorParams.grid;\n                    if (this._activeSelectorParams.snapThreshold != null) {\n                        out.thresholdX = this._activeSelectorParams.snapThreshold;\n                        out.thresholdY = this._activeSelectorParams.snapThreshold;\n                    }\n                }\n                return out;\n            }\n        },\n        {\n            key: \"toGrid\",\n            value: function toGrid(pos) {\n                var _this$resolveGrid = this.resolveGrid(), grid = _this$resolveGrid.grid, thresholdX = _this$resolveGrid.thresholdX, thresholdY = _this$resolveGrid.thresholdY;\n                if (grid == null) return pos;\n                else {\n                    var tx = grid ? grid.w / 2 : thresholdX, ty = grid ? grid.h / 2 : thresholdY;\n                    return snapToGrid(pos, grid, tx, ty);\n                }\n            }\n        },\n        {\n            key: \"setUseGhostProxy\",\n            value: function setUseGhostProxy(val) {\n                this._useGhostProxy = val ? TRUE : FALSE;\n            }\n        },\n        {\n            key: \"_doConstrain\",\n            value: function _doConstrain(pos, dragEl, _constrainRect, _size, e) {\n                if (this._activeSelectorParams != null && this._activeSelectorParams.constrainFunction && typeof this._activeSelectorParams.constrainFunction === \"function\") return this._activeSelectorParams.constrainFunction(pos, dragEl, _constrainRect, _size, e);\n                else return pos;\n            }\n        },\n        {\n            key: \"_testFilter\",\n            value: function _testFilter(e) {\n                for(var key in this._filters){\n                    var f = this._filters[key];\n                    var rv = f[0](e);\n                    if (f[1]) rv = !rv;\n                    if (!rv) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"addFilter\",\n            value: function addFilter(f, _exclude) {\n                var _this2 = this;\n                if (f) {\n                    var key = _assignId(f);\n                    this._filters[key] = [\n                        function(e) {\n                            var t = e.srcElement || e.target;\n                            var m;\n                            if (isString(f)) m = matchesSelector$1(t, f, _this2.el);\n                            else if (typeof f === \"function\") m = f(e, _this2.el);\n                            return m;\n                        },\n                        _exclude !== false\n                    ];\n                }\n            }\n        },\n        {\n            key: \"removeFilter\",\n            value: function removeFilter(f) {\n                var key = typeof f === \"function\" ? f._katavorioId : f;\n                delete this._filters[key];\n            }\n        },\n        {\n            key: \"clearAllFilters\",\n            value: function clearAllFilters() {\n                this._filters = {};\n            }\n        },\n        {\n            key: \"addSelector\",\n            value: function addSelector(params, atStart) {\n                if (params.selector) {\n                    if (atStart) this._availableSelectors.unshift(params);\n                    else this._availableSelectors.push(params);\n                }\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                this.eventManager.off(this.el, EVENT_MOUSEDOWN, this.downListener);\n                this.eventManager.off(document, EVENT_MOUSEMOVE, this.moveListener);\n                this.eventManager.off(document, EVENT_MOUSEUP, this.upListener);\n                this.downListener = null;\n                this.upListener = null;\n                this.moveListener = null;\n                if (this.scrollTracker != null) document.removeEventListener(\"scroll\", this.scrollTracker);\n            }\n        }\n    ]);\n    return Drag;\n}(Base);\nvar DEFAULT_INPUTS = [\n    \"input\",\n    \"textarea\",\n    \"select\",\n    \"button\",\n    \"option\"\n];\nvar DEFAULT_INPUT_FILTER_SELECTOR = DEFAULT_INPUTS.join(\",\");\nvar Collicat = function() {\n    function Collicat(options) {\n        _classCallCheck(this, Collicat);\n        _defineProperty(this, \"eventManager\", void 0);\n        _defineProperty(this, \"zoom\", 1);\n        _defineProperty(this, \"css\", {});\n        _defineProperty(this, \"inputFilterSelector\", void 0);\n        _defineProperty(this, \"positioningStrategy\", void 0);\n        _defineProperty(this, \"_positionSetter\", void 0);\n        _defineProperty(this, \"_positionGetter\", void 0);\n        _defineProperty(this, \"_sizeSetter\", void 0);\n        _defineProperty(this, \"_sizeGetter\", void 0);\n        options = options || {};\n        this.inputFilterSelector = options.inputFilterSelector || DEFAULT_INPUT_FILTER_SELECTOR;\n        this.eventManager = new EventManager();\n        this.zoom = options.zoom || 1;\n        this.positioningStrategy = options.positioningStrategy || PositioningStrategies.absolutePosition;\n        this._positionGetter = positionerGetters.get(this.positioningStrategy);\n        this._positionSetter = positionerSetters.get(this.positioningStrategy);\n        this._sizeGetter = sizeGetters.get(this.positioningStrategy);\n        this._sizeSetter = sizeSetters.get(this.positioningStrategy);\n        var _c = options.css || {};\n        extend(this.css, _c);\n    }\n    _createClass(Collicat, [\n        {\n            key: \"getPosition\",\n            value: function getPosition(el) {\n                return this._positionGetter(el);\n            }\n        },\n        {\n            key: \"setPosition\",\n            value: function setPosition(el, p) {\n                this._positionSetter(el, p);\n            }\n        },\n        {\n            key: \"getSize\",\n            value: function getSize(el) {\n                return this._sizeGetter(el);\n            }\n        },\n        {\n            key: \"getZoom\",\n            value: function getZoom() {\n                return this.zoom;\n            }\n        },\n        {\n            key: \"setZoom\",\n            value: function setZoom(z) {\n                this.zoom = z;\n            }\n        },\n        {\n            key: \"_prepareParams\",\n            value: function _prepareParams(p) {\n                p = p || {};\n                var _p = {\n                    events: {}\n                }, i;\n                for(i in p)_p[i] = p[i];\n                for(i = 0; i < _events.length; i++)_p.events[_events[i]] = p[_events[i]] || _devNull;\n                return _p;\n            }\n        },\n        {\n            key: \"getInputFilterSelector\",\n            value: function getInputFilterSelector() {\n                return this.inputFilterSelector;\n            }\n        },\n        {\n            key: \"setInputFilterSelector\",\n            value: function setInputFilterSelector(selector) {\n                this.inputFilterSelector = selector;\n                return this;\n            }\n        },\n        {\n            key: \"draggable\",\n            value: function draggable(el, params) {\n                if (el._katavorioDrag == null) {\n                    var _p3 = this._prepareParams(params);\n                    var d = new Drag(el, _p3, this);\n                    addClass(el, _classes.delegatedDraggable);\n                    el._katavorioDrag = d;\n                    return d;\n                } else return el._katavorioDrag;\n            }\n        },\n        {\n            key: \"destroyDraggable\",\n            value: function destroyDraggable(el) {\n                if (el._katavorioDrag) {\n                    el._katavorioDrag.destroy();\n                    delete el._katavorioDrag;\n                }\n            }\n        }\n    ]);\n    return Collicat;\n}();\nvar CLASS_DRAG_SELECTED = \"jtk-drag-selected\";\nvar DragSelection = function() {\n    function DragSelection(instance) {\n        _classCallCheck(this, DragSelection);\n        this.instance = instance;\n        _defineProperty(this, \"_dragSelection\", []);\n        _defineProperty(this, \"_dragSizes\", new Map());\n        _defineProperty(this, \"_dragElements\", new Map());\n        _defineProperty(this, \"_dragElementStartPositions\", new Map());\n        _defineProperty(this, \"_dragElementPositions\", new Map());\n        _defineProperty(this, \"__activeSet\", void 0);\n    }\n    _createClass(DragSelection, [\n        {\n            key: \"_activeSet\",\n            get: function get() {\n                if (this.__activeSet == null) return this._dragSelection;\n                else return this.__activeSet;\n            }\n        },\n        {\n            key: \"length\",\n            get: function get() {\n                return this._dragSelection.length;\n            }\n        },\n        {\n            key: \"filterActiveSet\",\n            value: function filterActiveSet(fn) {\n                var _this = this;\n                this.__activeSet = [];\n                forEach(this._dragSelection, function(p) {\n                    if (fn(p)) _this.__activeSet.push(p);\n                });\n            }\n        },\n        {\n            key: \"clear\",\n            value: function clear() {\n                var _this2 = this;\n                this.reset();\n                forEach(this._dragSelection, function(p) {\n                    return _this2.instance.removeClass(p.jel, CLASS_DRAG_SELECTED);\n                });\n                this._dragSelection.length = 0;\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                this._dragElementStartPositions.clear();\n                this._dragElementPositions.clear();\n                this._dragSizes.clear();\n                this._dragElements.clear();\n                this.__activeSet = null;\n            }\n        },\n        {\n            key: \"initialisePositions\",\n            value: function initialisePositions() {\n                var _this3 = this;\n                forEach(this._activeSet, function(p) {\n                    var vp = _this3.instance.viewport.getPosition(p.id);\n                    var off = {\n                        x: parseInt(\"\" + p.jel.offsetLeft, 10),\n                        y: parseInt(\"\" + p.jel.offsetTop, 10)\n                    };\n                    _this3._dragElementStartPositions.set(p.id, off);\n                    _this3._dragElementPositions.set(p.id, off);\n                    _this3._dragSizes.set(p.id, {\n                        w: vp.w,\n                        h: vp.h\n                    });\n                });\n            }\n        },\n        {\n            key: \"updatePositions\",\n            value: function updatePositions(currentPosition, originalPosition, callback) {\n                var _this4 = this;\n                var dx = currentPosition.x - originalPosition.x, dy = currentPosition.y - originalPosition.y;\n                forEach(this._activeSet, function(p) {\n                    var op = _this4._dragElementStartPositions.get(p.id);\n                    if (op) {\n                        var x = op.x + dx, y = op.y + dy;\n                        var _s = _this4._dragSizes.get(p.id);\n                        var _b = {\n                            x: x,\n                            y: y,\n                            w: _s.w,\n                            h: _s.h\n                        };\n                        if (p.jel._jsPlumbParentGroup && p.jel._jsPlumbParentGroup.constrain) {\n                            var constrainRect = {\n                                w: p.jel.parentNode.offsetWidth + p.jel.parentNode.scrollLeft,\n                                h: p.jel.parentNode.offsetHeight + p.jel.parentNode.scrollTop\n                            };\n                            _b.x = Math.max(_b.x, 0);\n                            _b.y = Math.max(_b.y, 0);\n                            _b.x = Math.min(_b.x, constrainRect.w - _s.w);\n                            _b.y = Math.min(_b.y, constrainRect.h - _s.h);\n                        }\n                        _this4._dragElementPositions.set(p.id, {\n                            x: x,\n                            y: y\n                        });\n                        p.jel.style.left = _b.x + \"px\";\n                        p.jel.style.top = _b.y + \"px\";\n                        callback(p.jel, p.id, _s, _b);\n                    }\n                });\n            }\n        },\n        {\n            key: \"each\",\n            value: function each(f) {\n                var _this5 = this;\n                forEach(this._activeSet, function(p) {\n                    var s = _this5._dragSizes.get(p.id);\n                    var o = _this5._dragElementPositions.get(p.id);\n                    var orig = _this5._dragElementStartPositions.get(p.id);\n                    f(p.jel, p.id, o, s, orig);\n                });\n            }\n        },\n        {\n            key: \"add\",\n            value: function add(el, id) {\n                var jel = el;\n                id = id || this.instance.getId(jel);\n                var idx = findWithFunction(this._dragSelection, function(p) {\n                    return p.id === id;\n                });\n                if (idx === -1) {\n                    this.instance.addClass(el, CLASS_DRAG_SELECTED);\n                    this._dragSelection.push({\n                        id: id,\n                        jel: jel\n                    });\n                }\n            }\n        },\n        {\n            key: \"remove\",\n            value: function remove(el) {\n                var _this6 = this;\n                var jel = el;\n                this._dragSelection = this._dragSelection.filter(function(p) {\n                    var out = p.jel !== jel;\n                    if (!out) _this6.instance.removeClass(p.jel, CLASS_DRAG_SELECTED);\n                    return out;\n                });\n            }\n        },\n        {\n            key: \"toggle\",\n            value: function toggle(el) {\n                var jel = el;\n                var idx = findWithFunction(this._dragSelection, function(p) {\n                    return p.jel === jel;\n                });\n                if (idx !== -1) this.remove(jel);\n                else this.add(el);\n            }\n        }\n    ]);\n    return DragSelection;\n}();\nvar CLASS_DELEGATED_DRAGGABLE = \"jtk-delegated-draggable\";\nvar CLASS_DRAGGABLE = \"jtk-draggable\";\nvar CLASS_DRAG_CONTAINER = \"jtk-drag\";\nvar CLASS_GHOST_PROXY = \"jtk-ghost-proxy\";\nvar CLASS_DRAG_ACTIVE = \"jtk-drag-active\";\nvar CLASS_DRAGGED = \"jtk-dragged\";\nvar CLASS_DRAG_HOVER = \"jtk-drag-hover\";\nvar DragManager = function() {\n    function DragManager(instance, dragSelection, options) {\n        var _this = this;\n        _classCallCheck(this, DragManager);\n        this.instance = instance;\n        this.dragSelection = dragSelection;\n        _defineProperty(this, \"collicat\", void 0);\n        _defineProperty(this, \"drag\", void 0);\n        _defineProperty(this, \"_draggables\", {});\n        _defineProperty(this, \"_dlist\", []);\n        _defineProperty(this, \"_elementsWithEndpoints\", {});\n        _defineProperty(this, \"_draggablesForElements\", {});\n        _defineProperty(this, \"handlers\", []);\n        _defineProperty(this, \"_trackScroll\", void 0);\n        _defineProperty(this, \"_filtersToAdd\", []);\n        this.collicat = new Collicat({\n            zoom: this.instance.currentZoom,\n            css: {\n                noSelect: this.instance.dragSelectClass,\n                delegatedDraggable: CLASS_DELEGATED_DRAGGABLE,\n                draggable: CLASS_DRAGGABLE,\n                drag: CLASS_DRAG_CONTAINER,\n                selected: CLASS_DRAG_SELECTED,\n                active: CLASS_DRAG_ACTIVE,\n                hover: CLASS_DRAG_HOVER,\n                ghostProxy: CLASS_GHOST_PROXY\n            }\n        });\n        this.instance.bind(EVENT_ZOOM, function(z) {\n            _this.collicat.setZoom(z);\n        });\n        options = options || {};\n        this._trackScroll = options.trackScroll !== false;\n    }\n    _createClass(DragManager, [\n        {\n            key: \"addHandler\",\n            value: function addHandler(handler, dragOptions) {\n                var _this2 = this;\n                var o = extend({\n                    selector: handler.selector\n                }, dragOptions || {});\n                o.start = wrap(o.start, function(p) {\n                    return handler.onStart(p);\n                }, false);\n                o.drag = wrap(o.drag, function(p) {\n                    return handler.onDrag(p);\n                });\n                o.stop = wrap(o.stop, function(p) {\n                    return handler.onStop(p);\n                });\n                var handlerBeforeStart = (handler.onBeforeStart || function(p) {}).bind(handler);\n                o.beforeStart = wrap(o.beforeStart, function(p) {\n                    return handlerBeforeStart(p);\n                });\n                o.dragInit = function(el, e) {\n                    return handler.onDragInit(el, e);\n                };\n                o.dragAbort = function(el) {\n                    return handler.onDragAbort(el);\n                };\n                if (handler.useGhostProxy) {\n                    o.useGhostProxy = handler.useGhostProxy;\n                    o.makeGhostProxy = handler.makeGhostProxy;\n                }\n                if (o.constrainFunction == null && o.containment != null) switch(o.containment){\n                    case ContainmentType.notNegative:\n                        o.constrainFunction = function(pos, dragEl, _constrainRect, _size) {\n                            return {\n                                x: Math.max(0, Math.min(pos.x)),\n                                y: Math.max(0, Math.min(pos.y))\n                            };\n                        };\n                        break;\n                    case ContainmentType.parent:\n                        var padding = o.containmentPadding || 5;\n                        o.constrainFunction = function(pos, dragEl, _constrainRect, _size) {\n                            var x = pos.x < 0 ? 0 : pos.x > _constrainRect.w - padding ? _constrainRect.w - padding : pos.x;\n                            var y = pos.y < 0 ? 0 : pos.y > _constrainRect.h - padding ? _constrainRect.h - padding : pos.y;\n                            return {\n                                x: x,\n                                y: y\n                            };\n                        };\n                        break;\n                    case ContainmentType.parentEnclosed:\n                        o.constrainFunction = function(pos, dragEl, _constrainRect, _size) {\n                            var x = pos.x < 0 ? 0 : pos.x + _size.w > _constrainRect.w ? _constrainRect.w - _size.w : pos.x;\n                            var y = pos.y < 0 ? 0 : pos.y + _size.h > _constrainRect.h ? _constrainRect.h - _size.h : pos.y;\n                            return {\n                                x: x,\n                                y: y\n                            };\n                        };\n                        break;\n                }\n                if (this.drag == null) {\n                    o.trackScroll = this._trackScroll;\n                    this.drag = this.collicat.draggable(this.instance.getContainer(), o);\n                    forEach(this._filtersToAdd, function(filterToAdd) {\n                        return _this2.drag.addFilter(filterToAdd[0], filterToAdd[1]);\n                    });\n                    this.drag.on(EVENT_REVERT, function(el) {\n                        _this2.instance.revalidate(el);\n                    });\n                } else this.drag.addSelector(o);\n                this.handlers.push({\n                    handler: handler,\n                    options: o\n                });\n                handler.init(this.drag);\n            }\n        },\n        {\n            key: \"addSelector\",\n            value: function addSelector(params, atStart) {\n                this.drag && this.drag.addSelector(params, atStart);\n            }\n        },\n        {\n            key: \"addFilter\",\n            value: function addFilter(filter, exclude) {\n                if (this.drag == null) this._filtersToAdd.push([\n                    filter,\n                    exclude === true\n                ]);\n                else this.drag.addFilter(filter, exclude);\n            }\n        },\n        {\n            key: \"removeFilter\",\n            value: function removeFilter(filter) {\n                if (this.drag != null) this.drag.removeFilter(filter);\n            }\n        },\n        {\n            key: \"setFilters\",\n            value: function setFilters(filters) {\n                var _this3 = this;\n                forEach(filters, function(f) {\n                    _this3.drag.addFilter(f[0], f[1]);\n                });\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                var out = [];\n                forEach(this.handlers, function(p) {\n                    p.handler.reset();\n                });\n                this.handlers.length = 0;\n                if (this.drag != null) {\n                    var currentFilters = this.drag._filters;\n                    for(var f in currentFilters)out.push([\n                        f,\n                        currentFilters[f][1]\n                    ]);\n                    this.collicat.destroyDraggable(this.instance.getContainer());\n                }\n                delete this.drag;\n                return out;\n            }\n        },\n        {\n            key: \"setOption\",\n            value: function setOption(handler, options) {\n                var handlerAndOptions = getWithFunction(this.handlers, function(p) {\n                    return p.handler === handler;\n                });\n                if (handlerAndOptions != null) extend(handlerAndOptions.options, options || {});\n            }\n        }\n    ]);\n    return DragManager;\n}();\nfunction decodeDragGroupSpec(instance, spec) {\n    if (isString(spec)) return {\n        id: spec,\n        active: true\n    };\n    else return {\n        id: spec.id,\n        active: spec.active\n    };\n}\nfunction isActiveDragGroupMember(dragGroup, el) {\n    var details = getFromSetWithFunction(dragGroup.members, function(m) {\n        return m.el === el;\n    });\n    if (details !== null) return details.active === true;\n    else return false;\n}\nfunction getAncestors(el) {\n    var ancestors = [];\n    var p = el._jsPlumbParentGroup;\n    while(p != null){\n        ancestors.push(p.el);\n        p = p.group;\n    }\n    return ancestors;\n}\nvar ElementDragHandler = function() {\n    function ElementDragHandler(instance, _dragSelection) {\n        _classCallCheck(this, ElementDragHandler);\n        this.instance = instance;\n        this._dragSelection = _dragSelection;\n        _defineProperty(this, \"selector\", \"> \" + SELECTOR_MANAGED_ELEMENT + \":not(\" + cls(CLASS_OVERLAY) + \")\");\n        _defineProperty(this, \"_dragOffset\", null);\n        _defineProperty(this, \"_groupLocations\", []);\n        _defineProperty(this, \"_intersectingGroups\", []);\n        _defineProperty(this, \"_currentDragParentGroup\", null);\n        _defineProperty(this, \"_dragGroupByElementIdMap\", {});\n        _defineProperty(this, \"_dragGroupMap\", {});\n        _defineProperty(this, \"_currentDragGroup\", null);\n        _defineProperty(this, \"_currentDragGroupOffsets\", new Map());\n        _defineProperty(this, \"_currentDragGroupSizes\", new Map());\n        _defineProperty(this, \"_currentDragGroupOriginalPositions\", new Map());\n        _defineProperty(this, \"_dragPayload\", null);\n        _defineProperty(this, \"drag\", void 0);\n        _defineProperty(this, \"originalPosition\", void 0);\n    }\n    _createClass(ElementDragHandler, [\n        {\n            key: \"onDragInit\",\n            value: function onDragInit(el) {\n                return null;\n            }\n        },\n        {\n            key: \"onDragAbort\",\n            value: function onDragAbort(el) {\n                return null;\n            }\n        },\n        {\n            key: \"getDropGroup\",\n            value: function getDropGroup() {\n                var dropGroup = null;\n                if (this._intersectingGroups.length > 0) {\n                    var targetGroup = this._intersectingGroups[0].groupLoc.group;\n                    var intersectingElement = this._intersectingGroups[0].intersectingElement;\n                    var currentGroup = intersectingElement._jsPlumbParentGroup;\n                    if (currentGroup !== targetGroup) {\n                        if (currentGroup == null || !currentGroup.overrideDrop(intersectingElement, targetGroup)) dropGroup = this._intersectingGroups[0];\n                    }\n                }\n                return dropGroup;\n            }\n        },\n        {\n            key: \"onStop\",\n            value: function onStop(params) {\n                var _this$_currentDragGro, _this = this;\n                var jel = params.drag.getDragElement();\n                var dropGroup = this.getDropGroup();\n                var elementsToProcess = [];\n                elementsToProcess.push({\n                    el: jel,\n                    id: this.instance.getId(jel),\n                    pos: params.finalPos,\n                    originalGroup: jel._jsPlumbParentGroup,\n                    redrawResult: null,\n                    originalPos: params.originalPos,\n                    reverted: false,\n                    dropGroup: dropGroup != null ? dropGroup.groupLoc.group : null\n                });\n                function addElementToProcess(el, id, currentPos, s, originalPosition) {\n                    var x = currentPos.x, y = currentPos.y;\n                    if (el._jsPlumbParentGroup && el._jsPlumbParentGroup.constrain) {\n                        var constrainRect = {\n                            w: el.parentNode.offsetWidth + el.parentNode.scrollLeft,\n                            h: el.parentNode.offsetHeight + el.parentNode.scrollTop\n                        };\n                        x = Math.max(x, 0);\n                        y = Math.max(y, 0);\n                        x = Math.min(x, constrainRect.w - s.w);\n                        y = Math.min(y, constrainRect.h - s.h);\n                        currentPos.x = x;\n                        currentPos.y = y;\n                    }\n                    elementsToProcess.push({\n                        el: el,\n                        id: id,\n                        pos: currentPos,\n                        originalPos: originalPosition,\n                        originalGroup: el._jsPlumbParentGroup,\n                        redrawResult: null,\n                        reverted: false,\n                        dropGroup: dropGroup === null || dropGroup === void 0 ? void 0 : dropGroup.groupLoc.group\n                    });\n                }\n                this._dragSelection.each(function(el, id, o, s, originalPosition) {\n                    if (el !== params.el) addElementToProcess(el, id, {\n                        x: o.x,\n                        y: o.y\n                    }, s, originalPosition);\n                });\n                (_this$_currentDragGro = this._currentDragGroup) === null || _this$_currentDragGro === void 0 || _this$_currentDragGro.members.forEach(function(d) {\n                    if (d.el !== params.el) {\n                        var offset = _this._currentDragGroupOffsets.get(d.elId);\n                        var s = _this._currentDragGroupSizes.get(d.elId);\n                        var pp = {\n                            x: params.finalPos.x + offset[0].x,\n                            y: params.finalPos.y + offset[0].y\n                        };\n                        addElementToProcess(d.el, d.elId, pp, s, _this._currentDragGroupOriginalPositions.get(d.elId));\n                    }\n                });\n                forEach(elementsToProcess, function(p) {\n                    var wasInGroup = p.originalGroup != null, isInOriginalGroup = wasInGroup && isInsideParent(_this.instance, p.el, p.pos), parentOffset = {\n                        x: 0,\n                        y: 0\n                    };\n                    if (wasInGroup && !isInOriginalGroup) {\n                        if (dropGroup == null) {\n                            var orphanedPosition = _this._pruneOrOrphan(p, true, true);\n                            if (orphanedPosition.pos != null) p.pos = orphanedPosition.pos.pos;\n                            else if (!orphanedPosition.pruned && p.originalGroup.revert) {\n                                p.pos = p.originalPos;\n                                p.reverted = true;\n                            }\n                        }\n                    } else if (wasInGroup && isInOriginalGroup) parentOffset = _this._computeOffsetByParentGroup(p.originalGroup);\n                    if (dropGroup != null && !isInOriginalGroup) _this.instance.groupManager.addToGroup(dropGroup.groupLoc.group, false, p.el);\n                    else p.dropGroup = null;\n                    if (p.reverted) _this.instance.setPosition(p.el, p.pos);\n                    p.redrawResult = _this.instance.setElementPosition(p.el, p.pos.x + parentOffset.x, p.pos.y + parentOffset.y);\n                    _this.instance.removeClass(p.el, CLASS_DRAGGED);\n                    _this.instance.select({\n                        source: p.el\n                    }).removeClass(_this.instance.elementDraggingClass + \" \" + _this.instance.sourceElementDraggingClass, true);\n                    _this.instance.select({\n                        target: p.el\n                    }).removeClass(_this.instance.elementDraggingClass + \" \" + _this.instance.targetElementDraggingClass, true);\n                });\n                if (elementsToProcess[0].originalGroup != null) {\n                    var currentGroup = jel._jsPlumbParentGroup;\n                    if (currentGroup !== elementsToProcess[0].originalGroup) {\n                        var originalElement = params.drag.getDragElement(true);\n                        if (elementsToProcess[0].originalGroup.ghost) {\n                            var o1 = this.instance.getPosition(this.instance.getGroupContentArea(currentGroup));\n                            var o2 = this.instance.getPosition(this.instance.getGroupContentArea(elementsToProcess[0].originalGroup));\n                            var o = {\n                                x: o2.x + params.pos.x - o1.x,\n                                y: o2.y + params.pos.y - o1.y\n                            };\n                            originalElement.style.left = o.x + \"px\";\n                            originalElement.style.top = o.y + \"px\";\n                            this.instance.revalidate(originalElement);\n                        }\n                    }\n                }\n                this.instance.fire(EVENT_DRAG_STOP, {\n                    elements: elementsToProcess,\n                    e: params.e,\n                    el: jel,\n                    payload: this._dragPayload\n                });\n                this._cleanup();\n            }\n        },\n        {\n            key: \"_cleanup\",\n            value: function _cleanup() {\n                var _this2 = this;\n                forEach(this._groupLocations, function(groupLoc) {\n                    _this2.instance.removeClass(groupLoc.el, CLASS_DRAG_ACTIVE);\n                    _this2.instance.removeClass(groupLoc.el, CLASS_DRAG_HOVER);\n                });\n                this._currentDragParentGroup = null;\n                this._groupLocations.length = 0;\n                this.instance.hoverSuspended = false;\n                this._dragOffset = null;\n                this._dragSelection.reset();\n                this._dragPayload = null;\n                this._currentDragGroupOffsets.clear();\n                this._currentDragGroupSizes.clear();\n                this._currentDragGroupOriginalPositions.clear();\n                this._currentDragGroup = null;\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {}\n        },\n        {\n            key: \"init\",\n            value: function init(drag) {\n                this.drag = drag;\n            }\n        },\n        {\n            key: \"onDrag\",\n            value: function onDrag(params) {\n                var _this3 = this;\n                var el = params.drag.getDragElement();\n                var id = this.instance.getId(el);\n                var finalPos = params.pos;\n                var elSize = this.instance.viewport.getPosition(id);\n                var ui = {\n                    x: finalPos.x,\n                    y: finalPos.y\n                };\n                this._intersectingGroups.length = 0;\n                if (this._dragOffset != null) {\n                    ui.x += this._dragOffset.x;\n                    ui.y += this._dragOffset.y;\n                }\n                var _one = function _one(el, bounds, findIntersectingGroups) {\n                    if (findIntersectingGroups) {\n                        var ancestorsOfIntersectingGroups = new Set();\n                        forEach(_this3._groupLocations, function(groupLoc) {\n                            if (!ancestorsOfIntersectingGroups.has(groupLoc.group.id) && intersects(bounds, groupLoc.r)) {\n                                if (groupLoc.group !== _this3._currentDragParentGroup) _this3.instance.addClass(groupLoc.el, CLASS_DRAG_HOVER);\n                                _this3._intersectingGroups.push({\n                                    groupLoc: groupLoc,\n                                    intersectingElement: params.drag.getDragElement(true),\n                                    d: 0\n                                });\n                                forEach(_this3.instance.groupManager.getAncestors(groupLoc.group), function(g) {\n                                    return ancestorsOfIntersectingGroups.add(g.id);\n                                });\n                            } else _this3.instance.removeClass(groupLoc.el, CLASS_DRAG_HOVER);\n                        });\n                    }\n                    _this3.instance.setElementPosition(el, bounds.x, bounds.y);\n                    _this3.instance.fire(EVENT_DRAG_MOVE, {\n                        el: el,\n                        e: params.e,\n                        pos: {\n                            x: bounds.x,\n                            y: bounds.y\n                        },\n                        originalPosition: _this3.originalPosition,\n                        payload: _this3._dragPayload\n                    });\n                };\n                var elBounds = {\n                    x: ui.x,\n                    y: ui.y,\n                    w: elSize.w,\n                    h: elSize.h\n                };\n                _one(el, elBounds, true);\n                this._dragSelection.updatePositions(finalPos, this.originalPosition, function(el, id, s, b) {\n                    _one(el, b, false);\n                });\n                this._currentDragGroupOffsets.forEach(function(v, k) {\n                    var s = _this3._currentDragGroupSizes.get(k);\n                    var _b = {\n                        x: elBounds.x + v[0].x,\n                        y: elBounds.y + v[0].y,\n                        w: s.w,\n                        h: s.h\n                    };\n                    v[1].style.left = _b.x + \"px\";\n                    v[1].style.top = _b.y + \"px\";\n                    _one(v[1], _b, false);\n                });\n            }\n        },\n        {\n            key: \"_computeOffsetByParentGroup\",\n            value: function _computeOffsetByParentGroup(group) {\n                var parentGroupOffset = this.instance.getPosition(group.el);\n                var contentArea = group.contentArea;\n                if (contentArea !== group.el) {\n                    var caOffset = this.instance.getPosition(contentArea);\n                    parentGroupOffset.x += caOffset.x;\n                    parentGroupOffset.y += caOffset.y;\n                }\n                if (group.el._jsPlumbParentGroup) {\n                    var ancestorOffset = this._computeOffsetByParentGroup(group.el._jsPlumbParentGroup);\n                    parentGroupOffset.x += ancestorOffset.x;\n                    parentGroupOffset.y += ancestorOffset.y;\n                }\n                return parentGroupOffset;\n            }\n        },\n        {\n            key: \"onStart\",\n            value: function onStart(params) {\n                var _this4 = this;\n                var el = params.drag.getDragElement();\n                var elOffset = this.instance.getPosition(el);\n                this.originalPosition = {\n                    x: params.pos.x,\n                    y: params.pos.y\n                };\n                if (el._jsPlumbParentGroup) {\n                    this._dragOffset = this._computeOffsetByParentGroup(el._jsPlumbParentGroup);\n                    this._currentDragParentGroup = el._jsPlumbParentGroup;\n                }\n                var cont = true;\n                var nd = el.getAttribute(ATTRIBUTE_NOT_DRAGGABLE);\n                if (this.instance.elementsDraggable === false || nd != null && nd !== FALSE$1) cont = false;\n                if (cont) {\n                    this._groupLocations.length = 0;\n                    this._intersectingGroups.length = 0;\n                    this.instance.hoverSuspended = true;\n                    var originalElement = params.drag.getDragElement(true), descendants = originalElement.querySelectorAll(SELECTOR_MANAGED_ELEMENT), ancestors = getAncestors(originalElement), a = [];\n                    Array.prototype.push.apply(a, descendants);\n                    Array.prototype.push.apply(a, ancestors);\n                    this._dragSelection.filterActiveSet(function(p) {\n                        return a.indexOf(p.jel) === -1;\n                    });\n                    this._dragSelection.initialisePositions();\n                    var _one = function _one(_el, dragGroup, dragGroupMemberSpec) {\n                        if (!_el._isJsPlumbGroup || _this4.instance.allowNestedGroups) {\n                            var isNotInAGroup = !_el._jsPlumbParentGroup;\n                            var membersAreDroppable = isNotInAGroup || _el._jsPlumbParentGroup.dropOverride !== true;\n                            var isGhostOrNotConstrained = !isNotInAGroup && (_el._jsPlumbParentGroup.ghost || _el._jsPlumbParentGroup.constrain !== true);\n                            if (isNotInAGroup || membersAreDroppable && isGhostOrNotConstrained) {\n                                forEach(_this4.instance.groupManager.getGroups(), function(group) {\n                                    var elementGroup = _el._jsPlumbGroup;\n                                    if (group.droppable !== false && group.enabled !== false && _el._jsPlumbGroup !== group && !_this4.instance.groupManager.isDescendant(group, elementGroup)) {\n                                        var groupEl = group.el, groupElId = _this4.instance.getId(groupEl), p = _this4.instance.viewport.getPosition(groupElId), boundingRect = {\n                                            x: p.x,\n                                            y: p.y,\n                                            w: p.w,\n                                            h: p.h\n                                        };\n                                        var groupLocation = {\n                                            el: groupEl,\n                                            r: boundingRect,\n                                            group: group\n                                        };\n                                        _this4._groupLocations.push(groupLocation);\n                                        if (group !== _this4._currentDragParentGroup) _this4.instance.addClass(groupEl, CLASS_DRAG_ACTIVE);\n                                    }\n                                });\n                                _this4._groupLocations.sort(function(a, b) {\n                                    if (_this4.instance.groupManager.isDescendant(a.group, b.group)) return -1;\n                                    else if (_this4.instance.groupManager.isAncestor(b.group, a.group)) return 1;\n                                    else return 0;\n                                });\n                            }\n                        }\n                        _this4.instance.select({\n                            source: _el\n                        }).addClass(_this4.instance.elementDraggingClass + \" \" + _this4.instance.sourceElementDraggingClass, true);\n                        _this4.instance.select({\n                            target: _el\n                        }).addClass(_this4.instance.elementDraggingClass + \" \" + _this4.instance.targetElementDraggingClass, true);\n                        return _this4.instance.fire(EVENT_DRAG_START, {\n                            el: _el,\n                            e: params.e,\n                            originalPosition: _this4.originalPosition,\n                            pos: _this4.originalPosition,\n                            dragGroup: dragGroup,\n                            dragGroupMemberSpec: dragGroupMemberSpec\n                        });\n                    };\n                    var elId = this.instance.getId(el);\n                    this._currentDragGroup = this._dragGroupByElementIdMap[elId];\n                    if (this._currentDragGroup && !isActiveDragGroupMember(this._currentDragGroup, el)) this._currentDragGroup = null;\n                    var dragStartReturn = _one(el);\n                    if (dragStartReturn === false) {\n                        this._cleanup();\n                        return false;\n                    } else this._dragPayload = dragStartReturn;\n                    if (this._currentDragGroup != null) {\n                        this._currentDragGroupOffsets.clear();\n                        this._currentDragGroupSizes.clear();\n                        this._currentDragGroup.members.forEach(function(jel) {\n                            var vp = _this4.instance.viewport.getPosition(jel.elId);\n                            _this4._currentDragGroupOffsets.set(jel.elId, [\n                                {\n                                    x: vp.x - elOffset.x,\n                                    y: vp.y - elOffset.y\n                                },\n                                jel.el\n                            ]);\n                            _this4._currentDragGroupSizes.set(jel.elId, vp);\n                            _this4._currentDragGroupOriginalPositions.set(jel.elId, {\n                                x: vp.x,\n                                y: vp.y\n                            });\n                            _one(jel.el, _this4._currentDragGroup, jel);\n                        });\n                    }\n                }\n                return cont;\n            }\n        },\n        {\n            key: \"addToDragGroup\",\n            value: function addToDragGroup(spec) {\n                var _this5 = this;\n                var details = decodeDragGroupSpec(this.instance, spec);\n                var dragGroup = this._dragGroupMap[details.id];\n                if (dragGroup == null) {\n                    dragGroup = {\n                        id: details.id,\n                        members: new Set()\n                    };\n                    this._dragGroupMap[details.id] = dragGroup;\n                }\n                for(var _len = arguments.length, els = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)els[_key - 1] = arguments[_key];\n                this.removeFromDragGroup.apply(this, els);\n                forEach(els, function(el) {\n                    var elId = _this5.instance.getId(el);\n                    dragGroup.members.add({\n                        elId: elId,\n                        el: el,\n                        active: details.active\n                    });\n                    _this5._dragGroupByElementIdMap[elId] = dragGroup;\n                });\n            }\n        },\n        {\n            key: \"removeFromDragGroup\",\n            value: function removeFromDragGroup() {\n                var _this6 = this;\n                for(var _len2 = arguments.length, els = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)els[_key2] = arguments[_key2];\n                forEach(els, function(el) {\n                    var id = _this6.instance.getId(el);\n                    var dragGroup = _this6._dragGroupByElementIdMap[id];\n                    if (dragGroup != null) {\n                        var s = new Set();\n                        dragGroup.members.forEach(function(member) {\n                            if (member.el !== el) s.add(member);\n                        });\n                        dragGroup.members = s;\n                        delete _this6._dragGroupByElementIdMap[id];\n                    }\n                });\n            }\n        },\n        {\n            key: \"setDragGroupState\",\n            value: function setDragGroupState(active) {\n                var _this7 = this;\n                for(var _len3 = arguments.length, els = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++)els[_key3 - 1] = arguments[_key3];\n                var elementIds = els.map(function(el) {\n                    return _this7.instance.getId(el);\n                });\n                forEach(elementIds, function(id) {\n                    var dragGroup = _this7._dragGroupByElementIdMap[id];\n                    if (dragGroup != null) {\n                        var member = getFromSetWithFunction(dragGroup.members, function(m) {\n                            return m.elId === id;\n                        });\n                        if (member != null) member.active = active;\n                    }\n                });\n            }\n        },\n        {\n            key: \"clearDragGroup\",\n            value: function clearDragGroup(name) {\n                var _this8 = this;\n                var dragGroup = this._dragGroupMap[name];\n                if (dragGroup != null) {\n                    dragGroup.members.forEach(function(member) {\n                        delete _this8._dragGroupByElementIdMap[member.elId];\n                    });\n                    dragGroup.members.clear();\n                }\n            }\n        },\n        {\n            key: \"_pruneOrOrphan\",\n            value: function _pruneOrOrphan(params, doNotTransferToAncestor, isDefinitelyNotInsideParent) {\n                var jel = params.el;\n                var orphanedPosition = {\n                    pruned: false,\n                    pos: null\n                };\n                if (isDefinitelyNotInsideParent || !isInsideParent(this.instance, jel, params.pos)) {\n                    var group = jel._jsPlumbParentGroup;\n                    if (group.prune) {\n                        if (jel._isJsPlumbGroup) this.instance.removeGroup(jel._jsPlumbGroup);\n                        else group.remove(params.el, true);\n                        orphanedPosition.pruned = true;\n                    } else if (group.orphan) {\n                        orphanedPosition.pos = this.instance.groupManager.orphan(params.el, doNotTransferToAncestor);\n                        if (jel._isJsPlumbGroup) group.removeGroup(jel._jsPlumbGroup);\n                        else group.remove(params.el);\n                    }\n                }\n                return orphanedPosition;\n            }\n        }\n    ]);\n    return ElementDragHandler;\n}();\nvar endpointMap$1 = {};\nvar endpointComputers = {};\nvar handlers = {};\nvar EndpointFactory = {\n    get: function get(ep, name, params) {\n        var e = endpointMap$1[name];\n        if (!e) throw {\n            message: \"jsPlumb: unknown endpoint type '\" + name + \"'\"\n        };\n        else return new e(ep, params);\n    },\n    clone: function clone(epr) {\n        var handler = handlers[epr.type];\n        return EndpointFactory.get(epr.endpoint, epr.type, handler.getParams(epr));\n    },\n    compute: function compute(endpoint, anchorPoint, orientation, endpointStyle) {\n        var c = endpointComputers[endpoint.type];\n        if (c != null) return c(endpoint, anchorPoint, orientation, endpointStyle);\n        else log(\"jsPlumb: cannot find endpoint calculator for endpoint of type \", endpoint.type);\n    },\n    registerHandler: function registerHandler(eph) {\n        handlers[eph.type] = eph;\n        endpointMap$1[eph.type] = eph.cls;\n        endpointComputers[eph.type] = eph.compute;\n    }\n};\nvar EndpointRepresentation = function() {\n    function EndpointRepresentation(endpoint, params) {\n        _classCallCheck(this, EndpointRepresentation);\n        this.endpoint = endpoint;\n        _defineProperty(this, \"typeId\", void 0);\n        _defineProperty(this, \"x\", void 0);\n        _defineProperty(this, \"y\", void 0);\n        _defineProperty(this, \"w\", void 0);\n        _defineProperty(this, \"h\", void 0);\n        _defineProperty(this, \"computedValue\", void 0);\n        _defineProperty(this, \"bounds\", EMPTY_BOUNDS());\n        _defineProperty(this, \"classes\", []);\n        _defineProperty(this, \"instance\", void 0);\n        _defineProperty(this, \"type\", void 0);\n        params = params || {};\n        this.instance = endpoint.instance;\n        if (endpoint.cssClass) this.classes.push(endpoint.cssClass);\n        if (params.cssClass) this.classes.push(params.cssClass);\n    }\n    _createClass(EndpointRepresentation, [\n        {\n            key: \"addClass\",\n            value: function addClass(c) {\n                this.classes.push(c);\n                this.instance.addEndpointClass(this.endpoint, c);\n            }\n        },\n        {\n            key: \"removeClass\",\n            value: function removeClass(c) {\n                this.classes = this.classes.filter(function(_c) {\n                    return _c !== c;\n                });\n                this.instance.removeEndpointClass(this.endpoint, c);\n            }\n        },\n        {\n            key: \"compute\",\n            value: function compute(anchorPoint, orientation, endpointStyle) {\n                this.computedValue = EndpointFactory.compute(this, anchorPoint, orientation, endpointStyle);\n                this.bounds.xmin = this.x;\n                this.bounds.ymin = this.y;\n                this.bounds.xmax = this.x + this.w;\n                this.bounds.ymax = this.y + this.h;\n            }\n        },\n        {\n            key: \"setVisible\",\n            value: function setVisible(v) {\n                this.instance.setEndpointVisible(this.endpoint, v);\n            }\n        }\n    ]);\n    return EndpointRepresentation;\n}();\nvar _opposites, _clockwiseOptions, _antiClockwiseOptions;\nvar FaceValues;\n(function(FaceValues) {\n    FaceValues[\"top\"] = \"top\";\n    FaceValues[\"left\"] = \"left\";\n    FaceValues[\"right\"] = \"right\";\n    FaceValues[\"bottom\"] = \"bottom\";\n})(FaceValues || (FaceValues = {}));\nvar TOP = FaceValues.top;\nvar LEFT = FaceValues.left;\nvar RIGHT = FaceValues.right;\nvar BOTTOM = FaceValues.bottom;\nvar X_AXIS_FACES = [\n    LEFT,\n    RIGHT\n];\nvar Y_AXIS_FACES = [\n    TOP,\n    BOTTOM\n];\nvar LightweightFloatingAnchor = function() {\n    function LightweightFloatingAnchor(instance, element, elementId) {\n        _classCallCheck(this, LightweightFloatingAnchor);\n        this.instance = instance;\n        this.element = element;\n        _defineProperty(this, \"isFloating\", true);\n        _defineProperty(this, \"isContinuous\", void 0);\n        _defineProperty(this, \"isDynamic\", void 0);\n        _defineProperty(this, \"locations\", []);\n        _defineProperty(this, \"currentLocation\", 0);\n        _defineProperty(this, \"locked\", false);\n        _defineProperty(this, \"cssClass\", \"\");\n        _defineProperty(this, \"timestamp\", null);\n        _defineProperty(this, \"type\", \"Floating\");\n        _defineProperty(this, \"id\", uuid());\n        _defineProperty(this, \"orientation\", [\n            0,\n            0\n        ]);\n        _defineProperty(this, \"size\", void 0);\n        this.size = instance.viewport.getPosition(elementId);\n        this.locations.push({\n            x: 0.5,\n            y: 0.5,\n            ox: this.orientation[0],\n            oy: this.orientation[1],\n            offx: 0,\n            offy: 0,\n            iox: this.orientation[0],\n            ioy: this.orientation[1],\n            cls: \"\"\n        });\n    }\n    _createClass(LightweightFloatingAnchor, [\n        {\n            key: \"_updateOrientationInRouter\",\n            value: function _updateOrientationInRouter() {\n                this.instance.router.setAnchorOrientation(this, [\n                    this.locations[0].ox,\n                    this.locations[0].oy\n                ]);\n            }\n        },\n        {\n            key: \"over\",\n            value: function over(endpoint) {\n                this.orientation = this.instance.router.getEndpointOrientation(endpoint);\n                this.locations[0].ox = this.orientation[0];\n                this.locations[0].oy = this.orientation[1];\n                this._updateOrientationInRouter();\n            }\n        },\n        {\n            key: \"out\",\n            value: function out() {\n                this.orientation = null;\n                this.locations[0].ox = this.locations[0].iox;\n                this.locations[0].oy = this.locations[0].ioy;\n                this._updateOrientationInRouter();\n            }\n        }\n    ]);\n    return LightweightFloatingAnchor;\n}();\nvar opposites = (_opposites = {}, _defineProperty(_opposites, TOP, BOTTOM), _defineProperty(_opposites, RIGHT, LEFT), _defineProperty(_opposites, LEFT, RIGHT), _defineProperty(_opposites, BOTTOM, TOP), _opposites);\nvar clockwiseOptions = (_clockwiseOptions = {}, _defineProperty(_clockwiseOptions, TOP, RIGHT), _defineProperty(_clockwiseOptions, RIGHT, BOTTOM), _defineProperty(_clockwiseOptions, LEFT, TOP), _defineProperty(_clockwiseOptions, BOTTOM, LEFT), _clockwiseOptions);\nvar antiClockwiseOptions = (_antiClockwiseOptions = {}, _defineProperty(_antiClockwiseOptions, TOP, LEFT), _defineProperty(_antiClockwiseOptions, RIGHT, TOP), _defineProperty(_antiClockwiseOptions, LEFT, BOTTOM), _defineProperty(_antiClockwiseOptions, BOTTOM, RIGHT), _antiClockwiseOptions);\nfunction getDefaultFace(a) {\n    return a.faces.length === 0 ? TOP : a.faces[0];\n}\nfunction _isFaceAvailable(a, face) {\n    return a.faces.indexOf(face) !== -1;\n}\nfunction _secondBest(a, edge) {\n    return (a.clockwise ? clockwiseOptions : antiClockwiseOptions)[edge];\n}\nfunction _lastChoice(a, edge) {\n    return (a.clockwise ? antiClockwiseOptions : clockwiseOptions)[edge];\n}\nfunction isEdgeSupported(a, edge) {\n    return a.lockedAxis == null ? a.lockedFace == null ? _isFaceAvailable(a, edge) === true : a.lockedFace === edge : a.lockedAxis.indexOf(edge) !== -1;\n}\nfunction verifyFace(a, edge) {\n    if (_isFaceAvailable(a, edge)) return edge;\n    else if (_isFaceAvailable(a, opposites[edge])) return opposites[edge];\n    else {\n        var secondBest = _secondBest(a, edge);\n        if (_isFaceAvailable(a, secondBest)) return secondBest;\n        else {\n            var lastChoice = _lastChoice(a, edge);\n            if (_isFaceAvailable(a, lastChoice)) return lastChoice;\n        }\n    }\n    return edge;\n}\nvar _top = {\n    x: 0.5,\n    y: 0,\n    ox: 0,\n    oy: -1,\n    offx: 0,\n    offy: 0\n}, _bottom = {\n    x: 0.5,\n    y: 1,\n    ox: 0,\n    oy: 1,\n    offx: 0,\n    offy: 0\n}, _left = {\n    x: 0,\n    y: 0.5,\n    ox: -1,\n    oy: 0,\n    offx: 0,\n    offy: 0\n}, _right = {\n    x: 1,\n    y: 0.5,\n    ox: 1,\n    oy: 0,\n    offx: 0,\n    offy: 0\n}, _topLeft = {\n    x: 0,\n    y: 0,\n    ox: 0,\n    oy: -1,\n    offx: 0,\n    offy: 0\n}, _topRight = {\n    x: 1,\n    y: 0,\n    ox: 1,\n    oy: -1,\n    offx: 0,\n    offy: 0\n}, _bottomLeft = {\n    x: 0,\n    y: 1,\n    ox: 0,\n    oy: 1,\n    offx: 0,\n    offy: 0\n}, _bottomRight = {\n    x: 1,\n    y: 1,\n    ox: 0,\n    oy: 1,\n    offx: 0,\n    offy: 0\n}, _center = {\n    x: 0.5,\n    y: 0.5,\n    ox: 0,\n    oy: 0,\n    offx: 0,\n    offy: 0\n};\nvar namedValues = {\n    \"Top\": [\n        _top\n    ],\n    \"Bottom\": [\n        _bottom\n    ],\n    \"Left\": [\n        _left\n    ],\n    \"Right\": [\n        _right\n    ],\n    \"TopLeft\": [\n        _topLeft\n    ],\n    \"TopRight\": [\n        _topRight\n    ],\n    \"BottomLeft\": [\n        _bottomLeft\n    ],\n    \"BottomRight\": [\n        _bottomRight\n    ],\n    \"Center\": [\n        _center\n    ],\n    \"AutoDefault\": [\n        _top,\n        _left,\n        _bottom,\n        _right\n    ]\n};\nvar namedContinuousValues = {\n    \"Continuous\": {\n        faces: [\n            TOP,\n            LEFT,\n            BOTTOM,\n            RIGHT\n        ]\n    },\n    \"ContinuousTop\": {\n        faces: [\n            TOP\n        ]\n    },\n    \"ContinuousRight\": {\n        faces: [\n            RIGHT\n        ]\n    },\n    \"ContinuousBottom\": {\n        faces: [\n            BOTTOM\n        ]\n    },\n    \"ContinuousLeft\": {\n        faces: [\n            LEFT\n        ]\n    },\n    \"ContinuousLeftRight\": {\n        faces: [\n            LEFT,\n            RIGHT\n        ]\n    },\n    \"ContinuousTopBottom\": {\n        faces: [\n            TOP,\n            BOTTOM\n        ]\n    }\n};\nfunction getNamedAnchor(name, params) {\n    params = params || {};\n    if (name === AnchorLocations.Perimeter) return _createPerimeterAnchor(params);\n    var a = namedValues[name];\n    if (a != null) return _createAnchor(name, map(a, function(_a) {\n        return extend({\n            iox: _a.ox,\n            ioy: _a.oy\n        }, _a);\n    }), params);\n    a = namedContinuousValues[name];\n    if (a != null) return _createContinuousAnchor(name, a.faces, params);\n    throw {\n        message: \"jsPlumb: unknown anchor type '\" + name + \"'\"\n    };\n}\nfunction _createAnchor(type, locations, params) {\n    return {\n        type: type,\n        locations: locations,\n        currentLocation: 0,\n        locked: false,\n        id: uuid(),\n        isFloating: false,\n        isContinuous: false,\n        isDynamic: locations.length > 1,\n        timestamp: null,\n        cssClass: params.cssClass || \"\"\n    };\n}\nfunction createFloatingAnchor(instance, element, elementId) {\n    return new LightweightFloatingAnchor(instance, element, elementId);\n}\nvar PROPERTY_CURRENT_FACE = \"currentFace\";\nfunction _createContinuousAnchor(type, faces, params) {\n    var ca = {\n        type: type,\n        locations: [],\n        currentLocation: 0,\n        locked: false,\n        id: uuid(),\n        cssClass: params.cssClass || \"\",\n        isFloating: false,\n        isContinuous: true,\n        timestamp: null,\n        faces: params.faces || faces,\n        lockedFace: null,\n        lockedAxis: null,\n        clockwise: !(params.clockwise === false),\n        __currentFace: null\n    };\n    Object.defineProperty(ca, PROPERTY_CURRENT_FACE, {\n        get: function get() {\n            return this.__currentFace;\n        },\n        set: function set(f) {\n            this.__currentFace = verifyFace(this, f);\n        }\n    });\n    return ca;\n}\nfunction isPrimitiveAnchorSpec(sa) {\n    return sa.length < 7 && sa.every(isNumber) || sa.length === 7 && sa.slice(0, 5).every(isNumber) && isString(sa[6]);\n}\nfunction makeLightweightAnchorFromSpec(spec) {\n    if (isString(spec)) return getNamedAnchor(spec, null);\n    else if (Array.isArray(spec)) {\n        if (isPrimitiveAnchorSpec(spec)) {\n            var _spec = spec;\n            return _createAnchor(null, [\n                {\n                    x: _spec[0],\n                    y: _spec[1],\n                    ox: _spec[2],\n                    oy: _spec[3],\n                    offx: _spec[4] == null ? 0 : _spec[4],\n                    offy: _spec[5] == null ? 0 : _spec[5],\n                    iox: _spec[2],\n                    ioy: _spec[3],\n                    cls: _spec[6] || \"\"\n                }\n            ], {\n                cssClass: _spec[6] || \"\"\n            });\n        } else {\n            var locations = map(spec, function(aSpec) {\n                if (isString(aSpec)) {\n                    var a = namedValues[aSpec];\n                    return a != null ? extend({\n                        iox: a[0].ox,\n                        ioy: a[0].oy,\n                        cls: \"\"\n                    }, a[0]) : null;\n                } else if (isPrimitiveAnchorSpec(aSpec)) return {\n                    x: aSpec[0],\n                    y: aSpec[1],\n                    ox: aSpec[2],\n                    oy: aSpec[3],\n                    offx: aSpec[4] == null ? 0 : aSpec[4],\n                    offy: aSpec[5] == null ? 0 : aSpec[5],\n                    iox: aSpec[2],\n                    ioy: aSpec[3],\n                    cls: aSpec[6] || \"\"\n                };\n            }).filter(function(ar) {\n                return ar != null;\n            });\n            return _createAnchor(\"Dynamic\", locations, {});\n        }\n    } else {\n        var sa = spec;\n        return getNamedAnchor(sa.type, sa.options);\n    }\n}\nfunction circleGenerator(anchorCount) {\n    var r = 0.5, step = Math.PI * 2 / anchorCount, a = [];\n    var current = 0;\n    for(var i = 0; i < anchorCount; i++){\n        var x = r + r * Math.sin(current), y = r + r * Math.cos(current);\n        a.push({\n            x: x,\n            y: y,\n            ox: 0,\n            oy: 0,\n            offx: 0,\n            offy: 0,\n            iox: 0,\n            ioy: 0,\n            cls: \"\"\n        });\n        current += step;\n    }\n    return a;\n}\nfunction _path(segments, anchorCount) {\n    var anchorsPerFace = anchorCount / segments.length, a = [], _computeFace = function _computeFace(x1, y1, x2, y2, fractionalLength, ox, oy) {\n        anchorsPerFace = anchorCount * fractionalLength;\n        var dx = (x2 - x1) / anchorsPerFace, dy = (y2 - y1) / anchorsPerFace;\n        for(var i = 0; i < anchorsPerFace; i++)a.push({\n            x: x1 + dx * i,\n            y: y1 + dy * i,\n            ox: ox == null ? 0 : ox,\n            oy: oy == null ? 0 : oy,\n            offx: 0,\n            offy: 0,\n            iox: 0,\n            ioy: 0,\n            cls: \"\"\n        });\n    };\n    for(var i = 0; i < segments.length; i++)_computeFace.apply(null, segments[i]);\n    return a;\n}\nfunction shapeGenerator(faces, anchorCount) {\n    var s = [];\n    for(var i = 0; i < faces.length; i++)s.push([\n        faces[i][0],\n        faces[i][1],\n        faces[i][2],\n        faces[i][3],\n        1 / faces.length,\n        faces[i][4],\n        faces[i][5]\n    ]);\n    return _path(s, anchorCount);\n}\nfunction rectangleGenerator(anchorCount) {\n    return shapeGenerator([\n        [\n            0,\n            0,\n            1,\n            0,\n            0,\n            -1\n        ],\n        [\n            1,\n            0,\n            1,\n            1,\n            1,\n            0\n        ],\n        [\n            1,\n            1,\n            0,\n            1,\n            0,\n            1\n        ],\n        [\n            0,\n            1,\n            0,\n            0,\n            -1,\n            0\n        ]\n    ], anchorCount);\n}\nfunction diamondGenerator(anchorCount) {\n    return shapeGenerator([\n        [\n            0.5,\n            0,\n            1,\n            0.5\n        ],\n        [\n            1,\n            0.5,\n            0.5,\n            1\n        ],\n        [\n            0.5,\n            1,\n            0,\n            0.5\n        ],\n        [\n            0,\n            0.5,\n            0.5,\n            0\n        ]\n    ], anchorCount);\n}\nfunction triangleGenerator(anchorCount) {\n    return shapeGenerator([\n        [\n            0.5,\n            0,\n            1,\n            1\n        ],\n        [\n            1,\n            1,\n            0,\n            1\n        ],\n        [\n            0,\n            1,\n            0.5,\n            0\n        ]\n    ], anchorCount);\n}\nfunction rotate$1(points, amountInDegrees) {\n    var o = [], theta = amountInDegrees / 180 * Math.PI;\n    for(var i = 0; i < points.length; i++){\n        var _x = points[i].x - 0.5, _y = points[i].y - 0.5;\n        o.push({\n            x: 0.5 + (_x * Math.cos(theta) - _y * Math.sin(theta)),\n            y: 0.5 + (_x * Math.sin(theta) + _y * Math.cos(theta)),\n            ox: points[i].ox,\n            oy: points[i].oy,\n            offx: 0,\n            offy: 0,\n            iox: 0,\n            ioy: 0,\n            cls: \"\"\n        });\n    }\n    return o;\n}\nvar anchorGenerators = new Map();\nanchorGenerators.set(PerimeterAnchorShapes.Circle, circleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Ellipse, circleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Rectangle, rectangleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Square, rectangleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Diamond, diamondGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Triangle, triangleGenerator);\nfunction _createPerimeterAnchor(params) {\n    params = params || {};\n    var anchorCount = params.anchorCount || 60, shape = params.shape;\n    if (!shape) throw new Error(\"no shape supplied to Perimeter Anchor type\");\n    if (!anchorGenerators.has(shape)) throw new Error(\"Shape [\" + shape + \"] is unknown by Perimeter Anchor type\");\n    var da = anchorGenerators.get(shape)(anchorCount);\n    if (params.rotation) da = rotate$1(da, params.rotation);\n    var a = _createAnchor(AnchorLocations.Perimeter, da, params);\n    var aa = extend(a, {\n        shape: shape\n    });\n    return aa;\n}\nvar ConnectionDragSelector = function() {\n    function ConnectionDragSelector(selector, def) {\n        var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        _classCallCheck(this, ConnectionDragSelector);\n        this.selector = selector;\n        this.def = def;\n        this.exclude = exclude;\n        _defineProperty(this, \"id\", void 0);\n        _defineProperty(this, \"redrop\", void 0);\n        this.id = uuid();\n        this.redrop = def.def.redrop || REDROP_POLICY_STRICT;\n    }\n    _createClass(ConnectionDragSelector, [\n        {\n            key: \"setEnabled\",\n            value: function setEnabled(enabled) {\n                this.def.enabled = enabled;\n            }\n        },\n        {\n            key: \"isEnabled\",\n            value: function isEnabled() {\n                return this.def.enabled !== false;\n            }\n        }\n    ]);\n    return ConnectionDragSelector;\n}();\nvar REDROP_POLICY_STRICT = \"strict\";\nvar REDROP_POLICY_ANY = \"any\";\nvar REDROP_POLICY_ANY_SOURCE = \"anySource\";\nvar REDROP_POLICY_ANY_TARGET = \"anyTarget\";\nvar REDROP_POLICY_ANY_SOURCE_OR_TARGET = \"anySourceOrTarget\";\nfunction _makeFloatingEndpoint(ep, endpoint, referenceCanvas, sourceElement, sourceElementId, instance) {\n    var floatingAnchor = createFloatingAnchor(instance, sourceElement, sourceElementId);\n    var p = {\n        paintStyle: ep.getPaintStyle(),\n        preparedAnchor: floatingAnchor,\n        element: sourceElement,\n        scope: ep.scope,\n        cssClass: [\n            CLASS_ENDPOINT_FLOATING,\n            ep.cssClass\n        ].join(\" \")\n    };\n    if (endpoint != null) {\n        if (isAssignableFrom(endpoint, EndpointRepresentation)) p.existingEndpoint = endpoint;\n        else p.endpoint = endpoint;\n    }\n    var actualEndpoint = instance._internal_newEndpoint(p);\n    instance._paintEndpoint(actualEndpoint, {});\n    return actualEndpoint;\n}\nfunction selectorFilter(evt, _el, selector, _instance, negate) {\n    var t = evt.target || evt.srcElement, ok = false, sel = _instance.getSelector(_el, selector);\n    for(var j = 0; j < sel.length; j++)if (sel[j] === t) {\n        ok = true;\n        break;\n    }\n    return negate ? !ok : ok;\n}\nvar SELECTOR_DRAG_ACTIVE_OR_HOVER = cls(CLASS_DRAG_ACTIVE, CLASS_DRAG_HOVER);\nvar SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA = \"sourceSelectorEndpoint\";\nvar EndpointDragHandler = function() {\n    function EndpointDragHandler(instance) {\n        _classCallCheck(this, EndpointDragHandler);\n        this.instance = instance;\n        _defineProperty(this, \"jpc\", void 0);\n        _defineProperty(this, \"existingJpc\", void 0);\n        _defineProperty(this, \"_originalAnchorSpec\", void 0);\n        _defineProperty(this, \"ep\", void 0);\n        _defineProperty(this, \"endpointRepresentation\", void 0);\n        _defineProperty(this, \"canvasElement\", void 0);\n        _defineProperty(this, \"_activeDefinition\", void 0);\n        _defineProperty(this, \"placeholderInfo\", {\n            id: null,\n            element: null\n        });\n        _defineProperty(this, \"floatingIndex\", void 0);\n        _defineProperty(this, \"floatingId\", void 0);\n        _defineProperty(this, \"floatingElement\", void 0);\n        _defineProperty(this, \"floatingEndpoint\", void 0);\n        _defineProperty(this, \"floatingAnchor\", void 0);\n        _defineProperty(this, \"_stopped\", void 0);\n        _defineProperty(this, \"inPlaceCopy\", void 0);\n        _defineProperty(this, \"endpointDropTargets\", []);\n        _defineProperty(this, \"currentDropTarget\", null);\n        _defineProperty(this, \"payload\", void 0);\n        _defineProperty(this, \"floatingConnections\", {});\n        _defineProperty(this, \"_forceReattach\", void 0);\n        _defineProperty(this, \"_forceDetach\", void 0);\n        _defineProperty(this, \"mousedownHandler\", void 0);\n        _defineProperty(this, \"mouseupHandler\", void 0);\n        _defineProperty(this, \"selector\", cls(CLASS_ENDPOINT));\n        var container = instance.getContainer();\n        this.mousedownHandler = this._mousedownHandler.bind(this);\n        this.mouseupHandler = this._mouseupHandler.bind(this);\n        instance.on(container, EVENT_MOUSEDOWN, SELECTOR_MANAGED_ELEMENT, this.mousedownHandler);\n        instance.on(container, EVENT_MOUSEUP, [\n            SELECTOR_MANAGED_ELEMENT,\n            cls(CLASS_ENDPOINT)\n        ].join(\",\"), this.mouseupHandler);\n    }\n    _createClass(EndpointDragHandler, [\n        {\n            key: \"_resolveDragParent\",\n            value: function _resolveDragParent(def, eventTarget) {\n                var container = this.instance.getContainer();\n                var parent = findParent(eventTarget, SELECTOR_MANAGED_ELEMENT, container, true);\n                if (def.parentSelector != null) {\n                    var child = findParent(eventTarget, def.parentSelector, container, true);\n                    if (child != null) parent = findParent(child.parentNode, SELECTOR_MANAGED_ELEMENT, container, false);\n                    return child || parent;\n                } else return parent;\n            }\n        },\n        {\n            key: \"_mousedownHandler\",\n            value: function _mousedownHandler(e) {\n                var sourceEl;\n                var sourceSelector;\n                if (e.which === 3 || e.button === 2) return;\n                var eventTarget = e.target || e.srcElement;\n                sourceSelector = this._getSourceDefinition(e);\n                if (sourceSelector != null) {\n                    sourceEl = this._resolveDragParent(sourceSelector.def.def, eventTarget);\n                    if (sourceEl == null || sourceEl.getAttribute(ATTRIBUTE_JTK_ENABLED) === FALSE$1) return;\n                }\n                if (sourceSelector) {\n                    var sourceElement = e.currentTarget, def;\n                    if (eventTarget.getAttribute(ATTRIBUTE_JTK_ENABLED) !== FALSE$1) {\n                        consume(e);\n                        this._activeDefinition = sourceSelector;\n                        def = sourceSelector.def.def;\n                        if (def.canAcceptNewConnection != null && !def.canAcceptNewConnection(sourceEl, e)) return false;\n                        var elxy = getPositionOnElement(e, sourceEl, this.instance.currentZoom);\n                        var tempEndpointParams = {\n                            element: sourceEl\n                        };\n                        extend(tempEndpointParams, def);\n                        tempEndpointParams.isTemporarySource = true;\n                        if (def.scope) tempEndpointParams.scope = def.scope;\n                        else {\n                            var scopeFromElement = eventTarget.getAttribute(ATTRIBUTE_JTK_SCOPE);\n                            if (scopeFromElement != null) tempEndpointParams.scope = scopeFromElement;\n                        }\n                        var extractedParameters = def.parameterExtractor ? def.parameterExtractor(sourceEl, eventTarget, e) : {};\n                        tempEndpointParams = merge(tempEndpointParams, extractedParameters);\n                        if (tempEndpointParams.maxConnections != null && tempEndpointParams.maxConnections >= 0) {\n                            var sourceCount = this.instance.select({\n                                source: sourceEl\n                            }).length;\n                            if (sourceCount >= tempEndpointParams.maxConnections) {\n                                consume(e);\n                                if (def.onMaxConnections) def.onMaxConnections({\n                                    element: sourceEl,\n                                    maxConnections: tempEndpointParams.maxConnections\n                                }, e);\n                                e.stopImmediatePropagation && e.stopImmediatePropagation();\n                                return false;\n                            }\n                        }\n                        if (def.anchorPositionFinder) {\n                            var maybeAnchorSpec = def.anchorPositionFinder(sourceEl, elxy, def, e);\n                            if (maybeAnchorSpec != null) tempEndpointParams.anchor = maybeAnchorSpec;\n                        }\n                        this._originalAnchorSpec = tempEndpointParams.anchor || (this.instance.areDefaultAnchorsSet() ? this.instance.defaults.anchors[0] : this.instance.defaults.anchor);\n                        var _originalAnchor = this.instance.router.prepareAnchor(this._originalAnchorSpec);\n                        var anchorSpecToUse = [\n                            elxy.x,\n                            elxy.y,\n                            0,\n                            0\n                        ];\n                        if (_originalAnchor.locations.length > 0) {\n                            anchorSpecToUse[2] = _originalAnchor.locations[0].ox;\n                            anchorSpecToUse[3] = _originalAnchor.locations[0].oy;\n                        } else if (_originalAnchor.isContinuous) {\n                            var dx = elxy.x < 0.5 ? elxy.x : 1 - elxy.x;\n                            var dy = elxy.y < 0.5 ? elxy.y : 1 - elxy.y;\n                            anchorSpecToUse[2] = dx < dy ? elxy.x < 0.5 ? -1 : 1 : 0;\n                            anchorSpecToUse[3] = dy < dx ? elxy.y < 0.5 ? -1 : 1 : 0;\n                        }\n                        tempEndpointParams.anchor = anchorSpecToUse;\n                        tempEndpointParams.deleteOnEmpty = true;\n                        this.ep = this.instance._internal_newEndpoint(tempEndpointParams);\n                        var payload = {};\n                        if (def.extract) {\n                            for(var att in def.extract){\n                                var v = eventTarget.getAttribute(att);\n                                if (v) payload[def.extract[att]] = v;\n                            }\n                            this.ep.mergeParameters(payload);\n                        }\n                        if (tempEndpointParams.uniqueEndpoint) {\n                            var elementId = this.ep.elementId;\n                            var existingUniqueEndpoint = this.instance.getManagedData(elementId, SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA, sourceSelector.id);\n                            if (existingUniqueEndpoint == null) {\n                                this.instance.setManagedData(elementId, SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA, sourceSelector.id, this.ep);\n                                this.ep.deleteOnEmpty = false;\n                            } else this.ep.finalEndpoint = existingUniqueEndpoint;\n                        }\n                        sourceElement._jsPlumbOrphanedEndpoints = sourceElement._jsPlumbOrphanedEndpoints || [];\n                        sourceElement._jsPlumbOrphanedEndpoints.push(this.ep);\n                        this.instance.trigger(this.ep.endpoint.canvas, EVENT_MOUSEDOWN, e, payload);\n                    }\n                }\n            }\n        },\n        {\n            key: \"_mouseupHandler\",\n            value: function _mouseupHandler(e) {\n                var el = e.currentTarget || e.srcElement;\n                if (el._jsPlumbOrphanedEndpoints) {\n                    each(el._jsPlumbOrphanedEndpoints, this.instance._maybePruneEndpoint.bind(this.instance));\n                    el._jsPlumbOrphanedEndpoints.length = 0;\n                }\n                this._activeDefinition = null;\n            }\n        },\n        {\n            key: \"onDragInit\",\n            value: function onDragInit(el) {\n                var ipco = getElementPosition(el, this.instance), ips = getElementSize(el, this.instance);\n                this._makeDraggablePlaceholder(ipco, ips);\n                this.placeholderInfo.element.jtk = el.jtk;\n                return this.placeholderInfo.element;\n            }\n        },\n        {\n            key: \"onDragAbort\",\n            value: function onDragAbort(el) {\n                this._cleanupDraggablePlaceholder();\n            }\n        },\n        {\n            key: \"_makeDraggablePlaceholder\",\n            value: function _makeDraggablePlaceholder(ipco, ips) {\n                this.placeholderInfo = this.placeholderInfo || {};\n                var n = createElement(ELEMENT_DIV, {\n                    position: \"absolute\"\n                });\n                this.instance._appendElementToContainer(n);\n                var id = this.instance.getId(n);\n                this.instance.setPosition(n, ipco);\n                n.style.width = ips.w + \"px\";\n                n.style.height = ips.h + \"px\";\n                this.instance.manage(n);\n                this.placeholderInfo.id = id;\n                this.placeholderInfo.element = n;\n                return n;\n            }\n        },\n        {\n            key: \"_cleanupDraggablePlaceholder\",\n            value: function _cleanupDraggablePlaceholder() {\n                if (this.placeholderInfo.element) {\n                    this.instance.unmanage(this.placeholderInfo.element, true);\n                    delete this.placeholderInfo.element;\n                    delete this.placeholderInfo.id;\n                }\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                var c = this.instance.getContainer();\n                this.instance.off(c, EVENT_MOUSEUP, this.mouseupHandler);\n                this.instance.off(c, EVENT_MOUSEDOWN, this.mousedownHandler);\n            }\n        },\n        {\n            key: \"init\",\n            value: function init(drag) {}\n        },\n        {\n            key: \"startNewConnectionDrag\",\n            value: function startNewConnectionDrag(scope, data) {\n                this.jpc = this.instance._newConnection({\n                    sourceEndpoint: this.ep,\n                    targetEndpoint: this.floatingEndpoint,\n                    source: this.ep.element,\n                    target: this.placeholderInfo.element,\n                    paintStyle: this.ep.connectorStyle,\n                    hoverPaintStyle: this.ep.connectorHoverStyle,\n                    connector: this.ep.connector,\n                    overlays: this.ep.connectorOverlays,\n                    type: this.ep.edgeType,\n                    cssClass: this.ep.connectorClass,\n                    hoverClass: this.ep.connectorHoverClass,\n                    scope: scope,\n                    data: data\n                });\n                this.jpc.pending = true;\n                this.jpc.addClass(this.instance.draggingClass);\n                this.ep.addClass(this.instance.draggingClass);\n                this.instance.fire(EVENT_CONNECTION_DRAG, this.jpc);\n            }\n        },\n        {\n            key: \"startExistingConnectionDrag\",\n            value: function startExistingConnectionDrag() {\n                this.existingJpc = true;\n                this.instance.setHover(this.jpc, false);\n                var anchorIdx = this.jpc.endpoints[0].id === this.ep.id ? 0 : 1;\n                this.ep.detachFromConnection(this.jpc, null, true);\n                this.floatingEndpoint.addConnection(this.jpc);\n                this.instance.fire(EVENT_CONNECTION_DRAG, this.jpc);\n                this.instance.sourceOrTargetChanged(this.jpc.endpoints[anchorIdx].elementId, this.placeholderInfo.id, this.jpc, this.placeholderInfo.element, anchorIdx);\n                this.jpc.suspendedEndpoint = this.jpc.endpoints[anchorIdx];\n                this.jpc.suspendedElement = this.jpc.endpoints[anchorIdx].element;\n                this.jpc.suspendedElementId = this.jpc.endpoints[anchorIdx].elementId;\n                this.jpc.suspendedElementType = anchorIdx === 0 ? SOURCE : TARGET;\n                this.instance.setHover(this.jpc.suspendedEndpoint, false);\n                this.floatingEndpoint.referenceEndpoint = this.jpc.suspendedEndpoint;\n                this.floatingEndpoint.mergeParameters(this.jpc.suspendedEndpoint.parameters);\n                this.jpc.endpoints[anchorIdx] = this.floatingEndpoint;\n                this.jpc.addClass(this.instance.draggingClass);\n                this.floatingId = this.placeholderInfo.id;\n                this.floatingIndex = anchorIdx;\n                this.instance._refreshEndpoint(this.ep);\n            }\n        },\n        {\n            key: \"_shouldStartDrag\",\n            value: function _shouldStartDrag() {\n                var _continue = true;\n                if (!this.ep.enabled) _continue = false;\n                if (this.jpc == null && !this.ep.isSource && !this.ep.isTemporarySource) _continue = false;\n                if (this.ep.isSource && this.ep.isFull() && !(this.jpc != null && this.ep.dragAllowedWhenFull)) _continue = false;\n                if (this.jpc != null && !this.jpc.isDetachable(this.ep)) {\n                    if (this.ep.isFull()) _continue = false;\n                    else this.jpc = null;\n                }\n                var payload = {};\n                var beforeDrag = this.instance.checkCondition(this.jpc == null ? INTERCEPT_BEFORE_DRAG : INTERCEPT_BEFORE_START_DETACH, {\n                    endpoint: this.ep,\n                    source: this.ep.element,\n                    sourceId: this.ep.elementId,\n                    connection: this.jpc\n                });\n                if (beforeDrag === false) _continue = false;\n                else if (_typeof(beforeDrag) === \"object\") {\n                    payload = beforeDrag;\n                    extend(payload, this.payload || {});\n                } else payload = this.payload || {};\n                return [\n                    _continue,\n                    payload\n                ];\n            }\n        },\n        {\n            key: \"_createFloatingEndpoint\",\n            value: function _createFloatingEndpoint(canvasElement) {\n                var endpointToFloat = this.ep.endpoint;\n                if (this.ep.edgeType != null) {\n                    var aae = this.instance._deriveEndpointAndAnchorSpec(this.ep.edgeType);\n                    endpointToFloat = aae.endpoints[1];\n                }\n                this.floatingEndpoint = _makeFloatingEndpoint(this.ep, endpointToFloat, canvasElement, this.placeholderInfo.element, this.placeholderInfo.id, this.instance);\n                this.floatingAnchor = this.floatingEndpoint._anchor;\n                this.floatingEndpoint.deleteOnEmpty = true;\n                this.floatingElement = this.floatingEndpoint.endpoint.canvas;\n                this.floatingId = this.instance.getId(this.floatingElement);\n            }\n        },\n        {\n            key: \"_populateTargets\",\n            value: function _populateTargets(canvasElement, event) {\n                var _this = this;\n                var isSourceDrag = this.jpc && this.jpc.endpoints[0] === this.ep;\n                var boundingRect;\n                var matchingEndpoints = this.instance.getContainer().querySelectorAll([\n                    \".\",\n                    CLASS_ENDPOINT,\n                    \"[\",\n                    ATTRIBUTE_SCOPE_PREFIX,\n                    this.ep.scope,\n                    \"]:not(.\",\n                    CLASS_ENDPOINT_FLOATING,\n                    \")\"\n                ].join(\"\"));\n                forEach(matchingEndpoints, function(candidate) {\n                    if ((_this.jpc != null || candidate !== canvasElement) && candidate !== _this.floatingElement && (_this.jpc != null || !candidate.jtk.endpoint.isFull())) {\n                        if (isSourceDrag && candidate.jtk.endpoint.isSource || !isSourceDrag && candidate.jtk.endpoint.isTarget) {\n                            var o = getElementPosition(candidate, _this.instance), s = getElementSize(candidate, _this.instance);\n                            boundingRect = {\n                                x: o.x,\n                                y: o.y,\n                                w: s.w,\n                                h: s.h\n                            };\n                            _this.endpointDropTargets.push({\n                                el: candidate,\n                                targetEl: candidate,\n                                r: boundingRect,\n                                endpoint: candidate.jtk.endpoint,\n                                def: null\n                            });\n                            _this.instance.addClass(candidate, CLASS_DRAG_ACTIVE);\n                        }\n                    }\n                });\n                if (isSourceDrag) {\n                    var sourceDef = getWithFunction(this.instance.sourceSelectors, function(sSel) {\n                        return sSel.isEnabled() && (sSel.def.def.scope == null || sSel.def.def.scope === _this.ep.scope);\n                    });\n                    if (sourceDef != null) {\n                        var targetZones = this._findTargetZones(sourceDef);\n                        forEach(targetZones, function(el) {\n                            if (el.getAttribute(ATTRIBUTE_JTK_ENABLED) !== FALSE$1) {\n                                var scopeFromElement = el.getAttribute(ATTRIBUTE_JTK_SCOPE);\n                                if (scopeFromElement != null && scopeFromElement !== _this.ep.scope) return;\n                                var d = {\n                                    r: null,\n                                    el: el\n                                };\n                                d.targetEl = findParent(el, SELECTOR_MANAGED_ELEMENT, _this.instance.getContainer(), true);\n                                var o = getElementPosition(d.el, _this.instance), s = getElementSize(d.el, _this.instance);\n                                d.r = {\n                                    x: o.x,\n                                    y: o.y,\n                                    w: s.w,\n                                    h: s.h\n                                };\n                                if (sourceDef.def.def.rank != null) d.rank = sourceDef.def.def.rank;\n                                d.def = sourceDef.def;\n                                _this.endpointDropTargets.push(d);\n                                _this.instance.addClass(d.targetEl, CLASS_DRAG_ACTIVE);\n                            }\n                        });\n                    }\n                } else {\n                    var targetDefs = getAllWithFunction(this.instance.targetSelectors, function(tSel) {\n                        return tSel.isEnabled();\n                    });\n                    targetDefs.forEach(function(targetDef) {\n                        var targetZones = _this._findTargetZones(targetDef);\n                        forEach(targetZones, function(el) {\n                            if (el.getAttribute(ATTRIBUTE_JTK_ENABLED) !== FALSE$1) {\n                                var scopeFromElement = el.getAttribute(ATTRIBUTE_JTK_SCOPE);\n                                if (scopeFromElement != null && scopeFromElement !== _this.ep.scope) return;\n                                var d = {\n                                    r: null,\n                                    el: el\n                                };\n                                if (targetDef.def.def.parentSelector != null) d.targetEl = findParent(el, targetDef.def.def.parentSelector, _this.instance.getContainer(), true);\n                                if (d.targetEl == null) d.targetEl = findParent(el, SELECTOR_MANAGED_ELEMENT, _this.instance.getContainer(), true);\n                                if (targetDef.def.def.allowLoopback === false || _this._activeDefinition && _this._activeDefinition.def.def.allowLoopback === false) {\n                                    if (d.targetEl === _this.ep.element) return;\n                                }\n                                if (targetDef.def.def.canAcceptNewConnection != null && !targetDef.def.def.canAcceptNewConnection(d.targetEl, event)) return;\n                                var maxConnections = targetDef.def.def.maxConnections;\n                                if (maxConnections != null && maxConnections !== -1) {\n                                    if (_this.instance.select({\n                                        target: d.targetEl\n                                    }).length >= maxConnections) return;\n                                }\n                                var o = getElementPosition(el, _this.instance), s = getElementSize(el, _this.instance);\n                                d.r = {\n                                    x: o.x,\n                                    y: o.y,\n                                    w: s.w,\n                                    h: s.h\n                                };\n                                d.def = targetDef.def;\n                                if (targetDef.def.def.rank != null) d.rank = targetDef.def.def.rank;\n                                _this.endpointDropTargets.push(d);\n                                _this.instance.addClass(d.targetEl, CLASS_DRAG_ACTIVE);\n                            }\n                        });\n                    });\n                }\n                this.endpointDropTargets.sort(function(a, b) {\n                    if (a.targetEl._isJsPlumbGroup && !b.targetEl._isJsPlumbGroup) return 1;\n                    else if (!a.targetEl._isJsPlumbGroup && b.targetEl._isJsPlumbGroup) return -1;\n                    else if (a.targetEl._isJsPlumbGroup && b.targetEl._isJsPlumbGroup) {\n                        if (_this.instance.groupManager.isAncestor(a.targetEl._jsPlumbGroup, b.targetEl._jsPlumbGroup)) return -1;\n                        else if (_this.instance.groupManager.isAncestor(b.targetEl._jsPlumbGroup, a.targetEl._jsPlumbGroup)) return 1;\n                    } else {\n                        if (a.rank != null && b.rank != null) {\n                            if (a.rank > b.rank) return -1;\n                            else if (a.rank < b.rank) return 1;\n                        } else return 0;\n                    }\n                });\n            }\n        },\n        {\n            key: \"_findTargetZones\",\n            value: function _findTargetZones(dragSelector) {\n                var targetZonesSelector;\n                if (dragSelector.redrop === REDROP_POLICY_ANY) {\n                    var t = this.instance.targetSelectors.map(function(s) {\n                        return s.selector;\n                    });\n                    t.push.apply(t, _toConsumableArray(this.instance.sourceSelectors.map(function(s) {\n                        return s.selector;\n                    })));\n                    t.push(SELECTOR_MANAGED_ELEMENT);\n                    targetZonesSelector = t.join(\",\");\n                } else if (dragSelector.redrop === REDROP_POLICY_STRICT) targetZonesSelector = dragSelector.selector;\n                else if (dragSelector.redrop === REDROP_POLICY_ANY_SOURCE) targetZonesSelector = this.instance.sourceSelectors.map(function(s) {\n                    return s.selector;\n                }).join(\",\");\n                else if (dragSelector.redrop === REDROP_POLICY_ANY_TARGET) targetZonesSelector = this.instance.targetSelectors.map(function(s) {\n                    return s.selector;\n                }).join(\",\");\n                else if (dragSelector.redrop === REDROP_POLICY_ANY_SOURCE_OR_TARGET) {\n                    var _t = this.instance.targetSelectors.map(function(s) {\n                        return s.selector;\n                    });\n                    _t.push.apply(_t, _toConsumableArray(this.instance.sourceSelectors.map(function(s) {\n                        return s.selector;\n                    })));\n                    targetZonesSelector = _t.join(\",\");\n                }\n                return this.instance.getContainer().querySelectorAll(targetZonesSelector);\n            }\n        },\n        {\n            key: \"onStart\",\n            value: function onStart(p) {\n                this.endpointDropTargets.length = 0;\n                this.currentDropTarget = null;\n                this._stopped = false;\n                var dragEl = p.drag.getDragElement();\n                this.ep = dragEl.jtk.endpoint;\n                if (!this.ep) return false;\n                this.endpointRepresentation = this.ep.endpoint;\n                this.canvasElement = this.endpointRepresentation.canvas;\n                this.jpc = this.ep.connectorSelector();\n                var _this$_shouldStartDra = this._shouldStartDrag(), _this$_shouldStartDra2 = _slicedToArray(_this$_shouldStartDra, 2), _continue = _this$_shouldStartDra2[0], payload = _this$_shouldStartDra2[1];\n                if (_continue === false) {\n                    this._stopped = true;\n                    return false;\n                }\n                this.instance.setHover(this.ep, false);\n                this.instance.isConnectionBeingDragged = true;\n                if (this.jpc && !this.ep.isFull() && this.ep.isSource) this.jpc = null;\n                this._createFloatingEndpoint(this.canvasElement);\n                this._populateTargets(this.canvasElement, p.e);\n                if (this.jpc == null) this.startNewConnectionDrag(this.ep.scope, payload);\n                else this.startExistingConnectionDrag();\n                this._registerFloatingConnection(this.placeholderInfo, this.jpc);\n                this.instance.currentlyDragging = true;\n            }\n        },\n        {\n            key: \"onBeforeStart\",\n            value: function onBeforeStart(beforeStartParams) {\n                this.payload = beforeStartParams.e.payload || {};\n            }\n        },\n        {\n            key: \"onDrag\",\n            value: function onDrag(params) {\n                if (this._stopped) return true;\n                if (this.placeholderInfo.element) {\n                    var floatingElementSize = getElementSize(this.floatingElement, this.instance);\n                    this.instance.setElementPosition(this.placeholderInfo.element, params.pos.x, params.pos.y);\n                    var boundingRect = {\n                        x: params.pos.x,\n                        y: params.pos.y,\n                        w: floatingElementSize.w,\n                        h: floatingElementSize.h\n                    }, newDropTarget, idx, _cont;\n                    for(var i = 0; i < this.endpointDropTargets.length; i++)if (intersects(boundingRect, this.endpointDropTargets[i].r)) {\n                        newDropTarget = this.endpointDropTargets[i];\n                        break;\n                    }\n                    if (newDropTarget !== this.currentDropTarget && this.currentDropTarget != null) {\n                        idx = this._getFloatingAnchorIndex();\n                        this.instance.removeClass(this.currentDropTarget.el, CLASS_DRAG_HOVER);\n                        if (this.currentDropTarget.endpoint) {\n                            this.currentDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropAllowedClass);\n                            this.currentDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropForbiddenClass);\n                        }\n                        this.floatingAnchor.out();\n                    }\n                    if (newDropTarget != null) {\n                        this.instance.addClass(newDropTarget.el, CLASS_DRAG_HOVER);\n                        idx = this._getFloatingAnchorIndex();\n                        if (newDropTarget.endpoint != null) {\n                            _cont = newDropTarget.endpoint.isSource && idx === 0 || newDropTarget.endpoint.isTarget && idx !== 0 || this.jpc.suspendedEndpoint && newDropTarget.endpoint.referenceEndpoint && newDropTarget.endpoint.referenceEndpoint.id === this.jpc.suspendedEndpoint.id;\n                            if (_cont) {\n                                var bb = this.instance.checkCondition(CHECK_DROP_ALLOWED, {\n                                    sourceEndpoint: this.jpc.endpoints[idx],\n                                    targetEndpoint: newDropTarget.endpoint.endpoint,\n                                    connection: this.jpc\n                                });\n                                if (bb) {\n                                    newDropTarget.endpoint.endpoint.addClass(this.instance.endpointDropAllowedClass);\n                                    newDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropForbiddenClass);\n                                } else {\n                                    newDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropAllowedClass);\n                                    newDropTarget.endpoint.endpoint.addClass(this.instance.endpointDropForbiddenClass);\n                                }\n                                this.floatingAnchor.over(newDropTarget.endpoint);\n                                this.instance._paintConnection(this.jpc);\n                            } else newDropTarget = null;\n                        }\n                    }\n                    this.currentDropTarget = newDropTarget;\n                }\n            }\n        },\n        {\n            key: \"_maybeCleanup\",\n            value: function _maybeCleanup(ep) {\n                if (ep._mtNew && ep.connections.length === 0) this.instance.deleteEndpoint(ep);\n                else delete ep._mtNew;\n            }\n        },\n        {\n            key: \"_reattachOrDiscard\",\n            value: function _reattachOrDiscard(originalEvent) {\n                var existingConnection = this.jpc.suspendedEndpoint != null;\n                var idx = this._getFloatingAnchorIndex();\n                if (existingConnection && this._shouldReattach()) {\n                    if (idx === 0) {\n                        this.jpc.source = this.jpc.suspendedElement;\n                        this.jpc.sourceId = this.jpc.suspendedElementId;\n                    } else {\n                        this.jpc.target = this.jpc.suspendedElement;\n                        this.jpc.targetId = this.jpc.suspendedElementId;\n                    }\n                    this._doForceReattach(idx);\n                    return true;\n                } else {\n                    this._discard(idx, originalEvent);\n                    return false;\n                }\n            }\n        },\n        {\n            key: \"onStop\",\n            value: function onStop(p) {\n                var _this2 = this;\n                var originalEvent = p.e;\n                this.instance.isConnectionBeingDragged = false;\n                this.instance.currentlyDragging = false;\n                var classesToRemove = classList(CLASS_DRAG_HOVER, CLASS_DRAG_ACTIVE);\n                var matchingSelectors = this.instance.getContainer().querySelectorAll(SELECTOR_DRAG_ACTIVE_OR_HOVER);\n                forEach(matchingSelectors, function(el) {\n                    _this2.instance.removeClass(el, classesToRemove);\n                });\n                if (this.jpc && this.jpc.endpoints != null) {\n                    var existingConnection = this.jpc.suspendedEndpoint != null;\n                    var idx = this._getFloatingAnchorIndex();\n                    var suspendedEndpoint = this.jpc.suspendedEndpoint;\n                    var dropEndpoint;\n                    if (this.currentDropTarget != null) {\n                        dropEndpoint = this._getDropEndpoint(p, this.jpc);\n                        if (dropEndpoint == null) this._reattachOrDiscard(p.e);\n                        else if (suspendedEndpoint && suspendedEndpoint.id === dropEndpoint.id) this._doForceReattach(idx);\n                        else {\n                            if (!dropEndpoint.enabled) this._reattachOrDiscard(p.e);\n                            else if (dropEndpoint.isFull()) {\n                                dropEndpoint.fire(EVENT_MAX_CONNECTIONS, {\n                                    endpoint: this,\n                                    connection: this.jpc,\n                                    maxConnections: this.instance.defaults.maxConnections\n                                }, originalEvent);\n                                this._reattachOrDiscard(p.e);\n                            } else {\n                                if (idx === 0) {\n                                    this.jpc.source = dropEndpoint.element;\n                                    this.jpc.sourceId = dropEndpoint.elementId;\n                                } else {\n                                    this.jpc.target = dropEndpoint.element;\n                                    this.jpc.targetId = dropEndpoint.elementId;\n                                }\n                                var _doContinue = true;\n                                if (existingConnection && this.jpc.suspendedEndpoint.id !== dropEndpoint.id) {\n                                    if (!this.jpc.isDetachAllowed(this.jpc) || !this.jpc.endpoints[idx].isDetachAllowed(this.jpc) || !this.jpc.suspendedEndpoint.isDetachAllowed(this.jpc) || !this.instance.checkCondition(\"beforeDetach\", this.jpc)) _doContinue = false;\n                                }\n                                _doContinue = _doContinue && dropEndpoint.isDropAllowed(this.jpc.sourceId, this.jpc.targetId, this.jpc.scope, this.jpc, dropEndpoint);\n                                if (_doContinue) this._drop(dropEndpoint, idx, originalEvent, _doContinue);\n                                else this._reattachOrDiscard(p.e);\n                            }\n                        }\n                    } else this._reattachOrDiscard(p.e);\n                    this.instance._refreshEndpoint(this.ep);\n                    this.ep.removeClass(this.instance.draggingClass);\n                    this._cleanupDraggablePlaceholder();\n                    this.jpc.removeClass(this.instance.draggingClass);\n                    delete this.jpc.suspendedEndpoint;\n                    delete this.jpc.suspendedElement;\n                    delete this.jpc.suspendedElementType;\n                    delete this.jpc.suspendedElementId;\n                    delete this.jpc.suspendedIndex;\n                    delete this.floatingId;\n                    delete this.floatingIndex;\n                    delete this.floatingElement;\n                    delete this.floatingEndpoint;\n                    delete this.floatingAnchor;\n                    delete this.jpc.pending;\n                    if (dropEndpoint != null) this._maybeCleanup(dropEndpoint);\n                }\n            }\n        },\n        {\n            key: \"_getSourceDefinition\",\n            value: function _getSourceDefinition(evt) {\n                var selector;\n                var container = this.instance.getContainer();\n                for(var i = 0; i < this.instance.sourceSelectors.length; i++){\n                    selector = this.instance.sourceSelectors[i];\n                    if (selector.isEnabled()) {\n                        var r = selectorFilter(evt, container, selector.selector, this.instance, selector.exclude);\n                        if (r !== false) return selector;\n                    }\n                }\n            }\n        },\n        {\n            key: \"_getDropEndpoint\",\n            value: function _getDropEndpoint(p, jpc) {\n                var dropEndpoint;\n                if (this.currentDropTarget.endpoint == null) {\n                    var targetDefinition = this.currentDropTarget.def;\n                    var eventTarget = p.e.target || p.e.srcElement;\n                    if (targetDefinition == null) return null;\n                    var targetElement = this.currentDropTarget.targetEl;\n                    var elxy = getPositionOnElement(p.e, targetElement, this.instance.currentZoom);\n                    var eps = this.instance._deriveEndpointAndAnchorSpec(jpc.getType().join(\" \"), true);\n                    var pp = eps.endpoints ? extend(p, {\n                        endpoint: targetDefinition.def.endpoint || eps.endpoints[1],\n                        cssClass: targetDefinition.def.cssClass || \"\",\n                        source: targetDefinition.def.source === true,\n                        target: targetDefinition.def.target === true\n                    }) : p;\n                    var anchorsToUse = this.instance.validAnchorsSpec(eps.anchors) ? eps.anchors : this.instance.areDefaultAnchorsSet() ? this.instance.defaults.anchors : null;\n                    var anchorFromDef = targetDefinition.def.anchor;\n                    var anchorFromPositionFinder = targetDefinition.def.anchorPositionFinder ? targetDefinition.def.anchorPositionFinder(targetElement, elxy, targetDefinition.def, p.e) : null;\n                    var dropAnchor = anchorFromPositionFinder != null ? anchorFromPositionFinder : anchorFromDef != null ? anchorFromDef : anchorsToUse != null && anchorsToUse[1] != null ? anchorsToUse[1] : null;\n                    if (dropAnchor != null) pp = extend(pp, {\n                        anchor: dropAnchor\n                    });\n                    if (targetDefinition.def.portId != null) pp.portId = targetDefinition.def.portId;\n                    var extractedParameters = targetDefinition.def.parameterExtractor ? targetDefinition.def.parameterExtractor(this.currentDropTarget.el, eventTarget, p.e) : {};\n                    pp = merge(pp, extractedParameters);\n                    pp.element = targetElement;\n                    dropEndpoint = this.instance._internal_newEndpoint(pp);\n                    dropEndpoint._mtNew = true;\n                    dropEndpoint.deleteOnEmpty = true;\n                    if (targetDefinition.def.parameters) dropEndpoint.mergeParameters(targetDefinition.def.parameters);\n                    if (targetDefinition.def.extract) {\n                        var tpayload = {};\n                        for(var att in targetDefinition.def.extract){\n                            var v = this.currentDropTarget.el.getAttribute(att);\n                            if (v) tpayload[targetDefinition.def.extract[att]] = v;\n                        }\n                        dropEndpoint.mergeParameters(tpayload);\n                    }\n                } else dropEndpoint = this.currentDropTarget.endpoint;\n                if (dropEndpoint) {\n                    dropEndpoint.removeClass(this.instance.endpointDropAllowedClass);\n                    dropEndpoint.removeClass(this.instance.endpointDropForbiddenClass);\n                }\n                return dropEndpoint;\n            }\n        },\n        {\n            key: \"_doForceReattach\",\n            value: function _doForceReattach(idx) {\n                this.floatingEndpoint.detachFromConnection(this.jpc, null, true);\n                this.jpc.endpoints[idx] = this.jpc.suspendedEndpoint;\n                this.instance.setHover(this.jpc, false);\n                this.jpc._forceDetach = true;\n                this.jpc.suspendedEndpoint.addConnection(this.jpc);\n                this.instance.sourceOrTargetChanged(this.floatingId, this.jpc.suspendedEndpoint.elementId, this.jpc, this.jpc.suspendedEndpoint.element, idx);\n                this.instance.deleteEndpoint(this.floatingEndpoint);\n                this.instance.repaint(this.jpc.source);\n                delete this.jpc._forceDetach;\n            }\n        },\n        {\n            key: \"_shouldReattach\",\n            value: function _shouldReattach() {\n                if (this.jpc.isReattach() || this.jpc._forceReattach) return true;\n                else {\n                    var suspendedEndpoint = this.jpc.suspendedEndpoint, otherEndpointIdx = this.jpc.suspendedElementType == SOURCE ? 1 : 0, otherEndpoint = this.jpc.endpoints[otherEndpointIdx];\n                    return !functionChain(true, false, [\n                        [\n                            suspendedEndpoint,\n                            IS_DETACH_ALLOWED,\n                            [\n                                this.jpc\n                            ]\n                        ],\n                        [\n                            otherEndpoint,\n                            IS_DETACH_ALLOWED,\n                            [\n                                this.jpc\n                            ]\n                        ],\n                        [\n                            this.jpc,\n                            IS_DETACH_ALLOWED,\n                            [\n                                this.jpc\n                            ]\n                        ],\n                        [\n                            this.instance,\n                            CHECK_CONDITION,\n                            [\n                                INTERCEPT_BEFORE_DETACH,\n                                this.jpc\n                            ]\n                        ]\n                    ]);\n                }\n            }\n        },\n        {\n            key: \"_discard\",\n            value: function _discard(idx, originalEvent) {\n                if (this.jpc.pending) this.instance.fire(EVENT_CONNECTION_ABORT, this.jpc, originalEvent);\n                else {\n                    if (idx === 0) {\n                        this.jpc.source = this.jpc.suspendedEndpoint.element;\n                        this.jpc.sourceId = this.jpc.suspendedEndpoint.elementId;\n                    } else {\n                        this.jpc.target = this.jpc.suspendedEndpoint.element;\n                        this.jpc.targetId = this.jpc.suspendedEndpoint.elementId;\n                    }\n                    this.jpc.endpoints[idx] = this.jpc.suspendedEndpoint;\n                }\n                if (this.floatingEndpoint) this.floatingEndpoint.detachFromConnection(this.jpc);\n                this.instance.deleteConnection(this.jpc, {\n                    originalEvent: originalEvent,\n                    force: true\n                });\n            }\n        },\n        {\n            key: \"_drop\",\n            value: function _drop(dropEndpoint, idx, originalEvent, optionalData) {\n                this.jpc.endpoints[idx].detachFromConnection(this.jpc);\n                if (this.jpc.suspendedEndpoint) this.jpc.suspendedEndpoint.detachFromConnection(this.jpc);\n                this.jpc.endpoints[idx] = dropEndpoint;\n                dropEndpoint.addConnection(this.jpc);\n                if (this.jpc.suspendedEndpoint) {\n                    var suspendedElementId = this.jpc.suspendedEndpoint.elementId;\n                    this.instance.fireMoveEvent({\n                        index: idx,\n                        originalSourceId: idx === 0 ? suspendedElementId : this.jpc.sourceId,\n                        newSourceId: idx === 0 ? dropEndpoint.elementId : this.jpc.sourceId,\n                        originalTargetId: idx === 1 ? suspendedElementId : this.jpc.targetId,\n                        newTargetId: idx === 1 ? dropEndpoint.elementId : this.jpc.targetId,\n                        originalEndpoint: this.jpc.suspendedEndpoint,\n                        connection: this.jpc,\n                        newEndpoint: dropEndpoint\n                    }, originalEvent);\n                }\n                if (idx === 1) this.instance.sourceOrTargetChanged(this.floatingId, this.jpc.targetId, this.jpc, this.jpc.target, 1);\n                else this.instance.sourceOrTargetChanged(this.floatingId, this.jpc.sourceId, this.jpc, this.jpc.source, 0);\n                if (this.jpc.endpoints[0].finalEndpoint) {\n                    var _toDelete = this.jpc.endpoints[0];\n                    _toDelete.detachFromConnection(this.jpc);\n                    this.jpc.endpoints[0] = this.jpc.endpoints[0].finalEndpoint;\n                    this.jpc.endpoints[0].addConnection(this.jpc);\n                }\n                if (isObject(optionalData)) this.jpc.mergeData(optionalData);\n                if (this._originalAnchorSpec) {\n                    this.jpc.endpoints[0].setAnchor(this._originalAnchorSpec);\n                    this._originalAnchorSpec = null;\n                }\n                this.instance._finaliseConnection(this.jpc, null, originalEvent);\n                this.instance.setHover(this.jpc, false);\n                this.instance.revalidate(this.jpc.endpoints[0].element);\n            }\n        },\n        {\n            key: \"_registerFloatingConnection\",\n            value: function _registerFloatingConnection(info, conn) {\n                this.floatingConnections[info.id] = conn;\n            }\n        },\n        {\n            key: \"_getFloatingAnchorIndex\",\n            value: function _getFloatingAnchorIndex() {\n                return this.floatingIndex == null ? 1 : this.floatingIndex;\n            }\n        }\n    ]);\n    return EndpointDragHandler;\n}();\nvar GroupDragHandler = function(_ElementDragHandler) {\n    _inherits(GroupDragHandler, _ElementDragHandler);\n    var _super = _createSuper(GroupDragHandler);\n    function GroupDragHandler(instance, dragSelection) {\n        var _this;\n        _classCallCheck(this, GroupDragHandler);\n        _this = _super.call(this, instance, dragSelection);\n        _this.instance = instance;\n        _this.dragSelection = dragSelection;\n        _defineProperty(_assertThisInitialized(_this), \"selector\", [\n            \">\",\n            SELECTOR_GROUP,\n            SELECTOR_MANAGED_ELEMENT\n        ].join(\" \"));\n        _defineProperty(_assertThisInitialized(_this), \"doRevalidate\", void 0);\n        _this.doRevalidate = _this._revalidate.bind(_assertThisInitialized(_this));\n        return _this;\n    }\n    _createClass(GroupDragHandler, [\n        {\n            key: \"reset\",\n            value: function reset() {\n                this.drag.off(EVENT_REVERT, this.doRevalidate);\n            }\n        },\n        {\n            key: \"_revalidate\",\n            value: function _revalidate(el) {\n                this.instance.revalidate(el);\n            }\n        },\n        {\n            key: \"init\",\n            value: function init(drag) {\n                this.drag = drag;\n                drag.on(EVENT_REVERT, this.doRevalidate);\n            }\n        },\n        {\n            key: \"useGhostProxy\",\n            value: function useGhostProxy(container, dragEl) {\n                var group = dragEl._jsPlumbParentGroup;\n                return group == null ? false : group.ghost === true;\n            }\n        },\n        {\n            key: \"makeGhostProxy\",\n            value: function makeGhostProxy(el) {\n                var jel = el;\n                var newEl = jel.cloneNode(true);\n                newEl._jsPlumbParentGroup = jel._jsPlumbParentGroup;\n                return newEl;\n            }\n        }\n    ]);\n    return GroupDragHandler;\n}(ElementDragHandler);\nvar HTMLElementOverlay = function() {\n    function HTMLElementOverlay(instance, overlay) {\n        _classCallCheck(this, HTMLElementOverlay);\n        this.instance = instance;\n        this.overlay = overlay;\n        _defineProperty(this, \"htmlElementOverlay\", void 0);\n        this.htmlElementOverlay = overlay;\n    }\n    _createClass(HTMLElementOverlay, null, [\n        {\n            key: \"getElement\",\n            value: function getElement(o, component, elementCreator) {\n                if (o.canvas == null) {\n                    if (elementCreator && component) {\n                        o.canvas = elementCreator(component);\n                        var cls = o.instance.overlayClass + \" \" + (o.cssClass ? o.cssClass : \"\");\n                        o.instance.addClass(o.canvas, cls);\n                    } else o.canvas = createElement(ELEMENT_DIV, {}, o.instance.overlayClass + \" \" + (o.cssClass ? o.cssClass : \"\"));\n                    o.instance.setAttribute(o.canvas, \"jtk-overlay-id\", o.id);\n                    for(var att in o.attributes)o.instance.setAttribute(o.canvas, att, o.attributes[att]);\n                    o.canvas.style.position = ABSOLUTE;\n                    o.instance._appendElement(o.canvas, o.instance.getContainer());\n                    o.instance.getId(o.canvas);\n                    var ts = \"translate(-50%, -50%)\";\n                    o.canvas.style.webkitTransform = ts;\n                    o.canvas.style.mozTransform = ts;\n                    o.canvas.style.msTransform = ts;\n                    o.canvas.style.oTransform = ts;\n                    o.canvas.style.transform = ts;\n                    if (!o.isVisible()) o.canvas.style.display = NONE;\n                    o.canvas.jtk = {\n                        overlay: o\n                    };\n                }\n                return o.canvas;\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy(o) {\n                o.canvas && o.canvas.parentNode && o.canvas.parentNode.removeChild(o.canvas);\n                delete o.canvas;\n                delete o.cachedDimensions;\n            }\n        },\n        {\n            key: \"_getDimensions\",\n            value: function _getDimensions(o, forceRefresh) {\n                if (o.cachedDimensions == null || forceRefresh) o.cachedDimensions = {\n                    w: 1,\n                    h: 1\n                };\n                return o.cachedDimensions;\n            }\n        }\n    ]);\n    return HTMLElementOverlay;\n}();\nvar EventGenerator = function() {\n    function EventGenerator() {\n        _classCallCheck(this, EventGenerator);\n        _defineProperty(this, \"_listeners\", {});\n        _defineProperty(this, \"eventsSuspended\", false);\n        _defineProperty(this, \"tick\", false);\n        _defineProperty(this, \"eventsToDieOn\", {\n            \"ready\": true\n        });\n        _defineProperty(this, \"queue\", []);\n    }\n    _createClass(EventGenerator, [\n        {\n            key: \"fire\",\n            value: function fire(event, value, originalEvent) {\n                var ret = null;\n                if (!this.tick) {\n                    this.tick = true;\n                    if (!this.eventsSuspended && this._listeners[event]) {\n                        var l = this._listeners[event].length, i = 0, _gone = false;\n                        if (!this.shouldFireEvent || this.shouldFireEvent(event, value, originalEvent)) while(!_gone && i < l && ret !== false){\n                            if (this.eventsToDieOn[event]) this._listeners[event][i](value, originalEvent);\n                            else try {\n                                ret = this._listeners[event][i](value, originalEvent);\n                            } catch (e) {\n                                log(\"jsPlumb: fire failed for event \" + event + \" : \" + (e.message || e));\n                            }\n                            i++;\n                            if (this._listeners == null || this._listeners[event] == null) _gone = true;\n                        }\n                    }\n                    this.tick = false;\n                    this._drain();\n                } else this.queue.unshift(arguments);\n                return ret;\n            }\n        },\n        {\n            key: \"_drain\",\n            value: function _drain() {\n                var n = this.queue.pop();\n                if (n) this.fire.apply(this, n);\n            }\n        },\n        {\n            key: \"unbind\",\n            value: function unbind(eventOrListener, listener) {\n                if (arguments.length === 0) this._listeners = {};\n                else if (arguments.length === 1) {\n                    if (typeof eventOrListener === \"string\") delete this._listeners[eventOrListener];\n                    else if (eventOrListener.__jsPlumb) {\n                        var evt;\n                        for(var i in eventOrListener.__jsPlumb){\n                            evt = eventOrListener.__jsPlumb[i];\n                            remove(this._listeners[evt] || [], eventOrListener);\n                        }\n                    }\n                } else if (arguments.length === 2) remove(this._listeners[eventOrListener] || [], listener);\n                return this;\n            }\n        },\n        {\n            key: \"getListener\",\n            value: function getListener(forEvent) {\n                return this._listeners[forEvent] || [];\n            }\n        },\n        {\n            key: \"isSuspendEvents\",\n            value: function isSuspendEvents() {\n                return this.eventsSuspended;\n            }\n        },\n        {\n            key: \"setSuspendEvents\",\n            value: function setSuspendEvents(val) {\n                this.eventsSuspended = val;\n            }\n        },\n        {\n            key: \"bind\",\n            value: function bind(event, listener, insertAtStart) {\n                var _this = this;\n                var _one = function _one(evt) {\n                    addToDictionary(_this._listeners, evt, listener, insertAtStart);\n                    listener.__jsPlumb = listener.__jsPlumb || {};\n                    listener.__jsPlumb[uuid()] = evt;\n                };\n                if (typeof event === \"string\") _one(event);\n                else if (event.length != null) for(var i = 0; i < event.length; i++)_one(event[i]);\n                return this;\n            }\n        },\n        {\n            key: \"silently\",\n            value: function silently(fn) {\n                this.setSuspendEvents(true);\n                try {\n                    fn();\n                } catch (e) {\n                    log(\"Cannot execute silent function \" + e);\n                }\n                this.setSuspendEvents(false);\n            }\n        }\n    ]);\n    return EventGenerator;\n}();\nvar OptimisticEventGenerator = function(_EventGenerator) {\n    _inherits(OptimisticEventGenerator, _EventGenerator);\n    var _super = _createSuper(OptimisticEventGenerator);\n    function OptimisticEventGenerator() {\n        _classCallCheck(this, OptimisticEventGenerator);\n        return _super.apply(this, arguments);\n    }\n    _createClass(OptimisticEventGenerator, [\n        {\n            key: \"shouldFireEvent\",\n            value: function shouldFireEvent(event, value, originalEvent) {\n                return true;\n            }\n        }\n    ]);\n    return OptimisticEventGenerator;\n}(EventGenerator);\nfunction isFullOverlaySpec(o) {\n    return o.type != null && o.options != null;\n}\nfunction convertToFullOverlaySpec(spec) {\n    var o = null;\n    if (isString(spec)) o = {\n        type: spec,\n        options: {}\n    };\n    else o = spec;\n    o.options.id = o.options.id || uuid();\n    return o;\n}\nvar Overlay = function(_EventGenerator) {\n    _inherits(Overlay, _EventGenerator);\n    var _super = _createSuper(Overlay);\n    function Overlay(instance, component, p) {\n        var _this;\n        _classCallCheck(this, Overlay);\n        _this = _super.call(this);\n        _this.instance = instance;\n        _this.component = component;\n        _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cssClass\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"visible\", true);\n        _defineProperty(_assertThisInitialized(_this), \"location\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"events\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"attributes\", void 0);\n        p = p || {};\n        _this.id = p.id || uuid();\n        _this.cssClass = p.cssClass || \"\";\n        _this.setLocation(p.location);\n        _this.events = p.events || {};\n        _this.attributes = p.attributes || {};\n        for(var _event in _this.events)_this.bind(_event, _this.events[_event]);\n        return _this;\n    }\n    _createClass(Overlay, [\n        {\n            key: \"setLocation\",\n            value: function setLocation(l) {\n                var newLocation = this.location == null ? 0.5 : this.location;\n                if (l != null) try {\n                    var _l = typeof l === \"string\" ? parseFloat(l) : l;\n                    if (!isNaN(_l)) newLocation = _l;\n                } catch (e) {}\n                this.location = newLocation;\n            }\n        },\n        {\n            key: \"shouldFireEvent\",\n            value: function shouldFireEvent(event, value, originalEvent) {\n                return true;\n            }\n        },\n        {\n            key: \"setVisible\",\n            value: function setVisible(v) {\n                this.visible = v;\n                this.instance.setOverlayVisible(this, v);\n            }\n        },\n        {\n            key: \"isVisible\",\n            value: function isVisible() {\n                return this.visible;\n            }\n        }\n    ]);\n    return Overlay;\n}(EventGenerator);\nvar overlayMap = {};\nvar OverlayFactory = {\n    get: function get(instance, name, component, params) {\n        var c = overlayMap[name];\n        if (!c) throw {\n            message: \"jsPlumb: unknown overlay type '\" + name + \"'\"\n        };\n        else return new c(instance, component, params);\n    },\n    register: function register(name, overlay) {\n        overlayMap[name] = overlay;\n    }\n};\nvar LabelOverlay = function(_Overlay) {\n    _inherits(LabelOverlay, _Overlay);\n    var _super = _createSuper(LabelOverlay);\n    function LabelOverlay(instance, component, p) {\n        var _this;\n        _classCallCheck(this, LabelOverlay);\n        _this = _super.call(this, instance, component, p);\n        _this.instance = instance;\n        _this.component = component;\n        _defineProperty(_assertThisInitialized(_this), \"label\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"labelText\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", LabelOverlay.type);\n        _defineProperty(_assertThisInitialized(_this), \"cachedDimensions\", void 0);\n        p = p || {\n            label: \"\"\n        };\n        _this.setLabel(p.label);\n        return _this;\n    }\n    _createClass(LabelOverlay, [\n        {\n            key: \"getLabel\",\n            value: function getLabel() {\n                if (isFunction(this.label)) return this.label(this);\n                else return this.labelText;\n            }\n        },\n        {\n            key: \"setLabel\",\n            value: function setLabel(l) {\n                this.label = l;\n                this.labelText = null;\n                this.instance.updateLabel(this);\n            }\n        },\n        {\n            key: \"getDimensions\",\n            value: function getDimensions() {\n                return {\n                    w: 1,\n                    h: 1\n                };\n            }\n        },\n        {\n            key: \"updateFrom\",\n            value: function updateFrom(d) {\n                if (d.label != null) this.setLabel(d.label);\n                if (d.location != null) {\n                    this.setLocation(d.location);\n                    this.instance.updateLabel(this);\n                }\n            }\n        }\n    ]);\n    return LabelOverlay;\n}(Overlay);\n_defineProperty(LabelOverlay, \"type\", \"Label\");\nfunction isLabelOverlay(o) {\n    return o.type === LabelOverlay.type;\n}\nOverlayFactory.register(LabelOverlay.type, LabelOverlay);\nfunction _splitType(t) {\n    return t == null ? null : t.split(\" \").filter(function(t) {\n        return t != null && t.length > 0;\n    });\n}\nfunction _mapType(map, obj, typeId) {\n    for(var i in obj)map[i] = typeId;\n}\nvar CONNECTOR = \"connector\";\nvar MERGE_STRATEGY_OVERRIDE = \"override\";\nvar CSS_CLASS = \"cssClass\";\nvar DEFAULT_TYPE_KEY = \"__default\";\nvar ANCHOR = \"anchor\";\nvar ANCHORS = \"anchors\";\nvar _internalLabelOverlayId = \"__label\";\nvar _internalLabelOverlayClass = \"jtk-default-label\";\nvar TYPE_ITEM_OVERLAY = \"overlay\";\nvar LOCATION_ATTRIBUTE = \"labelLocation\";\nvar ACTION_ADD = \"add\";\nvar ACTION_REMOVE = \"remove\";\nfunction _applyTypes(component, params) {\n    if (component.getDefaultType) {\n        var td = component.getTypeDescriptor(), map = {};\n        var defType = component.getDefaultType();\n        var o = extend({}, defType);\n        _mapType(map, defType, DEFAULT_TYPE_KEY);\n        component._types.forEach(function(tid) {\n            if (tid !== DEFAULT_TYPE_KEY) {\n                var _t = component.instance.getType(tid, td);\n                if (_t != null) {\n                    var overrides = new Set([\n                        CONNECTOR,\n                        ANCHOR,\n                        ANCHORS\n                    ]);\n                    if (_t.mergeStrategy === MERGE_STRATEGY_OVERRIDE) for(var k in _t)overrides.add(k);\n                    o = merge(o, _t, [\n                        CSS_CLASS\n                    ], setToArray(overrides));\n                    _mapType(map, _t, tid);\n                }\n            }\n        });\n        if (params) o = populate(o, params, \"_\");\n        component.applyType(o, map);\n    }\n}\nfunction _removeTypeCssHelper(component, typeId) {\n    var type = component.instance.getType(typeId, component.getTypeDescriptor());\n    if (type != null && type.cssClass) component.removeClass(type.cssClass);\n}\nfunction _updateHoverStyle(component) {\n    if (component.paintStyle && component.hoverPaintStyle) {\n        var mergedHoverStyle = {};\n        extend(mergedHoverStyle, component.paintStyle);\n        extend(mergedHoverStyle, component.hoverPaintStyle);\n        component.hoverPaintStyle = mergedHoverStyle;\n    }\n}\nvar ADD_CLASS_ACTION = \"add\";\nvar REMOVE_CLASS_ACTION = \"remove\";\nfunction _makeLabelOverlay(component, params) {\n    var _params = {\n        cssClass: params.cssClass,\n        id: _internalLabelOverlayId,\n        component: component\n    }, mergedParams = extend(_params, params);\n    return new LabelOverlay(component.instance, component, mergedParams);\n}\nfunction _processOverlay(component, o) {\n    var _newOverlay = null;\n    if (isString(o)) _newOverlay = OverlayFactory.get(component.instance, o, component, {});\n    else if (o.type != null && o.options != null) {\n        var oa = o;\n        var p = extend({}, oa.options);\n        _newOverlay = OverlayFactory.get(component.instance, oa.type, component, p);\n    } else _newOverlay = o;\n    _newOverlay.id = _newOverlay.id || uuid();\n    component.cacheTypeItem(TYPE_ITEM_OVERLAY, _newOverlay, _newOverlay.id);\n    component.overlays[_newOverlay.id] = _newOverlay;\n    return _newOverlay;\n}\nvar Component = function(_EventGenerator) {\n    _inherits(Component, _EventGenerator);\n    var _super = _createSuper(Component);\n    function Component(instance, params) {\n        var _this;\n        _classCallCheck(this, Component);\n        _this = _super.call(this);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", 0.5);\n        _defineProperty(_assertThisInitialized(_this), \"overlays\", {});\n        _defineProperty(_assertThisInitialized(_this), \"overlayPositions\", {});\n        _defineProperty(_assertThisInitialized(_this), \"overlayPlacements\", {});\n        _defineProperty(_assertThisInitialized(_this), \"clone\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"deleted\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"segment\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"x\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"y\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"w\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"h\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"visible\", true);\n        _defineProperty(_assertThisInitialized(_this), \"typeId\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"params\", {});\n        _defineProperty(_assertThisInitialized(_this), \"paintStyle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"hoverPaintStyle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"paintStyleInUse\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_hover\", false);\n        _defineProperty(_assertThisInitialized(_this), \"lastPaintedAt\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"data\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_defaultType\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"events\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"parameters\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_types\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_typeCache\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cssClass\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"hoverClass\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"beforeDetach\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"beforeDrop\", void 0);\n        params = params || {};\n        _this.cssClass = params.cssClass || \"\";\n        _this.hoverClass = params.hoverClass || instance.defaults.hoverClass;\n        _this.beforeDetach = params.beforeDetach;\n        _this.beforeDrop = params.beforeDrop;\n        _this._types = new Set();\n        _this._typeCache = {};\n        _this.parameters = clone(params.parameters || {});\n        _this.id = params.id || _this.getIdPrefix() + new Date().getTime();\n        _this._defaultType = {\n            parameters: _this.parameters,\n            scope: params.scope || _this.instance.defaultScope,\n            overlays: {}\n        };\n        if (params.events) for(var evtName in params.events)_this.bind(evtName, params.events[evtName]);\n        _this.clone = function() {\n            var o = Object.create(_this.constructor.prototype);\n            _this.constructor.apply(o, [\n                instance,\n                params\n            ]);\n            return o;\n        };\n        _this.overlays = {};\n        _this.overlayPositions = {};\n        var o = params.overlays || [], oo = {};\n        var defaultOverlayKey = _this.getDefaultOverlayKey();\n        if (defaultOverlayKey) {\n            var defaultOverlays = _this.instance.defaults[defaultOverlayKey];\n            if (defaultOverlays) o.push.apply(o, _toConsumableArray(defaultOverlays));\n            for(var i = 0; i < o.length; i++){\n                var fo = convertToFullOverlaySpec(o[i]);\n                oo[fo.options.id] = fo;\n            }\n        }\n        _this._defaultType.overlays = oo;\n        if (params.label) _this.getDefaultType().overlays[_internalLabelOverlayId] = {\n            type: LabelOverlay.type,\n            options: {\n                label: params.label,\n                location: params.labelLocation || _this.defaultLabelLocation,\n                id: _internalLabelOverlayId,\n                cssClass: _internalLabelOverlayClass\n            }\n        };\n        return _this;\n    }\n    _createClass(Component, [\n        {\n            key: \"isDetachAllowed\",\n            value: function isDetachAllowed(connection) {\n                var r = true;\n                if (this.beforeDetach) try {\n                    r = this.beforeDetach(connection);\n                } catch (e) {\n                    log(\"jsPlumb: beforeDetach callback failed\", e);\n                }\n                return r;\n            }\n        },\n        {\n            key: \"isDropAllowed\",\n            value: function isDropAllowed(sourceId, targetId, scope, connection, dropEndpoint) {\n                var r;\n                var payload = {\n                    sourceId: sourceId,\n                    targetId: targetId,\n                    scope: scope,\n                    connection: connection,\n                    dropEndpoint: dropEndpoint\n                };\n                if (this.beforeDrop) try {\n                    r = this.beforeDrop(payload);\n                } catch (e) {\n                    log(\"jsPlumb: beforeDrop callback failed\", e);\n                }\n                else r = this.instance.checkCondition(INTERCEPT_BEFORE_DROP, payload);\n                return r;\n            }\n        },\n        {\n            key: \"getDefaultType\",\n            value: function getDefaultType() {\n                return this._defaultType;\n            }\n        },\n        {\n            key: \"appendToDefaultType\",\n            value: function appendToDefaultType(obj) {\n                for(var i in obj)this._defaultType[i] = obj[i];\n            }\n        },\n        {\n            key: \"getId\",\n            value: function getId() {\n                return this.id;\n            }\n        },\n        {\n            key: \"cacheTypeItem\",\n            value: function cacheTypeItem(key, item, typeId) {\n                this._typeCache[typeId] = this._typeCache[typeId] || {};\n                this._typeCache[typeId][key] = item;\n            }\n        },\n        {\n            key: \"getCachedTypeItem\",\n            value: function getCachedTypeItem(key, typeId) {\n                return this._typeCache[typeId] ? this._typeCache[typeId][key] : null;\n            }\n        },\n        {\n            key: \"setType\",\n            value: function setType(typeId, params) {\n                this.clearTypes();\n                (_splitType(typeId) || []).forEach(this._types.add, this._types);\n                _applyTypes(this, params);\n            }\n        },\n        {\n            key: \"getType\",\n            value: function getType() {\n                return Array.from(this._types.keys());\n            }\n        },\n        {\n            key: \"reapplyTypes\",\n            value: function reapplyTypes(params) {\n                _applyTypes(this, params);\n            }\n        },\n        {\n            key: \"hasType\",\n            value: function hasType(typeId) {\n                return this._types.has(typeId);\n            }\n        },\n        {\n            key: \"addType\",\n            value: function addType(typeId, params) {\n                var t = _splitType(typeId), _somethingAdded = false;\n                if (t != null) {\n                    for(var i = 0, j = t.length; i < j; i++)if (!this._types.has(t[i])) {\n                        this._types.add(t[i]);\n                        _somethingAdded = true;\n                    }\n                    if (_somethingAdded) _applyTypes(this, params);\n                }\n            }\n        },\n        {\n            key: \"removeType\",\n            value: function removeType(typeId, params) {\n                var _this2 = this;\n                var t = _splitType(typeId), _cont = false, _one = function _one(tt) {\n                    if (_this2._types.has(tt)) {\n                        _removeTypeCssHelper(_this2, tt);\n                        _this2._types[\"delete\"](tt);\n                        return true;\n                    }\n                    return false;\n                };\n                if (t != null) {\n                    for(var i = 0, j = t.length; i < j; i++)_cont = _one(t[i]) || _cont;\n                    if (_cont) _applyTypes(this, params);\n                }\n            }\n        },\n        {\n            key: \"clearTypes\",\n            value: function clearTypes(params) {\n                var _this3 = this;\n                this._types.forEach(function(t) {\n                    _removeTypeCssHelper(_this3, t);\n                });\n                this._types.clear();\n                _applyTypes(this, params);\n            }\n        },\n        {\n            key: \"toggleType\",\n            value: function toggleType(typeId, params) {\n                var t = _splitType(typeId);\n                if (t != null) {\n                    for(var i = 0, j = t.length; i < j; i++)if (this._types.has(t[i])) {\n                        _removeTypeCssHelper(this, t[i]);\n                        this._types[\"delete\"](t[i]);\n                    } else this._types.add(t[i]);\n                    _applyTypes(this, params);\n                }\n            }\n        },\n        {\n            key: \"applyType\",\n            value: function applyType(t, params) {\n                this.setPaintStyle(t.paintStyle);\n                this.setHoverPaintStyle(t.hoverPaintStyle);\n                this.mergeParameters(t.parameters);\n                this.paintStyleInUse = this.getPaintStyle();\n                if (t.overlays) {\n                    var keep = {}, i;\n                    for(i in t.overlays){\n                        var existing = this.overlays[t.overlays[i].options.id];\n                        if (existing) {\n                            existing.updateFrom(t.overlays[i].options);\n                            keep[t.overlays[i].options.id] = true;\n                            this.instance.reattachOverlay(existing, this);\n                        } else {\n                            var _c = this.getCachedTypeItem(TYPE_ITEM_OVERLAY, t.overlays[i].options.id);\n                            if (_c != null) {\n                                this.instance.reattachOverlay(_c, this);\n                                _c.setVisible(true);\n                                _c.updateFrom(t.overlays[i].options);\n                                this.overlays[_c.id] = _c;\n                            } else _c = this.addOverlay(t.overlays[i]);\n                            keep[_c.id] = true;\n                        }\n                    }\n                    for(i in this.overlays)if (keep[this.overlays[i].id] == null) this.removeOverlay(this.overlays[i].id, true);\n                }\n            }\n        },\n        {\n            key: \"setPaintStyle\",\n            value: function setPaintStyle(style) {\n                this.paintStyle = style;\n                this.paintStyleInUse = this.paintStyle;\n                _updateHoverStyle(this);\n            }\n        },\n        {\n            key: \"getPaintStyle\",\n            value: function getPaintStyle() {\n                return this.paintStyle;\n            }\n        },\n        {\n            key: \"setHoverPaintStyle\",\n            value: function setHoverPaintStyle(style) {\n                this.hoverPaintStyle = style;\n                _updateHoverStyle(this);\n            }\n        },\n        {\n            key: \"getHoverPaintStyle\",\n            value: function getHoverPaintStyle() {\n                return this.hoverPaintStyle;\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                for(var i in this.overlays)this.instance.destroyOverlay(this.overlays[i]);\n                this.overlays = {};\n                this.overlayPositions = {};\n                this.unbind();\n                this.clone = null;\n            }\n        },\n        {\n            key: \"isHover\",\n            value: function isHover() {\n                return this._hover;\n            }\n        },\n        {\n            key: \"mergeParameters\",\n            value: function mergeParameters(p) {\n                if (p != null) extend(this.parameters, p);\n            }\n        },\n        {\n            key: \"setVisible\",\n            value: function setVisible(v) {\n                this.visible = v;\n                if (v) this.showOverlays();\n                else this.hideOverlays();\n            }\n        },\n        {\n            key: \"isVisible\",\n            value: function isVisible() {\n                return this.visible;\n            }\n        },\n        {\n            key: \"setAbsoluteOverlayPosition\",\n            value: function setAbsoluteOverlayPosition(overlay, xy) {\n                this.overlayPositions[overlay.id] = xy;\n            }\n        },\n        {\n            key: \"getAbsoluteOverlayPosition\",\n            value: function getAbsoluteOverlayPosition(overlay) {\n                return this.overlayPositions ? this.overlayPositions[overlay.id] : null;\n            }\n        },\n        {\n            key: \"_clazzManip\",\n            value: function _clazzManip(action, clazz) {\n                for(var i in this.overlays){\n                    if (action === ACTION_ADD) this.instance.addOverlayClass(this.overlays[i], clazz);\n                    else if (action === ACTION_REMOVE) this.instance.removeOverlayClass(this.overlays[i], clazz);\n                }\n            }\n        },\n        {\n            key: \"addClass\",\n            value: function addClass(clazz, cascade) {\n                var parts = (this.cssClass || \"\").split(\" \");\n                parts.push(clazz);\n                this.cssClass = parts.join(\" \");\n                this._clazzManip(ACTION_ADD, clazz);\n            }\n        },\n        {\n            key: \"removeClass\",\n            value: function removeClass(clazz, cascade) {\n                var parts = (this.cssClass || \"\").split(\" \");\n                this.cssClass = parts.filter(function(p) {\n                    return p !== clazz;\n                }).join(\" \");\n                this._clazzManip(ACTION_REMOVE, clazz);\n            }\n        },\n        {\n            key: \"getClass\",\n            value: function getClass() {\n                return this.cssClass;\n            }\n        },\n        {\n            key: \"shouldFireEvent\",\n            value: function shouldFireEvent(event, value, originalEvent) {\n                return true;\n            }\n        },\n        {\n            key: \"getData\",\n            value: function getData() {\n                return this.data;\n            }\n        },\n        {\n            key: \"setData\",\n            value: function setData(d) {\n                this.data = d || {};\n            }\n        },\n        {\n            key: \"mergeData\",\n            value: function mergeData(d) {\n                this.data = extend(this.data, d);\n            }\n        },\n        {\n            key: \"addOverlay\",\n            value: function addOverlay(overlay) {\n                var o = _processOverlay(this, overlay);\n                if (this.getData && o.type === LabelOverlay.type && !isString(overlay)) {\n                    var d = this.getData(), p = overlay.options;\n                    if (d) {\n                        var locationAttribute = p.labelLocationAttribute || LOCATION_ATTRIBUTE;\n                        var loc = d[locationAttribute];\n                        if (loc) o.location = loc;\n                    }\n                }\n                return o;\n            }\n        },\n        {\n            key: \"getOverlay\",\n            value: function getOverlay(id) {\n                return this.overlays[id];\n            }\n        },\n        {\n            key: \"getOverlays\",\n            value: function getOverlays() {\n                return this.overlays;\n            }\n        },\n        {\n            key: \"hideOverlay\",\n            value: function hideOverlay(id) {\n                var o = this.getOverlay(id);\n                if (o) o.setVisible(false);\n            }\n        },\n        {\n            key: \"hideOverlays\",\n            value: function hideOverlays() {\n                for(var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++)ids[_key] = arguments[_key];\n                ids = ids || [];\n                for(var i in this.overlays)if (ids.length === 0 || ids.indexOf(i) !== -1) this.overlays[i].setVisible(false);\n            }\n        },\n        {\n            key: \"showOverlay\",\n            value: function showOverlay(id) {\n                var o = this.getOverlay(id);\n                if (o) o.setVisible(true);\n            }\n        },\n        {\n            key: \"showOverlays\",\n            value: function showOverlays() {\n                for(var _len2 = arguments.length, ids = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)ids[_key2] = arguments[_key2];\n                ids = ids || [];\n                for(var i in this.overlays)if (ids.length === 0 || ids.indexOf(i) !== -1) this.overlays[i].setVisible(true);\n            }\n        },\n        {\n            key: \"removeAllOverlays\",\n            value: function removeAllOverlays() {\n                for(var i in this.overlays)this.instance.destroyOverlay(this.overlays[i]);\n                this.overlays = {};\n                this.overlayPositions = null;\n                this.overlayPlacements = {};\n            }\n        },\n        {\n            key: \"removeOverlay\",\n            value: function removeOverlay(overlayId, dontCleanup) {\n                var o = this.overlays[overlayId];\n                if (o) {\n                    o.setVisible(false);\n                    if (!dontCleanup) this.instance.destroyOverlay(o);\n                    delete this.overlays[overlayId];\n                    if (this.overlayPositions) delete this.overlayPositions[overlayId];\n                    if (this.overlayPlacements) delete this.overlayPlacements[overlayId];\n                }\n            }\n        },\n        {\n            key: \"removeOverlays\",\n            value: function removeOverlays() {\n                for(var _len3 = arguments.length, overlays = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)overlays[_key3] = arguments[_key3];\n                for(var i = 0, j = overlays.length; i < j; i++)this.removeOverlay(arguments[i]);\n            }\n        },\n        {\n            key: \"getLabel\",\n            value: function getLabel() {\n                var lo = this.getLabelOverlay();\n                return lo != null ? lo.getLabel() : null;\n            }\n        },\n        {\n            key: \"getLabelOverlay\",\n            value: function getLabelOverlay() {\n                return this.getOverlay(_internalLabelOverlayId);\n            }\n        },\n        {\n            key: \"setLabel\",\n            value: function setLabel(l) {\n                var lo = this.getLabelOverlay();\n                if (!lo) {\n                    var _params2 = isString(l) || isFunction(l) ? {\n                        label: l\n                    } : l;\n                    lo = _makeLabelOverlay(this, _params2);\n                    this.overlays[_internalLabelOverlayId] = lo;\n                } else if (isString(l) || isFunction(l)) lo.setLabel(l);\n                else {\n                    var ll = l;\n                    if (ll.label) lo.setLabel(ll.label);\n                    if (ll.location) lo.location = ll.location;\n                }\n            }\n        }\n    ]);\n    return Component;\n}(EventGenerator);\nvar typeParameters = [\n    \"connectorStyle\",\n    \"connectorHoverStyle\",\n    \"connectorOverlays\",\n    \"connector\",\n    \"connectionType\",\n    \"connectorClass\",\n    \"connectorHoverClass\"\n];\nvar Endpoint = function(_Component) {\n    _inherits(Endpoint, _Component);\n    var _super = _createSuper(Endpoint);\n    function Endpoint(instance, params) {\n        var _this;\n        _classCallCheck(this, Endpoint);\n        _this = _super.call(this, instance, params);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"connections\", []);\n        _defineProperty(_assertThisInitialized(_this), \"endpoint\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"element\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"elementId\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"dragAllowedWhenFull\", true);\n        _defineProperty(_assertThisInitialized(_this), \"timestamp\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"portId\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"maxConnections\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"proxiedBy\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectorClass\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectorHoverClass\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"finalEndpoint\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n        _defineProperty(_assertThisInitialized(_this), \"isSource\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"isTarget\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"isTemporarySource\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectionCost\", 1);\n        _defineProperty(_assertThisInitialized(_this), \"connectionsDirected\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectionsDetachable\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"reattachConnections\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"currentAnchorClass\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"referenceEndpoint\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"edgeType\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connector\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectorOverlays\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectorStyle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connectorHoverStyle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"deleteOnEmpty\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"uuid\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"scope\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_anchor\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", [\n            0.5,\n            0.5\n        ]);\n        _this.appendToDefaultType({\n            edgeType: params.edgeType,\n            maxConnections: params.maxConnections == null ? _this.instance.defaults.maxConnections : params.maxConnections,\n            paintStyle: params.paintStyle || _this.instance.defaults.endpointStyle,\n            hoverPaintStyle: params.hoverPaintStyle || _this.instance.defaults.endpointHoverStyle,\n            connectorStyle: params.connectorStyle,\n            connectorHoverStyle: params.connectorHoverStyle,\n            connectorClass: params.connectorClass,\n            connectorHoverClass: params.connectorHoverClass,\n            connectorOverlays: params.connectorOverlays,\n            connector: params.connector\n        });\n        _this.enabled = !(params.enabled === false);\n        _this.visible = true;\n        _this.element = params.element;\n        _this.uuid = params.uuid;\n        _this.portId = params.portId;\n        _this.elementId = params.elementId;\n        _this.connectionCost = params.connectionCost == null ? 1 : params.connectionCost;\n        _this.connectionsDirected = params.connectionsDirected;\n        _this.currentAnchorClass = \"\";\n        _this.events = {};\n        _this.connectorOverlays = params.connectorOverlays;\n        _this.connectorStyle = params.connectorStyle;\n        _this.connectorHoverStyle = params.connectorHoverStyle;\n        _this.connector = params.connector;\n        _this.edgeType = params.edgeType;\n        _this.connectorClass = params.connectorClass;\n        _this.connectorHoverClass = params.connectorHoverClass;\n        _this.deleteOnEmpty = params.deleteOnEmpty === true;\n        _this.isSource = params.source || false;\n        _this.isTemporarySource = params.isTemporarySource || false;\n        _this.isTarget = params.target || false;\n        _this.connections = params.connections || [];\n        _this.scope = params.scope || instance.defaultScope;\n        _this.timestamp = null;\n        _this.reattachConnections = params.reattachConnections || instance.defaults.reattachConnections;\n        _this.connectionsDetachable = instance.defaults.connectionsDetachable;\n        if (params.connectionsDetachable === false) _this.connectionsDetachable = false;\n        _this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\n        if (params.onMaxConnections) _this.bind(EVENT_MAX_CONNECTIONS, params.onMaxConnections);\n        var ep = params.endpoint || params.existingEndpoint || instance.defaults.endpoint;\n        _this.setEndpoint(ep);\n        if (params.preparedAnchor != null) _this.setPreparedAnchor(params.preparedAnchor);\n        else {\n            var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : instance.defaults.anchor || AnchorLocations.Top;\n            _this.setAnchor(anchorParamsToUse);\n        }\n        var type = [\n            DEFAULT,\n            params.type || \"\"\n        ].join(\" \");\n        _this.addType(type, params.data);\n        return _this;\n    }\n    _createClass(Endpoint, [\n        {\n            key: \"getIdPrefix\",\n            value: function getIdPrefix() {\n                return \"_jsplumb_e\";\n            }\n        },\n        {\n            key: \"getTypeDescriptor\",\n            value: function getTypeDescriptor() {\n                return \"endpoint\";\n            }\n        },\n        {\n            key: \"getXY\",\n            value: function getXY() {\n                return {\n                    x: this.endpoint.x,\n                    y: this.endpoint.y\n                };\n            }\n        },\n        {\n            key: \"getDefaultOverlayKey\",\n            value: function getDefaultOverlayKey() {\n                return \"endpointOverlays\";\n            }\n        },\n        {\n            key: \"_updateAnchorClass\",\n            value: function _updateAnchorClass() {\n                var ac = this._anchor && this._anchor.cssClass;\n                if (ac != null && ac.length > 0) {\n                    var oldAnchorClass = this.instance.endpointAnchorClassPrefix + \"-\" + this.currentAnchorClass;\n                    this.currentAnchorClass = ac;\n                    var anchorClass = this.instance.endpointAnchorClassPrefix + (this.currentAnchorClass ? \"-\" + this.currentAnchorClass : \"\");\n                    if (oldAnchorClass !== anchorClass) {\n                        this.removeClass(oldAnchorClass);\n                        this.addClass(anchorClass);\n                        this.instance.removeClass(this.element, oldAnchorClass);\n                        this.instance.addClass(this.element, anchorClass);\n                    }\n                }\n            }\n        },\n        {\n            key: \"setPreparedAnchor\",\n            value: function setPreparedAnchor(anchor) {\n                this.instance.router.setAnchor(this, anchor);\n                this._updateAnchorClass();\n                return this;\n            }\n        },\n        {\n            key: \"_anchorLocationChanged\",\n            value: function _anchorLocationChanged(currentAnchor) {\n                this.fire(EVENT_ANCHOR_CHANGED, {\n                    endpoint: this,\n                    anchor: currentAnchor\n                });\n                this._updateAnchorClass();\n            }\n        },\n        {\n            key: \"setAnchor\",\n            value: function setAnchor(anchorParams) {\n                var a = this.instance.router.prepareAnchor(anchorParams);\n                this.setPreparedAnchor(a);\n                return this;\n            }\n        },\n        {\n            key: \"addConnection\",\n            value: function addConnection(conn) {\n                this.connections.push(conn);\n                this.instance._refreshEndpoint(this);\n            }\n        },\n        {\n            key: \"detachFromConnection\",\n            value: function detachFromConnection(connection, idx, transientDetach) {\n                idx = idx == null ? this.connections.indexOf(connection) : idx;\n                if (idx >= 0) {\n                    this.connections.splice(idx, 1);\n                    this.instance._refreshEndpoint(this);\n                }\n                if (!transientDetach && this.deleteOnEmpty && this.connections.length === 0) this.instance.deleteEndpoint(this);\n            }\n        },\n        {\n            key: \"deleteEveryConnection\",\n            value: function deleteEveryConnection(params) {\n                var c = this.connections.length;\n                for(var i = 0; i < c; i++)this.instance.deleteConnection(this.connections[0], params);\n            }\n        },\n        {\n            key: \"detachFrom\",\n            value: function detachFrom(otherEndpoint) {\n                var c = [];\n                for(var i = 0; i < this.connections.length; i++)if (this.connections[i].endpoints[1] === otherEndpoint || this.connections[i].endpoints[0] === otherEndpoint) c.push(this.connections[i]);\n                for(var j = 0, count = c.length; j < count; j++)this.instance.deleteConnection(c[0]);\n                return this;\n            }\n        },\n        {\n            key: \"setVisible\",\n            value: function setVisible(v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\n                _get(_getPrototypeOf(Endpoint.prototype), \"setVisible\", this).call(this, v);\n                this.endpoint.setVisible(v);\n                if (v) this.showOverlays();\n                else this.hideOverlays();\n                if (!doNotChangeConnections) for(var i = 0; i < this.connections.length; i++){\n                    this.connections[i].setVisible(v);\n                    if (!doNotNotifyOtherEndpoint) {\n                        var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\n                        if (this.connections[i].endpoints[oIdx].connections.length === 1) this.connections[i].endpoints[oIdx].setVisible(v, true, true);\n                    }\n                }\n            }\n        },\n        {\n            key: \"applyType\",\n            value: function applyType(t, typeMap) {\n                _get(_getPrototypeOf(Endpoint.prototype), \"applyType\", this).call(this, t, typeMap);\n                this.setPaintStyle(t.endpointStyle || t.paintStyle);\n                this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle);\n                this.connectorStyle = t.connectorStyle;\n                this.connectorHoverStyle = t.connectorHoverStyle;\n                this.connector = t.connector;\n                this.connectorOverlays = t.connectorOverlays;\n                this.edgeType = t.edgeType;\n                if (t.maxConnections != null) this.maxConnections = t.maxConnections;\n                if (t.scope) this.scope = t.scope;\n                extend(t, typeParameters);\n                this.instance.applyEndpointType(this, t);\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                _get(_getPrototypeOf(Endpoint.prototype), \"destroy\", this).call(this);\n                this.deleted = true;\n                if (this.endpoint != null) this.instance.destroyEndpoint(this);\n            }\n        },\n        {\n            key: \"isFull\",\n            value: function isFull() {\n                return this.maxConnections === 0 ? true : !(this.isFloating() || this.maxConnections < 0 || this.connections.length < this.maxConnections);\n            }\n        },\n        {\n            key: \"isFloating\",\n            value: function isFloating() {\n                return this.instance.router.isFloating(this);\n            }\n        },\n        {\n            key: \"isConnectedTo\",\n            value: function isConnectedTo(otherEndpoint) {\n                var found = false;\n                if (otherEndpoint) {\n                    for(var i = 0; i < this.connections.length; i++)if (this.connections[i].endpoints[1] === otherEndpoint || this.connections[i].endpoints[0] === otherEndpoint) {\n                        found = true;\n                        break;\n                    }\n                }\n                return found;\n            }\n        },\n        {\n            key: \"setDragAllowedWhenFull\",\n            value: function setDragAllowedWhenFull(allowed) {\n                this.dragAllowedWhenFull = allowed;\n            }\n        },\n        {\n            key: \"getUuid\",\n            value: function getUuid() {\n                return this.uuid;\n            }\n        },\n        {\n            key: \"connectorSelector\",\n            value: function connectorSelector() {\n                return this.connections[0];\n            }\n        },\n        {\n            key: \"prepareEndpoint\",\n            value: function prepareEndpoint(ep, typeId) {\n                var endpointArgs = {\n                    cssClass: this.cssClass,\n                    endpoint: this\n                };\n                var endpoint;\n                if (isAssignableFrom(ep, EndpointRepresentation)) {\n                    var epr = ep;\n                    endpoint = EndpointFactory.clone(epr);\n                    endpoint.classes = endpointArgs.cssClass.split(\" \");\n                } else if (isString(ep)) endpoint = EndpointFactory.get(this, ep, endpointArgs);\n                else {\n                    var fep = ep;\n                    extend(endpointArgs, fep.options || {});\n                    endpoint = EndpointFactory.get(this, fep.type, endpointArgs);\n                }\n                endpoint.typeId = typeId;\n                return endpoint;\n            }\n        },\n        {\n            key: \"setEndpoint\",\n            value: function setEndpoint(ep) {\n                var _ep = this.prepareEndpoint(ep);\n                this.setPreparedEndpoint(_ep);\n            }\n        },\n        {\n            key: \"setPreparedEndpoint\",\n            value: function setPreparedEndpoint(ep) {\n                if (this.endpoint != null) this.instance.destroyEndpoint(this);\n                this.endpoint = ep;\n            }\n        },\n        {\n            key: \"addClass\",\n            value: function addClass(clazz, cascade) {\n                _get(_getPrototypeOf(Endpoint.prototype), \"addClass\", this).call(this, clazz, cascade);\n                if (this.endpoint != null) this.endpoint.addClass(clazz);\n            }\n        },\n        {\n            key: \"removeClass\",\n            value: function removeClass(clazz, cascade) {\n                _get(_getPrototypeOf(Endpoint.prototype), \"removeClass\", this).call(this, clazz, cascade);\n                if (this.endpoint != null) this.endpoint.removeClass(clazz);\n            }\n        }\n    ]);\n    return Endpoint;\n}(Component);\nvar TYPE_ITEM_ANCHORS = \"anchors\";\nvar TYPE_ITEM_CONNECTOR = \"connector\";\nfunction prepareEndpoint(conn, existing, index, anchor, element, elementId, endpoint) {\n    var e;\n    if (existing) {\n        conn.endpoints[index] = existing;\n        existing.addConnection(conn);\n    } else {\n        var ep = endpoint || conn.endpointSpec || conn.endpointsSpec[index] || conn.instance.defaults.endpoints[index] || conn.instance.defaults.endpoint;\n        var es = conn.endpointStyles[index] || conn.endpointStyle || conn.instance.defaults.endpointStyles[index] || conn.instance.defaults.endpointStyle;\n        if (es.fill == null && conn.paintStyle != null) es.fill = conn.paintStyle.stroke;\n        if (es.outlineStroke == null && conn.paintStyle != null) es.outlineStroke = conn.paintStyle.outlineStroke;\n        if (es.outlineWidth == null && conn.paintStyle != null) es.outlineWidth = conn.paintStyle.outlineWidth;\n        var ehs = conn.endpointHoverStyles[index] || conn.endpointHoverStyle || conn.endpointHoverStyle || conn.instance.defaults.endpointHoverStyles[index] || conn.instance.defaults.endpointHoverStyle;\n        if (conn.hoverPaintStyle != null) {\n            if (ehs == null) ehs = {};\n            if (ehs.fill == null) ehs.fill = conn.hoverPaintStyle.stroke;\n        }\n        var u = conn.uuids ? conn.uuids[index] : null;\n        anchor = anchor != null ? anchor : conn.instance.defaults.anchors != null ? conn.instance.defaults.anchors[index] : conn.instance.defaults.anchor;\n        e = conn.instance._internal_newEndpoint({\n            paintStyle: es,\n            hoverPaintStyle: ehs,\n            endpoint: ep,\n            connections: [\n                conn\n            ],\n            uuid: u,\n            element: element,\n            scope: conn.scope,\n            anchor: anchor,\n            reattachConnections: conn.reattach || conn.instance.defaults.reattachConnections,\n            connectionsDetachable: conn.detachable || conn.instance.defaults.connectionsDetachable\n        });\n        conn.instance._refreshEndpoint(e);\n        if (existing == null) e.deleteOnEmpty = true;\n        conn.endpoints[index] = e;\n    }\n    return e;\n}\nvar Connection = function(_Component) {\n    _inherits(Connection, _Component);\n    var _super = _createSuper(Connection);\n    function Connection(instance, params) {\n        var _this;\n        _classCallCheck(this, Connection);\n        _this = _super.call(this, instance, params);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"connector\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", 0.5);\n        _defineProperty(_assertThisInitialized(_this), \"scope\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"typeId\", \"_jsplumb_connection\");\n        _defineProperty(_assertThisInitialized(_this), \"previousConnection\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"sourceId\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"targetId\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"source\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"target\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"detachable\", true);\n        _defineProperty(_assertThisInitialized(_this), \"reattach\", false);\n        _defineProperty(_assertThisInitialized(_this), \"uuids\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cost\", 1);\n        _defineProperty(_assertThisInitialized(_this), \"directed\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"endpoints\", [\n            null,\n            null\n        ]);\n        _defineProperty(_assertThisInitialized(_this), \"endpointStyles\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"endpointSpec\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"endpointsSpec\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"endpointStyle\", {});\n        _defineProperty(_assertThisInitialized(_this), \"endpointHoverStyle\", {});\n        _defineProperty(_assertThisInitialized(_this), \"endpointHoverStyles\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"suspendedEndpoint\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"suspendedIndex\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"suspendedElement\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"suspendedElementId\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"suspendedElementType\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_forceReattach\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_forceDetach\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"proxies\", []);\n        _defineProperty(_assertThisInitialized(_this), \"pending\", false);\n        _this.id = params.id;\n        _this.previousConnection = params.previousConnection;\n        _this.source = params.source;\n        _this.target = params.target;\n        if (params.sourceEndpoint) {\n            _this.source = params.sourceEndpoint.element;\n            _this.sourceId = params.sourceEndpoint.elementId;\n        } else _this.sourceId = instance.getId(_this.source);\n        if (params.targetEndpoint) {\n            _this.target = params.targetEndpoint.element;\n            _this.targetId = params.targetEndpoint.elementId;\n        } else _this.targetId = instance.getId(_this.target);\n        _this.scope = params.scope;\n        var sourceAnchor = params.anchors ? params.anchors[0] : params.anchor;\n        var targetAnchor = params.anchors ? params.anchors[1] : params.anchor;\n        instance.manage(_this.source);\n        instance.manage(_this.target);\n        _this.visible = true;\n        _this.params = {\n            cssClass: params.cssClass,\n            hoverClass: params.hoverClass,\n            \"pointer-events\": params[\"pointer-events\"],\n            overlays: params.overlays\n        };\n        _this.lastPaintedAt = null;\n        if (params.type) params.endpoints = params.endpoints || _this.instance._deriveEndpointAndAnchorSpec(params.type).endpoints;\n        _this.endpointSpec = params.endpoint;\n        _this.endpointsSpec = params.endpoints || [\n            null,\n            null\n        ];\n        _this.endpointStyle = params.endpointStyle;\n        _this.endpointHoverStyle = params.endpointHoverStyle;\n        _this.endpointStyles = params.endpointStyles || [\n            null,\n            null\n        ];\n        _this.endpointHoverStyles = params.endpointHoverStyles || [\n            null,\n            null\n        ];\n        _this.paintStyle = params.paintStyle;\n        _this.hoverPaintStyle = params.hoverPaintStyle;\n        _this.uuids = params.uuids;\n        _this.makeEndpoint(true, _this.source, _this.sourceId, sourceAnchor, params.sourceEndpoint);\n        _this.makeEndpoint(false, _this.target, _this.targetId, targetAnchor, params.targetEndpoint);\n        if (!_this.scope) _this.scope = _this.endpoints[0].scope;\n        if (params.deleteEndpointsOnEmpty != null) {\n            _this.endpoints[0].deleteOnEmpty = params.deleteEndpointsOnEmpty;\n            _this.endpoints[1].deleteOnEmpty = params.deleteEndpointsOnEmpty;\n        }\n        var _detachable = _this.instance.defaults.connectionsDetachable;\n        if (params.detachable === false) _detachable = false;\n        if (_this.endpoints[0].connectionsDetachable === false) _detachable = false;\n        if (_this.endpoints[1].connectionsDetachable === false) _detachable = false;\n        _this.endpointsSpec = params.endpoints || [\n            null,\n            null\n        ];\n        _this.endpointSpec = params.endpoint || null;\n        var _reattach = params.reattach || _this.endpoints[0].reattachConnections || _this.endpoints[1].reattachConnections || _this.instance.defaults.reattachConnections;\n        var initialPaintStyle = extend({}, _this.endpoints[0].connectorStyle || _this.endpoints[1].connectorStyle || params.paintStyle || _this.instance.defaults.paintStyle);\n        _this.appendToDefaultType({\n            detachable: _detachable,\n            reattach: _reattach,\n            paintStyle: initialPaintStyle,\n            hoverPaintStyle: extend({}, _this.endpoints[0].connectorHoverStyle || _this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _this.instance.defaults.hoverPaintStyle)\n        });\n        if (params.outlineWidth) initialPaintStyle.outlineWidth = params.outlineWidth;\n        if (params.outlineColor) initialPaintStyle.outlineStroke = params.outlineColor;\n        if (params.lineWidth) initialPaintStyle.strokeWidth = params.lineWidth;\n        if (params.color) initialPaintStyle.stroke = params.color;\n        if (!_this.instance._suspendDrawing) {\n            var initialTimestamp = _this.instance._suspendedAt || uuid();\n            _this.instance._paintEndpoint(_this.endpoints[0], {\n                timestamp: initialTimestamp\n            });\n            _this.instance._paintEndpoint(_this.endpoints[1], {\n                timestamp: initialTimestamp\n            });\n        }\n        _this.cost = params.cost || _this.endpoints[0].connectionCost;\n        _this.directed = params.directed;\n        if (params.directed == null) _this.directed = _this.endpoints[0].connectionsDirected;\n        var _p = extend({}, _this.endpoints[1].parameters);\n        extend(_p, _this.endpoints[0].parameters);\n        extend(_p, _this.parameters);\n        _this.parameters = _p;\n        _this.paintStyleInUse = _this.getPaintStyle() || {};\n        _this._setConnector(_this.endpoints[0].connector || _this.endpoints[1].connector || params.connector || _this.instance.defaults.connector, true);\n        var data = params.data == null || !isObject(params.data) ? {} : params.data;\n        _this.setData(data);\n        var _types = [\n            DEFAULT,\n            _this.endpoints[0].edgeType,\n            _this.endpoints[1].edgeType,\n            params.type\n        ].join(\" \");\n        if (/[^\\s]/.test(_types)) _this.addType(_types, params.data);\n        return _this;\n    }\n    _createClass(Connection, [\n        {\n            key: \"getIdPrefix\",\n            value: function getIdPrefix() {\n                return \"_jsPlumb_c\";\n            }\n        },\n        {\n            key: \"getDefaultOverlayKey\",\n            value: function getDefaultOverlayKey() {\n                return KEY_CONNECTION_OVERLAYS;\n            }\n        },\n        {\n            key: \"getXY\",\n            value: function getXY() {\n                return {\n                    x: this.connector.x,\n                    y: this.connector.y\n                };\n            }\n        },\n        {\n            key: \"makeEndpoint\",\n            value: function makeEndpoint(isSource, el, elId, anchor, ep) {\n                elId = elId || this.instance.getId(el);\n                return prepareEndpoint(this, ep, isSource ? 0 : 1, anchor, el);\n            }\n        },\n        {\n            key: \"getTypeDescriptor\",\n            value: function getTypeDescriptor() {\n                return Connection.type;\n            }\n        },\n        {\n            key: \"isDetachable\",\n            value: function isDetachable(ep) {\n                return this.detachable === false ? false : ep != null ? ep.connectionsDetachable === true : this.detachable === true;\n            }\n        },\n        {\n            key: \"setDetachable\",\n            value: function setDetachable(detachable) {\n                this.detachable = detachable === true;\n            }\n        },\n        {\n            key: \"isReattach\",\n            value: function isReattach() {\n                return this.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\n            }\n        },\n        {\n            key: \"setReattach\",\n            value: function setReattach(reattach) {\n                this.reattach = reattach === true;\n            }\n        },\n        {\n            key: \"applyType\",\n            value: function applyType(t, typeMap) {\n                var _connector = null;\n                if (t.connector != null) {\n                    _connector = this.getCachedTypeItem(TYPE_ITEM_CONNECTOR, typeMap.connector);\n                    if (_connector == null) {\n                        _connector = this.prepareConnector(t.connector, typeMap.connector);\n                        this.cacheTypeItem(TYPE_ITEM_CONNECTOR, _connector, typeMap.connector);\n                    }\n                    this.setPreparedConnector(_connector);\n                }\n                _get(_getPrototypeOf(Connection.prototype), \"applyType\", this).call(this, t, typeMap);\n                if (t.detachable != null) this.setDetachable(t.detachable);\n                if (t.reattach != null) this.setReattach(t.reattach);\n                if (t.scope) this.scope = t.scope;\n                var _anchors = null;\n                if (t.anchor) {\n                    _anchors = this.getCachedTypeItem(TYPE_ITEM_ANCHORS, typeMap.anchor);\n                    if (_anchors == null) {\n                        _anchors = [\n                            makeLightweightAnchorFromSpec(t.anchor),\n                            makeLightweightAnchorFromSpec(t.anchor)\n                        ];\n                        this.cacheTypeItem(TYPE_ITEM_ANCHORS, _anchors, typeMap.anchor);\n                    }\n                } else if (t.anchors) {\n                    _anchors = this.getCachedTypeItem(TYPE_ITEM_ANCHORS, typeMap.anchors);\n                    if (_anchors == null) {\n                        _anchors = [\n                            makeLightweightAnchorFromSpec(t.anchors[0]),\n                            makeLightweightAnchorFromSpec(t.anchors[1])\n                        ];\n                        this.cacheTypeItem(TYPE_ITEM_ANCHORS, _anchors, typeMap.anchors);\n                    }\n                }\n                if (_anchors != null) {\n                    this.instance.router.setConnectionAnchors(this, _anchors);\n                    if (this.instance.router.isDynamicAnchor(this.endpoints[1])) this.instance.repaint(this.endpoints[1].element);\n                }\n                this.instance.applyConnectorType(this.connector, t);\n            }\n        },\n        {\n            key: \"addClass\",\n            value: function addClass(c, cascade) {\n                _get(_getPrototypeOf(Connection.prototype), \"addClass\", this).call(this, c);\n                if (cascade) {\n                    this.endpoints[0].addClass(c);\n                    this.endpoints[1].addClass(c);\n                    if (this.suspendedEndpoint) this.suspendedEndpoint.addClass(c);\n                }\n                if (this.connector) this.instance.addConnectorClass(this.connector, c);\n            }\n        },\n        {\n            key: \"removeClass\",\n            value: function removeClass(c, cascade) {\n                _get(_getPrototypeOf(Connection.prototype), \"removeClass\", this).call(this, c);\n                if (cascade) {\n                    this.endpoints[0].removeClass(c);\n                    this.endpoints[1].removeClass(c);\n                    if (this.suspendedEndpoint) this.suspendedEndpoint.removeClass(c);\n                }\n                if (this.connector) this.instance.removeConnectorClass(this.connector, c);\n            }\n        },\n        {\n            key: \"setVisible\",\n            value: function setVisible(v) {\n                _get(_getPrototypeOf(Connection.prototype), \"setVisible\", this).call(this, v);\n                if (this.connector) this.instance.setConnectorVisible(this.connector, v);\n                this.instance._paintConnection(this);\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                _get(_getPrototypeOf(Connection.prototype), \"destroy\", this).call(this);\n                this.endpoints = null;\n                this.endpointStyles = null;\n                this.source = null;\n                this.target = null;\n                this.instance.destroyConnector(this);\n                this.connector = null;\n                this.deleted = true;\n            }\n        },\n        {\n            key: \"getUuids\",\n            value: function getUuids() {\n                return [\n                    this.endpoints[0].getUuid(),\n                    this.endpoints[1].getUuid()\n                ];\n            }\n        },\n        {\n            key: \"prepareConnector\",\n            value: function prepareConnector(connectorSpec, typeId) {\n                var connectorArgs = {\n                    cssClass: this.params.cssClass,\n                    hoverClass: this.params.hoverClass,\n                    \"pointer-events\": this.params[\"pointer-events\"]\n                }, connector;\n                if (isString(connectorSpec)) connector = this.instance._makeConnector(this, connectorSpec, connectorArgs);\n                else {\n                    var co = connectorSpec;\n                    connector = this.instance._makeConnector(this, co.type, merge(co.options || {}, connectorArgs));\n                }\n                if (typeId != null) connector.typeId = typeId;\n                return connector;\n            }\n        },\n        {\n            key: \"setPreparedConnector\",\n            value: function setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\n                if (this.connector !== connector) {\n                    var previous, previousClasses = \"\";\n                    if (this.connector != null) {\n                        previous = this.connector;\n                        previousClasses = this.instance.getConnectorClass(this.connector);\n                        this.instance.destroyConnector(this);\n                    }\n                    this.connector = connector;\n                    if (typeId) this.cacheTypeItem(TYPE_ITEM_CONNECTOR, connector, typeId);\n                    this.addClass(previousClasses);\n                    if (previous != null) {\n                        var o = this.getOverlays();\n                        for(var i in o)this.instance.reattachOverlay(o[i], this);\n                    }\n                    if (!doNotRepaint) this.instance._paintConnection(this);\n                }\n            }\n        },\n        {\n            key: \"_setConnector\",\n            value: function _setConnector(connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\n                var connector = this.prepareConnector(connectorSpec, typeId);\n                this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\n            }\n        },\n        {\n            key: \"replaceEndpoint\",\n            value: function replaceEndpoint(idx, endpointDef) {\n                var current = this.endpoints[idx], elId = current.elementId, ebe = this.instance.getEndpoints(current.element), _idx = ebe.indexOf(current), _new = prepareEndpoint(this, null, idx, null, current.element, elId, endpointDef);\n                this.endpoints[idx] = _new;\n                ebe.splice(_idx, 1, _new);\n                current.detachFromConnection(this);\n                this.instance.deleteEndpoint(current);\n                this.instance.fire(EVENT_ENDPOINT_REPLACED, {\n                    previous: current,\n                    current: _new\n                });\n            }\n        }\n    ]);\n    return Connection;\n}(Component);\n_defineProperty(Connection, \"type\", \"connection\");\nfunction ensureSVGOverlayPath(o) {\n    if (o.path == null) {\n        var atts = extend({\n            \"jtk-overlay-id\": o.id\n        }, o.attributes);\n        o.path = _node(ELEMENT_PATH, atts);\n        var cls = o.instance.overlayClass + \" \" + (o.cssClass ? o.cssClass : \"\");\n        o.instance.addClass(o.path, cls);\n        o.path.jtk = {\n            overlay: o\n        };\n    }\n    var parent = o.path.parentNode;\n    if (parent == null) {\n        if (o.component instanceof Connection) {\n            var connector = o.component.connector;\n            parent = connector != null ? connector.canvas : null;\n        } else if (o.component instanceof Endpoint) {\n            var endpoint = o.component.endpoint;\n            parent = endpoint != null ? endpoint.canvas : endpoint;\n        }\n        if (parent != null) _appendAtIndex(parent, o.path, 1);\n    }\n    return o.path;\n}\nfunction paintSVGOverlay(o, path, params, extents) {\n    ensureSVGOverlayPath(o);\n    var offset = [\n        0,\n        0\n    ];\n    if (extents.xmin < 0) offset[0] = -extents.xmin;\n    if (extents.ymin < 0) offset[1] = -extents.ymin;\n    var a = {\n        \"d\": path,\n        stroke: params.stroke ? params.stroke : null,\n        fill: params.fill ? params.fill : null,\n        transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\n        \"pointer-events\": \"visibleStroke\"\n    };\n    _attr(o.path, a);\n}\nfunction destroySVGOverlay(o, force) {\n    var _o = o;\n    if (_o.path != null && _o.path.parentNode != null) _o.path.parentNode.removeChild(_o.path);\n    if (_o.bgPath != null && _o.bgPath.parentNode != null) _o.bgPath.parentNode.removeChild(_o.bgPath);\n    delete _o.path;\n    delete _o.bgPath;\n}\n(function(_Overlay) {\n    _inherits(SVGElementOverlay, _Overlay);\n    var _super = _createSuper(SVGElementOverlay);\n    function SVGElementOverlay() {\n        var _this;\n        _classCallCheck(this, SVGElementOverlay);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n        _this = _super.call.apply(_super, [\n            this\n        ].concat(args));\n        _defineProperty(_assertThisInitialized(_this), \"path\", void 0);\n        return _this;\n    }\n    return SVGElementOverlay;\n})(Overlay);\nvar SvgComponent = function() {\n    function SvgComponent() {\n        _classCallCheck(this, SvgComponent);\n    }\n    _createClass(SvgComponent, null, [\n        {\n            key: \"paint\",\n            value: function paint(connector, instance, paintStyle, extents) {\n                if (paintStyle != null) {\n                    var xy = [\n                        connector.x,\n                        connector.y\n                    ], wh = [\n                        connector.w,\n                        connector.h\n                    ];\n                    if (extents != null) {\n                        if (extents.xmin < 0) xy[0] += extents.xmin;\n                        if (extents.ymin < 0) xy[1] += extents.ymin;\n                        wh[0] = extents.xmax + (extents.xmin < 0 ? -extents.xmin : 0);\n                        wh[1] = extents.ymax + (extents.ymin < 0 ? -extents.ymin : 0);\n                    }\n                    if (isFinite(wh[0]) && isFinite(wh[1])) {\n                        var attrs = {\n                            \"width\": \"\" + (wh[0] || 0),\n                            \"height\": \"\" + (wh[1] || 0)\n                        };\n                        if (instance.containerType === ElementTypes.HTML) _attr(connector.canvas, extend(attrs, {\n                            style: _pos([\n                                xy[0],\n                                xy[1]\n                            ])\n                        }));\n                        else _attr(connector.canvas, extend(attrs, {\n                            x: xy[0],\n                            y: xy[1]\n                        }));\n                    }\n                }\n            }\n        }\n    ]);\n    return SvgComponent;\n}();\nfunction paintSvgConnector(instance, connector, paintStyle, extents) {\n    getConnectorElement(instance, connector);\n    SvgComponent.paint(connector, instance, paintStyle, extents);\n    var p = \"\", offset = [\n        0,\n        0\n    ];\n    if (extents.xmin < 0) offset[0] = -extents.xmin;\n    if (extents.ymin < 0) offset[1] = -extents.ymin;\n    if (connector.segments.length > 0) {\n        p = instance.getPathData(connector);\n        var a = {\n            d: p,\n            transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\n            \"pointer-events\": \"visibleStroke\"\n        }, outlineStyle = null;\n        if (paintStyle.outlineStroke) {\n            var outlineWidth = paintStyle.outlineWidth || 1, outlineStrokeWidth = paintStyle.strokeWidth + 2 * outlineWidth;\n            outlineStyle = extend({}, paintStyle);\n            outlineStyle.stroke = paintStyle.outlineStroke;\n            outlineStyle.strokeWidth = outlineStrokeWidth;\n            if (connector.bgPath == null) {\n                connector.bgPath = _node(ELEMENT_PATH, a);\n                instance.addClass(connector.bgPath, instance.connectorOutlineClass);\n                _appendAtIndex(connector.canvas, connector.bgPath, 0);\n            } else _attr(connector.bgPath, a);\n            _applyStyles(connector.canvas, connector.bgPath, outlineStyle);\n        }\n        var cany = connector;\n        if (cany.path == null) {\n            cany.path = _node(ELEMENT_PATH, a);\n            _appendAtIndex(cany.canvas, cany.path, paintStyle.outlineStroke ? 1 : 0);\n        } else {\n            if (cany.path.parentNode !== cany.canvas) _appendAtIndex(cany.canvas, cany.path, paintStyle.outlineStroke ? 1 : 0);\n            _attr(connector.path, a);\n        }\n        _applyStyles(connector.canvas, connector.path, paintStyle);\n    }\n}\nfunction getConnectorElement(instance, c) {\n    if (c.canvas != null) return c.canvas;\n    else {\n        var svg = _node(ELEMENT_SVG, {\n            \"style\": \"\",\n            \"width\": \"0\",\n            \"height\": \"0\",\n            \"pointer-events\": NONE,\n            \"position\": ABSOLUTE\n        });\n        c.canvas = svg;\n        instance._appendElement(c.canvas, instance.getContainer());\n        if (c.cssClass != null) instance.addClass(svg, c.cssClass);\n        instance.addClass(svg, instance.connectorClass);\n        svg.jtk = svg.jtk || {};\n        svg.jtk.connector = c;\n        return svg;\n    }\n}\nvar SvgEndpoint = function() {\n    function SvgEndpoint() {\n        _classCallCheck(this, SvgEndpoint);\n    }\n    _createClass(SvgEndpoint, null, [\n        {\n            key: \"getEndpointElement\",\n            value: function getEndpointElement(ep) {\n                if (ep.canvas != null) return ep.canvas;\n                else {\n                    var canvas = _node(ELEMENT_SVG, {\n                        \"style\": \"\",\n                        \"width\": \"0\",\n                        \"height\": \"0\",\n                        \"pointer-events\": \"all\",\n                        \"position\": ABSOLUTE\n                    });\n                    ep.canvas = canvas;\n                    var classes = ep.classes.join(\" \");\n                    ep.instance.addClass(canvas, classes);\n                    var scopes = ep.endpoint.scope.split(/\\s/);\n                    for(var i = 0; i < scopes.length; i++)ep.instance.setAttribute(canvas, ATTRIBUTE_SCOPE_PREFIX + scopes[i], TRUE$1);\n                    ep.instance._appendElementToContainer(canvas);\n                    if (ep.cssClass != null) ep.instance.addClass(canvas, ep.cssClass);\n                    ep.instance.addClass(canvas, ep.instance.endpointClass);\n                    canvas.jtk = canvas.jtk || {};\n                    canvas.jtk.endpoint = ep.endpoint;\n                    canvas.style.display = ep.endpoint.visible !== false ? BLOCK : NONE;\n                    return canvas;\n                }\n            }\n        },\n        {\n            key: \"paint\",\n            value: function paint(ep, handlers, paintStyle) {\n                if (ep.endpoint.deleted !== true) {\n                    this.getEndpointElement(ep);\n                    SvgComponent.paint(ep, ep.instance, paintStyle);\n                    var s = extend({}, paintStyle);\n                    if (s.outlineStroke) s.stroke = s.outlineStroke;\n                    if (ep.node == null) {\n                        ep.node = handlers.makeNode(ep, s);\n                        ep.canvas.appendChild(ep.node);\n                    } else if (handlers.updateNode != null) handlers.updateNode(ep, ep.node);\n                    _applyStyles(ep.canvas, ep.node, s);\n                }\n            }\n        }\n    ]);\n    return SvgEndpoint;\n}();\nvar AbstractConnector = function() {\n    function AbstractConnector(connection, params) {\n        _classCallCheck(this, AbstractConnector);\n        this.connection = connection;\n        _defineProperty(this, \"type\", void 0);\n        _defineProperty(this, \"edited\", false);\n        _defineProperty(this, \"stub\", void 0);\n        _defineProperty(this, \"sourceStub\", void 0);\n        _defineProperty(this, \"targetStub\", void 0);\n        _defineProperty(this, \"maxStub\", void 0);\n        _defineProperty(this, \"typeId\", void 0);\n        _defineProperty(this, \"gap\", void 0);\n        _defineProperty(this, \"sourceGap\", void 0);\n        _defineProperty(this, \"targetGap\", void 0);\n        _defineProperty(this, \"segments\", []);\n        _defineProperty(this, \"totalLength\", 0);\n        _defineProperty(this, \"segmentProportions\", []);\n        _defineProperty(this, \"segmentProportionalLengths\", []);\n        _defineProperty(this, \"paintInfo\", null);\n        _defineProperty(this, \"strokeWidth\", void 0);\n        _defineProperty(this, \"x\", void 0);\n        _defineProperty(this, \"y\", void 0);\n        _defineProperty(this, \"w\", void 0);\n        _defineProperty(this, \"h\", void 0);\n        _defineProperty(this, \"segment\", void 0);\n        _defineProperty(this, \"bounds\", EMPTY_BOUNDS());\n        _defineProperty(this, \"cssClass\", void 0);\n        _defineProperty(this, \"hoverClass\", void 0);\n        _defineProperty(this, \"geometry\", void 0);\n        this.stub = params.stub || this.getDefaultStubs();\n        this.sourceStub = Array.isArray(this.stub) ? this.stub[0] : this.stub;\n        this.targetStub = Array.isArray(this.stub) ? this.stub[1] : this.stub;\n        this.gap = params.gap || 0;\n        this.sourceGap = Array.isArray(this.gap) ? this.gap[0] : this.gap;\n        this.targetGap = Array.isArray(this.gap) ? this.gap[1] : this.gap;\n        this.maxStub = Math.max(this.sourceStub, this.targetStub);\n        this.cssClass = params.cssClass || \"\";\n        this.hoverClass = params.hoverClass || \"\";\n    }\n    _createClass(AbstractConnector, [\n        {\n            key: \"getTypeDescriptor\",\n            value: function getTypeDescriptor() {\n                return \"connector\";\n            }\n        },\n        {\n            key: \"getIdPrefix\",\n            value: function getIdPrefix() {\n                return \"_jsplumb_connector\";\n            }\n        },\n        {\n            key: \"setGeometry\",\n            value: function setGeometry(g, internal) {\n                this.geometry = g;\n                this.edited = g != null && !internal;\n            }\n        },\n        {\n            key: \"exportGeometry\",\n            value: function exportGeometry() {\n                return this.geometry;\n            }\n        },\n        {\n            key: \"importGeometry\",\n            value: function importGeometry(g) {\n                this.geometry = g;\n                return true;\n            }\n        },\n        {\n            key: \"resetGeometry\",\n            value: function resetGeometry() {\n                this.geometry = null;\n                this.edited = false;\n            }\n        },\n        {\n            key: \"transformAnchorPlacement\",\n            value: function transformAnchorPlacement(a, dx, dy) {\n                return {\n                    x: a.x,\n                    y: a.y,\n                    ox: a.ox,\n                    oy: a.oy,\n                    curX: a.curX + dx,\n                    curY: a.curY + dy\n                };\n            }\n        },\n        {\n            key: \"resetBounds\",\n            value: function resetBounds() {\n                this.bounds = EMPTY_BOUNDS();\n            }\n        },\n        {\n            key: \"findSegmentForPoint\",\n            value: function findSegmentForPoint(x, y) {\n                var out = {\n                    d: Infinity,\n                    s: null,\n                    x: null,\n                    y: null,\n                    l: null,\n                    x1: null,\n                    y1: null,\n                    x2: null,\n                    y2: null,\n                    index: null,\n                    connectorLocation: null\n                };\n                for(var i = 0; i < this.segments.length; i++){\n                    var _s = this.segments[i].findClosestPointOnPath(x, y);\n                    if (_s.d < out.d) {\n                        out.d = _s.d;\n                        out.l = _s.l;\n                        out.x = _s.x;\n                        out.y = _s.y;\n                        out.s = this.segments[i];\n                        out.x1 = _s.x1;\n                        out.x2 = _s.x2;\n                        out.y1 = _s.y1;\n                        out.y2 = _s.y2;\n                        out.index = i;\n                        out.connectorLocation = this.segmentProportions[i][0] + _s.l * (this.segmentProportions[i][1] - this.segmentProportions[i][0]);\n                    }\n                }\n                return out;\n            }\n        },\n        {\n            key: \"lineIntersection\",\n            value: function lineIntersection(x1, y1, x2, y2) {\n                var out = [];\n                for(var i = 0; i < this.segments.length; i++)out.push.apply(out, this.segments[i].lineIntersection(x1, y1, x2, y2));\n                return out;\n            }\n        },\n        {\n            key: \"boxIntersection\",\n            value: function boxIntersection(x, y, w, h) {\n                var out = [];\n                for(var i = 0; i < this.segments.length; i++)out.push.apply(out, this.segments[i].boxIntersection(x, y, w, h));\n                return out;\n            }\n        },\n        {\n            key: \"boundingBoxIntersection\",\n            value: function boundingBoxIntersection(box) {\n                var out = [];\n                for(var i = 0; i < this.segments.length; i++)out.push.apply(out, this.segments[i].boundingBoxIntersection(box));\n                return out;\n            }\n        },\n        {\n            key: \"_updateSegmentProportions\",\n            value: function _updateSegmentProportions() {\n                var curLoc = 0;\n                for(var i = 0; i < this.segments.length; i++){\n                    var sl = this.segments[i].getLength();\n                    this.segmentProportionalLengths[i] = sl / this.totalLength;\n                    this.segmentProportions[i] = [\n                        curLoc,\n                        curLoc += sl / this.totalLength\n                    ];\n                }\n            }\n        },\n        {\n            key: \"_findSegmentForLocation\",\n            value: function _findSegmentForLocation(location, absolute) {\n                var idx, i, inSegmentProportion;\n                if (absolute) location = location > 0 ? location / this.totalLength : (this.totalLength + location) / this.totalLength;\n                if (location === 1) {\n                    idx = this.segments.length - 1;\n                    inSegmentProportion = 1;\n                } else if (location === 0) {\n                    inSegmentProportion = 0;\n                    idx = 0;\n                } else if (location >= 0.5) {\n                    idx = 0;\n                    inSegmentProportion = 0;\n                    for(i = this.segmentProportions.length - 1; i > -1; i--)if (this.segmentProportions[i][1] >= location && this.segmentProportions[i][0] <= location) {\n                        idx = i;\n                        inSegmentProportion = (location - this.segmentProportions[i][0]) / this.segmentProportionalLengths[i];\n                        break;\n                    }\n                } else {\n                    idx = this.segmentProportions.length - 1;\n                    inSegmentProportion = 1;\n                    for(i = 0; i < this.segmentProportions.length; i++)if (this.segmentProportions[i][1] >= location) {\n                        idx = i;\n                        inSegmentProportion = (location - this.segmentProportions[i][0]) / this.segmentProportionalLengths[i];\n                        break;\n                    }\n                }\n                return {\n                    segment: this.segments[idx],\n                    proportion: inSegmentProportion,\n                    index: idx\n                };\n            }\n        },\n        {\n            key: \"_addSegment\",\n            value: function _addSegment(clazz, params) {\n                if (params.x1 === params.x2 && params.y1 === params.y2) return;\n                var s = new clazz(params);\n                this.segments.push(s);\n                this.totalLength += s.getLength();\n                this.updateBounds(s);\n            }\n        },\n        {\n            key: \"_clearSegments\",\n            value: function _clearSegments() {\n                this.totalLength = 0;\n                this.segments.length = 0;\n                this.segmentProportions.length = 0;\n                this.segmentProportionalLengths.length = 0;\n            }\n        },\n        {\n            key: \"getLength\",\n            value: function getLength() {\n                return this.totalLength;\n            }\n        },\n        {\n            key: \"_prepareCompute\",\n            value: function _prepareCompute(params) {\n                this.strokeWidth = params.strokeWidth;\n                var x1 = params.sourcePos.curX, x2 = params.targetPos.curX, y1 = params.sourcePos.curY, y2 = params.targetPos.curY, segment = quadrant({\n                    x: x1,\n                    y: y1\n                }, {\n                    x: x2,\n                    y: y2\n                }), swapX = x2 < x1, swapY = y2 < y1, so = [\n                    params.sourcePos.ox,\n                    params.sourcePos.oy\n                ], to = [\n                    params.targetPos.ox,\n                    params.targetPos.oy\n                ], x = swapX ? x2 : x1, y = swapY ? y2 : y1, w = Math.abs(x2 - x1), h = Math.abs(y2 - y1);\n                var noSourceOrientation = so[0] === 0 && so[1] === 0;\n                var noTargetOrientation = to[0] === 0 && to[1] === 0;\n                if (noSourceOrientation || noTargetOrientation) {\n                    var index = w > h ? 0 : 1, oIndex = [\n                        1,\n                        0\n                    ][index], v1 = index === 0 ? x1 : y1, v2 = index === 0 ? x2 : y2;\n                    if (noSourceOrientation) {\n                        so[index] = v1 > v2 ? -1 : 1;\n                        so[oIndex] = 0;\n                    }\n                    if (noTargetOrientation) {\n                        to[index] = v1 > v2 ? 1 : -1;\n                        to[oIndex] = 0;\n                    }\n                }\n                var sx = swapX ? w + this.sourceGap * so[0] : this.sourceGap * so[0], sy = swapY ? h + this.sourceGap * so[1] : this.sourceGap * so[1], tx = swapX ? this.targetGap * to[0] : w + this.targetGap * to[0], ty = swapY ? this.targetGap * to[1] : h + this.targetGap * to[1], oProduct = so[0] * to[0] + so[1] * to[1];\n                var result = {\n                    sx: sx,\n                    sy: sy,\n                    tx: tx,\n                    ty: ty,\n                    xSpan: Math.abs(tx - sx),\n                    ySpan: Math.abs(ty - sy),\n                    mx: (sx + tx) / 2,\n                    my: (sy + ty) / 2,\n                    so: so,\n                    to: to,\n                    x: x,\n                    y: y,\n                    w: w,\n                    h: h,\n                    segment: segment,\n                    startStubX: sx + so[0] * this.sourceStub,\n                    startStubY: sy + so[1] * this.sourceStub,\n                    endStubX: tx + to[0] * this.targetStub,\n                    endStubY: ty + to[1] * this.targetStub,\n                    isXGreaterThanStubTimes2: Math.abs(sx - tx) > this.sourceStub + this.targetStub,\n                    isYGreaterThanStubTimes2: Math.abs(sy - ty) > this.sourceStub + this.targetStub,\n                    opposite: oProduct === -1,\n                    perpendicular: oProduct === 0,\n                    orthogonal: oProduct === 1,\n                    sourceAxis: so[0] === 0 ? \"y\" : \"x\",\n                    points: [\n                        x,\n                        y,\n                        w,\n                        h,\n                        sx,\n                        sy,\n                        tx,\n                        ty\n                    ],\n                    stubs: [\n                        this.sourceStub,\n                        this.targetStub\n                    ]\n                };\n                result.anchorOrientation = result.opposite ? \"opposite\" : result.orthogonal ? \"orthogonal\" : \"perpendicular\";\n                return result;\n            }\n        },\n        {\n            key: \"updateBounds\",\n            value: function updateBounds(segment) {\n                var segBounds = segment.extents;\n                this.bounds.xmin = Math.min(this.bounds.xmin, segBounds.xmin);\n                this.bounds.xmax = Math.max(this.bounds.xmax, segBounds.xmax);\n                this.bounds.ymin = Math.min(this.bounds.ymin, segBounds.ymin);\n                this.bounds.ymax = Math.max(this.bounds.ymax, segBounds.ymax);\n            }\n        },\n        {\n            key: \"dumpSegmentsToConsole\",\n            value: function dumpSegmentsToConsole() {\n                log(\"SEGMENTS:\");\n                for(var i = 0; i < this.segments.length; i++)log(this.segments[i].type, \"\" + this.segments[i].getLength(), \"\" + this.segmentProportions[i]);\n            }\n        },\n        {\n            key: \"pointOnPath\",\n            value: function pointOnPath(location, absolute) {\n                var seg = this._findSegmentForLocation(location, absolute);\n                return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || {\n                    x: 0,\n                    y: 0\n                };\n            }\n        },\n        {\n            key: \"gradientAtPoint\",\n            value: function gradientAtPoint(location, absolute) {\n                var seg = this._findSegmentForLocation(location, absolute);\n                return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\n            }\n        },\n        {\n            key: \"pointAlongPathFrom\",\n            value: function pointAlongPathFrom(location, distance, absolute) {\n                var seg = this._findSegmentForLocation(location, absolute);\n                return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || {\n                    x: 0,\n                    y: 0\n                };\n            }\n        },\n        {\n            key: \"compute\",\n            value: function compute(params) {\n                this.paintInfo = this._prepareCompute(params);\n                this._clearSegments();\n                this._compute(this.paintInfo, params);\n                this.x = this.paintInfo.points[0];\n                this.y = this.paintInfo.points[1];\n                this.w = this.paintInfo.points[2];\n                this.h = this.paintInfo.points[3];\n                this.segment = this.paintInfo.segment;\n                this._updateSegmentProportions();\n            }\n        },\n        {\n            key: \"setAnchorOrientation\",\n            value: function setAnchorOrientation(idx, orientation) {}\n        }\n    ]);\n    return AbstractConnector;\n}();\nvar DEFAULT_WIDTH = 20;\nvar DEFAULT_LENGTH = 20;\nvar ArrowOverlay = function(_Overlay) {\n    _inherits(ArrowOverlay, _Overlay);\n    var _super = _createSuper(ArrowOverlay);\n    function ArrowOverlay(instance, component, p) {\n        var _this;\n        _classCallCheck(this, ArrowOverlay);\n        _this = _super.call(this, instance, component, p);\n        _this.instance = instance;\n        _this.component = component;\n        _defineProperty(_assertThisInitialized(_this), \"width\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"foldback\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"direction\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"location\", 0.5);\n        _defineProperty(_assertThisInitialized(_this), \"paintStyle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", ArrowOverlay.type);\n        _defineProperty(_assertThisInitialized(_this), \"cachedDimensions\", void 0);\n        p = p || {};\n        _this.width = p.width || DEFAULT_WIDTH;\n        _this.length = p.length || DEFAULT_LENGTH;\n        _this.direction = (p.direction || 1) < 0 ? -1 : 1;\n        _this.foldback = p.foldback || 0.623;\n        _this.paintStyle = p.paintStyle || {\n            \"strokeWidth\": 1\n        };\n        _this.location = p.location == null ? _this.location : Array.isArray(p.location) ? p.location[0] : p.location;\n        return _this;\n    }\n    _createClass(ArrowOverlay, [\n        {\n            key: \"draw\",\n            value: function draw(component, currentConnectionPaintStyle, absolutePosition) {\n                if (component instanceof AbstractConnector) {\n                    var connector = component;\n                    var hxy, mid, txy, tail, cxy;\n                    if (this.location > 1 || this.location < 0) {\n                        var fromLoc = this.location < 0 ? 1 : 0;\n                        hxy = connector.pointAlongPathFrom(fromLoc, this.location, false);\n                        mid = connector.pointAlongPathFrom(fromLoc, this.location - this.direction * this.length / 2, false);\n                        txy = pointOnLine(hxy, mid, this.length);\n                    } else if (this.location === 1) {\n                        hxy = connector.pointOnPath(this.location);\n                        mid = connector.pointAlongPathFrom(this.location, -this.length);\n                        txy = pointOnLine(hxy, mid, this.length);\n                        if (this.direction === -1) {\n                            var _ = txy;\n                            txy = hxy;\n                            hxy = _;\n                        }\n                    } else if (this.location === 0) {\n                        txy = connector.pointOnPath(this.location);\n                        mid = connector.pointAlongPathFrom(this.location, this.length);\n                        hxy = pointOnLine(txy, mid, this.length);\n                        if (this.direction === -1) {\n                            var __ = txy;\n                            txy = hxy;\n                            hxy = __;\n                        }\n                    } else {\n                        hxy = connector.pointAlongPathFrom(this.location, this.direction * this.length / 2);\n                        mid = connector.pointOnPath(this.location);\n                        txy = pointOnLine(hxy, mid, this.length);\n                    }\n                    tail = perpendicularLineTo(hxy, txy, this.width);\n                    cxy = pointOnLine(hxy, txy, this.foldback * this.length);\n                    var d = {\n                        hxy: hxy,\n                        tail: tail,\n                        cxy: cxy\n                    }, stroke = this.paintStyle.stroke || currentConnectionPaintStyle.stroke, fill = this.paintStyle.fill || currentConnectionPaintStyle.stroke, lineWidth = this.paintStyle.strokeWidth || currentConnectionPaintStyle.strokeWidth;\n                    return {\n                        component: component,\n                        d: d,\n                        \"stroke-width\": lineWidth,\n                        stroke: stroke,\n                        fill: fill,\n                        xmin: Math.min(hxy.x, tail[0].x, tail[1].x),\n                        xmax: Math.max(hxy.x, tail[0].x, tail[1].x),\n                        ymin: Math.min(hxy.y, tail[0].y, tail[1].y),\n                        ymax: Math.max(hxy.y, tail[0].y, tail[1].y)\n                    };\n                }\n            }\n        },\n        {\n            key: \"updateFrom\",\n            value: function updateFrom(d) {}\n        }\n    ]);\n    return ArrowOverlay;\n}(Overlay);\n_defineProperty(ArrowOverlay, \"type\", \"Arrow\");\nfunction isArrowOverlay(o) {\n    return o.type === ArrowOverlay.type;\n}\nOverlayFactory.register(ArrowOverlay.type, ArrowOverlay);\nvar DiamondOverlay = function(_ArrowOverlay) {\n    _inherits(DiamondOverlay, _ArrowOverlay);\n    var _super = _createSuper(DiamondOverlay);\n    function DiamondOverlay(instance, component, p) {\n        var _this;\n        _classCallCheck(this, DiamondOverlay);\n        _this = _super.call(this, instance, component, p);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"type\", DiamondOverlay.type);\n        _this.length = _this.length / 2;\n        _this.foldback = 2;\n        return _this;\n    }\n    return DiamondOverlay;\n}(ArrowOverlay);\n_defineProperty(DiamondOverlay, \"type\", \"Diamond\");\nfunction isDiamondOverlay(o) {\n    return o.type === DiamondOverlay.type;\n}\nOverlayFactory.register(DiamondOverlay.type, DiamondOverlay);\nvar PlainArrowOverlay = function(_ArrowOverlay) {\n    _inherits(PlainArrowOverlay, _ArrowOverlay);\n    var _super = _createSuper(PlainArrowOverlay);\n    function PlainArrowOverlay(instance, component, p) {\n        var _this;\n        _classCallCheck(this, PlainArrowOverlay);\n        _this = _super.call(this, instance, component, p);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"type\", PlainArrowOverlay.type);\n        _this.foldback = 1;\n        return _this;\n    }\n    return PlainArrowOverlay;\n}(ArrowOverlay);\n_defineProperty(PlainArrowOverlay, \"type\", \"PlainArrow\");\nfunction isPlainArrowOverlay(o) {\n    return o.type === PlainArrowOverlay.type;\n}\nOverlayFactory.register(\"PlainArrow\", PlainArrowOverlay);\nvar CustomOverlay = function(_Overlay) {\n    _inherits(CustomOverlay, _Overlay);\n    var _super = _createSuper(CustomOverlay);\n    function CustomOverlay(instance, component, p) {\n        var _this;\n        _classCallCheck(this, CustomOverlay);\n        _this = _super.call(this, instance, component, p);\n        _this.instance = instance;\n        _this.component = component;\n        _defineProperty(_assertThisInitialized(_this), \"create\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", CustomOverlay.type);\n        _this.create = p.create;\n        return _this;\n    }\n    _createClass(CustomOverlay, [\n        {\n            key: \"updateFrom\",\n            value: function updateFrom(d) {}\n        }\n    ]);\n    return CustomOverlay;\n}(Overlay);\n_defineProperty(CustomOverlay, \"type\", \"Custom\");\nfunction isCustomOverlay(o) {\n    return o.type === CustomOverlay.type;\n}\nOverlayFactory.register(CustomOverlay.type, CustomOverlay);\nvar DEFAULT_KEY_ALLOW_NESTED_GROUPS = \"allowNestedGroups\";\nvar DEFAULT_KEY_ANCHOR = \"anchor\";\nvar DEFAULT_KEY_ANCHORS = \"anchors\";\nvar DEFAULT_KEY_CONNECTION_OVERLAYS = \"connectionOverlays\";\nvar DEFAULT_KEY_CONNECTIONS_DETACHABLE = \"connectionsDetachable\";\nvar DEFAULT_KEY_CONNECTOR = \"connector\";\nvar DEFAULT_KEY_CONTAINER = \"container\";\nvar DEFAULT_KEY_ENDPOINT = \"endpoint\";\nvar DEFAULT_KEY_ENDPOINT_OVERLAYS = \"endpointOverlays\";\nvar DEFAULT_KEY_ENDPOINTS = \"endpoints\";\nvar DEFAULT_KEY_ENDPOINT_STYLE = \"endpointStyle\";\nvar DEFAULT_KEY_ENDPOINT_STYLES = \"endpointStyles\";\nvar DEFAULT_KEY_ENDPOINT_HOVER_STYLE = \"endpointHoverStyle\";\nvar DEFAULT_KEY_ENDPOINT_HOVER_STYLES = \"endpointHoverStyles\";\nvar DEFAULT_KEY_HOVER_CLASS = \"hoverClass\";\nvar DEFAULT_KEY_HOVER_PAINT_STYLE = \"hoverPaintStyle\";\nvar DEFAULT_KEY_LIST_STYLE = \"listStyle\";\nvar DEFAULT_KEY_MAX_CONNECTIONS = \"maxConnections\";\nvar DEFAULT_KEY_PAINT_STYLE = \"paintStyle\";\nvar DEFAULT_KEY_REATTACH_CONNECTIONS = \"reattachConnections\";\nvar DEFAULT_KEY_SCOPE = \"scope\";\nvar DotEndpoint = function(_EndpointRepresentati) {\n    _inherits(DotEndpoint, _EndpointRepresentati);\n    var _super = _createSuper(DotEndpoint);\n    function DotEndpoint(endpoint, params) {\n        var _this;\n        _classCallCheck(this, DotEndpoint);\n        _this = _super.call(this, endpoint, params);\n        _defineProperty(_assertThisInitialized(_this), \"radius\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"defaultOffset\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"defaultInnerRadius\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", DotEndpoint.type);\n        params = params || {};\n        _this.radius = params.radius || 5;\n        _this.defaultOffset = 0.5 * _this.radius;\n        _this.defaultInnerRadius = _this.radius / 3;\n        return _this;\n    }\n    return DotEndpoint;\n}(EndpointRepresentation);\n_defineProperty(DotEndpoint, \"type\", \"Dot\");\nvar DotEndpointHandler = {\n    type: DotEndpoint.type,\n    cls: DotEndpoint,\n    compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\n        var x = anchorPoint.curX - ep.radius, y = anchorPoint.curY - ep.radius, w = ep.radius * 2, h = ep.radius * 2;\n        if (endpointStyle && endpointStyle.stroke) {\n            var lw = endpointStyle.strokeWidth || 1;\n            x -= lw;\n            y -= lw;\n            w += lw * 2;\n            h += lw * 2;\n        }\n        ep.x = x;\n        ep.y = y;\n        ep.w = w;\n        ep.h = h;\n        return [\n            x,\n            y,\n            w,\n            h,\n            ep.radius\n        ];\n    },\n    getParams: function getParams(ep) {\n        return {\n            radius: ep.radius\n        };\n    }\n};\nvar UINode = function UINode(instance, el) {\n    _classCallCheck(this, UINode);\n    this.instance = instance;\n    this.el = el;\n    _defineProperty(this, \"group\", void 0);\n};\nvar UIGroup = function(_UINode) {\n    _inherits(UIGroup, _UINode);\n    var _super = _createSuper(UIGroup);\n    function UIGroup(instance, el, options) {\n        var _this;\n        _classCallCheck(this, UIGroup);\n        _this = _super.call(this, instance, el);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"children\", []);\n        _defineProperty(_assertThisInitialized(_this), \"collapsed\", false);\n        _defineProperty(_assertThisInitialized(_this), \"droppable\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"enabled\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"orphan\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"constrain\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"proxied\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"ghost\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"revert\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"prune\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"dropOverride\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"anchor\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"endpoint\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"connections\", {\n            source: [],\n            target: [],\n            internal: []\n        });\n        _defineProperty(_assertThisInitialized(_this), \"manager\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"elId\", void 0);\n        var jel = _this.el;\n        jel._isJsPlumbGroup = true;\n        jel._jsPlumbGroup = _assertThisInitialized(_this);\n        _this.elId = instance.getId(el);\n        _this.orphan = options.orphan === true;\n        _this.revert = _this.orphan === true ? false : options.revert !== false;\n        _this.droppable = options.droppable !== false;\n        _this.ghost = options.ghost === true;\n        _this.enabled = options.enabled !== false;\n        _this.prune = _this.orphan !== true && options.prune === true;\n        _this.constrain = _this.ghost || options.constrain === true;\n        _this.proxied = options.proxied !== false;\n        _this.id = options.id || uuid();\n        _this.dropOverride = options.dropOverride === true;\n        _this.anchor = options.anchor;\n        _this.endpoint = options.endpoint;\n        _this.anchor = options.anchor;\n        instance.setAttribute(el, ATTRIBUTE_GROUP, \"\");\n        return _this;\n    }\n    _createClass(UIGroup, [\n        {\n            key: \"contentArea\",\n            get: function get() {\n                return this.instance.getGroupContentArea(this);\n            }\n        },\n        {\n            key: \"overrideDrop\",\n            value: function overrideDrop(el, targetGroup) {\n                return this.dropOverride && (this.revert || this.prune || this.orphan);\n            }\n        },\n        {\n            key: \"getAnchor\",\n            value: function getAnchor(conn, endpointIndex) {\n                return this.anchor || \"Continuous\";\n            }\n        },\n        {\n            key: \"getEndpoint\",\n            value: function getEndpoint(conn, endpointIndex) {\n                return this.endpoint || {\n                    type: DotEndpoint.type,\n                    options: {\n                        radius: 10\n                    }\n                };\n            }\n        },\n        {\n            key: \"add\",\n            value: function add(_el, doNotFireEvent) {\n                var dragArea = this.instance.getGroupContentArea(this);\n                var __el = _el;\n                if (__el._jsPlumbParentGroup != null) {\n                    if (__el._jsPlumbParentGroup === this) return;\n                    else __el._jsPlumbParentGroup.remove(_el, true, doNotFireEvent, false);\n                }\n                __el._jsPlumbParentGroup = this;\n                this.children.push(new UINode(this.instance, _el));\n                this.instance._appendElement(__el, dragArea);\n                this.manager._updateConnectionsForGroup(this);\n            }\n        },\n        {\n            key: \"resolveNode\",\n            value: function resolveNode(el) {\n                return el == null ? null : getWithFunction(this.children, function(u) {\n                    return u.el === el;\n                });\n            }\n        },\n        {\n            key: \"remove\",\n            value: function remove(el, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\n                var uiNode = this.resolveNode(el);\n                if (uiNode != null) this._doRemove(uiNode, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup);\n            }\n        },\n        {\n            key: \"_doRemove\",\n            value: function _doRemove(child, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\n                var __el = child.el;\n                delete __el._jsPlumbParentGroup;\n                removeWithFunction(this.children, function(e) {\n                    return e === child;\n                });\n                if (manipulateDOM) try {\n                    this.instance.getGroupContentArea(this).removeChild(__el);\n                } catch (e) {\n                    log(\"Could not remove element from Group \" + e);\n                }\n                if (!doNotFireEvent) {\n                    var p = {\n                        group: this,\n                        el: __el\n                    };\n                    if (targetGroup) p.targetGroup = targetGroup;\n                    this.instance.fire(EVENT_GROUP_MEMBER_REMOVED, p);\n                }\n                if (!doNotUpdateConnections) this.manager._updateConnectionsForGroup(this);\n            }\n        },\n        {\n            key: \"removeAll\",\n            value: function removeAll(manipulateDOM, doNotFireEvent) {\n                for(var i = 0, l = this.children.length; i < l; i++){\n                    var child = this.children[0];\n                    this._doRemove(child, manipulateDOM, doNotFireEvent, true);\n                    this.instance.unmanage(child.el, true);\n                }\n                this.children.length = 0;\n                this.manager._updateConnectionsForGroup(this);\n            }\n        },\n        {\n            key: \"orphanAll\",\n            value: function orphanAll() {\n                var orphanedPositions = {};\n                for(var i = 0; i < this.children.length; i++){\n                    var newPosition = this.manager.orphan(this.children[i].el, false);\n                    orphanedPositions[newPosition.id] = newPosition.pos;\n                }\n                this.children.length = 0;\n                return orphanedPositions;\n            }\n        },\n        {\n            key: \"addGroup\",\n            value: function addGroup(group) {\n                if (this.instance.allowNestedGroups && group !== this) {\n                    if (this.instance.groupManager.isAncestor(this, group)) return false;\n                    if (group.group != null) group.group.removeGroup(group);\n                    var groupElId = this.instance.getId(group.el);\n                    var entry = this.instance.getManagedElements()[groupElId];\n                    entry.group = this.elId;\n                    var elpos = this.instance.getOffsetRelativeToRoot(group.el);\n                    var cpos = this.collapsed ? this.instance.getOffsetRelativeToRoot(this.el) : this.instance.getOffsetRelativeToRoot(this.instance.getGroupContentArea(this));\n                    group.el._jsPlumbParentGroup = this;\n                    this.children.push(group);\n                    this.instance._appendElementToGroup(this, group.el);\n                    group.group = this;\n                    var newPosition = {\n                        x: elpos.x - cpos.x,\n                        y: elpos.y - cpos.y\n                    };\n                    this.instance.setPosition(group.el, newPosition);\n                    this.instance.fire(EVENT_NESTED_GROUP_ADDED, {\n                        parent: this,\n                        child: group\n                    });\n                    return true;\n                } else return false;\n            }\n        },\n        {\n            key: \"removeGroup\",\n            value: function removeGroup(group) {\n                if (group.group === this) {\n                    var jel = group.el;\n                    var d = this.instance.getGroupContentArea(this);\n                    if (d === jel.parentNode) d.removeChild(group.el);\n                    var groupElId = this.instance.getId(group.el);\n                    var entry = this.instance.getManagedElements()[groupElId];\n                    if (entry) delete entry.group;\n                    this.children = this.children.filter(function(cg) {\n                        return cg.id !== group.id;\n                    });\n                    delete group.group;\n                    delete jel._jsPlumbParentGroup;\n                    this.instance.fire(EVENT_NESTED_GROUP_REMOVED, {\n                        parent: this,\n                        child: group\n                    });\n                }\n            }\n        },\n        {\n            key: \"getGroups\",\n            value: function getGroups() {\n                return this.children.filter(function(cg) {\n                    return cg.constructor === UIGroup;\n                });\n            }\n        },\n        {\n            key: \"getNodes\",\n            value: function getNodes() {\n                return this.children.filter(function(cg) {\n                    return cg.constructor === UINode;\n                });\n            }\n        },\n        {\n            key: \"collapseParent\",\n            get: function get() {\n                var cg = null;\n                if (this.group == null) return null;\n                else {\n                    var g = this.group;\n                    while(g != null){\n                        if (g.collapsed) cg = g;\n                        g = g.group;\n                    }\n                    return cg;\n                }\n            }\n        }\n    ]);\n    return UIGroup;\n}(UINode);\nvar GroupManager = function() {\n    function GroupManager(instance) {\n        var _this = this;\n        _classCallCheck(this, GroupManager);\n        this.instance = instance;\n        _defineProperty(this, \"groupMap\", {});\n        _defineProperty(this, \"_connectionSourceMap\", {});\n        _defineProperty(this, \"_connectionTargetMap\", {});\n        instance.bind(EVENT_INTERNAL_CONNECTION, function(p) {\n            var sourceGroup = _this.getGroupFor(p.source);\n            var targetGroup = _this.getGroupFor(p.target);\n            if (sourceGroup != null && targetGroup != null && sourceGroup === targetGroup) {\n                _this._connectionSourceMap[p.connection.id] = sourceGroup;\n                _this._connectionTargetMap[p.connection.id] = sourceGroup;\n                suggest(sourceGroup.connections.internal, p.connection);\n            } else {\n                if (sourceGroup != null) {\n                    if (p.target._jsPlumbGroup === sourceGroup) suggest(sourceGroup.connections.internal, p.connection);\n                    else suggest(sourceGroup.connections.source, p.connection);\n                    _this._connectionSourceMap[p.connection.id] = sourceGroup;\n                }\n                if (targetGroup != null) {\n                    if (p.source._jsPlumbGroup === targetGroup) suggest(targetGroup.connections.internal, p.connection);\n                    else suggest(targetGroup.connections.target, p.connection);\n                    _this._connectionTargetMap[p.connection.id] = targetGroup;\n                }\n            }\n        });\n        instance.bind(EVENT_INTERNAL_CONNECTION_DETACHED, function(p) {\n            _this._cleanupDetachedConnection(p.connection);\n        });\n        instance.bind(EVENT_CONNECTION_MOVED, function(p) {\n            var originalElement = p.originalEndpoint.element, originalGroup = _this.getGroupFor(originalElement), newEndpoint = p.connection.endpoints[p.index], newElement = newEndpoint.element, newGroup = _this.getGroupFor(newElement), connMap = p.index === 0 ? _this._connectionSourceMap : _this._connectionTargetMap, otherConnMap = p.index === 0 ? _this._connectionTargetMap : _this._connectionSourceMap;\n            if (newGroup != null) {\n                connMap[p.connection.id] = newGroup;\n                if (p.connection.source === p.connection.target) otherConnMap[p.connection.id] = newGroup;\n            } else {\n                delete connMap[p.connection.id];\n                if (p.connection.source === p.connection.target) delete otherConnMap[p.connection.id];\n            }\n            if (originalGroup != null) _this._updateConnectionsForGroup(originalGroup);\n            if (newGroup != null) _this._updateConnectionsForGroup(newGroup);\n        });\n    }\n    _createClass(GroupManager, [\n        {\n            key: \"_cleanupDetachedConnection\",\n            value: function _cleanupDetachedConnection(conn) {\n                conn.proxies.length = 0;\n                var group = this._connectionSourceMap[conn.id], f;\n                if (group != null) {\n                    f = function f(c) {\n                        return c.id === conn.id;\n                    };\n                    removeWithFunction(group.connections.source, f);\n                    removeWithFunction(group.connections.target, f);\n                    removeWithFunction(group.connections.internal, f);\n                    delete this._connectionSourceMap[conn.id];\n                }\n                group = this._connectionTargetMap[conn.id];\n                if (group != null) {\n                    f = function f(c) {\n                        return c.id === conn.id;\n                    };\n                    removeWithFunction(group.connections.source, f);\n                    removeWithFunction(group.connections.target, f);\n                    removeWithFunction(group.connections.internal, f);\n                    delete this._connectionTargetMap[conn.id];\n                }\n            }\n        },\n        {\n            key: \"addGroup\",\n            value: function addGroup(params) {\n                var jel = params.el;\n                if (this.groupMap[params.id] != null) throw new Error(\"cannot create Group [\" + params.id + \"]; a Group with that ID exists\");\n                if (jel._isJsPlumbGroup != null) throw new Error(\"cannot create Group [\" + params.id + \"]; the given element is already a Group\");\n                var group = new UIGroup(this.instance, params.el, params);\n                this.groupMap[group.id] = group;\n                if (params.collapsed) this.collapseGroup(group);\n                this.instance.manage(group.el);\n                this.instance.addClass(group.el, CLASS_GROUP_EXPANDED);\n                group.manager = this;\n                this._updateConnectionsForGroup(group);\n                this.instance.fire(EVENT_GROUP_ADDED, {\n                    group: group\n                });\n                return group;\n            }\n        },\n        {\n            key: \"getGroup\",\n            value: function getGroup(groupId) {\n                var group = groupId;\n                if (isString(groupId)) {\n                    group = this.groupMap[groupId];\n                    if (group == null) throw new Error(\"No such group [\" + groupId + \"]\");\n                }\n                return group;\n            }\n        },\n        {\n            key: \"getGroupFor\",\n            value: function getGroupFor(el) {\n                var jel = el;\n                var c = this.instance.getContainer();\n                var abort = false, g = null;\n                while(!abort){\n                    if (jel == null || jel === c) abort = true;\n                    else if (jel._jsPlumbParentGroup) {\n                        g = jel._jsPlumbParentGroup;\n                        abort = true;\n                    } else jel = jel.parentNode;\n                }\n                return g;\n            }\n        },\n        {\n            key: \"getGroups\",\n            value: function getGroups() {\n                var g = [];\n                for(var key in this.groupMap)g.push(this.groupMap[key]);\n                return g;\n            }\n        },\n        {\n            key: \"removeGroup\",\n            value: function removeGroup(group, deleteMembers, manipulateView, doNotFireEvent) {\n                var _this2 = this;\n                var actualGroup = this.getGroup(group);\n                this.expandGroup(actualGroup, true);\n                var newPositions = {};\n                forEach(actualGroup.children, function(uiNode) {\n                    var entry = _this2.instance.getManagedElements()[_this2.instance.getId(uiNode.el)];\n                    if (entry) delete entry.group;\n                });\n                if (deleteMembers) {\n                    forEach(actualGroup.getGroups(), function(cg) {\n                        return _this2.removeGroup(cg, deleteMembers, manipulateView);\n                    });\n                    actualGroup.removeAll(manipulateView, doNotFireEvent);\n                } else {\n                    if (actualGroup.group) forEach(actualGroup.children, function(c) {\n                        return actualGroup.group.add(c.el);\n                    });\n                    newPositions = actualGroup.orphanAll();\n                }\n                if (actualGroup.group) actualGroup.group.removeGroup(actualGroup);\n                this.instance.unmanage(actualGroup.el, true);\n                delete this.groupMap[actualGroup.id];\n                this.instance.fire(EVENT_GROUP_REMOVED, {\n                    group: actualGroup\n                });\n                return newPositions;\n            }\n        },\n        {\n            key: \"removeAllGroups\",\n            value: function removeAllGroups(deleteMembers, manipulateView, doNotFireEvent) {\n                for(var _g in this.groupMap)this.removeGroup(this.groupMap[_g], deleteMembers, manipulateView, doNotFireEvent);\n            }\n        },\n        {\n            key: \"forEach\",\n            value: function forEach(f) {\n                for(var key in this.groupMap)f(this.groupMap[key]);\n            }\n        },\n        {\n            key: \"orphan\",\n            value: function orphan(el, doNotTransferToAncestor) {\n                var jel = el;\n                if (jel._jsPlumbParentGroup) {\n                    var currentParent = jel._jsPlumbParentGroup;\n                    var id = this.instance.getId(jel);\n                    var pos = this.instance.getOffset(el);\n                    if (doNotTransferToAncestor !== true && currentParent.group) this.instance._appendElementToGroup(currentParent.group, el);\n                    else this.instance._appendElementToContainer(el);\n                    this.instance.setPosition(el, pos);\n                    delete jel._jsPlumbParentGroup;\n                    return {\n                        id: id,\n                        pos: pos\n                    };\n                }\n            }\n        },\n        {\n            key: \"_updateConnectionsForGroup\",\n            value: function _updateConnectionsForGroup(group) {\n                var _this3 = this;\n                group.connections.source.length = 0;\n                group.connections.target.length = 0;\n                group.connections.internal.length = 0;\n                var members = group.children.slice().map(function(cn) {\n                    return cn.el;\n                });\n                var childMembers = [];\n                forEach(members, function(member) {\n                    Array.prototype.push.apply(childMembers, _this3.instance.getSelector(member, SELECTOR_MANAGED_ELEMENT));\n                });\n                Array.prototype.push.apply(members, childMembers);\n                if (members.length > 0) {\n                    var c1 = this.instance.getConnections({\n                        source: members,\n                        scope: WILDCARD\n                    }, true);\n                    var c2 = this.instance.getConnections({\n                        target: members,\n                        scope: WILDCARD\n                    }, true);\n                    var processed = {};\n                    var gs, gt;\n                    var oneSet = function oneSet(c) {\n                        for(var i = 0; i < c.length; i++){\n                            if (processed[c[i].id]) continue;\n                            processed[c[i].id] = true;\n                            gs = _this3.getGroupFor(c[i].source);\n                            gt = _this3.getGroupFor(c[i].target);\n                            if (c[i].source === group.el && gt === group || c[i].target === group.el && gs === group) group.connections.internal.push(c[i]);\n                            else if (gs === group) {\n                                if (gt !== group) group.connections.source.push(c[i]);\n                                else group.connections.internal.push(c[i]);\n                                _this3._connectionSourceMap[c[i].id] = group;\n                            } else if (gt === group) {\n                                group.connections.target.push(c[i]);\n                                _this3._connectionTargetMap[c[i].id] = group;\n                            }\n                        }\n                    };\n                    oneSet(c1);\n                    oneSet(c2);\n                }\n            }\n        },\n        {\n            key: \"_collapseConnection\",\n            value: function _collapseConnection(conn, index, group) {\n                var otherEl = conn.endpoints[index === 0 ? 1 : 0].element;\n                if (otherEl._jsPlumbParentGroup && !otherEl._jsPlumbParentGroup.proxied && otherEl._jsPlumbParentGroup.collapsed) return false;\n                var es = conn.endpoints[0].element, esg = es._jsPlumbParentGroup, esgcp = esg != null ? esg.collapseParent || esg : null, et = conn.endpoints[1].element, etg = et._jsPlumbParentGroup, etgcp = etg != null ? etg.collapseParent || etg : null;\n                if (esgcp == null || etgcp == null || esgcp.id !== etgcp.id) {\n                    var groupEl = group.el;\n                    this.instance.getId(groupEl);\n                    this.instance.proxyConnection(conn, index, groupEl, function(conn, index) {\n                        return group.getEndpoint(conn, index);\n                    }, function(conn, index) {\n                        return group.getAnchor(conn, index);\n                    });\n                    return true;\n                } else return false;\n            }\n        },\n        {\n            key: \"_expandConnection\",\n            value: function _expandConnection(c, index, group) {\n                this.instance.unproxyConnection(c, index);\n            }\n        },\n        {\n            key: \"isElementDescendant\",\n            value: function isElementDescendant(el, parentEl) {\n                var c = this.instance.getContainer();\n                var abort = false;\n                while(!abort){\n                    if (el == null || el === c) return false;\n                    else {\n                        if (el === parentEl) return true;\n                        else el = el.parentNode;\n                    }\n                }\n            }\n        },\n        {\n            key: \"collapseGroup\",\n            value: function collapseGroup(group) {\n                var _this4 = this;\n                var actualGroup = this.getGroup(group);\n                if (actualGroup == null || actualGroup.collapsed) return;\n                var groupEl = actualGroup.el;\n                if (actualGroup.collapseParent == null) {\n                    this.instance.setGroupVisible(actualGroup, false);\n                    actualGroup.collapsed = true;\n                    this.instance.removeClass(groupEl, CLASS_GROUP_EXPANDED);\n                    this.instance.addClass(groupEl, CLASS_GROUP_COLLAPSED);\n                    if (actualGroup.proxied) {\n                        var collapsedConnectionIds = new Set();\n                        var _collapseSet = function _collapseSet(conns, index) {\n                            for(var i = 0; i < conns.length; i++){\n                                var c = conns[i];\n                                if (_this4._collapseConnection(c, index, actualGroup) === true) collapsedConnectionIds.add(c.id);\n                            }\n                        };\n                        _collapseSet(actualGroup.connections.source, 0);\n                        _collapseSet(actualGroup.connections.target, 1);\n                        forEach(actualGroup.getGroups(), function(cg) {\n                            _this4.cascadeCollapse(actualGroup, cg, collapsedConnectionIds);\n                        });\n                    }\n                    this.instance.revalidate(groupEl);\n                    this.repaintGroup(actualGroup);\n                    this.instance.fire(EVENT_GROUP_COLLAPSE, {\n                        group: actualGroup\n                    });\n                } else {\n                    actualGroup.collapsed = true;\n                    this.instance.removeClass(groupEl, CLASS_GROUP_EXPANDED);\n                    this.instance.addClass(groupEl, CLASS_GROUP_COLLAPSED);\n                }\n            }\n        },\n        {\n            key: \"cascadeCollapse\",\n            value: function cascadeCollapse(collapsedGroup, targetGroup, collapsedIds) {\n                var _this5 = this;\n                if (collapsedGroup.proxied) {\n                    var _collapseSet = function _collapseSet(conns, index) {\n                        for(var i = 0; i < conns.length; i++){\n                            var c = conns[i];\n                            if (!collapsedIds.has(c.id)) {\n                                if (_this5._collapseConnection(c, index, collapsedGroup) === true) collapsedIds.add(c.id);\n                            }\n                        }\n                    };\n                    _collapseSet(targetGroup.connections.source, 0);\n                    _collapseSet(targetGroup.connections.target, 1);\n                }\n                forEach(targetGroup.getGroups(), function(cg) {\n                    _this5.cascadeCollapse(collapsedGroup, cg, collapsedIds);\n                });\n            }\n        },\n        {\n            key: \"expandGroup\",\n            value: function expandGroup(group, doNotFireEvent) {\n                var _this6 = this;\n                var actualGroup = this.getGroup(group);\n                if (actualGroup == null) return;\n                var groupEl = actualGroup.el;\n                if (actualGroup.collapseParent == null) {\n                    this.instance.setGroupVisible(actualGroup, true);\n                    actualGroup.collapsed = false;\n                    this.instance.addClass(groupEl, CLASS_GROUP_EXPANDED);\n                    this.instance.removeClass(groupEl, CLASS_GROUP_COLLAPSED);\n                    if (actualGroup.proxied) {\n                        var _expandSet = function _expandSet(conns, index) {\n                            for(var i = 0; i < conns.length; i++){\n                                var c = conns[i];\n                                _this6._expandConnection(c, index, actualGroup);\n                            }\n                        };\n                        _expandSet(actualGroup.connections.source, 0);\n                        _expandSet(actualGroup.connections.target, 1);\n                        var _expandNestedGroup = function _expandNestedGroup(group, ignoreCollapsedStateForNested) {\n                            if (ignoreCollapsedStateForNested || group.collapsed) {\n                                var _collapseSet = function _collapseSet(conns, index) {\n                                    for(var i = 0; i < conns.length; i++){\n                                        var c = conns[i];\n                                        _this6._collapseConnection(c, index, group.collapseParent || group);\n                                    }\n                                };\n                                _collapseSet(group.connections.source, 0);\n                                _collapseSet(group.connections.target, 1);\n                                forEach(group.connections.internal, function(c) {\n                                    return c.setVisible(false);\n                                });\n                                forEach(group.getGroups(), function(g) {\n                                    return _expandNestedGroup(g, true);\n                                });\n                            } else _this6.expandGroup(group, true);\n                        };\n                        forEach(actualGroup.getGroups(), _expandNestedGroup);\n                    }\n                    this.instance.revalidate(groupEl);\n                    this.repaintGroup(actualGroup);\n                    if (!doNotFireEvent) this.instance.fire(EVENT_GROUP_EXPAND, {\n                        group: actualGroup\n                    });\n                } else {\n                    actualGroup.collapsed = false;\n                    this.instance.addClass(groupEl, CLASS_GROUP_EXPANDED);\n                    this.instance.removeClass(groupEl, CLASS_GROUP_COLLAPSED);\n                }\n            }\n        },\n        {\n            key: \"toggleGroup\",\n            value: function toggleGroup(group) {\n                group = this.getGroup(group);\n                if (group != null) {\n                    if (group.collapsed) this.expandGroup(group);\n                    else this.collapseGroup(group);\n                }\n            }\n        },\n        {\n            key: \"repaintGroup\",\n            value: function repaintGroup(group) {\n                var actualGroup = this.getGroup(group);\n                var m = actualGroup.children;\n                for(var i = 0; i < m.length; i++)this.instance.revalidate(m[i].el);\n            }\n        },\n        {\n            key: \"addToGroup\",\n            value: function addToGroup(group, doNotFireEvent) {\n                var _this7 = this;\n                var actualGroup = this.getGroup(group);\n                if (actualGroup) {\n                    var groupEl = actualGroup.el;\n                    var _one = function _one(el) {\n                        var jel = el;\n                        var isGroup = jel._isJsPlumbGroup != null, droppingGroup = jel._jsPlumbGroup;\n                        var currentGroup = jel._jsPlumbParentGroup;\n                        if (currentGroup !== actualGroup) {\n                            var entry = _this7.instance.manage(el);\n                            var elpos = _this7.instance.getOffset(el);\n                            var cpos = actualGroup.collapsed ? _this7.instance.getOffsetRelativeToRoot(groupEl) : _this7.instance.getOffset(_this7.instance.getGroupContentArea(actualGroup));\n                            entry.group = actualGroup.elId;\n                            if (currentGroup != null) {\n                                currentGroup.remove(el, false, doNotFireEvent, false, actualGroup);\n                                _this7._updateConnectionsForGroup(currentGroup);\n                            }\n                            if (isGroup) actualGroup.addGroup(droppingGroup);\n                            else actualGroup.add(el, doNotFireEvent);\n                            var handleDroppedConnections = function handleDroppedConnections(list, index) {\n                                var oidx = index === 0 ? 1 : 0;\n                                list.each(function(c) {\n                                    c.setVisible(false);\n                                    if (c.endpoints[oidx].element._jsPlumbGroup === actualGroup) {\n                                        c.endpoints[oidx].setVisible(false);\n                                        _this7._expandConnection(c, oidx, actualGroup);\n                                    } else {\n                                        c.endpoints[index].setVisible(false);\n                                        _this7._collapseConnection(c, index, actualGroup);\n                                    }\n                                });\n                            };\n                            if (actualGroup.collapsed) {\n                                handleDroppedConnections(_this7.instance.select({\n                                    source: el\n                                }), 0);\n                                handleDroppedConnections(_this7.instance.select({\n                                    target: el\n                                }), 1);\n                            }\n                            _this7.instance.getId(el);\n                            var newPosition = {\n                                x: elpos.x - cpos.x,\n                                y: elpos.y - cpos.y\n                            };\n                            _this7.instance.setPosition(el, newPosition);\n                            _this7._updateConnectionsForGroup(actualGroup);\n                            _this7.instance.revalidate(el);\n                            if (!doNotFireEvent) {\n                                var p = {\n                                    group: actualGroup,\n                                    el: el,\n                                    pos: newPosition\n                                };\n                                if (currentGroup) p.sourceGroup = currentGroup;\n                                _this7.instance.fire(EVENT_GROUP_MEMBER_ADDED, p);\n                            }\n                        }\n                    };\n                    for(var _len = arguments.length, el = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++)el[_key - 2] = arguments[_key];\n                    forEach(el, _one);\n                }\n            }\n        },\n        {\n            key: \"removeFromGroup\",\n            value: function removeFromGroup(group, doNotFireEvent) {\n                var _this8 = this;\n                var actualGroup = this.getGroup(group);\n                if (actualGroup) {\n                    var _one = function _one(_el) {\n                        if (actualGroup.collapsed) {\n                            var _expandSet = function _expandSet(conns, index) {\n                                for(var i = 0; i < conns.length; i++){\n                                    var c = conns[i];\n                                    if (c.proxies) {\n                                        for(var j = 0; j < c.proxies.length; j++)if (c.proxies[j] != null) {\n                                            var proxiedElement = c.proxies[j].originalEp.element;\n                                            if (proxiedElement === _el || _this8.isElementDescendant(proxiedElement, _el)) _this8._expandConnection(c, index, actualGroup);\n                                        }\n                                    }\n                                }\n                            };\n                            _expandSet(actualGroup.connections.source.slice(), 0);\n                            _expandSet(actualGroup.connections.target.slice(), 1);\n                        }\n                        actualGroup.remove(_el, null, doNotFireEvent);\n                        var entry = _this8.instance.getManagedElements()[_this8.instance.getId(_el)];\n                        if (entry) delete entry.group;\n                    };\n                    for(var _len2 = arguments.length, el = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++)el[_key2 - 2] = arguments[_key2];\n                    forEach(el, _one);\n                }\n            }\n        },\n        {\n            key: \"getAncestors\",\n            value: function getAncestors(group) {\n                var ancestors = [];\n                var p = group.group;\n                while(p != null){\n                    ancestors.push(p);\n                    p = p.group;\n                }\n                return ancestors;\n            }\n        },\n        {\n            key: \"isAncestor\",\n            value: function isAncestor(group, possibleAncestor) {\n                if (group == null || possibleAncestor == null) return false;\n                return this.getAncestors(group).indexOf(possibleAncestor) !== -1;\n            }\n        },\n        {\n            key: \"getDescendants\",\n            value: function getDescendants(group) {\n                var d = [];\n                var _one = function _one(g) {\n                    var childGroups = g.getGroups();\n                    d.push.apply(d, _toConsumableArray(childGroups));\n                    forEach(childGroups, _one);\n                };\n                _one(group);\n                return d;\n            }\n        },\n        {\n            key: \"isDescendant\",\n            value: function isDescendant(possibleDescendant, ancestor) {\n                if (possibleDescendant == null || ancestor == null) return false;\n                return this.getDescendants(ancestor).indexOf(possibleDescendant) !== -1;\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                this._connectionSourceMap = {};\n                this._connectionTargetMap = {};\n                this.groupMap = {};\n            }\n        }\n    ]);\n    return GroupManager;\n}();\nvar SelectionBase = function() {\n    function SelectionBase(instance, entries) {\n        _classCallCheck(this, SelectionBase);\n        this.instance = instance;\n        this.entries = entries;\n    }\n    _createClass(SelectionBase, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this.entries.length;\n            }\n        },\n        {\n            key: \"each\",\n            value: function each(handler) {\n                forEach(this.entries, function(e) {\n                    return handler(e);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"get\",\n            value: function get(index) {\n                return this.entries[index];\n            }\n        },\n        {\n            key: \"addClass\",\n            value: function addClass(clazz, cascade) {\n                this.each(function(c) {\n                    return c.addClass(clazz, cascade);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"removeClass\",\n            value: function removeClass(clazz, cascade) {\n                this.each(function(c) {\n                    return c.removeClass(clazz, cascade);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"removeAllOverlays\",\n            value: function removeAllOverlays() {\n                this.each(function(c) {\n                    return c.removeAllOverlays();\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setLabel\",\n            value: function setLabel(label) {\n                this.each(function(c) {\n                    return c.setLabel(label);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"clear\",\n            value: function clear() {\n                this.entries.length = 0;\n                return this;\n            }\n        },\n        {\n            key: \"map\",\n            value: function map(fn) {\n                var a = [];\n                this.each(function(e) {\n                    return a.push(fn(e));\n                });\n                return a;\n            }\n        },\n        {\n            key: \"addOverlay\",\n            value: function addOverlay(spec) {\n                this.each(function(c) {\n                    return c.addOverlay(spec);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"removeOverlay\",\n            value: function removeOverlay(id) {\n                this.each(function(c) {\n                    return c.removeOverlay(id);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"removeOverlays\",\n            value: function removeOverlays() {\n                this.each(function(c) {\n                    return c.removeOverlays();\n                });\n                return this;\n            }\n        },\n        {\n            key: \"showOverlay\",\n            value: function showOverlay(id) {\n                this.each(function(c) {\n                    return c.showOverlay(id);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"hideOverlay\",\n            value: function hideOverlay(id) {\n                this.each(function(c) {\n                    return c.hideOverlay(id);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setPaintStyle\",\n            value: function setPaintStyle(style) {\n                this.each(function(c) {\n                    return c.setPaintStyle(style);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setHoverPaintStyle\",\n            value: function setHoverPaintStyle(style) {\n                this.each(function(c) {\n                    return c.setHoverPaintStyle(style);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setSuspendEvents\",\n            value: function setSuspendEvents(suspend) {\n                this.each(function(c) {\n                    return c.setSuspendEvents(suspend);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setParameter\",\n            value: function setParameter(name, value) {\n                this.each(function(c) {\n                    return c.parameters[name] = value;\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setParameters\",\n            value: function setParameters(p) {\n                this.each(function(c) {\n                    return c.parameters = p;\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setVisible\",\n            value: function setVisible(v) {\n                this.each(function(c) {\n                    return c.setVisible(v);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"addType\",\n            value: function addType(name) {\n                this.each(function(c) {\n                    return c.addType(name);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"toggleType\",\n            value: function toggleType(name) {\n                this.each(function(c) {\n                    return c.toggleType(name);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"removeType\",\n            value: function removeType(name) {\n                this.each(function(c) {\n                    return c.removeType(name);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"bind\",\n            value: function bind(evt, handler) {\n                this.each(function(c) {\n                    return c.bind(evt, handler);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"unbind\",\n            value: function unbind(evt, handler) {\n                this.each(function(c) {\n                    return c.unbind(evt, handler);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setHover\",\n            value: function setHover(h) {\n                var _this = this;\n                this.each(function(c) {\n                    return _this.instance.setHover(c, h);\n                });\n                return this;\n            }\n        }\n    ]);\n    return SelectionBase;\n}();\nvar EndpointSelection = function(_SelectionBase) {\n    _inherits(EndpointSelection, _SelectionBase);\n    var _super = _createSuper(EndpointSelection);\n    function EndpointSelection() {\n        _classCallCheck(this, EndpointSelection);\n        return _super.apply(this, arguments);\n    }\n    _createClass(EndpointSelection, [\n        {\n            key: \"setEnabled\",\n            value: function setEnabled(e) {\n                this.each(function(ep) {\n                    return ep.enabled = e;\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setAnchor\",\n            value: function setAnchor(a) {\n                this.each(function(ep) {\n                    return ep.setAnchor(a);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"deleteEveryConnection\",\n            value: function deleteEveryConnection() {\n                this.each(function(ep) {\n                    return ep.deleteEveryConnection();\n                });\n                return this;\n            }\n        },\n        {\n            key: \"deleteAll\",\n            value: function deleteAll() {\n                var _this = this;\n                this.each(function(ep) {\n                    return _this.instance.deleteEndpoint(ep);\n                });\n                this.clear();\n                return this;\n            }\n        }\n    ]);\n    return EndpointSelection;\n}(SelectionBase);\nvar ConnectionSelection = function(_SelectionBase) {\n    _inherits(ConnectionSelection, _SelectionBase);\n    var _super = _createSuper(ConnectionSelection);\n    function ConnectionSelection() {\n        _classCallCheck(this, ConnectionSelection);\n        return _super.apply(this, arguments);\n    }\n    _createClass(ConnectionSelection, [\n        {\n            key: \"setDetachable\",\n            value: function setDetachable(d) {\n                this.each(function(c) {\n                    return c.setDetachable(d);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setReattach\",\n            value: function setReattach(d) {\n                this.each(function(c) {\n                    return c.setReattach(d);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"setConnector\",\n            value: function setConnector(spec) {\n                this.each(function(c) {\n                    return c._setConnector(spec);\n                });\n                return this;\n            }\n        },\n        {\n            key: \"deleteAll\",\n            value: function deleteAll() {\n                var _this = this;\n                this.each(function(c) {\n                    return _this.instance.deleteConnection(c);\n                });\n                this.clear();\n            }\n        },\n        {\n            key: \"repaint\",\n            value: function repaint() {\n                var _this2 = this;\n                this.each(function(c) {\n                    return _this2.instance._paintConnection(c);\n                });\n                return this;\n            }\n        }\n    ]);\n    return ConnectionSelection;\n}(SelectionBase);\nvar Transaction = function Transaction() {\n    _classCallCheck(this, Transaction);\n    _defineProperty(this, \"affectedElements\", new Set());\n};\nfunction EMPTY_POSITION() {\n    return {\n        x: 0,\n        y: 0,\n        w: 0,\n        h: 0,\n        r: 0,\n        c: {\n            x: 0,\n            y: 0\n        },\n        x2: 0,\n        y2: 0,\n        t: {\n            x: 0,\n            y: 0,\n            c: {\n                x: 0,\n                y: 0\n            },\n            w: 0,\n            h: 0,\n            r: 0,\n            x2: 0,\n            y2: 0,\n            cr: 0,\n            sr: 0\n        },\n        dirty: true\n    };\n}\nfunction rotate(x, y, w, h, r) {\n    var center = {\n        x: x + w / 2,\n        y: y + h / 2\n    }, cr = Math.cos(r / 360 * Math.PI * 2), sr = Math.sin(r / 360 * Math.PI * 2), _point = function _point(x, y) {\n        return {\n            x: center.x + Math.round((x - center.x) * cr - (y - center.y) * sr),\n            y: center.y + Math.round((y - center.y) * cr - (x - center.x) * sr)\n        };\n    };\n    var p1 = _point(x, y), p2 = _point(x + w, y), p3 = _point(x + w, y + h), p4 = _point(x, y + h), c = _point(x + w / 2, y + h / 2);\n    var xmin = Math.min(p1.x, p2.x, p3.x, p4.x), xmax = Math.max(p1.x, p2.x, p3.x, p4.x), ymin = Math.min(p1.y, p2.y, p3.y, p4.y), ymax = Math.max(p1.y, p2.y, p3.y, p4.y);\n    return {\n        x: xmin,\n        y: ymin,\n        w: xmax - xmin,\n        h: ymax - ymin,\n        c: c,\n        r: r,\n        x2: xmax,\n        y2: ymax,\n        cr: cr,\n        sr: sr\n    };\n}\nvar entryComparator = function entryComparator(value, arrayEntry) {\n    var c = 0;\n    if (arrayEntry[1] > value[1]) c = -1;\n    else if (arrayEntry[1] < value[1]) c = 1;\n    return c;\n};\nvar reverseEntryComparator = function reverseEntryComparator(value, arrayEntry) {\n    return entryComparator(value, arrayEntry) * -1;\n};\nfunction _updateElementIndex(id, value, array, sortDescending) {\n    insertSorted([\n        id,\n        value\n    ], array, entryComparator, sortDescending);\n}\nfunction _clearElementIndex(id, array) {\n    var idx = findWithFunction(array, function(entry) {\n        return entry[0] === id;\n    });\n    if (idx > -1) array.splice(idx, 1);\n}\nvar Viewport = function(_EventGenerator) {\n    _inherits(Viewport, _EventGenerator);\n    var _super = _createSuper(Viewport);\n    function Viewport(instance) {\n        var _this;\n        _classCallCheck(this, Viewport);\n        _this = _super.call(this);\n        _this.instance = instance;\n        _defineProperty(_assertThisInitialized(_this), \"_currentTransaction\", null);\n        _defineProperty(_assertThisInitialized(_this), \"_sortedElements\", {\n            xmin: [],\n            xmax: [],\n            ymin: [],\n            ymax: []\n        });\n        _defineProperty(_assertThisInitialized(_this), \"_elementMap\", new Map());\n        _defineProperty(_assertThisInitialized(_this), \"_transformedElementMap\", new Map());\n        _defineProperty(_assertThisInitialized(_this), \"_bounds\", {\n            minx: 0,\n            maxx: 0,\n            miny: 0,\n            maxy: 0\n        });\n        return _this;\n    }\n    _createClass(Viewport, [\n        {\n            key: \"_updateBounds\",\n            value: function _updateBounds(id, updatedElement, doNotRecalculateBounds) {\n                if (updatedElement != null) {\n                    _clearElementIndex(id, this._sortedElements.xmin);\n                    _clearElementIndex(id, this._sortedElements.xmax);\n                    _clearElementIndex(id, this._sortedElements.ymin);\n                    _clearElementIndex(id, this._sortedElements.ymax);\n                    _updateElementIndex(id, updatedElement.t.x, this._sortedElements.xmin, false);\n                    _updateElementIndex(id, updatedElement.t.x + updatedElement.t.w, this._sortedElements.xmax, true);\n                    _updateElementIndex(id, updatedElement.t.y, this._sortedElements.ymin, false);\n                    _updateElementIndex(id, updatedElement.t.y + updatedElement.t.h, this._sortedElements.ymax, true);\n                    if (doNotRecalculateBounds !== true) this._recalculateBounds();\n                }\n            }\n        },\n        {\n            key: \"_recalculateBounds\",\n            value: function _recalculateBounds() {\n                this._bounds.minx = this._sortedElements.xmin.length > 0 ? this._sortedElements.xmin[0][1] : 0;\n                this._bounds.maxx = this._sortedElements.xmax.length > 0 ? this._sortedElements.xmax[0][1] : 0;\n                this._bounds.miny = this._sortedElements.ymin.length > 0 ? this._sortedElements.ymin[0][1] : 0;\n                this._bounds.maxy = this._sortedElements.ymax.length > 0 ? this._sortedElements.ymax[0][1] : 0;\n            }\n        },\n        {\n            key: \"recomputeBounds\",\n            value: function recomputeBounds() {\n                var _this2 = this;\n                this._sortedElements.xmin.length = 0;\n                this._sortedElements.xmax.length = 0;\n                this._sortedElements.ymin.length = 0;\n                this._sortedElements.ymax.length = 0;\n                this._elementMap.forEach(function(vp, id) {\n                    _this2._sortedElements.xmin.push([\n                        id,\n                        vp.t.x\n                    ]);\n                    _this2._sortedElements.xmax.push([\n                        id,\n                        vp.t.x + vp.t.w\n                    ]);\n                    _this2._sortedElements.ymin.push([\n                        id,\n                        vp.t.y\n                    ]);\n                    _this2._sortedElements.ymax.push([\n                        id,\n                        vp.t.y + vp.t.h\n                    ]);\n                });\n                this._sortedElements.xmin.sort(entryComparator);\n                this._sortedElements.ymin.sort(entryComparator);\n                this._sortedElements.xmax.sort(reverseEntryComparator);\n                this._sortedElements.ymax.sort(reverseEntryComparator);\n                this._recalculateBounds();\n            }\n        },\n        {\n            key: \"_finaliseUpdate\",\n            value: function _finaliseUpdate(id, e, doNotRecalculateBounds) {\n                e.t = rotate(e.x, e.y, e.w, e.h, e.r);\n                this._transformedElementMap.set(id, e.t);\n                if (doNotRecalculateBounds !== true) this._updateBounds(id, e, doNotRecalculateBounds);\n            }\n        },\n        {\n            key: \"shouldFireEvent\",\n            value: function shouldFireEvent(event, value, originalEvent) {\n                return true;\n            }\n        },\n        {\n            key: \"startTransaction\",\n            value: function startTransaction() {\n                if (this._currentTransaction != null) throw new Error(\"Viewport: cannot start transaction; a transaction is currently active.\");\n                this._currentTransaction = new Transaction();\n            }\n        },\n        {\n            key: \"endTransaction\",\n            value: function endTransaction() {\n                var _this3 = this;\n                if (this._currentTransaction != null) {\n                    this._currentTransaction.affectedElements.forEach(function(id) {\n                        var entry = _this3.getPosition(id);\n                        _this3._finaliseUpdate(id, entry, true);\n                    });\n                    this.recomputeBounds();\n                    this._currentTransaction = null;\n                }\n            }\n        },\n        {\n            key: \"updateElements\",\n            value: function updateElements(entries) {\n                var _this4 = this;\n                forEach(entries, function(e) {\n                    return _this4.updateElement(e.id, e.x, e.y, e.width, e.height, e.rotation);\n                });\n            }\n        },\n        {\n            key: \"updateElement\",\n            value: function updateElement(id, x, y, width, height, rotation, doNotRecalculateBounds) {\n                var e = getsert(this._elementMap, id, EMPTY_POSITION);\n                e.dirty = x == null && e.x == null || y == null && e.y == null || width == null && e.w == null || height == null && e.h == null;\n                if (x != null) e.x = x;\n                if (y != null) e.y = y;\n                if (width != null) e.w = width;\n                if (height != null) e.h = height;\n                if (rotation != null) e.r = rotation || 0;\n                e.c.x = e.x + e.w / 2;\n                e.c.y = e.y + e.h / 2;\n                e.x2 = e.x + e.w;\n                e.y2 = e.y + e.h;\n                if (this._currentTransaction == null) this._finaliseUpdate(id, e, doNotRecalculateBounds);\n                else this._currentTransaction.affectedElements.add(id);\n                return e;\n            }\n        },\n        {\n            key: \"refreshElement\",\n            value: function refreshElement(elId, doNotRecalculateBounds) {\n                var me = this.instance.getManagedElements();\n                var s = me[elId] ? me[elId].el : null;\n                if (s != null) {\n                    var size = this.getSize(s);\n                    var offset = this.getOffset(s);\n                    return this.updateElement(elId, offset.x, offset.y, size.w, size.h, null, doNotRecalculateBounds);\n                } else return null;\n            }\n        },\n        {\n            key: \"getSize\",\n            value: function getSize(el) {\n                return this.instance.getSize(el);\n            }\n        },\n        {\n            key: \"getOffset\",\n            value: function getOffset(el) {\n                return this.instance.getOffset(el);\n            }\n        },\n        {\n            key: \"registerElement\",\n            value: function registerElement(id, doNotRecalculateBounds) {\n                return this.updateElement(id, 0, 0, 0, 0, 0, doNotRecalculateBounds);\n            }\n        },\n        {\n            key: \"addElement\",\n            value: function addElement(id, x, y, width, height, rotation) {\n                return this.updateElement(id, x, y, width, height, rotation);\n            }\n        },\n        {\n            key: \"rotateElement\",\n            value: function rotateElement(id, rotation) {\n                var e = getsert(this._elementMap, id, EMPTY_POSITION);\n                e.r = rotation || 0;\n                this._finaliseUpdate(id, e);\n                return e;\n            }\n        },\n        {\n            key: \"getBoundsWidth\",\n            value: function getBoundsWidth() {\n                return this._bounds.maxx - this._bounds.minx;\n            }\n        },\n        {\n            key: \"getBoundsHeight\",\n            value: function getBoundsHeight() {\n                return this._bounds.maxy - this._bounds.miny;\n            }\n        },\n        {\n            key: \"getX\",\n            value: function getX() {\n                return this._bounds.minx;\n            }\n        },\n        {\n            key: \"getY\",\n            value: function getY() {\n                return this._bounds.miny;\n            }\n        },\n        {\n            key: \"setSize\",\n            value: function setSize(id, w, h) {\n                if (this._elementMap.has(id)) return this.updateElement(id, null, null, w, h, null);\n            }\n        },\n        {\n            key: \"setPosition\",\n            value: function setPosition(id, x, y) {\n                if (this._elementMap.has(id)) return this.updateElement(id, x, y, null, null, null);\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                this._sortedElements.xmin.length = 0;\n                this._sortedElements.xmax.length = 0;\n                this._sortedElements.ymin.length = 0;\n                this._sortedElements.ymax.length = 0;\n                this._elementMap.clear();\n                this._transformedElementMap.clear();\n                this._recalculateBounds();\n            }\n        },\n        {\n            key: \"remove\",\n            value: function remove(id) {\n                _clearElementIndex(id, this._sortedElements.xmin);\n                _clearElementIndex(id, this._sortedElements.xmax);\n                _clearElementIndex(id, this._sortedElements.ymin);\n                _clearElementIndex(id, this._sortedElements.ymax);\n                this._elementMap[\"delete\"](id);\n                this._transformedElementMap[\"delete\"](id);\n                this._recalculateBounds();\n            }\n        },\n        {\n            key: \"getPosition\",\n            value: function getPosition(id) {\n                return this._elementMap.get(id);\n            }\n        },\n        {\n            key: \"getElements\",\n            value: function getElements() {\n                return this._elementMap;\n            }\n        },\n        {\n            key: \"isEmpty\",\n            value: function isEmpty() {\n                return this._elementMap.size === 0;\n            }\n        }\n    ]);\n    return Viewport;\n}(EventGenerator);\nvar _edgeSortFunctions;\nfunction _placeAnchorsOnLine(element, connections, horizontal, otherMultiplier, reverse) {\n    var sizeInAxis = horizontal ? element.w : element.h;\n    var sizeInOtherAxis = horizontal ? element.h : element.w;\n    var a = [], step = sizeInAxis / (connections.length + 1);\n    for(var i = 0; i < connections.length; i++){\n        var val = (i + 1) * step, other = otherMultiplier * sizeInOtherAxis;\n        if (reverse) val = sizeInAxis - val;\n        var dx = horizontal ? val : other, x = element.x + dx, xp = dx / element.w;\n        var dy = horizontal ? other : val, y = element.y + dy, yp = dy / element.h;\n        if (element.r !== 0 && element.r != null) {\n            var rotated = rotatePoint({\n                x: x,\n                y: y\n            }, element.c, element.r);\n            x = rotated.x;\n            y = rotated.y;\n        }\n        a.push({\n            x: x,\n            y: y,\n            xLoc: xp,\n            yLoc: yp,\n            c: connections[i].c\n        });\n    }\n    return a;\n}\nfunction _rightAndBottomSort(a, b) {\n    return b.theta - a.theta;\n}\nfunction _leftAndTopSort(a, b) {\n    var p1 = a.theta < 0 ? -Math.PI - a.theta : Math.PI - a.theta, p2 = b.theta < 0 ? -Math.PI - b.theta : Math.PI - b.theta;\n    return p1 - p2;\n}\nvar edgeSortFunctions = (_edgeSortFunctions = {}, _defineProperty(_edgeSortFunctions, TOP, _leftAndTopSort), _defineProperty(_edgeSortFunctions, RIGHT, _rightAndBottomSort), _defineProperty(_edgeSortFunctions, BOTTOM, _rightAndBottomSort), _defineProperty(_edgeSortFunctions, LEFT, _leftAndTopSort), _edgeSortFunctions);\nfunction isContinuous(a) {\n    return a.isContinuous === true;\n}\nfunction _isFloating(a) {\n    return a.isContinuous === true;\n}\nfunction isDynamic(a) {\n    return a.locations.length > 1;\n}\nfunction getCurrentLocation(anchor) {\n    return [\n        anchor.currentLocation,\n        anchor.locations[anchor.currentLocation]\n    ];\n}\nvar LightweightRouter = function() {\n    function LightweightRouter(instance) {\n        var _this = this;\n        _classCallCheck(this, LightweightRouter);\n        this.instance = instance;\n        _defineProperty(this, \"anchorLists\", new Map());\n        _defineProperty(this, \"anchorLocations\", new Map());\n        instance.bind(EVENT_INTERNAL_CONNECTION_DETACHED, function(p) {\n            if (p.sourceEndpoint._anchor.isContinuous) _this._removeEndpointFromAnchorLists(p.sourceEndpoint);\n            if (p.targetEndpoint._anchor.isContinuous) _this._removeEndpointFromAnchorLists(p.targetEndpoint);\n        });\n        instance.bind(EVENT_INTERNAL_ENDPOINT_UNREGISTERED, function(ep) {\n            _this._removeEndpointFromAnchorLists(ep);\n        });\n    }\n    _createClass(LightweightRouter, [\n        {\n            key: \"getAnchorOrientation\",\n            value: function getAnchorOrientation(anchor) {\n                var loc = this.anchorLocations.get(anchor.id);\n                return loc ? [\n                    loc.ox,\n                    loc.oy\n                ] : [\n                    0,\n                    0\n                ];\n            }\n        },\n        {\n            key: \"_distance\",\n            value: function _distance(anchor, cx, cy, xy, wh, rotation, targetRotation) {\n                var ax = xy.x + anchor.x * wh.w, ay = xy.y + anchor.y * wh.h, acx = xy.x + wh.w / 2, acy = xy.y + wh.h / 2;\n                if (rotation != null && rotation.length > 0) {\n                    var rotated = this.instance._applyRotations([\n                        ax,\n                        ay,\n                        0,\n                        0\n                    ], rotation);\n                    ax = rotated.x;\n                    ay = rotated.y;\n                }\n                return Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) + Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2));\n            }\n        },\n        {\n            key: \"_anchorSelector\",\n            value: function _anchorSelector(xy, wh, txy, twh, rotation, targetRotation, locations) {\n                var cx = txy.x + twh.w / 2, cy = txy.y + twh.h / 2;\n                var minIdx = -1, minDist = Infinity;\n                for(var i = 0; i < locations.length; i++){\n                    var d = this._distance(locations[i], cx, cy, xy, wh, rotation, targetRotation);\n                    if (d < minDist) {\n                        minIdx = i + 0;\n                        minDist = d;\n                    }\n                }\n                return [\n                    minIdx,\n                    locations[minIdx]\n                ];\n            }\n        },\n        {\n            key: \"_floatingAnchorCompute\",\n            value: function _floatingAnchorCompute(anchor, params) {\n                var xy = params.xy;\n                var pos = {\n                    curX: xy.x + anchor.size.w / 2,\n                    curY: xy.y + anchor.size.h / 2,\n                    x: 0,\n                    y: 0,\n                    ox: 0,\n                    oy: 0\n                };\n                return this._setComputedPosition(anchor, pos);\n            }\n        },\n        {\n            key: \"_setComputedPosition\",\n            value: function _setComputedPosition(anchor, pos, timestamp) {\n                this.anchorLocations.set(anchor.id, pos);\n                anchor.computedPosition = pos;\n                if (timestamp) anchor.timestamp = timestamp;\n                return pos;\n            }\n        },\n        {\n            key: \"_computeSingleLocation\",\n            value: function _computeSingleLocation(loc, xy, wh, params) {\n                var pos;\n                var rotation = params.rotation;\n                var candidate = {\n                    curX: xy.x + loc.x * wh.w + loc.offx,\n                    curY: xy.y + loc.y * wh.h + loc.offy,\n                    x: loc.x,\n                    y: loc.y,\n                    ox: 0,\n                    oy: 0\n                };\n                if (rotation != null && rotation.length > 0) {\n                    var o = [\n                        loc.iox,\n                        loc.ioy\n                    ], current = {\n                        x: candidate.curX,\n                        y: candidate.curY,\n                        cr: 0,\n                        sr: 0\n                    };\n                    forEach(rotation, function(r) {\n                        current = rotatePoint(current, r.c, r.r);\n                        var _o = [\n                            Math.round(o[0] * current.cr - o[1] * current.sr),\n                            Math.round(o[1] * current.cr + o[0] * current.sr)\n                        ];\n                        o = _o.slice();\n                    });\n                    loc.ox = o[0];\n                    loc.oy = o[1];\n                    pos = {\n                        curX: current.x,\n                        curY: current.y,\n                        x: loc.x,\n                        y: loc.y,\n                        ox: o[0],\n                        oy: o[1]\n                    };\n                } else {\n                    loc.ox = loc.iox;\n                    loc.oy = loc.ioy;\n                    pos = extend({\n                        ox: loc.iox,\n                        oy: loc.ioy\n                    }, candidate);\n                }\n                return pos;\n            }\n        },\n        {\n            key: \"_singleAnchorCompute\",\n            value: function _singleAnchorCompute(anchor, params) {\n                var xy = params.xy, wh = params.wh, timestamp = params.timestamp, pos = this.anchorLocations.get(anchor.id);\n                if (pos != null && timestamp && timestamp === anchor.timestamp) return pos;\n                var _getCurrentLocation = getCurrentLocation(anchor), _getCurrentLocation2 = _slicedToArray(_getCurrentLocation, 2);\n                _getCurrentLocation2[0];\n                var currentLoc = _getCurrentLocation2[1];\n                pos = this._computeSingleLocation(currentLoc, xy, wh, params);\n                return this._setComputedPosition(anchor, pos, timestamp);\n            }\n        },\n        {\n            key: \"_defaultAnchorCompute\",\n            value: function _defaultAnchorCompute(anchor, params) {\n                var pos;\n                if (anchor.locations.length === 1) return this._singleAnchorCompute(anchor, params);\n                var xy = params.xy, wh = params.wh, txy = params.txy, twh = params.twh;\n                var _getCurrentLocation3 = getCurrentLocation(anchor), _getCurrentLocation4 = _slicedToArray(_getCurrentLocation3, 2), currentIdx = _getCurrentLocation4[0], currentLoc = _getCurrentLocation4[1];\n                if (anchor.locked || txy == null || twh == null) pos = this._computeSingleLocation(currentLoc, xy, wh, params);\n                else {\n                    var _this$_anchorSelector = this._anchorSelector(xy, wh, txy, twh, params.rotation, params.tRotation, anchor.locations), _this$_anchorSelector2 = _slicedToArray(_this$_anchorSelector, 2), newIdx = _this$_anchorSelector2[0], newLoc = _this$_anchorSelector2[1];\n                    anchor.currentLocation = newIdx;\n                    if (newIdx !== currentIdx) {\n                        anchor.cssClass = newLoc.cls || anchor.cssClass;\n                        params.element._anchorLocationChanged(anchor);\n                    }\n                    pos = this._computeSingleLocation(newLoc, xy, wh, params);\n                }\n                return this._setComputedPosition(anchor, pos, params.timestamp);\n            }\n        },\n        {\n            key: \"_placeAnchors\",\n            value: function _placeAnchors(elementId, _anchorLists) {\n                var _this2 = this;\n                var cd = this.instance.viewport.getPosition(elementId), placeSomeAnchors = function placeSomeAnchors(desc, element, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\n                    if (unsortedConnections.length > 0) {\n                        var sc = unsortedConnections.sort(edgeSortFunctions[desc]), reverse = desc === RIGHT || desc === TOP, anchors = _placeAnchorsOnLine(cd, sc, isHorizontal, otherMultiplier, reverse);\n                        for(var i = 0; i < anchors.length; i++){\n                            var c = anchors[i].c, weAreSource = c.endpoints[0].elementId === elementId, ep = weAreSource ? c.endpoints[0] : c.endpoints[1];\n                            _this2._setComputedPosition(ep._anchor, {\n                                curX: anchors[i].x,\n                                curY: anchors[i].y,\n                                x: anchors[i].xLoc,\n                                y: anchors[i].yLoc,\n                                ox: orientation[0],\n                                oy: orientation[1]\n                            });\n                        }\n                    }\n                };\n                placeSomeAnchors(BOTTOM, cd, _anchorLists.bottom, true, 1, [\n                    0,\n                    1\n                ]);\n                placeSomeAnchors(TOP, cd, _anchorLists.top, true, 0, [\n                    0,\n                    -1\n                ]);\n                placeSomeAnchors(LEFT, cd, _anchorLists.left, false, 0, [\n                    -1,\n                    0\n                ]);\n                placeSomeAnchors(RIGHT, cd, _anchorLists.right, false, 1, [\n                    1,\n                    0\n                ]);\n            }\n        },\n        {\n            key: \"_updateAnchorList\",\n            value: function _updateAnchorList(lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, connsToPaint, endpointsToPaint) {\n                var endpoint = conn.endpoints[idx], endpointId = endpoint.id, oIdx = [\n                    1,\n                    0\n                ][idx], values = {\n                    theta: theta,\n                    order: order,\n                    c: conn,\n                    b: aBoolean,\n                    elId: otherElId,\n                    epId: endpointId\n                }, listToAddTo = lists[edgeId], listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null, candidate;\n                if (listToRemoveFrom) {\n                    var rIdx = findWithFunction(listToRemoveFrom, function(e) {\n                        return e.epId === endpointId;\n                    });\n                    if (rIdx !== -1) {\n                        listToRemoveFrom.splice(rIdx, 1);\n                        for(var i = 0; i < listToRemoveFrom.length; i++){\n                            candidate = listToRemoveFrom[i].c;\n                            if (candidate.placeholder !== true) connsToPaint.add(candidate);\n                            endpointsToPaint.add(listToRemoveFrom[i].c.endpoints[idx]);\n                            endpointsToPaint.add(listToRemoveFrom[i].c.endpoints[oIdx]);\n                        }\n                    }\n                }\n                for(var _i = 0; _i < listToAddTo.length; _i++){\n                    candidate = listToAddTo[_i].c;\n                    if (candidate.placeholder !== true) connsToPaint.add(candidate);\n                    endpointsToPaint.add(listToAddTo[_i].c.endpoints[idx]);\n                    endpointsToPaint.add(listToAddTo[_i].c.endpoints[oIdx]);\n                }\n                var insertIdx = reverse ? 0 : listToAddTo.length;\n                listToAddTo.splice(insertIdx, 0, values);\n                endpoint._continuousAnchorEdge = edgeId;\n            }\n        },\n        {\n            key: \"_removeEndpointFromAnchorLists\",\n            value: function _removeEndpointFromAnchorLists(endpoint) {\n                var listsForElement = this.anchorLists.get(endpoint.elementId);\n                var total = 0;\n                (function(list, eId) {\n                    if (list) {\n                        var f = function f(e) {\n                            return e.epId === eId;\n                        };\n                        removeWithFunction(list.top, f);\n                        removeWithFunction(list.left, f);\n                        removeWithFunction(list.bottom, f);\n                        removeWithFunction(list.right, f);\n                        total += list.top.length;\n                        total += list.left.length;\n                        total += list.bottom.length;\n                        total += list.right.length;\n                    }\n                })(listsForElement, endpoint.id);\n                if (total === 0) this.anchorLists[\"delete\"](endpoint.elementId);\n                this.anchorLocations[\"delete\"](endpoint._anchor.id);\n            }\n        },\n        {\n            key: \"computeAnchorLocation\",\n            value: function computeAnchorLocation(anchor, params) {\n                var pos;\n                if (isContinuous(anchor)) pos = this.anchorLocations.get(anchor.id) || {\n                    curX: 0,\n                    curY: 0,\n                    x: 0,\n                    y: 0,\n                    ox: 0,\n                    oy: 0\n                };\n                else if (_isFloating(anchor)) pos = this._floatingAnchorCompute(anchor, params);\n                else pos = this._defaultAnchorCompute(anchor, params);\n                anchor.timestamp = params.timestamp;\n                return pos;\n            }\n        },\n        {\n            key: \"computePath\",\n            value: function computePath(connection, timestamp) {\n                var sourceInfo = this.instance.viewport.getPosition(connection.sourceId), targetInfo = this.instance.viewport.getPosition(connection.targetId), sE = connection.endpoints[0], tE = connection.endpoints[1];\n                var sAnchorP = this.getEndpointLocation(sE, {\n                    xy: sourceInfo,\n                    wh: sourceInfo,\n                    element: sE,\n                    timestamp: timestamp,\n                    rotation: this.instance._getRotations(connection.sourceId)\n                }), tAnchorP = this.getEndpointLocation(tE, {\n                    xy: targetInfo,\n                    wh: targetInfo,\n                    element: tE,\n                    timestamp: timestamp,\n                    rotation: this.instance._getRotations(connection.targetId)\n                });\n                connection.connector.resetBounds();\n                connection.connector.compute({\n                    sourcePos: sAnchorP,\n                    targetPos: tAnchorP,\n                    sourceEndpoint: connection.endpoints[0],\n                    targetEndpoint: connection.endpoints[1],\n                    strokeWidth: connection.paintStyleInUse.strokeWidth,\n                    sourceInfo: sourceInfo,\n                    targetInfo: targetInfo\n                });\n            }\n        },\n        {\n            key: \"getEndpointLocation\",\n            value: function getEndpointLocation(endpoint, params) {\n                params = params || {};\n                var anchor = endpoint._anchor;\n                var pos = this.anchorLocations.get(anchor.id);\n                if (pos == null || params.timestamp != null && anchor.timestamp !== params.timestamp) {\n                    pos = this.computeAnchorLocation(anchor, params);\n                    this._setComputedPosition(anchor, pos, params.timestamp);\n                }\n                return pos;\n            }\n        },\n        {\n            key: \"getEndpointOrientation\",\n            value: function getEndpointOrientation(ep) {\n                return ep._anchor ? this.getAnchorOrientation(ep._anchor) : [\n                    0,\n                    0\n                ];\n            }\n        },\n        {\n            key: \"setAnchorOrientation\",\n            value: function setAnchorOrientation(anchor, orientation) {\n                var anchorLoc = this.anchorLocations.get(anchor.id);\n                if (anchorLoc != null) {\n                    anchorLoc.ox = orientation[0];\n                    anchorLoc.oy = orientation[1];\n                }\n            }\n        },\n        {\n            key: \"isDynamicAnchor\",\n            value: function isDynamicAnchor(ep) {\n                return ep._anchor ? !isContinuous(ep._anchor) && ep._anchor.locations.length > 1 : false;\n            }\n        },\n        {\n            key: \"isFloating\",\n            value: function isFloating(ep) {\n                return ep._anchor ? _isFloating(ep._anchor) : false;\n            }\n        },\n        {\n            key: \"prepareAnchor\",\n            value: function prepareAnchor(params) {\n                return makeLightweightAnchorFromSpec(params);\n            }\n        },\n        {\n            key: \"redraw\",\n            value: function redraw(elementId, timestamp, offsetToUI) {\n                var _this3 = this;\n                var connectionsToPaint = new Set(), endpointsToPaint = new Set(), anchorsToUpdate = new Set();\n                if (!this.instance._suspendDrawing) {\n                    var ep = this.instance.endpointsByElement[elementId] || [];\n                    timestamp = timestamp || uuid();\n                    var orientationCache = {}, a, anEndpoint;\n                    for(var i = 0; i < ep.length; i++){\n                        anEndpoint = ep[i];\n                        if (anEndpoint.visible === false) continue;\n                        endpointsToPaint.add(anEndpoint);\n                        a = anEndpoint._anchor;\n                        if (anEndpoint.connections.length === 0) {\n                            if (isContinuous(a)) {\n                                if (!this.anchorLists.has(elementId)) this.anchorLists.set(elementId, {\n                                    top: [],\n                                    right: [],\n                                    bottom: [],\n                                    left: []\n                                });\n                                this._updateAnchorList(this.anchorLists.get(elementId), -Math.PI / 2, 0, {\n                                    endpoints: [\n                                        anEndpoint,\n                                        anEndpoint\n                                    ],\n                                    placeholder: true\n                                }, false, elementId, 0, false, getDefaultFace(a), connectionsToPaint, endpointsToPaint);\n                                anchorsToUpdate.add(elementId);\n                            }\n                        } else for(var _i2 = 0; _i2 < anEndpoint.connections.length; _i2++){\n                            var conn = anEndpoint.connections[_i2], sourceId = conn.sourceId, targetId = conn.targetId, sourceContinuous = isContinuous(conn.endpoints[0]._anchor), targetContinuous = isContinuous(conn.endpoints[1]._anchor);\n                            if (sourceContinuous || targetContinuous) {\n                                var c1 = (conn.endpoints[0]._anchor.faces || []).join(\"-\"), c2 = (conn.endpoints[1]._anchor.faces || []).join(\"-\"), oKey = [\n                                    sourceId,\n                                    c1,\n                                    targetId,\n                                    c2\n                                ].join(\"-\"), o = orientationCache[oKey], oIdx = conn.sourceId === elementId ? 1 : 0;\n                                if (sourceContinuous && !this.anchorLists.has(sourceId)) this.anchorLists.set(sourceId, {\n                                    top: [],\n                                    right: [],\n                                    bottom: [],\n                                    left: []\n                                });\n                                if (targetContinuous && !this.anchorLists.has(targetId)) this.anchorLists.set(targetId, {\n                                    top: [],\n                                    right: [],\n                                    bottom: [],\n                                    left: []\n                                });\n                                var td = this.instance.viewport.getPosition(targetId), sd = this.instance.viewport.getPosition(sourceId);\n                                if (targetId === sourceId && (sourceContinuous || targetContinuous)) {\n                                    this._updateAnchorList(this.anchorLists.get(sourceId), -Math.PI / 2, 0, conn, false, targetId, 0, false, TOP, connectionsToPaint, endpointsToPaint);\n                                    this._updateAnchorList(this.anchorLists.get(targetId), -Math.PI / 2, 0, conn, false, sourceId, 1, false, TOP, connectionsToPaint, endpointsToPaint);\n                                } else {\n                                    var sourceRotation = this.instance._getRotations(sourceId);\n                                    var targetRotation = this.instance._getRotations(targetId);\n                                    if (!o) {\n                                        o = this._calculateOrientation(sourceId, targetId, sd, td, conn.endpoints[0]._anchor, conn.endpoints[1]._anchor, sourceRotation, targetRotation);\n                                        orientationCache[oKey] = o;\n                                    }\n                                    if (sourceContinuous) this._updateAnchorList(this.anchorLists.get(sourceId), o.theta, 0, conn, false, targetId, 0, false, o.a[0], connectionsToPaint, endpointsToPaint);\n                                    if (targetContinuous) this._updateAnchorList(this.anchorLists.get(targetId), o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], connectionsToPaint, endpointsToPaint);\n                                }\n                                if (sourceContinuous) anchorsToUpdate.add(sourceId);\n                                if (targetContinuous) anchorsToUpdate.add(targetId);\n                                connectionsToPaint.add(conn);\n                                if (sourceContinuous && oIdx === 0 || targetContinuous && oIdx === 1) endpointsToPaint.add(conn.endpoints[oIdx]);\n                            } else {\n                                var otherEndpoint = anEndpoint.connections[_i2].endpoints[conn.sourceId === elementId ? 1 : 0], otherAnchor = otherEndpoint._anchor;\n                                if (isDynamic(otherAnchor)) {\n                                    this.instance._paintEndpoint(otherEndpoint, {\n                                        elementWithPrecedence: elementId,\n                                        timestamp: timestamp\n                                    });\n                                    connectionsToPaint.add(anEndpoint.connections[_i2]);\n                                    for(var k = 0; k < otherEndpoint.connections.length; k++)if (otherEndpoint.connections[k] !== anEndpoint.connections[_i2]) connectionsToPaint.add(otherEndpoint.connections[k]);\n                                } else connectionsToPaint.add(anEndpoint.connections[_i2]);\n                            }\n                        }\n                    }\n                    anchorsToUpdate.forEach(function(anchor) {\n                        _this3._placeAnchors(anchor, _this3.anchorLists.get(anchor));\n                    });\n                    endpointsToPaint.forEach(function(ep) {\n                        var cd = _this3.instance.viewport.getPosition(ep.elementId);\n                        _this3.instance._paintEndpoint(ep, {\n                            timestamp: timestamp,\n                            offset: cd\n                        });\n                    });\n                    connectionsToPaint.forEach(function(c) {\n                        _this3.instance._paintConnection(c, {\n                            timestamp: timestamp\n                        });\n                    });\n                }\n                return {\n                    c: connectionsToPaint,\n                    e: endpointsToPaint\n                };\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                this.anchorLocations.clear();\n                this.anchorLists.clear();\n            }\n        },\n        {\n            key: \"setAnchor\",\n            value: function setAnchor(endpoint, anchor) {\n                if (anchor != null) endpoint._anchor = anchor;\n            }\n        },\n        {\n            key: \"setConnectionAnchors\",\n            value: function setConnectionAnchors(conn, anchors) {\n                conn.endpoints[0]._anchor = anchors[0];\n                conn.endpoints[1]._anchor = anchors[1];\n            }\n        },\n        {\n            key: \"_calculateOrientation\",\n            value: function _calculateOrientation(sourceId, targetId, sd, td, sourceAnchor, targetAnchor, sourceRotation, targetRotation) {\n                var _this4 = this;\n                var Orientation = {\n                    HORIZONTAL: \"horizontal\",\n                    VERTICAL: \"vertical\",\n                    DIAGONAL: \"diagonal\",\n                    IDENTITY: \"identity\"\n                };\n                if (sourceId === targetId) return {\n                    orientation: Orientation.IDENTITY,\n                    a: [\n                        TOP,\n                        TOP\n                    ]\n                };\n                var theta = Math.atan2(td.c.y - sd.c.y, td.c.x - sd.c.x), theta2 = Math.atan2(sd.c.y - td.c.y, sd.c.x - td.c.x);\n                var candidates = [], midpoints = {};\n                (function(types, dim) {\n                    for(var i = 0; i < types.length; i++){\n                        var _midpoints$types$i;\n                        midpoints[types[i]] = (_midpoints$types$i = {}, _defineProperty(_midpoints$types$i, LEFT, {\n                            x: dim[i][0].x,\n                            y: dim[i][0].c.y\n                        }), _defineProperty(_midpoints$types$i, RIGHT, {\n                            x: dim[i][0].x + dim[i][0].w,\n                            y: dim[i][0].c.y\n                        }), _defineProperty(_midpoints$types$i, TOP, {\n                            x: dim[i][0].c.x,\n                            y: dim[i][0].y\n                        }), _defineProperty(_midpoints$types$i, BOTTOM, {\n                            x: dim[i][0].c.x,\n                            y: dim[i][0].y + dim[i][0].h\n                        }), _midpoints$types$i);\n                        if (dim[i][1] != null && dim[i][1].length > 0) for(var axis in midpoints[types[i]])midpoints[types[i]][axis] = _this4.instance._applyRotationsXY(midpoints[types[i]][axis], dim[i][1]);\n                    }\n                })([\n                    SOURCE,\n                    TARGET\n                ], [\n                    [\n                        sd,\n                        sourceRotation\n                    ],\n                    [\n                        td,\n                        targetRotation\n                    ]\n                ]);\n                var FACES = [\n                    TOP,\n                    LEFT,\n                    RIGHT,\n                    BOTTOM\n                ];\n                for(var sf = 0; sf < FACES.length; sf++)for(var tf = 0; tf < FACES.length; tf++)candidates.push({\n                    source: FACES[sf],\n                    target: FACES[tf],\n                    dist: lineLength(midpoints.source[FACES[sf]], midpoints.target[FACES[tf]])\n                });\n                candidates.sort(function(a, b) {\n                    if (a.dist < b.dist) return -1;\n                    else if (b.dist < a.dist) return 1;\n                    else {\n                        var _axisIndices;\n                        var axisIndices = (_axisIndices = {}, _defineProperty(_axisIndices, LEFT, 0), _defineProperty(_axisIndices, TOP, 1), _defineProperty(_axisIndices, RIGHT, 2), _defineProperty(_axisIndices, BOTTOM, 3), _axisIndices), ais = axisIndices[a.source], bis = axisIndices[b.source], ait = axisIndices[a.target], bit = axisIndices[b.target];\n                        return ais < bis ? -1 : bis < ais ? 1 : ait < bit ? -1 : bit < ait ? 1 : 0;\n                    }\n                });\n                var sourceEdge = candidates[0].source, targetEdge = candidates[0].target;\n                for(var i = 0; i < candidates.length; i++){\n                    if (isContinuous(sourceAnchor) && sourceAnchor.locked) sourceEdge = sourceAnchor.currentFace;\n                    else if (!sourceAnchor.isContinuous || isEdgeSupported(sourceAnchor, candidates[i].source)) sourceEdge = candidates[i].source;\n                    else sourceEdge = null;\n                    if (targetAnchor.isContinuous && targetAnchor.locked) targetEdge = targetAnchor.currentFace;\n                    else if (!targetAnchor.isContinuous || isEdgeSupported(targetAnchor, candidates[i].target)) targetEdge = candidates[i].target;\n                    else targetEdge = null;\n                    if (sourceEdge != null && targetEdge != null) break;\n                }\n                if (sourceAnchor.isContinuous) this.setCurrentFace(sourceAnchor, sourceEdge);\n                if (targetAnchor.isContinuous) this.setCurrentFace(targetAnchor, targetEdge);\n                return {\n                    a: [\n                        sourceEdge,\n                        targetEdge\n                    ],\n                    theta: theta,\n                    theta2: theta2\n                };\n            }\n        },\n        {\n            key: \"setCurrentFace\",\n            value: function setCurrentFace(a, face, overrideLock) {\n                a.currentFace = face;\n                if (overrideLock && a.lockedFace != null) a.lockedFace = a.currentFace;\n            }\n        },\n        {\n            key: \"lock\",\n            value: function lock(a) {\n                a.locked = true;\n                if (isContinuous(a)) a.lockedFace = a.currentFace;\n            }\n        },\n        {\n            key: \"unlock\",\n            value: function unlock(a) {\n                a.locked = false;\n                if (isContinuous(a)) a.lockedFace = null;\n            }\n        },\n        {\n            key: \"selectAnchorLocation\",\n            value: function selectAnchorLocation(a, coords) {\n                var idx = findWithFunction(a.locations, function(loc) {\n                    return loc.x === coords.x && loc.y === coords.y;\n                });\n                if (idx !== -1) {\n                    a.currentLocation = idx;\n                    return true;\n                } else return false;\n            }\n        },\n        {\n            key: \"lockCurrentAxis\",\n            value: function lockCurrentAxis(a) {\n                if (a.currentFace != null) a.lockedAxis = a.currentFace === LEFT || a.currentFace === RIGHT ? X_AXIS_FACES : Y_AXIS_FACES;\n            }\n        },\n        {\n            key: \"unlockCurrentAxis\",\n            value: function unlockCurrentAxis(a) {\n                a.lockedAxis = null;\n            }\n        },\n        {\n            key: \"anchorsEqual\",\n            value: function anchorsEqual(a1, a2) {\n                if (!a1 || !a2) return false;\n                var l1 = a1.locations[a1.currentLocation], l2 = a2.locations[a2.currentLocation];\n                return l1.x === l2.x && l1.y === l2.y && l1.offx === l2.offx && l1.offy === l2.offy && l1.ox === l2.ox && l1.oy === l2.oy;\n            }\n        }\n    ]);\n    return LightweightRouter;\n}();\nvar connectorMap = {};\nvar Connectors = {\n    get: function get(connection, name, params) {\n        var c = connectorMap[name];\n        if (!c) throw {\n            message: \"jsPlumb: unknown connector type '\" + name + \"'\"\n        };\n        else return new c(connection, params);\n    },\n    register: function register(name, conn) {\n        connectorMap[name] = conn;\n    }\n};\nvar StraightSegment = function(_AbstractSegment) {\n    _inherits(StraightSegment, _AbstractSegment);\n    var _super = _createSuper(StraightSegment);\n    function StraightSegment(params) {\n        var _this;\n        _classCallCheck(this, StraightSegment);\n        _this = _super.call(this, params);\n        _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"m\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"m2\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", StraightSegment.segmentType);\n        _this._setCoordinates({\n            x1: params.x1,\n            y1: params.y1,\n            x2: params.x2,\n            y2: params.y2\n        });\n        return _this;\n    }\n    _createClass(StraightSegment, [\n        {\n            key: \"getPath\",\n            value: function getPath(isFirstSegment) {\n                return (isFirstSegment ? \"M \" + this.x1 + \" \" + this.y1 + \" \" : \"\") + \"L \" + this.x2 + \" \" + this.y2;\n            }\n        },\n        {\n            key: \"_recalc\",\n            value: function _recalc() {\n                this.length = Math.sqrt(Math.pow(this.x2 - this.x1, 2) + Math.pow(this.y2 - this.y1, 2));\n                this.m = gradient({\n                    x: this.x1,\n                    y: this.y1\n                }, {\n                    x: this.x2,\n                    y: this.y2\n                });\n                this.m2 = -1 / this.m;\n                this.extents = {\n                    xmin: Math.min(this.x1, this.x2),\n                    ymin: Math.min(this.y1, this.y2),\n                    xmax: Math.max(this.x1, this.x2),\n                    ymax: Math.max(this.y1, this.y2)\n                };\n            }\n        },\n        {\n            key: \"getLength\",\n            value: function getLength() {\n                return this.length;\n            }\n        },\n        {\n            key: \"getGradient\",\n            value: function getGradient() {\n                return this.m;\n            }\n        },\n        {\n            key: \"_setCoordinates\",\n            value: function _setCoordinates(coords) {\n                this.x1 = coords.x1;\n                this.y1 = coords.y1;\n                this.x2 = coords.x2;\n                this.y2 = coords.y2;\n                this._recalc();\n            }\n        },\n        {\n            key: \"pointOnPath\",\n            value: function pointOnPath(location, absolute) {\n                if (location === 0 && !absolute) return {\n                    x: this.x1,\n                    y: this.y1\n                };\n                else if (location === 1 && !absolute) return {\n                    x: this.x2,\n                    y: this.y2\n                };\n                else {\n                    var l = absolute ? location > 0 ? location : this.length + location : location * this.length;\n                    return pointOnLine({\n                        x: this.x1,\n                        y: this.y1\n                    }, {\n                        x: this.x2,\n                        y: this.y2\n                    }, l);\n                }\n            }\n        },\n        {\n            key: \"gradientAtPoint\",\n            value: function gradientAtPoint(location, absolute) {\n                return this.m;\n            }\n        },\n        {\n            key: \"pointAlongPathFrom\",\n            value: function pointAlongPathFrom(location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute), farAwayPoint = distance <= 0 ? {\n                    x: this.x1,\n                    y: this.y1\n                } : {\n                    x: this.x2,\n                    y: this.y2\n                };\n                if (distance <= 0 && Math.abs(distance) > 1) distance *= -1;\n                return pointOnLine(p, farAwayPoint, distance);\n            }\n        },\n        {\n            key: \"within\",\n            value: function within(a, b, c) {\n                return c >= Math.min(a, b) && c <= Math.max(a, b);\n            }\n        },\n        {\n            key: \"closest\",\n            value: function closest(a, b, c) {\n                return Math.abs(c - a) < Math.abs(c - b) ? a : b;\n            }\n        },\n        {\n            key: \"findClosestPointOnPath\",\n            value: function findClosestPointOnPath(x, y) {\n                var out = {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null,\n                    x1: this.x1,\n                    x2: this.x2,\n                    y1: this.y1,\n                    y2: this.y2\n                };\n                if (this.m === 0) {\n                    out.y = this.y1;\n                    out.x = this.within(this.x1, this.x2, x) ? x : this.closest(this.x1, this.x2, x);\n                } else if (this.m === Infinity || this.m === -Infinity) {\n                    out.x = this.x1;\n                    out.y = this.within(this.y1, this.y2, y) ? y : this.closest(this.y1, this.y2, y);\n                } else {\n                    var b = this.y1 - this.m * this.x1, b2 = y - this.m2 * x, _x1 = (b2 - b) / (this.m - this.m2), _y1 = this.m * _x1 + b;\n                    out.x = this.within(this.x1, this.x2, _x1) ? _x1 : this.closest(this.x1, this.x2, _x1);\n                    out.y = this.within(this.y1, this.y2, _y1) ? _y1 : this.closest(this.y1, this.y2, _y1);\n                }\n                var fractionInSegment = lineLength({\n                    x: out.x,\n                    y: out.y\n                }, {\n                    x: this.x1,\n                    y: this.y1\n                });\n                out.d = lineLength({\n                    x: x,\n                    y: y\n                }, out);\n                out.l = fractionInSegment / length;\n                return out;\n            }\n        },\n        {\n            key: \"_pointLiesBetween\",\n            value: function _pointLiesBetween(q, p1, p2) {\n                return p2 > p1 ? p1 <= q && q <= p2 : p1 >= q && q >= p2;\n            }\n        },\n        {\n            key: \"lineIntersection\",\n            value: function lineIntersection(_x1, _y1, _x2, _y2) {\n                var m2 = Math.abs(gradient({\n                    x: _x1,\n                    y: _y1\n                }, {\n                    x: _x2,\n                    y: _y2\n                })), m1 = Math.abs(this.m), b = m1 === Infinity ? this.x1 : this.y1 - m1 * this.x1, out = [], b2 = m2 === Infinity ? _x1 : _y1 - m2 * _x1;\n                if (m2 !== m1) {\n                    if (m2 === Infinity && m1 === 0) {\n                        if (this._pointLiesBetween(_x1, this.x1, this.x2) && this._pointLiesBetween(this.y1, _y1, _y2)) out.push({\n                            x: _x1,\n                            y: this.y1\n                        });\n                    } else if (m2 === 0 && m1 === Infinity) {\n                        if (this._pointLiesBetween(_y1, this.y1, this.y2) && this._pointLiesBetween(this.x1, _x1, _x2)) out.push({\n                            x: this.x1,\n                            y: _y1\n                        });\n                    } else {\n                        var X, Y;\n                        if (m2 === Infinity) {\n                            X = _x1;\n                            if (this._pointLiesBetween(X, this.x1, this.x2)) {\n                                Y = m1 * _x1 + b;\n                                if (this._pointLiesBetween(Y, _y1, _y2)) out.push({\n                                    x: X,\n                                    y: Y\n                                });\n                            }\n                        } else if (m2 === 0) {\n                            Y = _y1;\n                            if (this._pointLiesBetween(Y, this.y1, this.y2)) {\n                                X = (_y1 - b) / m1;\n                                if (this._pointLiesBetween(X, _x1, _x2)) out.push({\n                                    x: X,\n                                    y: Y\n                                });\n                            }\n                        } else {\n                            X = (b2 - b) / (m1 - m2);\n                            Y = m1 * X + b;\n                            if (this._pointLiesBetween(X, this.x1, this.x2) && this._pointLiesBetween(Y, this.y1, this.y2)) out.push({\n                                x: X,\n                                y: Y\n                            });\n                        }\n                    }\n                }\n                return out;\n            }\n        },\n        {\n            key: \"boxIntersection\",\n            value: function boxIntersection(x, y, w, h) {\n                var a = [];\n                a.push.apply(a, this.lineIntersection(x, y, x + w, y));\n                a.push.apply(a, this.lineIntersection(x + w, y, x + w, y + h));\n                a.push.apply(a, this.lineIntersection(x + w, y + h, x, y + h));\n                a.push.apply(a, this.lineIntersection(x, y + h, x, y));\n                return a;\n            }\n        }\n    ]);\n    return StraightSegment;\n}(AbstractSegment);\n_defineProperty(StraightSegment, \"segmentType\", \"Straight\");\nvar StraightConnector = function(_AbstractConnector) {\n    _inherits(StraightConnector, _AbstractConnector);\n    var _super = _createSuper(StraightConnector);\n    function StraightConnector() {\n        var _this;\n        _classCallCheck(this, StraightConnector);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n        _this = _super.call.apply(_super, [\n            this\n        ].concat(args));\n        _defineProperty(_assertThisInitialized(_this), \"type\", StraightConnector.type);\n        return _this;\n    }\n    _createClass(StraightConnector, [\n        {\n            key: \"getDefaultStubs\",\n            value: function getDefaultStubs() {\n                return [\n                    0,\n                    0\n                ];\n            }\n        },\n        {\n            key: \"_compute\",\n            value: function _compute(paintInfo, p) {\n                this._addSegment(StraightSegment, {\n                    x1: paintInfo.sx,\n                    y1: paintInfo.sy,\n                    x2: paintInfo.startStubX,\n                    y2: paintInfo.startStubY\n                });\n                this._addSegment(StraightSegment, {\n                    x1: paintInfo.startStubX,\n                    y1: paintInfo.startStubY,\n                    x2: paintInfo.endStubX,\n                    y2: paintInfo.endStubY\n                });\n                this._addSegment(StraightSegment, {\n                    x1: paintInfo.endStubX,\n                    y1: paintInfo.endStubY,\n                    x2: paintInfo.tx,\n                    y2: paintInfo.ty\n                });\n                this.geometry = {\n                    source: p.sourcePos,\n                    target: p.targetPos\n                };\n            }\n        },\n        {\n            key: \"transformGeometry\",\n            value: function transformGeometry(g, dx, dy) {\n                return {\n                    source: this.transformAnchorPlacement(g.source, dx, dy),\n                    target: this.transformAnchorPlacement(g.target, dx, dy)\n                };\n            }\n        }\n    ]);\n    return StraightConnector;\n}(AbstractConnector);\n_defineProperty(StraightConnector, \"type\", \"Straight\");\nfunction _scopeMatch(e1, e2) {\n    var s1 = e1.scope.split(/\\s/), s2 = e2.scope.split(/\\s/);\n    for(var i = 0; i < s1.length; i++)for(var j = 0; j < s2.length; j++){\n        if (s2[j] === s1[i]) return true;\n    }\n    return false;\n}\nfunction prepareList(instance, input, doNotGetIds) {\n    var r = [];\n    var _resolveId = function _resolveId(i) {\n        if (isString(i)) return i;\n        else return instance.getId(i);\n    };\n    if (input) {\n        if (typeof input === \"string\") {\n            if (input === \"*\") return input;\n            r.push(input);\n        } else {\n            if (doNotGetIds) r = input;\n            else if (input.length != null) {\n                var _r;\n                (_r = r).push.apply(_r, _toConsumableArray(_toConsumableArray(input).map(_resolveId)));\n            } else r.push(_resolveId(input));\n        }\n    }\n    return r;\n}\nfunction addManagedEndpoint(managedElement, ep) {\n    if (managedElement != null) managedElement.endpoints.push(ep);\n}\nfunction removeManagedEndpoint(managedElement, endpoint) {\n    if (managedElement != null) removeWithFunction(managedElement.endpoints, function(ep) {\n        return ep === endpoint;\n    });\n}\nfunction addManagedConnection(connection, sourceEl, targetEl) {\n    if (sourceEl != null) {\n        sourceEl.connections.push(connection);\n        if (sourceEl.connections.length === 1) connection.instance.addClass(connection.source, connection.instance.connectedClass);\n    }\n    if (targetEl != null) {\n        if (sourceEl == null || connection.sourceId !== connection.targetId) {\n            targetEl.connections.push(connection);\n            if (targetEl.connections.length === 1) connection.instance.addClass(connection.target, connection.instance.connectedClass);\n        }\n    }\n}\nfunction removeManagedConnection(connection, sourceEl, targetEl) {\n    if (sourceEl != null) {\n        var sourceCount = sourceEl.connections.length;\n        removeWithFunction(sourceEl.connections, function(_c) {\n            return connection.id === _c.id;\n        });\n        if (sourceCount > 0 && sourceEl.connections.length === 0) connection.instance.removeClass(connection.source, connection.instance.connectedClass);\n    }\n    if (targetEl != null) {\n        var targetCount = targetEl.connections.length;\n        if (sourceEl == null || connection.sourceId !== connection.targetId) removeWithFunction(targetEl.connections, function(_c) {\n            return connection.id === _c.id;\n        });\n        if (targetCount > 0 && targetEl.connections.length === 0) connection.instance.removeClass(connection.target, connection.instance.connectedClass);\n    }\n}\nvar JsPlumbInstance = function(_EventGenerator) {\n    _inherits(JsPlumbInstance, _EventGenerator);\n    var _super = _createSuper(JsPlumbInstance);\n    function JsPlumbInstance(_instanceIndex, defaults) {\n        var _this;\n        _classCallCheck(this, JsPlumbInstance);\n        _this = _super.call(this);\n        _this._instanceIndex = _instanceIndex;\n        _defineProperty(_assertThisInitialized(_this), \"defaults\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_initialDefaults\", {});\n        _defineProperty(_assertThisInitialized(_this), \"isConnectionBeingDragged\", false);\n        _defineProperty(_assertThisInitialized(_this), \"currentlyDragging\", false);\n        _defineProperty(_assertThisInitialized(_this), \"hoverSuspended\", false);\n        _defineProperty(_assertThisInitialized(_this), \"_suspendDrawing\", false);\n        _defineProperty(_assertThisInitialized(_this), \"_suspendedAt\", null);\n        _defineProperty(_assertThisInitialized(_this), \"connectorClass\", CLASS_CONNECTOR);\n        _defineProperty(_assertThisInitialized(_this), \"connectorOutlineClass\", CLASS_CONNECTOR_OUTLINE);\n        _defineProperty(_assertThisInitialized(_this), \"connectedClass\", CLASS_CONNECTED);\n        _defineProperty(_assertThisInitialized(_this), \"endpointClass\", CLASS_ENDPOINT);\n        _defineProperty(_assertThisInitialized(_this), \"endpointConnectedClass\", CLASS_ENDPOINT_CONNECTED);\n        _defineProperty(_assertThisInitialized(_this), \"endpointFullClass\", CLASS_ENDPOINT_FULL);\n        _defineProperty(_assertThisInitialized(_this), \"endpointFloatingClass\", CLASS_ENDPOINT_FLOATING);\n        _defineProperty(_assertThisInitialized(_this), \"endpointDropAllowedClass\", CLASS_ENDPOINT_DROP_ALLOWED);\n        _defineProperty(_assertThisInitialized(_this), \"endpointDropForbiddenClass\", CLASS_ENDPOINT_DROP_FORBIDDEN);\n        _defineProperty(_assertThisInitialized(_this), \"endpointAnchorClassPrefix\", CLASS_ENDPOINT_ANCHOR_PREFIX);\n        _defineProperty(_assertThisInitialized(_this), \"overlayClass\", CLASS_OVERLAY);\n        _defineProperty(_assertThisInitialized(_this), \"connections\", []);\n        _defineProperty(_assertThisInitialized(_this), \"endpointsByElement\", {});\n        _defineProperty(_assertThisInitialized(_this), \"endpointsByUUID\", new Map());\n        _defineProperty(_assertThisInitialized(_this), \"sourceSelectors\", []);\n        _defineProperty(_assertThisInitialized(_this), \"targetSelectors\", []);\n        _defineProperty(_assertThisInitialized(_this), \"allowNestedGroups\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_curIdStamp\", 1);\n        _defineProperty(_assertThisInitialized(_this), \"viewport\", new Viewport(_assertThisInitialized(_this)));\n        _defineProperty(_assertThisInitialized(_this), \"router\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"groupManager\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectionTypes\", new Map());\n        _defineProperty(_assertThisInitialized(_this), \"_endpointTypes\", new Map());\n        _defineProperty(_assertThisInitialized(_this), \"_container\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_managedElements\", {});\n        _defineProperty(_assertThisInitialized(_this), \"DEFAULT_SCOPE\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_zoom\", 1);\n        _this.defaults = {\n            anchor: AnchorLocations.Bottom,\n            anchors: [\n                null,\n                null\n            ],\n            connectionsDetachable: true,\n            connectionOverlays: [],\n            connector: StraightConnector.type,\n            container: null,\n            endpoint: DotEndpoint.type,\n            endpointOverlays: [],\n            endpoints: [\n                null,\n                null\n            ],\n            endpointStyle: {\n                fill: \"#456\"\n            },\n            endpointStyles: [\n                null,\n                null\n            ],\n            endpointHoverStyle: null,\n            endpointHoverStyles: [\n                null,\n                null\n            ],\n            hoverPaintStyle: null,\n            listStyle: {},\n            maxConnections: 1,\n            paintStyle: {\n                strokeWidth: 2,\n                stroke: \"#456\"\n            },\n            reattachConnections: false,\n            scope: \"jsplumb_defaultscope\",\n            allowNestedGroups: true\n        };\n        if (defaults) extend(_this.defaults, defaults);\n        extend(_this._initialDefaults, _this.defaults);\n        if (_this._initialDefaults[DEFAULT_KEY_PAINT_STYLE] != null) _this._initialDefaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth = _this._initialDefaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth || 2;\n        _this.DEFAULT_SCOPE = _this.defaults[DEFAULT_KEY_SCOPE];\n        _this.allowNestedGroups = _this._initialDefaults[DEFAULT_KEY_ALLOW_NESTED_GROUPS] !== false;\n        _this.router = new LightweightRouter(_assertThisInitialized(_this));\n        _this.groupManager = new GroupManager(_assertThisInitialized(_this));\n        _this.setContainer(_this._initialDefaults.container);\n        return _this;\n    }\n    _createClass(JsPlumbInstance, [\n        {\n            key: \"defaultScope\",\n            get: function get() {\n                return this.DEFAULT_SCOPE;\n            }\n        },\n        {\n            key: \"currentZoom\",\n            get: function get() {\n                return this._zoom;\n            }\n        },\n        {\n            key: \"areDefaultAnchorsSet\",\n            value: function areDefaultAnchorsSet() {\n                return this.validAnchorsSpec(this.defaults.anchors);\n            }\n        },\n        {\n            key: \"validAnchorsSpec\",\n            value: function validAnchorsSpec(anchors) {\n                return anchors != null && anchors[0] != null && anchors[1] != null;\n            }\n        },\n        {\n            key: \"getContainer\",\n            value: function getContainer() {\n                return this._container;\n            }\n        },\n        {\n            key: \"setZoom\",\n            value: function setZoom(z, repaintEverything) {\n                this._zoom = z;\n                this.fire(EVENT_ZOOM, this._zoom);\n                if (repaintEverything) this.repaintEverything();\n                return true;\n            }\n        },\n        {\n            key: \"_idstamp\",\n            value: function _idstamp() {\n                return \"\" + this._curIdStamp++;\n            }\n        },\n        {\n            key: \"checkCondition\",\n            value: function checkCondition(conditionName, args) {\n                var l = this.getListener(conditionName), r = true;\n                if (l && l.length > 0) {\n                    var values = Array.prototype.slice.call(arguments, 1);\n                    try {\n                        for(var i = 0, j = l.length; i < j; i++)r = r && l[i].apply(l[i], values);\n                    } catch (e) {\n                        log(\"cannot check condition [\" + conditionName + \"]\" + e);\n                    }\n                }\n                return r;\n            }\n        },\n        {\n            key: \"getId\",\n            value: function getId(element, uuid) {\n                if (element == null) return null;\n                var id = this.getAttribute(element, ATTRIBUTE_MANAGED);\n                if (!id || id === \"undefined\") {\n                    if (arguments.length === 2 && arguments[1] !== undefined) id = uuid;\n                    else if (arguments.length === 1 || arguments.length === 3 && !arguments[2]) id = \"jsplumb-\" + this._instanceIndex + \"-\" + this._idstamp();\n                    this.setAttribute(element, ATTRIBUTE_MANAGED, id);\n                }\n                return id;\n            }\n        },\n        {\n            key: \"getConnections\",\n            value: function getConnections(options, flat) {\n                if (!options) options = {};\n                else if (options.constructor === String) options = {\n                    \"scope\": options\n                };\n                var scope = options.scope || this.defaultScope, scopes = prepareList(this, scope, true), sources = prepareList(this, options.source), targets = prepareList(this, options.target), results = !flat && scopes.length > 1 ? {} : [], _addOne = function _addOne(scope, obj) {\n                    if (!flat && scopes.length > 1) {\n                        var ss = results[scope];\n                        if (ss == null) ss = results[scope] = [];\n                        ss.push(obj);\n                    } else results.push(obj);\n                };\n                for(var j = 0, jj = this.connections.length; j < jj; j++){\n                    var _c2 = this.connections[j], sourceId = _c2.proxies && _c2.proxies[0] ? _c2.proxies[0].originalEp.elementId : _c2.sourceId, targetId = _c2.proxies && _c2.proxies[1] ? _c2.proxies[1].originalEp.elementId : _c2.targetId;\n                    if (filterList(scopes, _c2.scope) && filterList(sources, sourceId) && filterList(targets, targetId)) _addOne(_c2.scope, _c2);\n                }\n                return results;\n            }\n        },\n        {\n            key: \"select\",\n            value: function select(params) {\n                params = params || {};\n                params.scope = params.scope || \"*\";\n                return new ConnectionSelection(this, params.connections || this.getConnections(params, true));\n            }\n        },\n        {\n            key: \"selectEndpoints\",\n            value: function selectEndpoints(params) {\n                params = params || {};\n                params.scope = params.scope || WILDCARD;\n                var noElementFilters = !params.element && !params.source && !params.target, elements = noElementFilters ? WILDCARD : prepareList(this, params.element), sources = noElementFilters ? WILDCARD : prepareList(this, params.source), targets = noElementFilters ? WILDCARD : prepareList(this, params.target), scopes = prepareList(this, params.scope, true);\n                var ep = [];\n                for(var _el2 in this.endpointsByElement){\n                    var either = filterList(elements, _el2, true), source = filterList(sources, _el2, true), sourceMatchExact = sources !== \"*\", target = filterList(targets, _el2, true), targetMatchExact = targets !== \"*\";\n                    if (either || source || target) inner: for(var i = 0, ii = this.endpointsByElement[_el2].length; i < ii; i++){\n                        var _ep = this.endpointsByElement[_el2][i];\n                        if (filterList(scopes, _ep.scope, true)) {\n                            var noMatchSource = sourceMatchExact && sources.length > 0 && !_ep.isSource, noMatchTarget = targetMatchExact && targets.length > 0 && !_ep.isTarget;\n                            if (noMatchSource || noMatchTarget) continue inner;\n                            ep.push(_ep);\n                        }\n                    }\n                }\n                return new EndpointSelection(this, ep);\n            }\n        },\n        {\n            key: \"setContainer\",\n            value: function setContainer(c) {\n                this._container = c;\n                this.fire(EVENT_CONTAINER_CHANGE, this._container);\n            }\n        },\n        {\n            key: \"_set\",\n            value: function _set(c, el, idx) {\n                var stTypes = [\n                    {\n                        el: \"source\",\n                        elId: \"sourceId\"\n                    },\n                    {\n                        el: \"target\",\n                        elId: \"targetId\"\n                    }\n                ];\n                var ep, _st = stTypes[idx], cId = c[_st.elId], sid, oldEndpoint = c.endpoints[idx];\n                var evtParams = {\n                    index: idx,\n                    originalEndpoint: oldEndpoint,\n                    originalSourceId: idx === 0 ? cId : c.sourceId,\n                    newSourceId: c.sourceId,\n                    originalTargetId: idx === 1 ? cId : c.targetId,\n                    newTargetId: c.targetId,\n                    connection: c,\n                    newEndpoint: oldEndpoint\n                };\n                if (el instanceof Endpoint) {\n                    ep = el;\n                    ep.addConnection(c);\n                } else {\n                    sid = this.getId(el);\n                    if (sid === c[_st.elId]) ep = null;\n                    else ep = c.makeEndpoint(idx === 0, el, sid);\n                }\n                if (ep != null) {\n                    evtParams.newEndpoint = ep;\n                    oldEndpoint.detachFromConnection(c);\n                    c.endpoints[idx] = ep;\n                    c[_st.el] = ep.element;\n                    c[_st.elId] = ep.elementId;\n                    evtParams[idx === 0 ? \"newSourceId\" : \"newTargetId\"] = ep.elementId;\n                    this.fireMoveEvent(evtParams);\n                    this._paintConnection(c);\n                }\n                return evtParams;\n            }\n        },\n        {\n            key: \"setSource\",\n            value: function setSource(connection, el) {\n                removeManagedConnection(connection, this._managedElements[connection.sourceId]);\n                var p = this._set(connection, el, 0);\n                addManagedConnection(connection, this._managedElements[p.newSourceId]);\n            }\n        },\n        {\n            key: \"setTarget\",\n            value: function setTarget(connection, el) {\n                removeManagedConnection(connection, this._managedElements[connection.targetId]);\n                var p = this._set(connection, el, 1);\n                addManagedConnection(connection, this._managedElements[p.newTargetId]);\n            }\n        },\n        {\n            key: \"setConnectionType\",\n            value: function setConnectionType(connection, type, params) {\n                connection.setType(type, params);\n                this._paintConnection(connection);\n            }\n        },\n        {\n            key: \"isHoverSuspended\",\n            value: function isHoverSuspended() {\n                return this.hoverSuspended;\n            }\n        },\n        {\n            key: \"setSuspendDrawing\",\n            value: function setSuspendDrawing(val, repaintAfterwards) {\n                var curVal = this._suspendDrawing;\n                this._suspendDrawing = val;\n                if (val) this._suspendedAt = \"\" + new Date().getTime();\n                else {\n                    this._suspendedAt = null;\n                    this.viewport.recomputeBounds();\n                }\n                if (repaintAfterwards) this.repaintEverything();\n                return curVal;\n            }\n        },\n        {\n            key: \"getSuspendedAt\",\n            value: function getSuspendedAt() {\n                return this._suspendedAt;\n            }\n        },\n        {\n            key: \"batch\",\n            value: function batch(fn, doNotRepaintAfterwards) {\n                var _wasSuspended = this._suspendDrawing === true;\n                if (!_wasSuspended) this.setSuspendDrawing(true);\n                fn();\n                if (!_wasSuspended) this.setSuspendDrawing(false, !doNotRepaintAfterwards);\n            }\n        },\n        {\n            key: \"each\",\n            value: function each(spec, fn) {\n                if (spec == null) return;\n                if (spec.length != null) for(var i = 0; i < spec.length; i++)fn(spec[i]);\n                else fn(spec);\n                return this;\n            }\n        },\n        {\n            key: \"updateOffset\",\n            value: function updateOffset(params) {\n                var elId = params.elId;\n                if (params.recalc) return this.viewport.refreshElement(elId);\n                else return this.viewport.getPosition(elId);\n            }\n        },\n        {\n            key: \"deleteConnection\",\n            value: function deleteConnection(connection, params) {\n                if (connection != null && connection.deleted !== true) {\n                    params = params || {};\n                    if (params.force || functionChain(true, false, [\n                        [\n                            connection.endpoints[0],\n                            IS_DETACH_ALLOWED,\n                            [\n                                connection\n                            ]\n                        ],\n                        [\n                            connection.endpoints[1],\n                            IS_DETACH_ALLOWED,\n                            [\n                                connection\n                            ]\n                        ],\n                        [\n                            connection,\n                            IS_DETACH_ALLOWED,\n                            [\n                                connection\n                            ]\n                        ],\n                        [\n                            this,\n                            CHECK_CONDITION,\n                            [\n                                INTERCEPT_BEFORE_DETACH,\n                                connection\n                            ]\n                        ]\n                    ])) {\n                        removeManagedConnection(connection, this._managedElements[connection.sourceId], this._managedElements[connection.targetId]);\n                        this.fireDetachEvent(connection, !connection.pending && params.fireEvent !== false, params.originalEvent);\n                        var _sourceEndpoint = connection.endpoints[0];\n                        var targetEndpoint = connection.endpoints[1];\n                        if (_sourceEndpoint !== params.endpointToIgnore) _sourceEndpoint.detachFromConnection(connection, null, true);\n                        if (targetEndpoint !== params.endpointToIgnore) targetEndpoint.detachFromConnection(connection, null, true);\n                        removeWithFunction(this.connections, function(_c) {\n                            return connection.id === _c.id;\n                        });\n                        connection.destroy();\n                        if (_sourceEndpoint !== params.endpointToIgnore && _sourceEndpoint.deleteOnEmpty && _sourceEndpoint.connections.length === 0) this.deleteEndpoint(_sourceEndpoint);\n                        if (targetEndpoint !== params.endpointToIgnore && targetEndpoint.deleteOnEmpty && targetEndpoint.connections.length === 0) this.deleteEndpoint(targetEndpoint);\n                        return true;\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"deleteEveryConnection\",\n            value: function deleteEveryConnection(params) {\n                var _this2 = this;\n                params = params || {};\n                var count = this.connections.length, deletedCount = 0;\n                this.batch(function() {\n                    for(var i = 0; i < count; i++)deletedCount += _this2.deleteConnection(_this2.connections[0], params) ? 1 : 0;\n                });\n                return deletedCount;\n            }\n        },\n        {\n            key: \"deleteConnectionsForElement\",\n            value: function deleteConnectionsForElement(el, params) {\n                var id = this.getId(el), m = this._managedElements[id];\n                if (m) {\n                    var l = m.connections.length;\n                    for(var i = 0; i < l; i++)this.deleteConnection(m.connections[0], params);\n                }\n                return this;\n            }\n        },\n        {\n            key: \"fireDetachEvent\",\n            value: function fireDetachEvent(jpc, doFireEvent, originalEvent) {\n                var argIsConnection = jpc.id != null, params = argIsConnection ? {\n                    connection: jpc,\n                    source: jpc.source,\n                    target: jpc.target,\n                    sourceId: jpc.sourceId,\n                    targetId: jpc.targetId,\n                    sourceEndpoint: jpc.endpoints[0],\n                    targetEndpoint: jpc.endpoints[1]\n                } : jpc;\n                if (doFireEvent) this.fire(EVENT_CONNECTION_DETACHED, params, originalEvent);\n                this.fire(EVENT_INTERNAL_CONNECTION_DETACHED, params, originalEvent);\n            }\n        },\n        {\n            key: \"fireMoveEvent\",\n            value: function fireMoveEvent(params, evt) {\n                this.fire(EVENT_CONNECTION_MOVED, params, evt);\n            }\n        },\n        {\n            key: \"manageAll\",\n            value: function manageAll(elements, recalc) {\n                var nl = isString(elements) ? this.getSelector(this.getContainer(), elements) : elements;\n                for(var i = 0; i < nl.length; i++)this.manage(nl[i], null, recalc);\n            }\n        },\n        {\n            key: \"manage\",\n            value: function manage(element, internalId, _recalc) {\n                if (this.getAttribute(element, ATTRIBUTE_MANAGED) == null) {\n                    internalId = internalId || this.getAttribute(element, \"id\") || uuid();\n                    this.setAttribute(element, ATTRIBUTE_MANAGED, internalId);\n                }\n                var elId = this.getId(element);\n                if (!this._managedElements[elId]) {\n                    var obj = {\n                        el: element,\n                        endpoints: [],\n                        connections: [],\n                        rotation: 0,\n                        data: {}\n                    };\n                    this._managedElements[elId] = obj;\n                    if (this._suspendDrawing) obj.viewportElement = this.viewport.registerElement(elId, true);\n                    else obj.viewportElement = this.updateOffset({\n                        elId: elId,\n                        recalc: true\n                    });\n                    this.fire(EVENT_MANAGE_ELEMENT, {\n                        el: element\n                    });\n                } else if (_recalc) this._managedElements[elId].viewportElement = this.updateOffset({\n                    elId: elId,\n                    timestamp: null,\n                    recalc: true\n                });\n                return this._managedElements[elId];\n            }\n        },\n        {\n            key: \"getManagedData\",\n            value: function getManagedData(elementId, dataIdentifier, key) {\n                if (this._managedElements[elementId]) {\n                    var data = this._managedElements[elementId].data[dataIdentifier];\n                    return data != null ? data[key] : null;\n                }\n            }\n        },\n        {\n            key: \"setManagedData\",\n            value: function setManagedData(elementId, dataIdentifier, key, data) {\n                if (this._managedElements[elementId]) {\n                    this._managedElements[elementId].data[dataIdentifier] = this._managedElements[elementId].data[dataIdentifier] || {};\n                    this._managedElements[elementId].data[dataIdentifier][key] = data;\n                }\n            }\n        },\n        {\n            key: \"getManagedElement\",\n            value: function getManagedElement(id) {\n                return this._managedElements[id] ? this._managedElements[id].el : null;\n            }\n        },\n        {\n            key: \"unmanage\",\n            value: function unmanage(el, removeElement) {\n                var _this3 = this;\n                this.removeAllEndpoints(el, true);\n                var _one = function _one(_el) {\n                    var id = _this3.getId(_el);\n                    _this3.removeAttribute(_el, ATTRIBUTE_MANAGED);\n                    delete _this3._managedElements[id];\n                    _this3.viewport.remove(id);\n                    _this3.fire(EVENT_UNMANAGE_ELEMENT, {\n                        el: _el,\n                        id: id\n                    });\n                    if (_el && removeElement) _this3._removeElement(_el);\n                };\n                this._getAssociatedElements(el).map(_one);\n                _one(el);\n            }\n        },\n        {\n            key: \"rotate\",\n            value: function rotate(element, rotation, _doNotRepaint) {\n                var elementId = this.getId(element);\n                if (this._managedElements[elementId]) {\n                    this._managedElements[elementId].rotation = rotation;\n                    this.viewport.rotateElement(elementId, rotation);\n                    if (_doNotRepaint !== true) return this.revalidate(element);\n                }\n                return {\n                    c: new Set(),\n                    e: new Set()\n                };\n            }\n        },\n        {\n            key: \"_getRotation\",\n            value: function _getRotation(elementId) {\n                var entry = this._managedElements[elementId];\n                if (entry != null) return entry.rotation || 0;\n                else return 0;\n            }\n        },\n        {\n            key: \"_getRotations\",\n            value: function _getRotations(elementId) {\n                var _this4 = this;\n                var rotations = [];\n                var entry = this._managedElements[elementId];\n                var _oneLevel = function _oneLevel(e) {\n                    if (e.group != null) {\n                        var gEntry = _this4._managedElements[e.group];\n                        if (gEntry != null) {\n                            rotations.push({\n                                r: gEntry.viewportElement.r,\n                                c: gEntry.viewportElement.c\n                            });\n                            _oneLevel(gEntry);\n                        }\n                    }\n                };\n                if (entry != null) {\n                    rotations.push({\n                        r: entry.viewportElement.r || 0,\n                        c: entry.viewportElement.c\n                    });\n                    _oneLevel(entry);\n                }\n                return rotations;\n            }\n        },\n        {\n            key: \"_applyRotations\",\n            value: function _applyRotations(point, rotations) {\n                var sl = point.slice();\n                var current = {\n                    x: sl[0],\n                    y: sl[1],\n                    cr: 0,\n                    sr: 0\n                };\n                forEach(rotations, function(rotation) {\n                    current = rotatePoint(current, rotation.c, rotation.r);\n                });\n                return current;\n            }\n        },\n        {\n            key: \"_applyRotationsXY\",\n            value: function _applyRotationsXY(point, rotations) {\n                forEach(rotations, function(rotation) {\n                    point = rotatePoint(point, rotation.c, rotation.r);\n                });\n                return point;\n            }\n        },\n        {\n            key: \"_internal_newEndpoint\",\n            value: function _internal_newEndpoint(params) {\n                var _p = extend({}, params);\n                var managedElement = this.manage(_p.element);\n                _p.elementId = this.getId(_p.element);\n                _p.id = \"ep_\" + this._idstamp();\n                var ep = new Endpoint(this, _p);\n                addManagedEndpoint(managedElement, ep);\n                if (params.uuid) this.endpointsByUUID.set(params.uuid, ep);\n                addToDictionary(this.endpointsByElement, ep.elementId, ep);\n                if (!this._suspendDrawing) this._paintEndpoint(ep, {\n                    timestamp: this._suspendedAt\n                });\n                return ep;\n            }\n        },\n        {\n            key: \"_deriveEndpointAndAnchorSpec\",\n            value: function _deriveEndpointAndAnchorSpec(type, dontPrependDefault) {\n                var bits = ((dontPrependDefault ? \"\" : \"default \") + type).split(/[\\s]/), eps = null, ep = null, a = null, as = null;\n                for(var i = 0; i < bits.length; i++){\n                    var _t = this.getConnectionType(bits[i]);\n                    if (_t) {\n                        if (_t.endpoints) eps = _t.endpoints;\n                        if (_t.endpoint) ep = _t.endpoint;\n                        if (_t.anchors) as = _t.anchors;\n                        if (_t.anchor) a = _t.anchor;\n                    }\n                }\n                return {\n                    endpoints: eps ? eps : [\n                        ep,\n                        ep\n                    ],\n                    anchors: as ? as : [\n                        a,\n                        a\n                    ]\n                };\n            }\n        },\n        {\n            key: \"revalidate\",\n            value: function revalidate(el, timestamp) {\n                var elId = this.getId(el);\n                this.updateOffset({\n                    elId: elId,\n                    recalc: true,\n                    timestamp: timestamp\n                });\n                return this.repaint(el);\n            }\n        },\n        {\n            key: \"repaintEverything\",\n            value: function repaintEverything() {\n                var timestamp = uuid(), elId;\n                for(elId in this._managedElements)this.viewport.refreshElement(elId, true);\n                this.viewport.recomputeBounds();\n                for(elId in this._managedElements)this.repaint(this._managedElements[elId].el, timestamp, true);\n                return this;\n            }\n        },\n        {\n            key: \"setElementPosition\",\n            value: function setElementPosition(el, x, y) {\n                var id = this.getId(el);\n                this.viewport.setPosition(id, x, y);\n                return this.repaint(el);\n            }\n        },\n        {\n            key: \"repaint\",\n            value: function repaint(el, timestamp, offsetsWereJustCalculated) {\n                var r = {\n                    c: new Set(),\n                    e: new Set()\n                };\n                var _mergeRedraw = function _mergeRedraw(r2) {\n                    r2.c.forEach(function(c) {\n                        return r.c.add(c);\n                    });\n                    r2.e.forEach(function(e) {\n                        return r.e.add(e);\n                    });\n                };\n                if (!this._suspendDrawing) {\n                    var id = this.getId(el);\n                    if (el != null) {\n                        var repaintEls = this._getAssociatedElements(el);\n                        if (timestamp == null) timestamp = uuid();\n                        if (!offsetsWereJustCalculated) for(var i = 0; i < repaintEls.length; i++)this.updateOffset({\n                            elId: this.getId(repaintEls[i]),\n                            recalc: true,\n                            timestamp: timestamp\n                        });\n                        _mergeRedraw(this.router.redraw(id, timestamp, null));\n                        if (repaintEls.length > 0) for(var j = 0; j < repaintEls.length; j++)_mergeRedraw(this.router.redraw(this.getId(repaintEls[j]), timestamp, null));\n                    }\n                }\n                return r;\n            }\n        },\n        {\n            key: \"unregisterEndpoint\",\n            value: function unregisterEndpoint(endpoint) {\n                var uuid = endpoint.getUuid();\n                if (uuid) this.endpointsByUUID[\"delete\"](uuid);\n                removeManagedEndpoint(this._managedElements[endpoint.elementId], endpoint);\n                var ebe = this.endpointsByElement[endpoint.elementId];\n                if (ebe != null) this.endpointsByElement[endpoint.elementId] = ebe.filter(function(e) {\n                    return e !== endpoint;\n                });\n                this.fire(EVENT_INTERNAL_ENDPOINT_UNREGISTERED, endpoint);\n            }\n        },\n        {\n            key: \"_maybePruneEndpoint\",\n            value: function _maybePruneEndpoint(endpoint) {\n                if (endpoint.deleteOnEmpty && endpoint.connections.length === 0) {\n                    this.deleteEndpoint(endpoint);\n                    return true;\n                } else return false;\n            }\n        },\n        {\n            key: \"deleteEndpoint\",\n            value: function deleteEndpoint(object) {\n                var _this5 = this;\n                var endpoint = typeof object === \"string\" ? this.endpointsByUUID.get(object) : object;\n                if (endpoint) {\n                    var proxy = endpoint.proxiedBy;\n                    var connectionsToDelete = endpoint.connections.slice();\n                    forEach(connectionsToDelete, function(connection) {\n                        endpoint.detachFromConnection(connection, null, true);\n                    });\n                    this.unregisterEndpoint(endpoint);\n                    endpoint.destroy();\n                    forEach(connectionsToDelete, function(connection) {\n                        _this5.deleteConnection(connection, {\n                            force: true,\n                            endpointToIgnore: endpoint\n                        });\n                    });\n                    if (proxy != null) this.deleteEndpoint(proxy);\n                }\n                return this;\n            }\n        },\n        {\n            key: \"addEndpoint\",\n            value: function addEndpoint(el, params, referenceParams) {\n                referenceParams = referenceParams || {};\n                var p = extend({}, referenceParams);\n                extend(p, params || {});\n                var _p = extend({\n                    element: el\n                }, p);\n                return this._internal_newEndpoint(_p);\n            }\n        },\n        {\n            key: \"addEndpoints\",\n            value: function addEndpoints(el, endpoints, referenceParams) {\n                var results = [];\n                for(var i = 0, j = endpoints.length; i < j; i++)results.push(this.addEndpoint(el, endpoints[i], referenceParams));\n                return results;\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                var _this6 = this;\n                this.silently(function() {\n                    _this6.endpointsByElement = {};\n                    _this6._managedElements = {};\n                    _this6.endpointsByUUID.clear();\n                    _this6.viewport.reset();\n                    _this6.router.reset();\n                    _this6.groupManager.reset();\n                    _this6.connections.length = 0;\n                });\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                this.reset();\n                this.unbind();\n                this.sourceSelectors.length = 0;\n                this.targetSelectors.length = 0;\n                this._connectionTypes.clear();\n                this._endpointTypes.clear();\n            }\n        },\n        {\n            key: \"getEndpoints\",\n            value: function getEndpoints(el) {\n                return this.endpointsByElement[this.getId(el)] || [];\n            }\n        },\n        {\n            key: \"getEndpoint\",\n            value: function getEndpoint(uuid) {\n                return this.endpointsByUUID.get(uuid);\n            }\n        },\n        {\n            key: \"setEndpointUuid\",\n            value: function setEndpointUuid(endpoint, uuid) {\n                if (endpoint.uuid) this.endpointsByUUID[\"delete\"](endpoint.uuid);\n                endpoint.uuid = uuid;\n                this.endpointsByUUID.set(uuid, endpoint);\n            }\n        },\n        {\n            key: \"connect\",\n            value: function connect(params, referenceParams) {\n                try {\n                    var _p = this._prepareConnectionParams(params, referenceParams), jpc = this._newConnection(_p);\n                    this._finaliseConnection(jpc, _p);\n                    return jpc;\n                } catch (errorMessage) {\n                    log(errorMessage);\n                    return;\n                }\n            }\n        },\n        {\n            key: \"_prepareConnectionParams\",\n            value: function _prepareConnectionParams(params, referenceParams) {\n                var temp = extend({}, params);\n                if (referenceParams) extend(temp, referenceParams);\n                var _p = temp;\n                if (_p.source) {\n                    if (_p.source.endpoint) _p.sourceEndpoint = _p.source;\n                }\n                if (_p.target) {\n                    if (_p.target.endpoint) _p.targetEndpoint = _p.target;\n                }\n                if (params.uuids) {\n                    _p.sourceEndpoint = this.getEndpoint(params.uuids[0]);\n                    _p.targetEndpoint = this.getEndpoint(params.uuids[1]);\n                }\n                if (_p.sourceEndpoint != null) {\n                    if (_p.sourceEndpoint.isFull()) throw ERROR_SOURCE_ENDPOINT_FULL;\n                    if (!_p.type) _p.type = _p.sourceEndpoint.edgeType;\n                    if (_p.sourceEndpoint.connectorOverlays) {\n                        _p.overlays = _p.overlays || [];\n                        for(var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++)_p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\n                    }\n                    if (_p.sourceEndpoint.scope) _p.scope = _p.sourceEndpoint.scope;\n                } else {\n                    if (_p.source == null) throw ERROR_SOURCE_DOES_NOT_EXIST;\n                }\n                if (_p.targetEndpoint != null) {\n                    if (_p.targetEndpoint.isFull()) throw ERROR_TARGET_ENDPOINT_FULL;\n                } else {\n                    if (_p.target == null) throw ERROR_TARGET_DOES_NOT_EXIST;\n                }\n                if (_p.sourceEndpoint && _p.targetEndpoint) {\n                    if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) throw \"Cannot establish connection: scopes do not match\";\n                }\n                return _p;\n            }\n        },\n        {\n            key: \"_newConnection\",\n            value: function _newConnection(params) {\n                params.id = \"con_\" + this._idstamp();\n                var c = new Connection(this, params);\n                addManagedConnection(c, this._managedElements[c.sourceId], this._managedElements[c.targetId]);\n                this._paintConnection(c);\n                return c;\n            }\n        },\n        {\n            key: \"_finaliseConnection\",\n            value: function _finaliseConnection(jpc, params, originalEvent) {\n                params = params || {};\n                if (!jpc.suspendedEndpoint) this.connections.push(jpc);\n                jpc.pending = null;\n                jpc.endpoints[0].isTemporarySource = false;\n                this.repaint(jpc.source);\n                var payload = {\n                    connection: jpc,\n                    source: jpc.source,\n                    target: jpc.target,\n                    sourceId: jpc.sourceId,\n                    targetId: jpc.targetId,\n                    sourceEndpoint: jpc.endpoints[0],\n                    targetEndpoint: jpc.endpoints[1]\n                };\n                this.fire(EVENT_INTERNAL_CONNECTION, payload, originalEvent);\n                if (!params.doNotFireConnectionEvent && params.fireEvent !== false) this.fire(EVENT_CONNECTION, payload, originalEvent);\n            }\n        },\n        {\n            key: \"removeAllEndpoints\",\n            value: function removeAllEndpoints(el, recurse) {\n                var _this7 = this;\n                var _one = function _one(_el) {\n                    var id = _this7.getId(_el), ebe = _this7.endpointsByElement[id], i, ii;\n                    if (ebe) for(i = 0, ii = ebe.length; i < ii; i++)_this7.deleteEndpoint(ebe[i]);\n                    delete _this7.endpointsByElement[id];\n                };\n                if (recurse) this._getAssociatedElements(el).map(_one);\n                _one(el);\n                return this;\n            }\n        },\n        {\n            key: \"_createSourceDefinition\",\n            value: function _createSourceDefinition(params, referenceParams) {\n                var p = extend({}, referenceParams);\n                extend(p, params);\n                p.edgeType = p.edgeType || DEFAULT;\n                var aae = this._deriveEndpointAndAnchorSpec(p.edgeType);\n                p.endpoint = p.endpoint || aae.endpoints[0];\n                p.anchor = p.anchor || aae.anchors[0];\n                var maxConnections = p.maxConnections || -1;\n                var _def = {\n                    def: extend({}, p),\n                    uniqueEndpoint: p.uniqueEndpoint,\n                    maxConnections: maxConnections,\n                    enabled: true,\n                    endpoint: null\n                };\n                return _def;\n            }\n        },\n        {\n            key: \"addSourceSelector\",\n            value: function addSourceSelector(selector, params) {\n                var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n                var _def = this._createSourceDefinition(params);\n                var sel = new ConnectionDragSelector(selector, _def, exclude);\n                this.sourceSelectors.push(sel);\n                return sel;\n            }\n        },\n        {\n            key: \"removeSourceSelector\",\n            value: function removeSourceSelector(selector) {\n                removeWithFunction(this.sourceSelectors, function(s) {\n                    return s === selector;\n                });\n            }\n        },\n        {\n            key: \"removeTargetSelector\",\n            value: function removeTargetSelector(selector) {\n                removeWithFunction(this.targetSelectors, function(s) {\n                    return s === selector;\n                });\n            }\n        },\n        {\n            key: \"addTargetSelector\",\n            value: function addTargetSelector(selector, params) {\n                var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n                var _def = this._createTargetDefinition(params);\n                var sel = new ConnectionDragSelector(selector, _def, exclude);\n                this.targetSelectors.push(sel);\n                return sel;\n            }\n        },\n        {\n            key: \"_createTargetDefinition\",\n            value: function _createTargetDefinition(params, referenceParams) {\n                var p = extend({}, referenceParams);\n                extend(p, params);\n                p.edgeType = p.edgeType || DEFAULT;\n                var maxConnections = p.maxConnections || -1;\n                var _def = {\n                    def: extend({}, p),\n                    uniqueEndpoint: p.uniqueEndpoint,\n                    maxConnections: maxConnections,\n                    enabled: true,\n                    endpoint: null\n                };\n                return _def;\n            }\n        },\n        {\n            key: \"show\",\n            value: function show(el, changeEndpoints) {\n                return this._setVisible(el, BLOCK, changeEndpoints);\n            }\n        },\n        {\n            key: \"hide\",\n            value: function hide(el, changeEndpoints) {\n                return this._setVisible(el, NONE, changeEndpoints);\n            }\n        },\n        {\n            key: \"_setVisible\",\n            value: function _setVisible(el, state, alsoChangeEndpoints) {\n                var visible = state === BLOCK;\n                var endpointFunc = null;\n                if (alsoChangeEndpoints) endpointFunc = function endpointFunc(ep) {\n                    ep.setVisible(visible, true, true);\n                };\n                var id = this.getId(el);\n                this._operation(el, function(jpc) {\n                    if (visible && alsoChangeEndpoints) {\n                        var oidx = jpc.sourceId === id ? 1 : 0;\n                        if (jpc.endpoints[oidx].isVisible()) jpc.setVisible(true);\n                    } else jpc.setVisible(visible);\n                }, endpointFunc);\n                return this;\n            }\n        },\n        {\n            key: \"toggleVisible\",\n            value: function toggleVisible(el, changeEndpoints) {\n                var endpointFunc = null;\n                if (changeEndpoints) endpointFunc = function endpointFunc(ep) {\n                    var state = ep.isVisible();\n                    ep.setVisible(!state);\n                };\n                this._operation(el, function(jpc) {\n                    var state = jpc.isVisible();\n                    jpc.setVisible(!state);\n                }, endpointFunc);\n            }\n        },\n        {\n            key: \"_operation\",\n            value: function _operation(el, func, endpointFunc) {\n                var elId = this.getId(el);\n                var endpoints = this.endpointsByElement[elId];\n                if (endpoints && endpoints.length) for(var i = 0, ii = endpoints.length; i < ii; i++){\n                    for(var j = 0, jj = endpoints[i].connections.length; j < jj; j++){\n                        var retVal = func(endpoints[i].connections[j]);\n                        if (retVal) return;\n                    }\n                    if (endpointFunc) endpointFunc(endpoints[i]);\n                }\n            }\n        },\n        {\n            key: \"registerConnectionType\",\n            value: function registerConnectionType(id, type) {\n                this._connectionTypes.set(id, extend({}, type));\n                if (type.overlays) {\n                    var to = {};\n                    for(var i = 0; i < type.overlays.length; i++){\n                        var fo = convertToFullOverlaySpec(type.overlays[i]);\n                        to[fo.options.id] = fo;\n                    }\n                    this._connectionTypes.get(id).overlays = to;\n                }\n            }\n        },\n        {\n            key: \"registerConnectionTypes\",\n            value: function registerConnectionTypes(types) {\n                for(var i in types)this.registerConnectionType(i, types[i]);\n            }\n        },\n        {\n            key: \"registerEndpointType\",\n            value: function registerEndpointType(id, type) {\n                this._endpointTypes.set(id, extend({}, type));\n                if (type.overlays) {\n                    var to = {};\n                    for(var i = 0; i < type.overlays.length; i++){\n                        var fo = convertToFullOverlaySpec(type.overlays[i]);\n                        to[fo.options.id] = fo;\n                    }\n                    this._endpointTypes.get(id).overlays = to;\n                }\n            }\n        },\n        {\n            key: \"registerEndpointTypes\",\n            value: function registerEndpointTypes(types) {\n                for(var i in types)this.registerEndpointType(i, types[i]);\n            }\n        },\n        {\n            key: \"getType\",\n            value: function getType(id, typeDescriptor) {\n                return typeDescriptor === \"connection\" ? this.getConnectionType(id) : this.getEndpointType(id);\n            }\n        },\n        {\n            key: \"getConnectionType\",\n            value: function getConnectionType(id) {\n                return this._connectionTypes.get(id);\n            }\n        },\n        {\n            key: \"getEndpointType\",\n            value: function getEndpointType(id) {\n                return this._endpointTypes.get(id);\n            }\n        },\n        {\n            key: \"importDefaults\",\n            value: function importDefaults(d) {\n                for(var i in d)this.defaults[i] = d[i];\n                if (this.defaults[DEFAULT_KEY_PAINT_STYLE] != null) this.defaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth = this.defaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth || 2;\n                if (d.container) this.setContainer(d.container);\n                return this;\n            }\n        },\n        {\n            key: \"restoreDefaults\",\n            value: function restoreDefaults() {\n                this.defaults = extend({}, this._initialDefaults);\n                return this;\n            }\n        },\n        {\n            key: \"getManagedElements\",\n            value: function getManagedElements() {\n                return this._managedElements;\n            }\n        },\n        {\n            key: \"proxyConnection\",\n            value: function proxyConnection(connection, index, proxyEl, endpointGenerator, anchorGenerator) {\n                var alreadyProxied = connection.proxies[index] != null, proxyEp, originalElementId = alreadyProxied ? connection.proxies[index].originalEp.elementId : connection.endpoints[index].elementId, originalEndpoint = alreadyProxied ? connection.proxies[index].originalEp : connection.endpoints[index], proxyElId = this.getId(proxyEl);\n                if (connection.proxies[index]) {\n                    if (connection.proxies[index].ep.elementId === proxyElId) proxyEp = connection.proxies[index].ep;\n                    else {\n                        connection.proxies[index].ep.detachFromConnection(connection, index);\n                        proxyEp = this._internal_newEndpoint({\n                            element: proxyEl,\n                            endpoint: endpointGenerator(connection, index),\n                            anchor: anchorGenerator(connection, index),\n                            parameters: {\n                                isProxyEndpoint: true\n                            }\n                        });\n                    }\n                } else proxyEp = this._internal_newEndpoint({\n                    element: proxyEl,\n                    endpoint: endpointGenerator(connection, index),\n                    anchor: anchorGenerator(connection, index),\n                    parameters: {\n                        isProxyEndpoint: true\n                    }\n                });\n                proxyEp.deleteOnEmpty = true;\n                connection.proxies[index] = {\n                    ep: proxyEp,\n                    originalEp: originalEndpoint\n                };\n                this.sourceOrTargetChanged(originalElementId, proxyElId, connection, proxyEl, index);\n                originalEndpoint.detachFromConnection(connection, null, true);\n                proxyEp.connections = [\n                    connection\n                ];\n                connection.endpoints[index] = proxyEp;\n                originalEndpoint.proxiedBy = proxyEp;\n                originalEndpoint.setVisible(false);\n                connection.setVisible(true);\n                this.revalidate(proxyEl);\n            }\n        },\n        {\n            key: \"unproxyConnection\",\n            value: function unproxyConnection(connection, index) {\n                if (connection.proxies == null || connection.proxies[index] == null) return;\n                var originalElement = connection.proxies[index].originalEp.element, originalElementId = connection.proxies[index].originalEp.elementId, proxyElId = connection.proxies[index].ep.elementId;\n                connection.endpoints[index] = connection.proxies[index].originalEp;\n                delete connection.proxies[index].originalEp.proxiedBy;\n                this.sourceOrTargetChanged(proxyElId, originalElementId, connection, originalElement, index);\n                connection.proxies[index].ep.detachFromConnection(connection, null);\n                connection.proxies[index].originalEp.addConnection(connection);\n                if (connection.isVisible()) connection.proxies[index].originalEp.setVisible(true);\n                connection.proxies[index] = null;\n                if (findWithFunction(connection.proxies, function(p) {\n                    return p != null;\n                }) === -1) connection.proxies.length = 0;\n            }\n        },\n        {\n            key: \"sourceOrTargetChanged\",\n            value: function sourceOrTargetChanged(originalId, newId, connection, newElement, index) {\n                if (originalId !== newId) {\n                    if (index === 0) {\n                        connection.sourceId = newId;\n                        connection.source = newElement;\n                    } else if (index === 1) {\n                        connection.targetId = newId;\n                        connection.target = newElement;\n                    }\n                    removeManagedConnection(connection, this._managedElements[originalId]);\n                    addManagedConnection(connection, this._managedElements[newId]);\n                }\n            }\n        },\n        {\n            key: \"getGroup\",\n            value: function getGroup(groupId) {\n                return this.groupManager.getGroup(groupId);\n            }\n        },\n        {\n            key: \"getGroupFor\",\n            value: function getGroupFor(el) {\n                return this.groupManager.getGroupFor(el);\n            }\n        },\n        {\n            key: \"addGroup\",\n            value: function addGroup(params) {\n                return this.groupManager.addGroup(params);\n            }\n        },\n        {\n            key: \"addToGroup\",\n            value: function addToGroup(group) {\n                var _this$groupManager;\n                for(var _len = arguments.length, el = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)el[_key - 1] = arguments[_key];\n                return (_this$groupManager = this.groupManager).addToGroup.apply(_this$groupManager, [\n                    group,\n                    false\n                ].concat(el));\n            }\n        },\n        {\n            key: \"collapseGroup\",\n            value: function collapseGroup(group) {\n                this.groupManager.collapseGroup(group);\n            }\n        },\n        {\n            key: \"expandGroup\",\n            value: function expandGroup(group) {\n                this.groupManager.expandGroup(group);\n            }\n        },\n        {\n            key: \"toggleGroup\",\n            value: function toggleGroup(group) {\n                this.groupManager.toggleGroup(group);\n            }\n        },\n        {\n            key: \"removeGroup\",\n            value: function removeGroup(group, deleteMembers, _manipulateView, _doNotFireEvent) {\n                return this.groupManager.removeGroup(group, deleteMembers, _manipulateView, _doNotFireEvent);\n            }\n        },\n        {\n            key: \"removeAllGroups\",\n            value: function removeAllGroups(deleteMembers, _manipulateView) {\n                this.groupManager.removeAllGroups(deleteMembers, _manipulateView, false);\n            }\n        },\n        {\n            key: \"removeFromGroup\",\n            value: function removeFromGroup(group, el, _doNotFireEvent) {\n                this.groupManager.removeFromGroup(group, _doNotFireEvent, el);\n                this._appendElement(el, this.getContainer());\n                this.updateOffset({\n                    recalc: true,\n                    elId: this.getId(el)\n                });\n            }\n        },\n        {\n            key: \"_paintEndpoint\",\n            value: function _paintEndpoint(endpoint, params) {\n                function findConnectionToUseForDynamicAnchor(ep) {\n                    var idx = 0;\n                    if (params.elementWithPrecedence != null) {\n                        for(var i = 0; i < ep.connections.length; i++)if (ep.connections[i].sourceId === params.elementWithPrecedence || ep.connections[i].targetId === params.elementWithPrecedence) {\n                            idx = i;\n                            break;\n                        }\n                    }\n                    return ep.connections[idx];\n                }\n                params = params || {};\n                var timestamp = params.timestamp, recalc = !(params.recalc === false);\n                if (!timestamp || endpoint.timestamp !== timestamp) {\n                    var info = this.viewport.getPosition(endpoint.elementId);\n                    var xy = params.offset ? {\n                        x: params.offset.x,\n                        y: params.offset.y\n                    } : {\n                        x: info.x,\n                        y: info.y\n                    };\n                    if (xy != null) {\n                        var ap = params.anchorLoc;\n                        if (ap == null) {\n                            var anchorParams = {\n                                xy: xy,\n                                wh: info,\n                                element: endpoint,\n                                timestamp: timestamp\n                            };\n                            if (recalc && this.router.isDynamicAnchor(endpoint) && endpoint.connections.length > 0) {\n                                var _c3 = findConnectionToUseForDynamicAnchor(endpoint), oIdx = _c3.endpoints[0] === endpoint ? 1 : 0, oId = oIdx === 0 ? _c3.sourceId : _c3.targetId, oInfo = this.viewport.getPosition(oId);\n                                anchorParams.index = oIdx === 0 ? 1 : 0;\n                                anchorParams.connection = _c3;\n                                anchorParams.txy = oInfo;\n                                anchorParams.twh = oInfo;\n                                anchorParams.tElement = _c3.endpoints[oIdx];\n                                anchorParams.tRotation = this._getRotations(oId);\n                            } else if (endpoint.connections.length > 0) anchorParams.connection = endpoint.connections[0];\n                            anchorParams.rotation = this._getRotations(endpoint.elementId);\n                            ap = this.router.computeAnchorLocation(endpoint._anchor, anchorParams);\n                        }\n                        endpoint.endpoint.compute(ap, this.router.getEndpointOrientation(endpoint), endpoint.paintStyleInUse);\n                        this.renderEndpoint(endpoint, endpoint.paintStyleInUse);\n                        endpoint.timestamp = timestamp;\n                        for(var i in endpoint.overlays)if (endpoint.overlays.hasOwnProperty(i)) {\n                            var _o = endpoint.overlays[i];\n                            if (_o.isVisible()) {\n                                endpoint.overlayPlacements[i] = this.drawOverlay(_o, endpoint.endpoint, endpoint.paintStyleInUse, endpoint.getAbsoluteOverlayPosition(_o));\n                                this._paintOverlay(_o, endpoint.overlayPlacements[i], {\n                                    xmin: 0,\n                                    ymin: 0\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"_paintConnection\",\n            value: function _paintConnection(connection, params) {\n                if (!this._suspendDrawing && connection.visible !== false) {\n                    params = params || {};\n                    var timestamp = params.timestamp;\n                    if (timestamp != null && timestamp === connection.lastPaintedAt) return;\n                    if (timestamp == null || timestamp !== connection.lastPaintedAt) {\n                        this.router.computePath(connection, timestamp);\n                        var overlayExtents = {\n                            xmin: Infinity,\n                            ymin: Infinity,\n                            xmax: -Infinity,\n                            ymax: -Infinity\n                        };\n                        for(var i in connection.overlays)if (connection.overlays.hasOwnProperty(i)) {\n                            var _o2 = connection.overlays[i];\n                            if (_o2.isVisible()) {\n                                connection.overlayPlacements[i] = this.drawOverlay(_o2, connection.connector, connection.paintStyleInUse, connection.getAbsoluteOverlayPosition(_o2));\n                                overlayExtents.xmin = Math.min(overlayExtents.xmin, connection.overlayPlacements[i].xmin);\n                                overlayExtents.xmax = Math.max(overlayExtents.xmax, connection.overlayPlacements[i].xmax);\n                                overlayExtents.ymin = Math.min(overlayExtents.ymin, connection.overlayPlacements[i].ymin);\n                                overlayExtents.ymax = Math.max(overlayExtents.ymax, connection.overlayPlacements[i].ymax);\n                            }\n                        }\n                        var lineWidth = parseFloat(\"\" + connection.paintStyleInUse.strokeWidth || \"1\") / 2, outlineWidth = parseFloat(\"\" + connection.paintStyleInUse.strokeWidth || \"0\"), _extents = {\n                            xmin: Math.min(connection.connector.bounds.xmin - (lineWidth + outlineWidth), overlayExtents.xmin),\n                            ymin: Math.min(connection.connector.bounds.ymin - (lineWidth + outlineWidth), overlayExtents.ymin),\n                            xmax: Math.max(connection.connector.bounds.xmax + (lineWidth + outlineWidth), overlayExtents.xmax),\n                            ymax: Math.max(connection.connector.bounds.ymax + (lineWidth + outlineWidth), overlayExtents.ymax)\n                        };\n                        this.paintConnector(connection.connector, connection.paintStyleInUse, _extents);\n                        for(var j in connection.overlays)if (connection.overlays.hasOwnProperty(j)) {\n                            var _p2 = connection.overlays[j];\n                            if (_p2.isVisible()) this._paintOverlay(_p2, connection.overlayPlacements[j], _extents);\n                        }\n                    }\n                    connection.lastPaintedAt = timestamp;\n                }\n            }\n        },\n        {\n            key: \"_refreshEndpoint\",\n            value: function _refreshEndpoint(endpoint) {\n                if (!endpoint._anchor.isFloating) {\n                    if (endpoint.connections.length > 0) this.addEndpointClass(endpoint, this.endpointConnectedClass);\n                    else this.removeEndpointClass(endpoint, this.endpointConnectedClass);\n                    if (endpoint.isFull()) this.addEndpointClass(endpoint, this.endpointFullClass);\n                    else this.removeEndpointClass(endpoint, this.endpointFullClass);\n                }\n            }\n        },\n        {\n            key: \"_makeConnector\",\n            value: function _makeConnector(connection, name, args) {\n                return Connectors.get(connection, name, args);\n            }\n        },\n        {\n            key: \"addOverlay\",\n            value: function addOverlay(component, overlay, doNotRevalidate) {\n                component.addOverlay(overlay);\n                if (!doNotRevalidate) {\n                    var relatedElement = component instanceof Endpoint ? component.element : component.source;\n                    this.revalidate(relatedElement);\n                }\n            }\n        },\n        {\n            key: \"removeOverlay\",\n            value: function removeOverlay(component, overlayId) {\n                component.removeOverlay(overlayId);\n                var relatedElement = component instanceof Endpoint ? component.element : component.source;\n                this.revalidate(relatedElement);\n            }\n        },\n        {\n            key: \"setOutlineColor\",\n            value: function setOutlineColor(conn, color) {\n                conn.paintStyleInUse.outlineStroke = color;\n                this._paintConnection(conn);\n            }\n        },\n        {\n            key: \"setOutlineWidth\",\n            value: function setOutlineWidth(conn, width) {\n                conn.paintStyleInUse.outlineWidth = width;\n                this._paintConnection(conn);\n            }\n        },\n        {\n            key: \"setColor\",\n            value: function setColor(conn, color) {\n                conn.paintStyleInUse.stroke = color;\n                this._paintConnection(conn);\n            }\n        },\n        {\n            key: \"setLineWidth\",\n            value: function setLineWidth(conn, width) {\n                conn.paintStyleInUse.strokeWidth = width;\n                this._paintConnection(conn);\n            }\n        },\n        {\n            key: \"setLineStyle\",\n            value: function setLineStyle(conn, style) {\n                if (style.lineWidth != null) conn.paintStyleInUse.strokeWidth = style.lineWidth;\n                if (style.outlineWidth != null) conn.paintStyleInUse.outlineWidth = style.outlineWidth;\n                if (style.color != null) conn.paintStyleInUse.stroke = style.color;\n                if (style.outlineColor != null) conn.paintStyleInUse.outlineStroke = style.outlineColor;\n                this._paintConnection(conn);\n            }\n        },\n        {\n            key: \"getPathData\",\n            value: function getPathData(connector) {\n                var p = \"\";\n                for(var i = 0; i < connector.segments.length; i++){\n                    p += connector.segments[i].getPath(i === 0);\n                    p += \" \";\n                }\n                return p;\n            }\n        }\n    ]);\n    return JsPlumbInstance;\n}(EventGenerator);\nvar endpointMap = {};\nfunction registerEndpointRenderer(name, fns) {\n    endpointMap[name] = fns;\n}\nfunction getPositionOnElement(evt, el, zoom) {\n    var jel = el;\n    var box = _typeof(el.getBoundingClientRect) !== UNDEFINED ? el.getBoundingClientRect() : {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n    }, body = document.body, docElem = document.documentElement, scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop, scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft, clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0, pst = 0, psl = 0, top = box.top + scrollTop - clientTop + pst * zoom, left = box.left + scrollLeft - clientLeft + psl * zoom, cl = pageLocation(evt), w = box.width || jel.offsetWidth * zoom, h = box.height || jel.offsetHeight * zoom, x = (cl.x - left) / w, y = (cl.y - top) / h;\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction isSVGElementOverlay(o) {\n    return isArrowOverlay(o) || isDiamondOverlay(o) || isPlainArrowOverlay(o);\n}\nfunction setVisible(component, v) {\n    if (component.canvas) component.canvas.style.display = v ? \"block\" : \"none\";\n}\nfunction cleanup(component) {\n    if (component.canvas) component.canvas.parentNode.removeChild(component.canvas);\n    delete component.canvas;\n}\nfunction getEndpointCanvas(ep) {\n    return ep.canvas;\n}\nfunction getLabelElement(o) {\n    return HTMLElementOverlay.getElement(o);\n}\nfunction getCustomElement(o) {\n    return HTMLElementOverlay.getElement(o, o.component, function(c) {\n        var el = o.create(c);\n        o.instance.addClass(el, o.instance.overlayClass);\n        return el;\n    });\n}\nfunction groupDragConstrain(desiredLoc, dragEl, constrainRect, size) {\n    var x = desiredLoc.x, y = desiredLoc.y;\n    if (dragEl._jsPlumbParentGroup && dragEl._jsPlumbParentGroup.constrain) {\n        x = Math.max(desiredLoc.x, 0);\n        y = Math.max(desiredLoc.y, 0);\n        x = Math.min(x, constrainRect.w - size.w);\n        y = Math.min(y, constrainRect.h - size.h);\n    }\n    return {\n        x: x,\n        y: y\n    };\n}\nvar BrowserJsPlumbInstance = function(_JsPlumbInstance) {\n    _inherits(BrowserJsPlumbInstance, _JsPlumbInstance);\n    var _super = _createSuper(BrowserJsPlumbInstance);\n    function BrowserJsPlumbInstance(_instanceIndex, defaults) {\n        var _this;\n        _classCallCheck(this, BrowserJsPlumbInstance);\n        _this = _super.call(this, _instanceIndex, defaults);\n        _this._instanceIndex = _instanceIndex;\n        _defineProperty(_assertThisInitialized(_this), \"containerType\", null);\n        _defineProperty(_assertThisInitialized(_this), \"dragSelection\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"dragManager\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorDblClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorTap\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorDblTap\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_endpointClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_endpointDblClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_overlayClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_overlayDblClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_overlayTap\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_overlayDblTap\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorMouseover\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorMouseout\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_endpointMouseover\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_endpointMouseout\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorContextmenu\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorMousedown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_connectorMouseup\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_endpointMousedown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_endpointMouseup\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_overlayMouseover\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_overlayMouseout\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementClick\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementTap\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementDblTap\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementMouseenter\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementMouseexit\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementMousemove\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementMouseup\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementMousedown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_elementContextmenu\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_resizeObserver\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"eventManager\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"draggingClass\", \"jtk-dragging\");\n        _defineProperty(_assertThisInitialized(_this), \"elementDraggingClass\", \"jtk-element-dragging\");\n        _defineProperty(_assertThisInitialized(_this), \"hoverClass\", \"jtk-hover\");\n        _defineProperty(_assertThisInitialized(_this), \"sourceElementDraggingClass\", \"jtk-source-element-dragging\");\n        _defineProperty(_assertThisInitialized(_this), \"targetElementDraggingClass\", \"jtk-target-element-dragging\");\n        _defineProperty(_assertThisInitialized(_this), \"hoverSourceClass\", \"jtk-source-hover\");\n        _defineProperty(_assertThisInitialized(_this), \"hoverTargetClass\", \"jtk-target-hover\");\n        _defineProperty(_assertThisInitialized(_this), \"dragSelectClass\", \"jtk-drag-select\");\n        _defineProperty(_assertThisInitialized(_this), \"managedElementsSelector\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"elementsDraggable\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"elementDragHandler\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"groupDragOptions\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"elementDragOptions\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"svg\", {\n            node: function node(name, attributes) {\n                return _node(name, attributes);\n            },\n            attr: function attr(node, attributes) {\n                return _attr(node, attributes);\n            },\n            pos: function pos(d) {\n                return _pos(d);\n            }\n        });\n        defaults = defaults || {};\n        _this.containerType = getElementType(_this.getContainer());\n        _this.elementsDraggable = defaults && defaults.elementsDraggable !== false;\n        _this.managedElementsSelector = defaults ? defaults.managedElementsSelector || SELECTOR_MANAGED_ELEMENT : SELECTOR_MANAGED_ELEMENT;\n        _this.eventManager = new EventManager();\n        _this.dragSelection = new DragSelection(_assertThisInitialized(_this));\n        _this.dragManager = new DragManager(_assertThisInitialized(_this), _this.dragSelection);\n        _this.dragManager.addHandler(new EndpointDragHandler(_assertThisInitialized(_this)));\n        _this.groupDragOptions = {\n            constrainFunction: groupDragConstrain\n        };\n        _this.dragManager.addHandler(new GroupDragHandler(_assertThisInitialized(_this), _this.dragSelection), _this.groupDragOptions);\n        _this.elementDragHandler = new ElementDragHandler(_assertThisInitialized(_this), _this.dragSelection);\n        _this.elementDragOptions = defaults && defaults.dragOptions || {};\n        _this.dragManager.addHandler(_this.elementDragHandler, _this.elementDragOptions);\n        if (defaults && defaults.dragOptions && defaults.dragOptions.filter) _this.dragManager.addFilter(defaults.dragOptions.filter);\n        _this._createEventListeners();\n        _this._attachEventDelegates();\n        if (defaults.resizeObserver !== false) try {\n            _this._resizeObserver = new ResizeObserver(function(entries) {\n                var updates = entries.filter(function(e) {\n                    var a = _this.getAttribute(e.target, ATTRIBUTE_MANAGED);\n                    if (a != null) {\n                        var v = _this.viewport._elementMap.get(a);\n                        return v ? v.w !== e.contentRect.width || v.h !== e.contentRect.height : false;\n                    } else return false;\n                });\n                updates.forEach(function(el) {\n                    return _this.revalidate(el.target);\n                });\n            });\n        } catch (e) {\n            log(\"WARN: ResizeObserver could not be attached.\");\n        }\n        return _this;\n    }\n    _createClass(BrowserJsPlumbInstance, [\n        {\n            key: \"fireOverlayMethod\",\n            value: function fireOverlayMethod(overlay, event, e) {\n                var stem = overlay.component instanceof Connection ? CONNECTION : ENDPOINT;\n                var mappedEvent = compoundEvent(stem, event);\n                e._jsPlumbOverlay = overlay;\n                overlay.fire(event, {\n                    e: e,\n                    overlay: overlay\n                });\n                this.fire(mappedEvent, overlay.component, e);\n            }\n        },\n        {\n            key: \"addDragFilter\",\n            value: function addDragFilter(filter, exclude) {\n                this.dragManager.addFilter(filter, exclude);\n            }\n        },\n        {\n            key: \"removeDragFilter\",\n            value: function removeDragFilter(filter) {\n                this.dragManager.removeFilter(filter);\n            }\n        },\n        {\n            key: \"setDragGrid\",\n            value: function setDragGrid(grid) {\n                this.dragManager.setOption(this.elementDragHandler, {\n                    grid: grid\n                });\n            }\n        },\n        {\n            key: \"setDragConstrainFunction\",\n            value: function setDragConstrainFunction(constrainFunction) {\n                this.dragManager.setOption(this.elementDragHandler, {\n                    constrainFunction: constrainFunction\n                });\n            }\n        },\n        {\n            key: \"_removeElement\",\n            value: function _removeElement(element) {\n                element.parentNode && element.parentNode.removeChild(element);\n            }\n        },\n        {\n            key: \"_appendElement\",\n            value: function _appendElement(el, parent) {\n                if (parent) parent.appendChild(el);\n            }\n        },\n        {\n            key: \"_appendElementToGroup\",\n            value: function _appendElementToGroup(group, el) {\n                this.getGroupContentArea(group).appendChild(el);\n            }\n        },\n        {\n            key: \"_appendElementToContainer\",\n            value: function _appendElementToContainer(el) {\n                this._appendElement(el, this.getContainer());\n            }\n        },\n        {\n            key: \"_getAssociatedElements\",\n            value: function _getAssociatedElements(el) {\n                var a = [];\n                if (el.nodeType !== 3 && el.nodeType !== 8) {\n                    var els = el.querySelectorAll(SELECTOR_MANAGED_ELEMENT);\n                    Array.prototype.push.apply(a, els);\n                }\n                return a.filter(function(_a) {\n                    return _a.nodeType !== 3 && _a.nodeType !== 8;\n                });\n            }\n        },\n        {\n            key: \"shouldFireEvent\",\n            value: function shouldFireEvent(event, value, originalEvent) {\n                return true;\n            }\n        },\n        {\n            key: \"getClass\",\n            value: function getClass$1(el) {\n                return getClass(el);\n            }\n        },\n        {\n            key: \"addClass\",\n            value: function addClass$1(el, clazz) {\n                addClass(el, clazz);\n            }\n        },\n        {\n            key: \"hasClass\",\n            value: function hasClass$1(el, clazz) {\n                return hasClass(el, clazz);\n            }\n        },\n        {\n            key: \"removeClass\",\n            value: function removeClass$1(el, clazz) {\n                removeClass(el, clazz);\n            }\n        },\n        {\n            key: \"toggleClass\",\n            value: function toggleClass$1(el, clazz) {\n                toggleClass(el, clazz);\n            }\n        },\n        {\n            key: \"setAttribute\",\n            value: function setAttribute(el, name, value) {\n                el.setAttribute(name, value);\n            }\n        },\n        {\n            key: \"getAttribute\",\n            value: function getAttribute(el, name) {\n                return el.getAttribute(name);\n            }\n        },\n        {\n            key: \"setAttributes\",\n            value: function setAttributes(el, atts) {\n                for(var i in atts)el.setAttribute(i, atts[i]);\n            }\n        },\n        {\n            key: \"removeAttribute\",\n            value: function removeAttribute(el, attName) {\n                el.removeAttribute && el.removeAttribute(attName);\n            }\n        },\n        {\n            key: \"on\",\n            value: function on(el, event, callbackOrSelector, callback) {\n                var _this2 = this;\n                var _one = function _one(_el) {\n                    if (callback == null) _this2.eventManager.on(_el, event, callbackOrSelector);\n                    else _this2.eventManager.on(_el, event, callbackOrSelector, callback);\n                };\n                if (isNodeList(el)) forEach(el, function(el) {\n                    return _one(el);\n                });\n                else _one(el);\n                return this;\n            }\n        },\n        {\n            key: \"off\",\n            value: function off(el, event, callback) {\n                var _this3 = this;\n                if (isNodeList(el)) forEach(el, function(_el) {\n                    return _this3.eventManager.off(_el, event, callback);\n                });\n                else this.eventManager.off(el, event, callback);\n                return this;\n            }\n        },\n        {\n            key: \"trigger\",\n            value: function trigger(el, event, originalEvent, payload, detail) {\n                this.eventManager.trigger(el, event, originalEvent, payload, detail);\n            }\n        },\n        {\n            key: \"getOffsetRelativeToRoot\",\n            value: function getOffsetRelativeToRoot(el) {\n                return offsetRelativeToRoot(el);\n            }\n        },\n        {\n            key: \"getOffset\",\n            value: function getOffset(el) {\n                var jel = el;\n                var container = this.getContainer();\n                var out = this.getPosition(jel), op = el !== container && jel.offsetParent !== container ? jel.offsetParent : null, _maybeAdjustScroll = function _maybeAdjustScroll(offsetParent) {\n                    if (offsetParent != null && offsetParent !== document.body && (offsetParent.scrollTop > 0 || offsetParent.scrollLeft > 0)) {\n                        out.x -= offsetParent.scrollLeft;\n                        out.y -= offsetParent.scrollTop;\n                    }\n                };\n                while(op != null){\n                    out.x += op.offsetLeft;\n                    out.y += op.offsetTop;\n                    _maybeAdjustScroll(op);\n                    op = op.offsetParent === container ? null : op.offsetParent;\n                }\n                if (container != null && (container.scrollTop > 0 || container.scrollLeft > 0)) {\n                    var pp = jel.offsetParent != null ? this.getStyle(jel.offsetParent, PROPERTY_POSITION) : STATIC, p = this.getStyle(jel, PROPERTY_POSITION);\n                    if (p !== ABSOLUTE && p !== FIXED && pp !== ABSOLUTE && pp !== FIXED) {\n                        out.x -= container.scrollLeft;\n                        out.y -= container.scrollTop;\n                    }\n                }\n                return out;\n            }\n        },\n        {\n            key: \"getSize\",\n            value: function getSize(el) {\n                var _el = el;\n                if (_el.offsetWidth != null) return offsetSize(el);\n                else if (_el.width && _el.width.baseVal) return svgWidthHeightSize(_el);\n            }\n        },\n        {\n            key: \"getPosition\",\n            value: function getPosition(el) {\n                var _el = el;\n                if (_el.offsetLeft != null) return {\n                    x: parseFloat(_el.offsetLeft),\n                    y: parseFloat(_el.offsetTop)\n                };\n                else if (_el.x && _el.x.baseVal) return svgXYPosition(_el);\n            }\n        },\n        {\n            key: \"getStyle\",\n            value: function getStyle(el, prop) {\n                if (_typeof(window.getComputedStyle) !== UNDEFINED) return getComputedStyle(el, null).getPropertyValue(prop);\n                else return el.currentStyle[prop];\n            }\n        },\n        {\n            key: \"getGroupContentArea\",\n            value: function getGroupContentArea(group) {\n                var da = this.getSelector(group.el, SELECTOR_GROUP_CONTAINER);\n                return da && da.length > 0 ? da[0] : group.el;\n            }\n        },\n        {\n            key: \"getSelector\",\n            value: function getSelector(ctx, spec) {\n                var sel = null;\n                if (arguments.length === 1) {\n                    if (!isString(ctx)) {\n                        var nodeList = document.createDocumentFragment();\n                        nodeList.appendChild(ctx);\n                        return fromArray(nodeList.childNodes);\n                    }\n                    sel = fromArray(document.querySelectorAll(ctx));\n                } else sel = fromArray(ctx.querySelectorAll(spec));\n                return sel;\n            }\n        },\n        {\n            key: \"setPosition\",\n            value: function setPosition(el, p) {\n                var jel = el;\n                jel.style.left = p.x + \"px\";\n                jel.style.top = p.y + \"px\";\n            }\n        },\n        {\n            key: \"setDraggable\",\n            value: function setDraggable(element, draggable) {\n                if (draggable) this.removeAttribute(element, ATTRIBUTE_NOT_DRAGGABLE);\n                else this.setAttribute(element, ATTRIBUTE_NOT_DRAGGABLE, TRUE$1);\n            }\n        },\n        {\n            key: \"isDraggable\",\n            value: function isDraggable(el) {\n                var d = this.getAttribute(el, ATTRIBUTE_NOT_DRAGGABLE);\n                return d == null || d === FALSE$1;\n            }\n        },\n        {\n            key: \"toggleDraggable\",\n            value: function toggleDraggable(el) {\n                var state = this.isDraggable(el);\n                this.setDraggable(el, !state);\n                return !state;\n            }\n        },\n        {\n            key: \"_createEventListeners\",\n            value: function _createEventListeners() {\n                var _connClick = function _connClick(event, e) {\n                    if (!e.defaultPrevented && e._jsPlumbOverlay == null) {\n                        var connectorElement = findParent(getEventSource(e), SELECTOR_CONNECTOR, this.getContainer(), true);\n                        this.fire(event, connectorElement.jtk.connector.connection, e);\n                    }\n                };\n                this._connectorClick = _connClick.bind(this, EVENT_CONNECTION_CLICK);\n                this._connectorDblClick = _connClick.bind(this, EVENT_CONNECTION_DBL_CLICK);\n                this._connectorTap = _connClick.bind(this, EVENT_CONNECTION_TAP);\n                this._connectorDblTap = _connClick.bind(this, EVENT_CONNECTION_DBL_TAP);\n                var _connectorHover = function _connectorHover(state, e) {\n                    var el = getEventSource(e).parentNode;\n                    if (el.jtk && el.jtk.connector) {\n                        var connector = el.jtk.connector;\n                        var connection = connector.connection;\n                        this.setConnectorHover(connector, state);\n                        if (state) {\n                            this.addClass(connection.source, this.hoverSourceClass);\n                            this.addClass(connection.target, this.hoverTargetClass);\n                        } else {\n                            this.removeClass(connection.source, this.hoverSourceClass);\n                            this.removeClass(connection.target, this.hoverTargetClass);\n                        }\n                        this.fire(state ? EVENT_CONNECTION_MOUSEOVER : EVENT_CONNECTION_MOUSEOUT, el.jtk.connector.connection, e);\n                    }\n                };\n                this._connectorMouseover = _connectorHover.bind(this, true);\n                this._connectorMouseout = _connectorHover.bind(this, false);\n                var _connectorMouseupdown = function _connectorMouseupdown(state, e) {\n                    var el = getEventSource(e).parentNode;\n                    if (el.jtk && el.jtk.connector) this.fire(state ? EVENT_CONNECTION_MOUSEUP : EVENT_CONNECTION_MOUSEDOWN, el.jtk.connector.connection, e);\n                };\n                this._connectorMouseup = _connectorMouseupdown.bind(this, true);\n                this._connectorMousedown = _connectorMouseupdown.bind(this, false);\n                this._connectorContextmenu = (function(e) {\n                    var el = getEventSource(e).parentNode;\n                    if (el.jtk && el.jtk.connector) this.fire(EVENT_CONNECTION_CONTEXTMENU, el.jtk.connector.connection, e);\n                }).bind(this);\n                var _epClick = function _epClick(event, e, endpointElement) {\n                    if (!e.defaultPrevented && e._jsPlumbOverlay == null) this.fire(event, endpointElement.jtk.endpoint, e);\n                };\n                this._endpointClick = _epClick.bind(this, EVENT_ENDPOINT_CLICK);\n                this._endpointDblClick = _epClick.bind(this, EVENT_ENDPOINT_DBL_CLICK);\n                var _endpointHover = function _endpointHover(state, e) {\n                    var el = getEventSource(e);\n                    if (el.jtk && el.jtk.endpoint) {\n                        this.setEndpointHover(el.jtk.endpoint, state);\n                        this.fire(state ? EVENT_ENDPOINT_MOUSEOVER : EVENT_ENDPOINT_MOUSEOUT, el.jtk.endpoint, e);\n                    }\n                };\n                this._endpointMouseover = _endpointHover.bind(this, true);\n                this._endpointMouseout = _endpointHover.bind(this, false);\n                var _endpointMouseupdown = function _endpointMouseupdown(state, e) {\n                    var el = getEventSource(e);\n                    if (el.jtk && el.jtk.endpoint) this.fire(state ? EVENT_ENDPOINT_MOUSEUP : EVENT_ENDPOINT_MOUSEDOWN, el.jtk.endpoint, e);\n                };\n                this._endpointMouseup = _endpointMouseupdown.bind(this, true);\n                this._endpointMousedown = _endpointMouseupdown.bind(this, false);\n                var _oClick = (function(method, e) {\n                    var overlayElement = findParent(getEventSource(e), SELECTOR_OVERLAY, this.getContainer(), true);\n                    var overlay = overlayElement.jtk.overlay;\n                    if (overlay) this.fireOverlayMethod(overlay, method, e);\n                }).bind(this);\n                this._overlayClick = _oClick.bind(this, EVENT_CLICK);\n                this._overlayDblClick = _oClick.bind(this, EVENT_DBL_CLICK);\n                this._overlayTap = _oClick.bind(this, EVENT_TAP);\n                this._overlayDblTap = _oClick.bind(this, EVENT_DBL_TAP);\n                var _overlayHover = function _overlayHover(state, e) {\n                    var overlayElement = findParent(getEventSource(e), SELECTOR_OVERLAY, this.getContainer(), true);\n                    var overlay = overlayElement.jtk.overlay;\n                    if (overlay) this.setOverlayHover(overlay, state);\n                };\n                this._overlayMouseover = _overlayHover.bind(this, true);\n                this._overlayMouseout = _overlayHover.bind(this, false);\n                var _elementClick = function _elementClick(event, e, target) {\n                    if (!e.defaultPrevented) this.fire(e.detail === 1 ? EVENT_ELEMENT_CLICK : EVENT_ELEMENT_DBL_CLICK, target, e);\n                };\n                this._elementClick = _elementClick.bind(this, EVENT_ELEMENT_CLICK);\n                var _elementTap = function _elementTap(event, e, target) {\n                    if (!e.defaultPrevented) this.fire(EVENT_ELEMENT_TAP, target, e);\n                };\n                this._elementTap = _elementTap.bind(this, EVENT_ELEMENT_TAP);\n                var _elementDblTap = function _elementDblTap(event, e, target) {\n                    if (!e.defaultPrevented) this.fire(EVENT_ELEMENT_DBL_TAP, target, e);\n                };\n                this._elementDblTap = _elementDblTap.bind(this, EVENT_ELEMENT_DBL_TAP);\n                var _elementHover = function _elementHover(state, e) {\n                    this.fire(state ? EVENT_ELEMENT_MOUSE_OVER : EVENT_ELEMENT_MOUSE_OUT, getEventSource(e), e);\n                };\n                this._elementMouseenter = _elementHover.bind(this, true);\n                this._elementMouseexit = _elementHover.bind(this, false);\n                this._elementMousemove = (function(e) {\n                    this.fire(EVENT_ELEMENT_MOUSE_MOVE, getEventSource(e), e);\n                }).bind(this);\n                this._elementMouseup = (function(e) {\n                    this.fire(EVENT_ELEMENT_MOUSE_UP, getEventSource(e), e);\n                }).bind(this);\n                this._elementMousedown = (function(e) {\n                    this.fire(EVENT_ELEMENT_MOUSE_DOWN, getEventSource(e), e);\n                }).bind(this);\n                this._elementContextmenu = (function(e) {\n                    this.fire(EVENT_ELEMENT_CONTEXTMENU, getEventSource(e), e);\n                }).bind(this);\n            }\n        },\n        {\n            key: \"_attachEventDelegates\",\n            value: function _attachEventDelegates() {\n                var currentContainer = this.getContainer();\n                this.eventManager.on(currentContainer, EVENT_CLICK, SELECTOR_OVERLAY, this._overlayClick);\n                this.eventManager.on(currentContainer, EVENT_DBL_CLICK, SELECTOR_OVERLAY, this._overlayDblClick);\n                this.eventManager.on(currentContainer, EVENT_TAP, SELECTOR_OVERLAY, this._overlayTap);\n                this.eventManager.on(currentContainer, EVENT_DBL_TAP, SELECTOR_OVERLAY, this._overlayDblTap);\n                this.eventManager.on(currentContainer, EVENT_CLICK, SELECTOR_CONNECTOR, this._connectorClick);\n                this.eventManager.on(currentContainer, EVENT_DBL_CLICK, SELECTOR_CONNECTOR, this._connectorDblClick);\n                this.eventManager.on(currentContainer, EVENT_TAP, SELECTOR_CONNECTOR, this._connectorTap);\n                this.eventManager.on(currentContainer, EVENT_DBL_TAP, SELECTOR_CONNECTOR, this._connectorDblTap);\n                this.eventManager.on(currentContainer, EVENT_CLICK, SELECTOR_ENDPOINT, this._endpointClick);\n                this.eventManager.on(currentContainer, EVENT_DBL_CLICK, SELECTOR_ENDPOINT, this._endpointDblClick);\n                this.eventManager.on(currentContainer, EVENT_CLICK, this.managedElementsSelector, this._elementClick);\n                this.eventManager.on(currentContainer, EVENT_TAP, this.managedElementsSelector, this._elementTap);\n                this.eventManager.on(currentContainer, EVENT_DBL_TAP, this.managedElementsSelector, this._elementDblTap);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_CONNECTOR, this._connectorMouseover);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_CONNECTOR, this._connectorMouseout);\n                this.eventManager.on(currentContainer, EVENT_CONTEXTMENU, SELECTOR_CONNECTOR, this._connectorContextmenu);\n                this.eventManager.on(currentContainer, EVENT_MOUSEUP, SELECTOR_CONNECTOR, this._connectorMouseup);\n                this.eventManager.on(currentContainer, EVENT_MOUSEDOWN, SELECTOR_CONNECTOR, this._connectorMousedown);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_ENDPOINT, this._endpointMouseover);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_ENDPOINT, this._endpointMouseout);\n                this.eventManager.on(currentContainer, EVENT_MOUSEUP, SELECTOR_ENDPOINT, this._endpointMouseup);\n                this.eventManager.on(currentContainer, EVENT_MOUSEDOWN, SELECTOR_ENDPOINT, this._endpointMousedown);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_OVERLAY, this._overlayMouseover);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_OVERLAY, this._overlayMouseout);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_MANAGED_ELEMENT, this._elementMouseenter);\n                this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_MANAGED_ELEMENT, this._elementMouseexit);\n                this.eventManager.on(currentContainer, EVENT_MOUSEMOVE, SELECTOR_MANAGED_ELEMENT, this._elementMousemove);\n                this.eventManager.on(currentContainer, EVENT_MOUSEUP, SELECTOR_MANAGED_ELEMENT, this._elementMouseup);\n                this.eventManager.on(currentContainer, EVENT_MOUSEDOWN, SELECTOR_MANAGED_ELEMENT, this._elementMousedown);\n                this.eventManager.on(currentContainer, EVENT_CONTEXTMENU, SELECTOR_MANAGED_ELEMENT, this._elementContextmenu);\n            }\n        },\n        {\n            key: \"_detachEventDelegates\",\n            value: function _detachEventDelegates() {\n                var currentContainer = this.getContainer();\n                if (currentContainer) {\n                    this.eventManager.off(currentContainer, EVENT_CLICK, this._connectorClick);\n                    this.eventManager.off(currentContainer, EVENT_DBL_CLICK, this._connectorDblClick);\n                    this.eventManager.off(currentContainer, EVENT_TAP, this._connectorTap);\n                    this.eventManager.off(currentContainer, EVENT_DBL_TAP, this._connectorDblTap);\n                    this.eventManager.off(currentContainer, EVENT_CLICK, this._endpointClick);\n                    this.eventManager.off(currentContainer, EVENT_DBL_CLICK, this._endpointDblClick);\n                    this.eventManager.off(currentContainer, EVENT_CLICK, this._overlayClick);\n                    this.eventManager.off(currentContainer, EVENT_DBL_CLICK, this._overlayDblClick);\n                    this.eventManager.off(currentContainer, EVENT_TAP, this._overlayTap);\n                    this.eventManager.off(currentContainer, EVENT_DBL_TAP, this._overlayDblTap);\n                    this.eventManager.off(currentContainer, EVENT_CLICK, this._elementClick);\n                    this.eventManager.off(currentContainer, EVENT_TAP, this._elementTap);\n                    this.eventManager.off(currentContainer, EVENT_DBL_TAP, this._elementDblTap);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEOVER, this._connectorMouseover);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEOUT, this._connectorMouseout);\n                    this.eventManager.off(currentContainer, EVENT_CONTEXTMENU, this._connectorContextmenu);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEUP, this._connectorMouseup);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEDOWN, this._connectorMousedown);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEOVER, this._endpointMouseover);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEOUT, this._endpointMouseout);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEUP, this._endpointMouseup);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEDOWN, this._endpointMousedown);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEOVER, this._overlayMouseover);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEOUT, this._overlayMouseout);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEENTER, this._elementMouseenter);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEEXIT, this._elementMouseexit);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEMOVE, this._elementMousemove);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEUP, this._elementMouseup);\n                    this.eventManager.off(currentContainer, EVENT_MOUSEDOWN, this._elementMousedown);\n                    this.eventManager.off(currentContainer, EVENT_CONTEXTMENU, this._elementContextmenu);\n                }\n            }\n        },\n        {\n            key: \"setContainer\",\n            value: function setContainer(newContainer) {\n                var _this4 = this;\n                if (newContainer === document || newContainer === document.body) throw new Error(\"Cannot set document or document.body as container element\");\n                this._detachEventDelegates();\n                var dragFilters;\n                if (this.dragManager != null) dragFilters = this.dragManager.reset();\n                this.setAttribute(newContainer, ATTRIBUTE_CONTAINER, uuid().replace(\"-\", \"\"));\n                var currentContainer = this.getContainer();\n                if (currentContainer != null) {\n                    currentContainer.removeAttribute(ATTRIBUTE_CONTAINER);\n                    var children = fromArray(currentContainer.childNodes).filter(function(cn) {\n                        return cn != null && (_this4.hasClass(cn, CLASS_CONNECTOR) || _this4.hasClass(cn, CLASS_ENDPOINT) || _this4.hasClass(cn, CLASS_OVERLAY) || cn.getAttribute && cn.getAttribute(ATTRIBUTE_MANAGED) != null);\n                    });\n                    forEach(children, function(el) {\n                        newContainer.appendChild(el);\n                    });\n                }\n                _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"setContainer\", this).call(this, newContainer);\n                this.containerType = getElementType(newContainer);\n                if (this.eventManager != null) this._attachEventDelegates();\n                if (this.dragManager != null) {\n                    this.dragManager.addHandler(new EndpointDragHandler(this));\n                    this.dragManager.addHandler(new GroupDragHandler(this, this.dragSelection), this.groupDragOptions);\n                    this.elementDragHandler = new ElementDragHandler(this, this.dragSelection);\n                    this.dragManager.addHandler(this.elementDragHandler, this.elementDragOptions);\n                    if (dragFilters != null) this.dragManager.setFilters(dragFilters);\n                }\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"reset\", this).call(this);\n                if (this._resizeObserver) this._resizeObserver.disconnect();\n                var container = this.getContainer();\n                var els = container.querySelectorAll([\n                    SELECTOR_MANAGED_ELEMENT,\n                    SELECTOR_ENDPOINT,\n                    SELECTOR_CONNECTOR,\n                    SELECTOR_OVERLAY\n                ].join(\",\"));\n                forEach(els, function(el) {\n                    return el.parentNode && el.parentNode.removeChild(el);\n                });\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                this._detachEventDelegates();\n                if (this.dragManager != null) this.dragManager.reset();\n                this.clearDragSelection();\n                _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"destroy\", this).call(this);\n            }\n        },\n        {\n            key: \"unmanage\",\n            value: function unmanage(el, removeElement) {\n                if (this._resizeObserver != null) this._resizeObserver.unobserve(el);\n                this.removeFromDragSelection(el);\n                _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"unmanage\", this).call(this, el, removeElement);\n            }\n        },\n        {\n            key: \"addToDragSelection\",\n            value: function addToDragSelection() {\n                var _this5 = this;\n                for(var _len = arguments.length, el = new Array(_len), _key = 0; _key < _len; _key++)el[_key] = arguments[_key];\n                forEach(el, function(_el) {\n                    return _this5.dragSelection.add(_el);\n                });\n            }\n        },\n        {\n            key: \"clearDragSelection\",\n            value: function clearDragSelection() {\n                this.dragSelection.clear();\n            }\n        },\n        {\n            key: \"removeFromDragSelection\",\n            value: function removeFromDragSelection() {\n                var _this6 = this;\n                for(var _len2 = arguments.length, el = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)el[_key2] = arguments[_key2];\n                forEach(el, function(_el) {\n                    return _this6.dragSelection.remove(_el);\n                });\n            }\n        },\n        {\n            key: \"toggleDragSelection\",\n            value: function toggleDragSelection() {\n                var _this7 = this;\n                for(var _len3 = arguments.length, el = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)el[_key3] = arguments[_key3];\n                forEach(el, function(_el) {\n                    return _this7.dragSelection.toggle(_el);\n                });\n            }\n        },\n        {\n            key: \"addToDragGroup\",\n            value: function addToDragGroup(spec) {\n                var _this$elementDragHand;\n                for(var _len4 = arguments.length, els = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++)els[_key4 - 1] = arguments[_key4];\n                (_this$elementDragHand = this.elementDragHandler).addToDragGroup.apply(_this$elementDragHand, [\n                    spec\n                ].concat(els));\n            }\n        },\n        {\n            key: \"removeFromDragGroup\",\n            value: function removeFromDragGroup() {\n                var _this$elementDragHand2;\n                (_this$elementDragHand2 = this.elementDragHandler).removeFromDragGroup.apply(_this$elementDragHand2, arguments);\n            }\n        },\n        {\n            key: \"setDragGroupState\",\n            value: function setDragGroupState(state) {\n                var _this$elementDragHand3;\n                for(var _len5 = arguments.length, els = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++)els[_key5 - 1] = arguments[_key5];\n                (_this$elementDragHand3 = this.elementDragHandler).setDragGroupState.apply(_this$elementDragHand3, [\n                    state\n                ].concat(els));\n            }\n        },\n        {\n            key: \"clearDragGroup\",\n            value: function clearDragGroup(name) {\n                this.elementDragHandler.clearDragGroup(name);\n            }\n        },\n        {\n            key: \"consume\",\n            value: function consume$1(e, doNotPreventDefault) {\n                consume(e, doNotPreventDefault);\n            }\n        },\n        {\n            key: \"rotate\",\n            value: function rotate(element, rotation, doNotRepaint) {\n                var elementId = this.getId(element);\n                if (this._managedElements[elementId]) {\n                    this._managedElements[elementId].el.style.transform = \"rotate(\" + rotation + \"deg)\";\n                    this._managedElements[elementId].el.style.transformOrigin = \"center center\";\n                    return _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"rotate\", this).call(this, element, rotation, doNotRepaint);\n                }\n                return {\n                    c: new Set(),\n                    e: new Set()\n                };\n            }\n        },\n        {\n            key: \"addOverlayClass\",\n            value: function addOverlayClass(o, clazz) {\n                if (isLabelOverlay(o)) o.instance.addClass(getLabelElement(o), clazz);\n                else if (isSVGElementOverlay(o)) o.instance.addClass(ensureSVGOverlayPath(o), clazz);\n                else if (isCustomOverlay(o)) o.instance.addClass(getCustomElement(o), clazz);\n                else throw \"Could not add class to overlay of type [\" + o.type + \"]\";\n            }\n        },\n        {\n            key: \"removeOverlayClass\",\n            value: function removeOverlayClass(o, clazz) {\n                if (isLabelOverlay(o)) o.instance.removeClass(getLabelElement(o), clazz);\n                else if (isSVGElementOverlay(o)) o.instance.removeClass(ensureSVGOverlayPath(o), clazz);\n                else if (isCustomOverlay(o)) o.instance.removeClass(getCustomElement(o), clazz);\n                else throw \"Could not remove class from overlay of type [\" + o.type + \"]\";\n            }\n        },\n        {\n            key: \"_paintOverlay\",\n            value: function _paintOverlay(o, params, extents) {\n                if (isLabelOverlay(o)) {\n                    getLabelElement(o);\n                    var XY = o.component.getXY();\n                    o.canvas.style.left = XY.x + params.d.minx + \"px\";\n                    o.canvas.style.top = XY.y + params.d.miny + \"px\";\n                } else if (isSVGElementOverlay(o)) {\n                    var path = isNaN(params.d.cxy.x) || isNaN(params.d.cxy.y) ? \"M 0 0\" : \"M\" + params.d.hxy.x + \",\" + params.d.hxy.y + \" L\" + params.d.tail[0].x + \",\" + params.d.tail[0].y + \" L\" + params.d.cxy.x + \",\" + params.d.cxy.y + \" L\" + params.d.tail[1].x + \",\" + params.d.tail[1].y + \" Z\";\n                    paintSVGOverlay(o, path, params, extents);\n                } else if (isCustomOverlay(o)) {\n                    getCustomElement(o);\n                    var _XY = o.component.getXY();\n                    o.canvas.style.left = _XY.x + params.d.minx + \"px\";\n                    o.canvas.style.top = _XY.y + params.d.miny + \"px\";\n                } else throw \"Could not paint overlay of type [\" + o.type + \"]\";\n            }\n        },\n        {\n            key: \"setOverlayVisible\",\n            value: function setOverlayVisible(o, visible) {\n                var d = visible ? \"block\" : \"none\";\n                function s(el) {\n                    if (el != null) el.style.display = d;\n                }\n                if (isLabelOverlay(o)) s(getLabelElement(o));\n                else if (isCustomOverlay(o)) s(getCustomElement(o));\n                else if (isSVGElementOverlay(o)) s(o.path);\n            }\n        },\n        {\n            key: \"reattachOverlay\",\n            value: function reattachOverlay(o, c) {\n                if (isLabelOverlay(o)) o.instance._appendElement(getLabelElement(o), this.getContainer());\n                else if (isCustomOverlay(o)) o.instance._appendElement(getCustomElement(o), this.getContainer());\n                else if (isSVGElementOverlay(o)) this._appendElement(ensureSVGOverlayPath(o), c.connector.canvas);\n            }\n        },\n        {\n            key: \"setOverlayHover\",\n            value: function setOverlayHover(o, hover) {\n                var canvas;\n                if (isLabelOverlay(o)) canvas = getLabelElement(o);\n                else if (isCustomOverlay(o)) canvas = getCustomElement(o);\n                else if (isSVGElementOverlay(o)) canvas = ensureSVGOverlayPath(o);\n                if (canvas != null) {\n                    if (this.hoverClass != null) {\n                        if (hover) this.addClass(canvas, this.hoverClass);\n                        else this.removeClass(canvas, this.hoverClass);\n                    }\n                    this.setHover(o.component, hover);\n                }\n            }\n        },\n        {\n            key: \"destroyOverlay\",\n            value: function destroyOverlay(o) {\n                if (isLabelOverlay(o)) {\n                    var _el2 = getLabelElement(o);\n                    _el2.parentNode.removeChild(_el2);\n                    delete o.canvas;\n                    delete o.cachedDimensions;\n                } else if (isArrowOverlay(o) || isDiamondOverlay(o) || isPlainArrowOverlay(o)) destroySVGOverlay(o);\n                else if (isCustomOverlay(o)) {\n                    var _el3 = getCustomElement(o);\n                    _el3.parentNode.removeChild(_el3);\n                    delete o.canvas;\n                    delete o.cachedDimensions;\n                }\n            }\n        },\n        {\n            key: \"drawOverlay\",\n            value: function drawOverlay(o, component, paintStyle, absolutePosition) {\n                if (isLabelOverlay(o) || isCustomOverlay(o)) {\n                    var td = HTMLElementOverlay._getDimensions(o);\n                    if (td != null && td.w != null && td.h != null) {\n                        var cxy = {\n                            x: 0,\n                            y: 0\n                        };\n                        if (absolutePosition) cxy = {\n                            x: absolutePosition.x,\n                            y: absolutePosition.y\n                        };\n                        else if (component instanceof EndpointRepresentation) {\n                            var locToUse = Array.isArray(o.location) ? o.location : [\n                                o.location,\n                                o.location\n                            ];\n                            cxy = {\n                                x: locToUse[0] * component.w,\n                                y: locToUse[1] * component.h\n                            };\n                        } else {\n                            var loc = o.location, absolute = false;\n                            if (isString(o.location) || o.location < 0 || o.location > 1) {\n                                loc = parseInt(\"\" + o.location, 10);\n                                absolute = true;\n                            }\n                            cxy = component.pointOnPath(loc, absolute);\n                        }\n                        var minx = cxy.x - td.w / 2, miny = cxy.y - td.h / 2;\n                        return {\n                            component: o,\n                            d: {\n                                minx: minx,\n                                miny: miny,\n                                td: td,\n                                cxy: cxy\n                            },\n                            xmin: minx,\n                            xmax: minx + td.w,\n                            ymin: miny,\n                            ymax: miny + td.h\n                        };\n                    } else return {\n                        xmin: 0,\n                        xmax: 0,\n                        ymin: 0,\n                        ymax: 0\n                    };\n                } else if (isArrowOverlay(o) || isDiamondOverlay(o) || isPlainArrowOverlay(o)) return o.draw(component, paintStyle, absolutePosition);\n                else throw \"Could not draw overlay of type [\" + o.type + \"]\";\n            }\n        },\n        {\n            key: \"updateLabel\",\n            value: function updateLabel(o) {\n                if (isFunction(o.label)) {\n                    var lt = o.label(this);\n                    if (lt != null) getLabelElement(o).innerText = lt;\n                    else getLabelElement(o).innerText = \"\";\n                } else if (o.labelText == null) {\n                    o.labelText = o.label;\n                    if (o.labelText != null) getLabelElement(o).innerText = o.labelText;\n                    else getLabelElement(o).innerText = \"\";\n                }\n            }\n        },\n        {\n            key: \"setHover\",\n            value: function setHover(component, hover) {\n                component._hover = hover;\n                if (component instanceof Endpoint && component.endpoint != null) this.setEndpointHover(component, hover, -1);\n                else if (component instanceof Connection && component.connector != null) this.setConnectorHover(component.connector, hover);\n            }\n        },\n        {\n            key: \"paintConnector\",\n            value: function paintConnector(connector, paintStyle, extents) {\n                paintSvgConnector(this, connector, paintStyle, extents);\n            }\n        },\n        {\n            key: \"setConnectorHover\",\n            value: function setConnectorHover(connector, hover, sourceEndpoint) {\n                if (hover === false || !this.currentlyDragging && !this.isHoverSuspended()) {\n                    var canvas = connector.canvas;\n                    if (canvas != null) {\n                        if (connector.hoverClass != null) {\n                            if (hover) this.addClass(canvas, connector.hoverClass);\n                            else this.removeClass(canvas, connector.hoverClass);\n                        }\n                        if (hover) this.addClass(canvas, this.hoverClass);\n                        else this.removeClass(canvas, this.hoverClass);\n                    }\n                    if (connector.connection.hoverPaintStyle != null) {\n                        connector.connection.paintStyleInUse = hover ? connector.connection.hoverPaintStyle : connector.connection.paintStyle;\n                        if (!this._suspendDrawing) this._paintConnection(connector.connection);\n                    }\n                    if (connector.connection.endpoints[0] !== sourceEndpoint) this.setEndpointHover(connector.connection.endpoints[0], hover, 0, true);\n                    if (connector.connection.endpoints[1] !== sourceEndpoint) this.setEndpointHover(connector.connection.endpoints[1], hover, 1, true);\n                }\n            }\n        },\n        {\n            key: \"destroyConnector\",\n            value: function destroyConnector(connection) {\n                if (connection.connector != null) cleanup(connection.connector);\n            }\n        },\n        {\n            key: \"addConnectorClass\",\n            value: function addConnectorClass(connector, clazz) {\n                if (connector.canvas) this.addClass(connector.canvas, clazz);\n            }\n        },\n        {\n            key: \"removeConnectorClass\",\n            value: function removeConnectorClass(connector, clazz) {\n                if (connector.canvas) this.removeClass(connector.canvas, clazz);\n            }\n        },\n        {\n            key: \"getConnectorClass\",\n            value: function getConnectorClass(connector) {\n                if (connector.canvas) return connector.canvas.className.baseVal;\n                else return \"\";\n            }\n        },\n        {\n            key: \"setConnectorVisible\",\n            value: function setConnectorVisible(connector, v) {\n                setVisible(connector, v);\n            }\n        },\n        {\n            key: \"applyConnectorType\",\n            value: function applyConnectorType(connector, t) {\n                if (connector.canvas && t.cssClass) {\n                    var classes = Array.isArray(t.cssClass) ? t.cssClass : [\n                        t.cssClass\n                    ];\n                    this.addClass(connector.canvas, classes.join(\" \"));\n                }\n            }\n        },\n        {\n            key: \"addEndpointClass\",\n            value: function addEndpointClass(ep, c) {\n                var canvas = getEndpointCanvas(ep.endpoint);\n                if (canvas != null) this.addClass(canvas, c);\n            }\n        },\n        {\n            key: \"applyEndpointType\",\n            value: function applyEndpointType(ep, t) {\n                if (t.cssClass) {\n                    var canvas = getEndpointCanvas(ep.endpoint);\n                    if (canvas) {\n                        var classes = Array.isArray(t.cssClass) ? t.cssClass : [\n                            t.cssClass\n                        ];\n                        this.addClass(canvas, classes.join(\" \"));\n                    }\n                }\n            }\n        },\n        {\n            key: \"destroyEndpoint\",\n            value: function destroyEndpoint(ep) {\n                var anchorClass = this.endpointAnchorClassPrefix + (ep.currentAnchorClass ? \"-\" + ep.currentAnchorClass : \"\");\n                this.removeClass(ep.element, anchorClass);\n                cleanup(ep.endpoint);\n            }\n        },\n        {\n            key: \"renderEndpoint\",\n            value: function renderEndpoint(ep, paintStyle) {\n                var renderer = endpointMap[ep.endpoint.type];\n                if (renderer != null) SvgEndpoint.paint(ep.endpoint, renderer, paintStyle);\n                else log(\"jsPlumb: no endpoint renderer found for type [\" + ep.endpoint.type + \"]\");\n            }\n        },\n        {\n            key: \"removeEndpointClass\",\n            value: function removeEndpointClass(ep, c) {\n                var canvas = getEndpointCanvas(ep.endpoint);\n                if (canvas != null) this.removeClass(canvas, c);\n            }\n        },\n        {\n            key: \"getEndpointClass\",\n            value: function getEndpointClass(ep) {\n                var canvas = getEndpointCanvas(ep.endpoint);\n                if (canvas != null) return canvas.className;\n                else return \"\";\n            }\n        },\n        {\n            key: \"setEndpointHover\",\n            value: function setEndpointHover(endpoint, hover, endpointIndex, doNotCascade) {\n                if (endpoint != null && (hover === false || !this.currentlyDragging && !this.isHoverSuspended())) {\n                    var canvas = getEndpointCanvas(endpoint.endpoint);\n                    if (canvas != null) {\n                        if (endpoint.hoverClass != null) {\n                            if (hover) this.addClass(canvas, endpoint.hoverClass);\n                            else this.removeClass(canvas, endpoint.hoverClass);\n                        }\n                        if (endpointIndex === 0 || endpointIndex === 1) {\n                            var genericHoverClass = endpointIndex === 0 ? this.hoverSourceClass : this.hoverTargetClass;\n                            if (hover) this.addClass(canvas, genericHoverClass);\n                            else this.removeClass(canvas, genericHoverClass);\n                        }\n                    }\n                    if (endpoint.hoverPaintStyle != null) {\n                        endpoint.paintStyleInUse = hover ? endpoint.hoverPaintStyle : endpoint.paintStyle;\n                        if (!this._suspendDrawing) this.renderEndpoint(endpoint, endpoint.paintStyleInUse);\n                    }\n                    if (!doNotCascade) for(var i = 0; i < endpoint.connections.length; i++)this.setConnectorHover(endpoint.connections[i].connector, hover, endpoint);\n                }\n            }\n        },\n        {\n            key: \"setEndpointVisible\",\n            value: function setEndpointVisible(ep, v) {\n                setVisible(ep.endpoint, v);\n            }\n        },\n        {\n            key: \"setGroupVisible\",\n            value: function setGroupVisible(group, state) {\n                var m = group.el.querySelectorAll(SELECTOR_MANAGED_ELEMENT);\n                for(var i = 0; i < m.length; i++)if (state) this.show(m[i], true);\n                else this.hide(m[i], true);\n            }\n        },\n        {\n            key: \"deleteConnection\",\n            value: function deleteConnection(connection, params) {\n                if (connection != null && connection.deleted !== true) {\n                    if (connection.endpoints[0].deleted !== true) this.setEndpointHover(connection.endpoints[0], false, 0, true);\n                    if (connection.endpoints[1].deleted !== true) this.setEndpointHover(connection.endpoints[1], false, 1, true);\n                    return _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"deleteConnection\", this).call(this, connection, params);\n                } else return false;\n            }\n        },\n        {\n            key: \"addSourceSelector\",\n            value: function addSourceSelector(selector, params, exclude) {\n                this.addDragFilter(selector);\n                return _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"addSourceSelector\", this).call(this, selector, params, exclude);\n            }\n        },\n        {\n            key: \"removeSourceSelector\",\n            value: function removeSourceSelector(selector) {\n                this.removeDragFilter(selector.selector);\n                _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"removeSourceSelector\", this).call(this, selector);\n            }\n        },\n        {\n            key: \"manage\",\n            value: function manage(element, internalId, _recalc) {\n                if (this.containerType === ElementTypes.SVG && !isSVGElement(element)) throw new Error(\"ERROR: cannot manage non-svg element when container is an SVG element.\");\n                var managedElement = _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"manage\", this).call(this, element, internalId, _recalc);\n                if (managedElement != null) {\n                    if (this._resizeObserver != null) this._resizeObserver.observe(managedElement.el);\n                }\n                return managedElement;\n            }\n        }\n    ]);\n    return BrowserJsPlumbInstance;\n}(JsPlumbInstance);\nvar CIRCLE = \"circle\";\nvar register$2 = function register() {\n    registerEndpointRenderer(DotEndpoint.type, {\n        makeNode: function makeNode(ep, style) {\n            return _node(CIRCLE, {\n                \"cx\": ep.w / 2,\n                \"cy\": ep.h / 2,\n                \"r\": ep.radius\n            });\n        },\n        updateNode: function updateNode(ep, node) {\n            _attr(node, {\n                \"cx\": \"\" + ep.w / 2,\n                \"cy\": \"\" + ep.h / 2,\n                \"r\": \"\" + ep.radius\n            });\n        }\n    });\n};\nvar RectangleEndpoint = function(_EndpointRepresentati) {\n    _inherits(RectangleEndpoint, _EndpointRepresentati);\n    var _super = _createSuper(RectangleEndpoint);\n    function RectangleEndpoint(endpoint, params) {\n        var _this;\n        _classCallCheck(this, RectangleEndpoint);\n        _this = _super.call(this, endpoint, params);\n        _defineProperty(_assertThisInitialized(_this), \"width\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"height\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", RectangleEndpoint.type);\n        params = params || {};\n        _this.width = params.width || 10;\n        _this.height = params.height || 10;\n        return _this;\n    }\n    _createClass(RectangleEndpoint, null, [\n        {\n            key: \"_getParams\",\n            value: function _getParams(ep) {\n                return {\n                    width: ep.width,\n                    height: ep.height\n                };\n            }\n        }\n    ]);\n    return RectangleEndpoint;\n}(EndpointRepresentation);\n_defineProperty(RectangleEndpoint, \"type\", \"Rectangle\");\nvar RectangleEndpointHandler = {\n    type: RectangleEndpoint.type,\n    cls: RectangleEndpoint,\n    compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\n        var width = endpointStyle.width || ep.width, height = endpointStyle.height || ep.height, x = anchorPoint.curX - width / 2, y = anchorPoint.curY - height / 2;\n        ep.x = x;\n        ep.y = y;\n        ep.w = width;\n        ep.h = height;\n        return [\n            x,\n            y,\n            width,\n            height\n        ];\n    },\n    getParams: function getParams(ep) {\n        return {\n            width: ep.width,\n            height: ep.height\n        };\n    }\n};\nvar RECT = \"rect\";\nvar register$1 = function register() {\n    registerEndpointRenderer(RectangleEndpoint.type, {\n        makeNode: function makeNode(ep, style) {\n            return _node(RECT, {\n                \"width\": ep.w,\n                \"height\": ep.h\n            });\n        },\n        updateNode: function updateNode(ep, node) {\n            _attr(node, {\n                \"width\": ep.w,\n                \"height\": ep.h\n            });\n        }\n    });\n};\nvar BlankEndpoint = function(_EndpointRepresentati) {\n    _inherits(BlankEndpoint, _EndpointRepresentati);\n    var _super = _createSuper(BlankEndpoint);\n    function BlankEndpoint(endpoint, params) {\n        var _this;\n        _classCallCheck(this, BlankEndpoint);\n        _this = _super.call(this, endpoint, params);\n        _defineProperty(_assertThisInitialized(_this), \"type\", BlankEndpoint.type);\n        return _this;\n    }\n    return BlankEndpoint;\n}(EndpointRepresentation);\n_defineProperty(BlankEndpoint, \"type\", \"Blank\");\nvar BlankEndpointHandler = {\n    type: BlankEndpoint.type,\n    cls: BlankEndpoint,\n    compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\n        ep.x = anchorPoint.curX;\n        ep.y = anchorPoint.curY;\n        ep.w = 10;\n        ep.h = 0;\n        return [\n            anchorPoint.curX,\n            anchorPoint.curY,\n            10,\n            0\n        ];\n    },\n    getParams: function getParams(ep) {\n        return {};\n    }\n};\nvar BLANK_ATTRIBUTES = {\n    \"width\": 10,\n    \"height\": 0,\n    \"fill\": \"transparent\",\n    \"stroke\": \"transparent\"\n};\nvar register = function register() {\n    registerEndpointRenderer(BlankEndpoint.type, {\n        makeNode: function makeNode(ep, style) {\n            return _node(\"rect\", BLANK_ATTRIBUTES);\n        },\n        updateNode: function updateNode(ep, node) {\n            _attr(node, BLANK_ATTRIBUTES);\n        }\n    });\n};\nregister$2();\nregister();\nregister$1();\nvar SupportedEdge;\n(function(SupportedEdge) {\n    SupportedEdge[SupportedEdge[\"top\"] = 0] = \"top\";\n    SupportedEdge[SupportedEdge[\"bottom\"] = 1] = \"bottom\";\n})(SupportedEdge || (SupportedEdge = {}));\nvar DEFAULT_ANCHOR_LOCATIONS = new Map();\nDEFAULT_ANCHOR_LOCATIONS.set(SupportedEdge.top, [\n    AnchorLocations.TopRight,\n    AnchorLocations.TopLeft\n]);\nDEFAULT_ANCHOR_LOCATIONS.set(SupportedEdge.bottom, [\n    AnchorLocations.BottomRight,\n    AnchorLocations.BottomLeft\n]);\nvar DEFAULT_LIST_OPTIONS = {\n    deriveAnchor: function deriveAnchor(edge, index, ep, conn) {\n        return DEFAULT_ANCHOR_LOCATIONS.get(edge)[index];\n    }\n};\nvar ATTR_SCROLLABLE_LIST = \"jtk-scrollable-list\";\nvar SELECTOR_SCROLLABLE_LIST = att(ATTR_SCROLLABLE_LIST);\nvar EVENT_SCROLL = \"scroll\";\nvar JsPlumbListManager = function() {\n    function JsPlumbListManager(instance, params) {\n        var _this = this;\n        _classCallCheck(this, JsPlumbListManager);\n        this.instance = instance;\n        _defineProperty(this, \"options\", void 0);\n        _defineProperty(this, \"count\", void 0);\n        _defineProperty(this, \"lists\", void 0);\n        this.count = 0;\n        this.lists = {};\n        this.options = params || {};\n        this.instance.bind(EVENT_MANAGE_ELEMENT, function(p) {\n            var scrollableLists = _this.instance.getSelector(p.el, SELECTOR_SCROLLABLE_LIST);\n            for(var i = 0; i < scrollableLists.length; i++)_this.addList(scrollableLists[i]);\n        });\n        this.instance.bind(EVENT_UNMANAGE_ELEMENT, function(p) {\n            _this.removeList(p.el);\n        });\n        this.instance.bind(EVENT_CONNECTION, function(params, evt) {\n            if (evt == null) {\n                var targetParent = _this.findParentList(params.target);\n                if (targetParent != null) targetParent.newConnection(params.connection, params.target, 1);\n                var sourceParent = _this.findParentList(params.source);\n                if (sourceParent != null) sourceParent.newConnection(params.connection, params.source, 0);\n            }\n        });\n        this.instance.bind(INTERCEPT_BEFORE_DROP, function(p) {\n            var el = p.dropEndpoint.element;\n            var dropList = _this.findParentList(el);\n            return dropList == null || el.offsetTop >= dropList.domElement.scrollTop && el.offsetTop + el.offsetHeight <= dropList.domElement.scrollTop + dropList.domElement.offsetHeight;\n        });\n    }\n    _createClass(JsPlumbListManager, [\n        {\n            key: \"addList\",\n            value: function addList(el, options) {\n                var dp = extend({}, DEFAULT_LIST_OPTIONS);\n                extend(dp, this.options);\n                options = extend(dp, options || {});\n                var id = [\n                    this.instance._instanceIndex,\n                    this.count++\n                ].join(\"_\");\n                this.lists[id] = new JsPlumbList(this.instance, el, options, id);\n                return this.lists[id];\n            }\n        },\n        {\n            key: \"getList\",\n            value: function getList(el) {\n                var listId = this.instance.getAttribute(el, ATTR_SCROLLABLE_LIST);\n                if (listId != null) return this.lists[listId];\n            }\n        },\n        {\n            key: \"removeList\",\n            value: function removeList(el) {\n                var list = this.getList(el);\n                if (list) {\n                    list.destroy();\n                    delete this.lists[list.id];\n                }\n            }\n        },\n        {\n            key: \"findParentList\",\n            value: function findParentList(el) {\n                var parent = el.parentNode, container = this.instance.getContainer(), parentList;\n                while(parent != null && parent !== container && parent !== document){\n                    parentList = this.getList(parent);\n                    if (parentList != null) return parentList;\n                    parent = parent.parentNode;\n                }\n            }\n        }\n    ]);\n    return JsPlumbListManager;\n}();\nvar JsPlumbList = function() {\n    function JsPlumbList(instance, el, options, id) {\n        _classCallCheck(this, JsPlumbList);\n        this.instance = instance;\n        this.el = el;\n        this.options = options;\n        this.id = id;\n        _defineProperty(this, \"_scrollHandler\", void 0);\n        _defineProperty(this, \"domElement\", void 0);\n        _defineProperty(this, \"elId\", void 0);\n        this.domElement = el;\n        this.elId = this.instance.getId(el);\n        instance.setAttribute(el, ATTR_SCROLLABLE_LIST, id);\n        this._scrollHandler = this.scrollHandler.bind(this);\n        this.domElement._jsPlumbScrollHandler = this._scrollHandler;\n        instance.on(el, EVENT_SCROLL, this._scrollHandler);\n        this._scrollHandler();\n    }\n    _createClass(JsPlumbList, [\n        {\n            key: \"deriveAnchor\",\n            value: function deriveAnchor(edge, index, ep, conn) {\n                return this.options.anchor ? this.options.anchor : this.options.deriveAnchor(edge, index, ep, conn);\n            }\n        },\n        {\n            key: \"deriveEndpoint\",\n            value: function deriveEndpoint(edge, index, ep, conn) {\n                return this.options.deriveEndpoint ? this.options.deriveEndpoint(edge, index, ep, conn) : this.options.endpoint ? this.options.endpoint : ep.endpoint.type;\n            }\n        },\n        {\n            key: \"newConnection\",\n            value: function newConnection(c, el, index) {\n                if (el.offsetTop < this.el.scrollTop) this._proxyConnection(el, c, index, SupportedEdge.top);\n                else if (el.offsetTop + el.offsetHeight > this.el.scrollTop + this.domElement.offsetHeight) this._proxyConnection(el, c, index, SupportedEdge.bottom);\n            }\n        },\n        {\n            key: \"scrollHandler\",\n            value: function scrollHandler() {\n                var _this2 = this;\n                var children = this.instance.getSelector(this.el, SELECTOR_MANAGED_ELEMENT);\n                var _loop = function _loop(i) {\n                    if (children[i].offsetTop < _this2.el.scrollTop) {\n                        children[i]._jsPlumbProxies = children[i]._jsPlumbProxies || [];\n                        _this2.instance.select({\n                            source: children[i]\n                        }).each(function(c) {\n                            _this2._proxyConnection(children[i], c, 0, SupportedEdge.top);\n                        });\n                        _this2.instance.select({\n                            target: children[i]\n                        }).each(function(c) {\n                            _this2._proxyConnection(children[i], c, 1, SupportedEdge.top);\n                        });\n                    } else if (children[i].offsetTop + children[i].offsetHeight > _this2.el.scrollTop + _this2.domElement.offsetHeight) {\n                        children[i]._jsPlumbProxies = children[i]._jsPlumbProxies || [];\n                        _this2.instance.select({\n                            source: children[i]\n                        }).each(function(c) {\n                            _this2._proxyConnection(children[i], c, 0, SupportedEdge.bottom);\n                        });\n                        _this2.instance.select({\n                            target: children[i]\n                        }).each(function(c) {\n                            _this2._proxyConnection(children[i], c, 1, SupportedEdge.bottom);\n                        });\n                    } else if (children[i]._jsPlumbProxies) {\n                        for(var j = 0; j < children[i]._jsPlumbProxies.length; j++)_this2.instance.unproxyConnection(children[i]._jsPlumbProxies[j][0], children[i]._jsPlumbProxies[j][1]);\n                        delete children[i]._jsPlumbProxies;\n                    }\n                    _this2.instance.revalidate(children[i]);\n                };\n                for(var i = 0; i < children.length; i++)_loop(i);\n            }\n        },\n        {\n            key: \"_proxyConnection\",\n            value: function _proxyConnection(el, conn, index, edge) {\n                var _this3 = this;\n                this.instance.proxyConnection(conn, index, this.domElement, function(c, index) {\n                    return _this3.deriveEndpoint(edge, index, conn.endpoints[index], conn);\n                }, function(c, index) {\n                    return _this3.deriveAnchor(edge, index, conn.endpoints[index], conn);\n                });\n                el._jsPlumbProxies = el._jsPlumbProxies || [];\n                el._jsPlumbProxies.push([\n                    conn,\n                    index\n                ]);\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                this.instance.off(this.el, EVENT_SCROLL, this._scrollHandler);\n                delete this.domElement._jsPlumbScrollHandler;\n                var children = this.instance.getSelector(this.el, SELECTOR_MANAGED_ELEMENT);\n                for(var i = 0; i < children.length; i++)if (children[i]._jsPlumbProxies) {\n                    for(var j = 0; j < children[i]._jsPlumbProxies.length; j++)this.instance.unproxyConnection(children[i]._jsPlumbProxies[j][0], children[i]._jsPlumbProxies[j][1]);\n                    delete children[i]._jsPlumbProxies;\n                }\n            }\n        }\n    ]);\n    return JsPlumbList;\n}();\nvar VERY_SMALL_VALUE = 0.0000000001;\nfunction gentleRound(n) {\n    var f = Math.floor(n), r = Math.ceil(n);\n    if (n - f < VERY_SMALL_VALUE) return f;\n    else if (r - n < VERY_SMALL_VALUE) return r;\n    return n;\n}\nvar ArcSegment = function(_AbstractSegment) {\n    _inherits(ArcSegment, _AbstractSegment);\n    var _super = _createSuper(ArcSegment);\n    function ArcSegment(params) {\n        var _this;\n        _classCallCheck(this, ArcSegment);\n        _this = _super.call(this, params);\n        _defineProperty(_assertThisInitialized(_this), \"type\", ArcSegment.segmentType);\n        _defineProperty(_assertThisInitialized(_this), \"cx\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cy\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"radius\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"anticlockwise\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"startAngle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"endAngle\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"sweep\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"circumference\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"frac\", void 0);\n        _this.cx = params.cx;\n        _this.cy = params.cy;\n        _this.radius = params.r;\n        _this.anticlockwise = params.ac;\n        if (params.startAngle && params.endAngle) {\n            _this.startAngle = params.startAngle;\n            _this.endAngle = params.endAngle;\n            _this.x1 = _this.cx + _this.radius * Math.cos(_this.startAngle);\n            _this.y1 = _this.cy + _this.radius * Math.sin(_this.startAngle);\n            _this.x2 = _this.cx + _this.radius * Math.cos(_this.endAngle);\n            _this.y2 = _this.cy + _this.radius * Math.sin(_this.endAngle);\n        } else {\n            _this.startAngle = _this._calcAngle(_this.x1, _this.y1);\n            _this.endAngle = _this._calcAngle(_this.x2, _this.y2);\n        }\n        if (_this.endAngle < 0) _this.endAngle += TWO_PI;\n        if (_this.startAngle < 0) _this.startAngle += TWO_PI;\n        var ea = _this.endAngle < _this.startAngle ? _this.endAngle + TWO_PI : _this.endAngle;\n        _this.sweep = Math.abs(ea - _this.startAngle);\n        if (_this.anticlockwise) _this.sweep = TWO_PI - _this.sweep;\n        _this.circumference = 2 * Math.PI * _this.radius;\n        _this.frac = _this.sweep / TWO_PI;\n        _this.length = _this.circumference * _this.frac;\n        _this.extents = {\n            xmin: _this.cx - _this.radius,\n            xmax: _this.cx + _this.radius,\n            ymin: _this.cy - _this.radius,\n            ymax: _this.cy + _this.radius\n        };\n        return _this;\n    }\n    _createClass(ArcSegment, [\n        {\n            key: \"_calcAngle\",\n            value: function _calcAngle(_x, _y) {\n                return theta({\n                    x: this.cx,\n                    y: this.cy\n                }, {\n                    x: _x,\n                    y: _y\n                });\n            }\n        },\n        {\n            key: \"_calcAngleForLocation\",\n            value: function _calcAngleForLocation(segment, location) {\n                if (segment.anticlockwise) {\n                    var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle, s = Math.abs(sa - segment.endAngle);\n                    return sa - s * location;\n                } else {\n                    var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle, ss = Math.abs(ea - segment.startAngle);\n                    return segment.startAngle + ss * location;\n                }\n            }\n        },\n        {\n            key: \"getPath\",\n            value: function getPath(isFirstSegment) {\n                var laf = this.sweep > Math.PI ? 1 : 0, sf = this.anticlockwise ? 0 : 1;\n                return (isFirstSegment ? \"M\" + this.x1 + \" \" + this.y1 + \" \" : \"\") + \"A \" + this.radius + \" \" + this.radius + \" 0 \" + laf + \",\" + sf + \" \" + this.x2 + \" \" + this.y2;\n            }\n        },\n        {\n            key: \"getLength\",\n            value: function getLength() {\n                return this.length;\n            }\n        },\n        {\n            key: \"pointOnPath\",\n            value: function pointOnPath(location, absolute) {\n                if (location === 0) return {\n                    x: this.x1,\n                    y: this.y1,\n                    theta: this.startAngle\n                };\n                else if (location === 1) return {\n                    x: this.x2,\n                    y: this.y2,\n                    theta: this.endAngle\n                };\n                if (absolute) location = location / length;\n                var angle = this._calcAngleForLocation(this, location), _x = this.cx + this.radius * Math.cos(angle), _y = this.cy + this.radius * Math.sin(angle);\n                return {\n                    x: gentleRound(_x),\n                    y: gentleRound(_y),\n                    theta: angle\n                };\n            }\n        },\n        {\n            key: \"gradientAtPoint\",\n            value: function gradientAtPoint(location, absolute) {\n                var p = this.pointOnPath(location, absolute);\n                var m = normal({\n                    x: this.cx,\n                    y: this.cy\n                }, p);\n                if (!this.anticlockwise && (m === Infinity || m === -Infinity)) m *= -1;\n                return m;\n            }\n        },\n        {\n            key: \"pointAlongPathFrom\",\n            value: function pointAlongPathFrom(location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute), arcSpan = distance / this.circumference * 2 * Math.PI, dir = this.anticlockwise ? -1 : 1, startAngle = p.theta + dir * arcSpan, startX = this.cx + this.radius * Math.cos(startAngle), startY = this.cy + this.radius * Math.sin(startAngle);\n                return {\n                    x: startX,\n                    y: startY\n                };\n            }\n        }\n    ]);\n    return ArcSegment;\n}(AbstractSegment);\n_defineProperty(ArcSegment, \"segmentType\", \"Arc\");\nvar AbstractBezierConnector = function(_AbstractConnector) {\n    _inherits(AbstractBezierConnector, _AbstractConnector);\n    var _super = _createSuper(AbstractBezierConnector);\n    function AbstractBezierConnector(connection, params) {\n        var _this;\n        _classCallCheck(this, AbstractBezierConnector);\n        _this = _super.call(this, connection, params);\n        _this.connection = connection;\n        _defineProperty(_assertThisInitialized(_this), \"showLoopback\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"curviness\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"margin\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"proximityLimit\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"orientation\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"loopbackRadius\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"clockwise\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"isLoopbackCurrently\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"geometry\", null);\n        params = params || {};\n        _this.showLoopback = params.showLoopback !== false;\n        _this.curviness = params.curviness || 10;\n        _this.margin = params.margin || 5;\n        _this.proximityLimit = params.proximityLimit || 80;\n        _this.clockwise = params.orientation && params.orientation === \"clockwise\";\n        _this.loopbackRadius = params.loopbackRadius || 25;\n        _this.isLoopbackCurrently = false;\n        return _this;\n    }\n    _createClass(AbstractBezierConnector, [\n        {\n            key: \"getDefaultStubs\",\n            value: function getDefaultStubs() {\n                return [\n                    0,\n                    0\n                ];\n            }\n        },\n        {\n            key: \"_compute\",\n            value: function _compute(paintInfo, p) {\n                var sp = p.sourcePos, tp = p.targetPos, _w = Math.abs(sp.curX - tp.curX), _h = Math.abs(sp.curY - tp.curY);\n                if (!this.showLoopback || p.sourceEndpoint.elementId !== p.targetEndpoint.elementId) {\n                    this.isLoopbackCurrently = false;\n                    this._computeBezier(paintInfo, p, sp, tp, _w, _h);\n                } else {\n                    this.isLoopbackCurrently = true;\n                    var x1 = p.sourcePos.curX, y1 = p.sourcePos.curY - this.margin, cx = x1, cy = y1 - this.loopbackRadius, _x = cx - this.loopbackRadius, _y = cy - this.loopbackRadius;\n                    _w = 2 * this.loopbackRadius;\n                    _h = 2 * this.loopbackRadius;\n                    paintInfo.points[0] = _x;\n                    paintInfo.points[1] = _y;\n                    paintInfo.points[2] = _w;\n                    paintInfo.points[3] = _h;\n                    this._addSegment(ArcSegment, {\n                        loopback: true,\n                        x1: x1 - _x + 4,\n                        y1: y1 - _y,\n                        startAngle: 0,\n                        endAngle: 2 * Math.PI,\n                        r: this.loopbackRadius,\n                        ac: !this.clockwise,\n                        x2: x1 - _x - 4,\n                        y2: y1 - _y,\n                        cx: cx - _x,\n                        cy: cy - _y\n                    });\n                }\n            }\n        },\n        {\n            key: \"exportGeometry\",\n            value: function exportGeometry() {\n                if (this.geometry == null) return null;\n                else return {\n                    controlPoints: [\n                        extend({}, this.geometry.controlPoints[0]),\n                        extend({}, this.geometry.controlPoints[1])\n                    ],\n                    source: extend({}, this.geometry.source),\n                    target: extend({}, this.geometry.target)\n                };\n            }\n        },\n        {\n            key: \"transformGeometry\",\n            value: function transformGeometry(g, dx, dy) {\n                return {\n                    controlPoints: [\n                        {\n                            x: g.controlPoints[0].x + dx,\n                            y: g.controlPoints[0].y + dy\n                        },\n                        {\n                            x: g.controlPoints[1].x + dx,\n                            y: g.controlPoints[1].y + dy\n                        }\n                    ],\n                    source: this.transformAnchorPlacement(g.source, dx, dy),\n                    target: this.transformAnchorPlacement(g.target, dx, dy)\n                };\n            }\n        },\n        {\n            key: \"importGeometry\",\n            value: function importGeometry(geometry) {\n                if (geometry != null) {\n                    if (geometry.controlPoints == null || geometry.controlPoints.length != 2) {\n                        log(\"jsPlumb Bezier: cannot import geometry; controlPoints missing or does not have length 2\");\n                        this.setGeometry(null, true);\n                        return false;\n                    }\n                    if (geometry.controlPoints[0].x == null || geometry.controlPoints[0].y == null || geometry.controlPoints[1].x == null || geometry.controlPoints[1].y == null) {\n                        log(\"jsPlumb Bezier: cannot import geometry; controlPoints malformed\");\n                        this.setGeometry(null, true);\n                        return false;\n                    }\n                    if (geometry.source == null || geometry.source.curX == null || geometry.source.curY == null) {\n                        log(\"jsPlumb Bezier: cannot import geometry; source missing or malformed\");\n                        this.setGeometry(null, true);\n                        return false;\n                    }\n                    if (geometry.target == null || geometry.target.curX == null || geometry.target.curY == null) {\n                        log(\"jsPlumb Bezier: cannot import geometry; target missing or malformed\");\n                        this.setGeometry(null, true);\n                        return false;\n                    }\n                    this.setGeometry(geometry, false);\n                    return true;\n                } else return false;\n            }\n        }\n    ]);\n    return AbstractBezierConnector;\n}(AbstractConnector);\nvar Vectors = {\n    subtract: function subtract(v1, v2) {\n        return {\n            x: v1.x - v2.x,\n            y: v1.y - v2.y\n        };\n    },\n    dotProduct: function dotProduct(v1, v2) {\n        return v1.x * v2.x + v1.y * v2.y;\n    },\n    square: function square(v) {\n        return Math.sqrt(v.x * v.x + v.y * v.y);\n    },\n    scale: function scale(v, s) {\n        return {\n            x: v.x * s,\n            y: v.y * s\n        };\n    }\n};\nvar maxRecursion = 64;\nvar flatnessTolerance = Math.pow(2.0, -maxRecursion - 1);\nfunction distanceFromCurve(point, curve) {\n    var candidates = [], w = _convertToBezier(point, curve), degree = curve.length - 1, higherDegree = 2 * degree - 1, numSolutions = _findRoots(w, higherDegree, candidates, 0), v = Vectors.subtract(point, curve[0]), dist = Vectors.square(v), t = 0.0, newDist;\n    for(var i = 0; i < numSolutions; i++){\n        v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\n        newDist = Vectors.square(v);\n        if (newDist < dist) {\n            dist = newDist;\n            t = candidates[i];\n        }\n    }\n    v = Vectors.subtract(point, curve[degree]);\n    newDist = Vectors.square(v);\n    if (newDist < dist) {\n        dist = newDist;\n        t = 1.0;\n    }\n    return {\n        location: t,\n        distance: dist\n    };\n}\nfunction nearestPointOnCurve(point, curve) {\n    var td = distanceFromCurve(point, curve);\n    return {\n        point: _bezier(curve, curve.length - 1, td.location, null, null),\n        location: td.location\n    };\n}\nfunction _convertToBezier(point, curve) {\n    var degree = curve.length - 1, higherDegree = 2 * degree - 1, c = [], d = [], cdTable = [], w = [], z = [\n        [\n            1.0,\n            0.6,\n            0.3,\n            0.1\n        ],\n        [\n            0.4,\n            0.6,\n            0.6,\n            0.4\n        ],\n        [\n            0.1,\n            0.3,\n            0.6,\n            1.0\n        ]\n    ];\n    for(var i = 0; i <= degree; i++)c[i] = Vectors.subtract(curve[i], point);\n    for(var _i = 0; _i <= degree - 1; _i++){\n        d[_i] = Vectors.subtract(curve[_i + 1], curve[_i]);\n        d[_i] = Vectors.scale(d[_i], 3.0);\n    }\n    for(var row = 0; row <= degree - 1; row++)for(var column = 0; column <= degree; column++){\n        if (!cdTable[row]) cdTable[row] = [];\n        cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\n    }\n    for(var _i2 = 0; _i2 <= higherDegree; _i2++){\n        if (!w[_i2]) w[_i2] = [];\n        w[_i2].y = 0.0;\n        w[_i2].x = parseFloat(\"\" + _i2) / higherDegree;\n    }\n    var n = degree, m = degree - 1;\n    for(var k = 0; k <= n + m; k++){\n        var lb = Math.max(0, k - m), ub = Math.min(k, n);\n        for(var _i3 = lb; _i3 <= ub; _i3++){\n            var j = k - _i3;\n            w[_i3 + j].y += cdTable[j][_i3] * z[j][_i3];\n        }\n    }\n    return w;\n}\nfunction _findRoots(w, degree, t, depth) {\n    var left = [], right = [], left_count, right_count, left_t = [], right_t = [];\n    switch(_getCrossingCount(w, degree)){\n        case 0:\n            return 0;\n        case 1:\n            if (depth >= maxRecursion) {\n                t[0] = (w[0].x + w[degree].x) / 2.0;\n                return 1;\n            }\n            if (_isFlatEnough(w, degree)) {\n                t[0] = _computeXIntercept(w, degree);\n                return 1;\n            }\n            break;\n    }\n    _bezier(w, degree, 0.5, left, right);\n    left_count = _findRoots(left, degree, left_t, depth + 1);\n    right_count = _findRoots(right, degree, right_t, depth + 1);\n    for(var i = 0; i < left_count; i++)t[i] = left_t[i];\n    for(var _i4 = 0; _i4 < right_count; _i4++)t[_i4 + left_count] = right_t[_i4];\n    return left_count + right_count;\n}\nfunction _getCrossingCount(curve, degree) {\n    var n_crossings = 0, sign, old_sign;\n    sign = old_sign = sgn$1(curve[0].y);\n    for(var i = 1; i <= degree; i++){\n        sign = sgn$1(curve[i].y);\n        if (sign != old_sign) n_crossings++;\n        old_sign = sign;\n    }\n    return n_crossings;\n}\nfunction _isFlatEnough(curve, degree) {\n    var error, intercept_1, intercept_2, left_intercept, right_intercept, a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\n    a = curve[0].y - curve[degree].y;\n    b = curve[degree].x - curve[0].x;\n    c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\n    var max_distance_above, max_distance_below;\n    max_distance_above = max_distance_below = 0.0;\n    for(var i = 1; i < degree; i++){\n        var value = a * curve[i].x + b * curve[i].y + c;\n        if (value > max_distance_above) max_distance_above = value;\n        else if (value < max_distance_below) max_distance_below = value;\n    }\n    a1 = 0.0;\n    b1 = 1.0;\n    c1 = 0.0;\n    a2 = a;\n    b2 = b;\n    c2 = c - max_distance_above;\n    det = a1 * b2 - a2 * b1;\n    dInv = 1.0 / det;\n    intercept_1 = (b1 * c2 - b2 * c1) * dInv;\n    a2 = a;\n    b2 = b;\n    c2 = c - max_distance_below;\n    det = a1 * b2 - a2 * b1;\n    dInv = 1.0 / det;\n    intercept_2 = (b1 * c2 - b2 * c1) * dInv;\n    left_intercept = Math.min(intercept_1, intercept_2);\n    right_intercept = Math.max(intercept_1, intercept_2);\n    error = right_intercept - left_intercept;\n    return error < flatnessTolerance ? 1 : 0;\n}\nfunction _computeXIntercept(curve, degree) {\n    var XLK = 1.0, YLK = 0.0, XNM = curve[degree].x - curve[0].x, YNM = curve[degree].y - curve[0].y, XMK = curve[0].x - 0.0, YMK = curve[0].y - 0.0, det = XNM * YLK - YNM * XLK, detInv = 1.0 / det, S = (XNM * YMK - YNM * XMK) * detInv;\n    return 0.0 + XLK * S;\n}\nfunction _bezier(curve, degree, t, left, right) {\n    var temp = [\n        []\n    ];\n    for(var j = 0; j <= degree; j++)temp[0][j] = curve[j];\n    for(var i = 1; i <= degree; i++)for(var _j = 0; _j <= degree - i; _j++){\n        if (!temp[i]) temp[i] = [];\n        if (!temp[i][_j]) temp[i][_j] = {};\n        temp[i][_j].x = (1.0 - t) * temp[i - 1][_j].x + t * temp[i - 1][_j + 1].x;\n        temp[i][_j].y = (1.0 - t) * temp[i - 1][_j].y + t * temp[i - 1][_j + 1].y;\n    }\n    if (left != null) for(var _j2 = 0; _j2 <= degree; _j2++)left[_j2] = temp[_j2][0];\n    if (right != null) for(var _j3 = 0; _j3 <= degree; _j3++)right[_j3] = temp[degree - _j3][_j3];\n    return temp[degree][0];\n}\nfunction _getLUT(steps, curve) {\n    var out = [];\n    steps--;\n    for(var n = 0; n <= steps; n++)out.push(_computeLookup(n / steps, curve));\n    return out;\n}\nfunction _computeLookup(e, curve) {\n    var EMPTY_POINT = {\n        x: 0,\n        y: 0\n    };\n    if (e === 0) return curve[0];\n    var degree = curve.length - 1;\n    if (e === 1) return curve[degree];\n    var o = curve;\n    var s = 1 - e;\n    if (degree === 0) return curve[0];\n    if (degree === 1) return {\n        x: s * o[0].x + e * o[1].x,\n        y: s * o[0].y + e * o[1].y\n    };\n    if (4 > degree) {\n        var l = s * s, h = e * e, u = 0, m, g, f;\n        if (degree === 2) {\n            o = [\n                o[0],\n                o[1],\n                o[2],\n                EMPTY_POINT\n            ];\n            m = l;\n            g = 2 * (s * e);\n            f = h;\n        } else if (degree === 3) {\n            m = l * s;\n            g = 3 * (l * e);\n            f = 3 * (s * h);\n            u = e * h;\n        }\n        return {\n            x: m * o[0].x + g * o[1].x + f * o[2].x + u * o[3].x,\n            y: m * o[0].y + g * o[1].y + f * o[2].y + u * o[3].y\n        };\n    } else return EMPTY_POINT;\n}\nfunction computeBezierLength(curve) {\n    var length1 = 0;\n    if (!isPoint(curve)) {\n        var steps = 16;\n        var lut = _getLUT(steps, curve);\n        for(var i = 0; i < steps - 1; i++){\n            var a = lut[i], b = lut[i + 1];\n            length1 += dist(a, b);\n        }\n    }\n    return length1;\n}\nvar _curveFunctionCache = new Map();\nfunction _getCurveFunctions(order) {\n    var fns = _curveFunctionCache.get(order);\n    if (!fns) {\n        fns = [];\n        var f_term = function f_term() {\n            return function(t) {\n                return Math.pow(t, order);\n            };\n        }, l_term = function l_term() {\n            return function(t) {\n                return Math.pow(1 - t, order);\n            };\n        }, c_term = function c_term(c) {\n            return function(t) {\n                return c;\n            };\n        }, t_term = function t_term() {\n            return function(t) {\n                return t;\n            };\n        }, one_minus_t_term = function one_minus_t_term() {\n            return function(t) {\n                return 1 - t;\n            };\n        }, _termFunc = function _termFunc(terms) {\n            return function(t) {\n                var p = 1;\n                for(var i = 0; i < terms.length; i++)p = p * terms[i](t);\n                return p;\n            };\n        };\n        fns.push(f_term());\n        for(var i = 1; i < order; i++){\n            var terms = [\n                c_term(order)\n            ];\n            for(var j = 0; j < order - i; j++)terms.push(t_term());\n            for(var _j4 = 0; _j4 < i; _j4++)terms.push(one_minus_t_term());\n            fns.push(_termFunc(terms));\n        }\n        fns.push(l_term());\n        _curveFunctionCache.set(order, fns);\n    }\n    return fns;\n}\nfunction pointOnCurve(curve, location) {\n    var cc = _getCurveFunctions(curve.length - 1), _x = 0, _y = 0;\n    for(var i = 0; i < curve.length; i++){\n        _x = _x + curve[i].x * cc[i](location);\n        _y = _y + curve[i].y * cc[i](location);\n    }\n    return {\n        x: _x,\n        y: _y\n    };\n}\nfunction dist(p1, p2) {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\nfunction isPoint(curve) {\n    return curve[0].x === curve[1].x && curve[0].y === curve[1].y;\n}\nfunction pointAlongPath(curve, location, distance) {\n    if (isPoint(curve)) return {\n        point: curve[0],\n        location: location\n    };\n    var prev = pointOnCurve(curve, location), tally = 0, curLoc = location, direction = distance > 0 ? 1 : -1, cur = null;\n    while(tally < Math.abs(distance)){\n        curLoc += 0.005 * direction;\n        cur = pointOnCurve(curve, curLoc);\n        tally += dist(cur, prev);\n        prev = cur;\n    }\n    return {\n        point: cur,\n        location: curLoc\n    };\n}\nfunction pointAlongCurveFrom(curve, location, distance) {\n    return pointAlongPath(curve, location, distance).point;\n}\nfunction locationAlongCurveFrom(curve, location, distance) {\n    return pointAlongPath(curve, location, distance).location;\n}\nfunction gradientAtPoint(curve, location) {\n    var p1 = pointOnCurve(curve, location), p2 = pointOnCurve(curve.slice(0, curve.length - 1), location), dy = p2.y - p1.y, dx = p2.x - p1.x;\n    return dy === 0 ? Infinity : Math.atan(dy / dx);\n}\nfunction gradientAtPointAlongPathFrom(curve, location, distance) {\n    var p = pointAlongPath(curve, location, distance);\n    if (p.location > 1) p.location = 1;\n    if (p.location < 0) p.location = 0;\n    return gradientAtPoint(curve, p.location);\n}\nfunction perpendicularToPathAt(curve, location, length1, distance) {\n    distance = distance == null ? 0 : distance;\n    var p = pointAlongPath(curve, location, distance), m = gradientAtPoint(curve, p.location), _theta2 = Math.atan(-1 / m), y = length1 / 2 * Math.sin(_theta2), x = length1 / 2 * Math.cos(_theta2);\n    return [\n        {\n            x: p.point.x + x,\n            y: p.point.y + y\n        },\n        {\n            x: p.point.x - x,\n            y: p.point.y - y\n        }\n    ];\n}\nfunction bezierLineIntersection(x1, y1, x2, y2, curve) {\n    var a = y2 - y1, b = x1 - x2, c = x1 * (y1 - y2) + y1 * (x2 - x1), coeffs = _computeCoefficients(curve), p = [\n        a * coeffs[0][0] + b * coeffs[1][0],\n        a * coeffs[0][1] + b * coeffs[1][1],\n        a * coeffs[0][2] + b * coeffs[1][2],\n        a * coeffs[0][3] + b * coeffs[1][3] + c\n    ], r = _cubicRoots.apply(null, p), intersections = [];\n    if (r != null) for(var i = 0; i < 3; i++){\n        var _t = r[i], t2 = Math.pow(_t, 2), t3 = Math.pow(_t, 3), x = {\n            x: coeffs[0][0] * t3 + coeffs[0][1] * t2 + coeffs[0][2] * _t + coeffs[0][3],\n            y: coeffs[1][0] * t3 + coeffs[1][1] * t2 + coeffs[1][2] * _t + coeffs[1][3]\n        };\n        var s = void 0;\n        if (x2 - x1 !== 0) s = (x[0] - x1) / (x2 - x1);\n        else s = (x[1] - y1) / (y2 - y1);\n        if (_t >= 0 && _t <= 1.0 && s >= 0 && s <= 1.0) intersections.push(x);\n    }\n    return intersections;\n}\nfunction boxIntersection(x, y, w, h, curve) {\n    var i = [];\n    i.push.apply(i, bezierLineIntersection(x, y, x + w, y, curve));\n    i.push.apply(i, bezierLineIntersection(x + w, y, x + w, y + h, curve));\n    i.push.apply(i, bezierLineIntersection(x + w, y + h, x, y + h, curve));\n    i.push.apply(i, bezierLineIntersection(x, y + h, x, y, curve));\n    return i;\n}\nfunction boundingBoxIntersection(boundingBox, curve) {\n    var i = [];\n    i.push.apply(i, bezierLineIntersection(boundingBox.x, boundingBox.y, boundingBox.x + boundingBox.w, boundingBox.y, curve));\n    i.push.apply(i, bezierLineIntersection(boundingBox.x + boundingBox.w, boundingBox.y, boundingBox.x + boundingBox.w, boundingBox.y + boundingBox.h, curve));\n    i.push.apply(i, bezierLineIntersection(boundingBox.x + boundingBox.w, boundingBox.y + boundingBox.h, boundingBox.x, boundingBox.y + boundingBox.h, curve));\n    i.push.apply(i, bezierLineIntersection(boundingBox.x, boundingBox.y + boundingBox.h, boundingBox.x, boundingBox.y, curve));\n    return i;\n}\nfunction _computeCoefficientsForAxis(curve, axis) {\n    return [\n        -curve[0][axis] + 3 * curve[1][axis] + -3 * curve[2][axis] + curve[3][axis],\n        3 * curve[0][axis] - 6 * curve[1][axis] + 3 * curve[2][axis],\n        -3 * curve[0][axis] + 3 * curve[1][axis],\n        curve[0][axis]\n    ];\n}\nfunction _computeCoefficients(curve) {\n    return [\n        _computeCoefficientsForAxis(curve, \"x\"),\n        _computeCoefficientsForAxis(curve, \"y\")\n    ];\n}\nfunction _cubicRoots(a, b, c, d) {\n    var A = b / a, B = c / a, C = d / a, Q = (3 * B - Math.pow(A, 2)) / 9, R = (9 * A * B - 27 * C - 2 * Math.pow(A, 3)) / 54, D = Math.pow(Q, 3) + Math.pow(R, 2), S, T, t = [\n        0,\n        0,\n        0\n    ];\n    if (D >= 0) {\n        S = sgn$1(R + Math.sqrt(D)) * Math.pow(Math.abs(R + Math.sqrt(D)), 1 / 3);\n        T = sgn$1(R - Math.sqrt(D)) * Math.pow(Math.abs(R - Math.sqrt(D)), 1 / 3);\n        t[0] = -A / 3 + (S + T);\n        t[1] = -A / 3 - (S + T) / 2;\n        t[2] = -A / 3 - (S + T) / 2;\n        if (Math.abs(Math.sqrt(3) * (S - T) / 2) !== 0) {\n            t[1] = -1;\n            t[2] = -1;\n        }\n    } else {\n        var th = Math.acos(R / Math.sqrt(-Math.pow(Q, 3)));\n        t[0] = 2 * Math.sqrt(-Q) * Math.cos(th / 3) - A / 3;\n        t[1] = 2 * Math.sqrt(-Q) * Math.cos((th + 2 * Math.PI) / 3) - A / 3;\n        t[2] = 2 * Math.sqrt(-Q) * Math.cos((th + 4 * Math.PI) / 3) - A / 3;\n    }\n    for(var i = 0; i < 3; i++)if (t[i] < 0 || t[i] > 1.0) t[i] = -1;\n    return t;\n}\nvar BezierSegment = function(_AbstractSegment) {\n    _inherits(BezierSegment, _AbstractSegment);\n    var _super = _createSuper(BezierSegment);\n    function BezierSegment(params) {\n        var _this;\n        _classCallCheck(this, BezierSegment);\n        _this = _super.call(this, params);\n        _defineProperty(_assertThisInitialized(_this), \"curve\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cp1x\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cp1y\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cp2x\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cp2y\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"length\", 0);\n        _defineProperty(_assertThisInitialized(_this), \"type\", BezierSegment.segmentType);\n        _this.cp1x = params.cp1x;\n        _this.cp1y = params.cp1y;\n        _this.cp2x = params.cp2x;\n        _this.cp2y = params.cp2y;\n        _this.x1 = params.x1;\n        _this.x2 = params.x2;\n        _this.y1 = params.y1;\n        _this.y2 = params.y2;\n        _this.curve = [\n            {\n                x: _this.x1,\n                y: _this.y1\n            },\n            {\n                x: _this.cp1x,\n                y: _this.cp1y\n            },\n            {\n                x: _this.cp2x,\n                y: _this.cp2y\n            },\n            {\n                x: _this.x2,\n                y: _this.y2\n            }\n        ];\n        _this.extents = {\n            xmin: Math.min(_this.x1, _this.x2, _this.cp1x, _this.cp2x),\n            ymin: Math.min(_this.y1, _this.y2, _this.cp1y, _this.cp2y),\n            xmax: Math.max(_this.x1, _this.x2, _this.cp1x, _this.cp2x),\n            ymax: Math.max(_this.y1, _this.y2, _this.cp1y, _this.cp2y)\n        };\n        return _this;\n    }\n    _createClass(BezierSegment, [\n        {\n            key: \"getPath\",\n            value: function getPath(isFirstSegment) {\n                return (isFirstSegment ? \"M \" + this.x2 + \" \" + this.y2 + \" \" : \"\") + \"C \" + this.cp2x + \" \" + this.cp2y + \" \" + this.cp1x + \" \" + this.cp1y + \" \" + this.x1 + \" \" + this.y1;\n            }\n        },\n        {\n            key: \"pointOnPath\",\n            value: function pointOnPath(location, absolute) {\n                location = BezierSegment._translateLocation(this.curve, location, absolute);\n                return pointOnCurve(this.curve, location);\n            }\n        },\n        {\n            key: \"gradientAtPoint\",\n            value: function gradientAtPoint$1(location, absolute) {\n                location = BezierSegment._translateLocation(this.curve, location, absolute);\n                return gradientAtPoint(this.curve, location);\n            }\n        },\n        {\n            key: \"pointAlongPathFrom\",\n            value: function pointAlongPathFrom(location, distance, absolute) {\n                location = BezierSegment._translateLocation(this.curve, location, absolute);\n                return pointAlongCurveFrom(this.curve, location, distance);\n            }\n        },\n        {\n            key: \"getLength\",\n            value: function getLength() {\n                if (this.length == null || this.length === 0) this.length = computeBezierLength(this.curve);\n                return this.length;\n            }\n        },\n        {\n            key: \"findClosestPointOnPath\",\n            value: function findClosestPointOnPath(x, y) {\n                var p = nearestPointOnCurve({\n                    x: x,\n                    y: y\n                }, this.curve);\n                return {\n                    d: Math.sqrt(Math.pow(p.point.x - x, 2) + Math.pow(p.point.y - y, 2)),\n                    x: p.point.x,\n                    y: p.point.y,\n                    l: 1 - p.location,\n                    s: this,\n                    x1: null,\n                    y1: null,\n                    x2: null,\n                    y2: null\n                };\n            }\n        },\n        {\n            key: \"lineIntersection\",\n            value: function lineIntersection(x1, y1, x2, y2) {\n                return bezierLineIntersection(x1, y1, x2, y2, this.curve);\n            }\n        }\n    ], [\n        {\n            key: \"_translateLocation\",\n            value: function _translateLocation(_curve, location, absolute) {\n                if (absolute) location = locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\n                return location;\n            }\n        }\n    ]);\n    return BezierSegment;\n}(AbstractSegment);\n_defineProperty(BezierSegment, \"segmentType\", \"Bezier\");\nvar BezierConnector = function(_AbstractBezierConnec) {\n    _inherits(BezierConnector, _AbstractBezierConnec);\n    var _super = _createSuper(BezierConnector);\n    function BezierConnector(connection, params) {\n        var _this;\n        _classCallCheck(this, BezierConnector);\n        _this = _super.call(this, connection, params);\n        _this.connection = connection;\n        _defineProperty(_assertThisInitialized(_this), \"type\", BezierConnector.type);\n        _defineProperty(_assertThisInitialized(_this), \"majorAnchor\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"minorAnchor\", void 0);\n        params = params || {};\n        _this.majorAnchor = params.curviness || 150;\n        _this.minorAnchor = 10;\n        return _this;\n    }\n    _createClass(BezierConnector, [\n        {\n            key: \"getCurviness\",\n            value: function getCurviness() {\n                return this.majorAnchor;\n            }\n        },\n        {\n            key: \"_findControlPoint\",\n            value: function _findControlPoint(point, sourceAnchorPosition, targetAnchorPosition, soo, too) {\n                var perpendicular = soo[0] !== too[0] || soo[1] === too[1], p = {\n                    x: 0,\n                    y: 0\n                };\n                if (!perpendicular) {\n                    if (soo[0] === 0) p.x = sourceAnchorPosition.curX < targetAnchorPosition.curX ? point.x + this.minorAnchor : point.x - this.minorAnchor;\n                    else p.x = point.x - this.majorAnchor * soo[0];\n                    if (soo[1] === 0) p.y = sourceAnchorPosition.curY < targetAnchorPosition.curY ? point.y + this.minorAnchor : point.y - this.minorAnchor;\n                    else p.y = point.y + this.majorAnchor * too[1];\n                } else {\n                    if (too[0] === 0) p.x = targetAnchorPosition.curX < sourceAnchorPosition.curX ? point.x + this.minorAnchor : point.x - this.minorAnchor;\n                    else p.x = point.x + this.majorAnchor * too[0];\n                    if (too[1] === 0) p.y = targetAnchorPosition.curY < sourceAnchorPosition.curY ? point.y + this.minorAnchor : point.y - this.minorAnchor;\n                    else p.y = point.y + this.majorAnchor * soo[1];\n                }\n                return p;\n            }\n        },\n        {\n            key: \"_computeBezier\",\n            value: function _computeBezier(paintInfo, p, sp, tp, _w, _h) {\n                var _CP, _CP2, _sx = sp.curX < tp.curX ? _w : 0, _sy = sp.curY < tp.curY ? _h : 0, _tx = sp.curX < tp.curX ? 0 : _w, _ty = sp.curY < tp.curY ? 0 : _h;\n                if (this.edited !== true) {\n                    _CP = this._findControlPoint({\n                        x: _sx,\n                        y: _sy\n                    }, sp, tp, paintInfo.so, paintInfo.to);\n                    _CP2 = this._findControlPoint({\n                        x: _tx,\n                        y: _ty\n                    }, tp, sp, paintInfo.to, paintInfo.so);\n                } else {\n                    _CP = this.geometry.controlPoints[0];\n                    _CP2 = this.geometry.controlPoints[1];\n                }\n                this.geometry = {\n                    controlPoints: [\n                        _CP,\n                        _CP2\n                    ],\n                    source: p.sourcePos,\n                    target: p.targetPos\n                };\n                this._addSegment(BezierSegment, {\n                    x1: _sx,\n                    y1: _sy,\n                    x2: _tx,\n                    y2: _ty,\n                    cp1x: _CP.x,\n                    cp1y: _CP.y,\n                    cp2x: _CP2.x,\n                    cp2y: _CP2.y\n                });\n            }\n        }\n    ]);\n    return BezierConnector;\n}(AbstractBezierConnector);\n_defineProperty(BezierConnector, \"type\", \"Bezier\");\nfunction _segment(x1, y1, x2, y2) {\n    if (x1 <= x2 && y2 <= y1) return 1;\n    else if (x1 <= x2 && y1 <= y2) return 2;\n    else if (x2 <= x1 && y2 >= y1) return 3;\n    return 4;\n}\nfunction _findControlPoint(midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\n    if (distance <= proximityLimit) return {\n        x: midx,\n        y: midy\n    };\n    if (segment === 1) {\n        if (sourceEdge.curY <= 0 && targetEdge.curY >= 1) return {\n            x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n            y: midy\n        };\n        else if (sourceEdge.curX >= 1 && targetEdge.curX <= 0) return {\n            x: midx,\n            y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n        };\n        else return {\n            x: midx + -1 * dx,\n            y: midy + -1 * dy\n        };\n    } else if (segment === 2) {\n        if (sourceEdge.curY >= 1 && targetEdge.curY <= 0) return {\n            x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n            y: midy\n        };\n        else if (sourceEdge.curX >= 1 && targetEdge.curX <= 0) return {\n            x: midx,\n            y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n        };\n        else return {\n            x: midx + dx,\n            y: midy + -1 * dy\n        };\n    } else if (segment === 3) {\n        if (sourceEdge.curY >= 1 && targetEdge.curY <= 0) return {\n            x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n            y: midy\n        };\n        else if (sourceEdge.curX <= 0 && targetEdge.curX >= 1) return {\n            x: midx,\n            y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n        };\n        else return {\n            x: midx + -1 * dx,\n            y: midy + -1 * dy\n        };\n    } else if (segment === 4) {\n        if (sourceEdge.curY <= 0 && targetEdge.curY >= 1) return {\n            x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n            y: midy\n        };\n        else if (sourceEdge.curX <= 0 && targetEdge.curX >= 1) return {\n            x: midx,\n            y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n        };\n        else return {\n            x: midx + dx,\n            y: midy + -1 * dy\n        };\n    }\n}\nvar StateMachineConnector = function(_AbstractBezierConnec) {\n    _inherits(StateMachineConnector, _AbstractBezierConnec);\n    var _super = _createSuper(StateMachineConnector);\n    function StateMachineConnector(connection, params) {\n        var _this;\n        _classCallCheck(this, StateMachineConnector);\n        _this = _super.call(this, connection, params);\n        _this.connection = connection;\n        _defineProperty(_assertThisInitialized(_this), \"type\", StateMachineConnector.type);\n        _defineProperty(_assertThisInitialized(_this), \"_controlPoint\", void 0);\n        _this.curviness = params.curviness || 10;\n        _this.margin = params.margin || 5;\n        _this.proximityLimit = params.proximityLimit || 80;\n        _this.clockwise = params.orientation && params.orientation === \"clockwise\";\n        return _this;\n    }\n    _createClass(StateMachineConnector, [\n        {\n            key: \"_computeBezier\",\n            value: function _computeBezier(paintInfo, params, sp, tp, w, h) {\n                var _sx = sp.curX < tp.curX ? 0 : w, _sy = sp.curY < tp.curY ? 0 : h, _tx = sp.curX < tp.curX ? w : 0, _ty = sp.curY < tp.curY ? h : 0;\n                if (sp.x === 0) _sx -= this.margin;\n                if (sp.x === 1) _sx += this.margin;\n                if (sp.y === 0) _sy -= this.margin;\n                if (sp.y === 1) _sy += this.margin;\n                if (tp.x === 0) _tx -= this.margin;\n                if (tp.x === 1) _tx += this.margin;\n                if (tp.y === 0) _ty -= this.margin;\n                if (tp.y === 1) _ty += this.margin;\n                if (this.edited !== true) {\n                    var _midx = (_sx + _tx) / 2, _midy = (_sy + _ty) / 2, segment = _segment(_sx, _sy, _tx, _ty), distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2));\n                    this._controlPoint = _findControlPoint(_midx, _midy, segment, params.sourcePos, params.targetPos, this.curviness, this.curviness, distance, this.proximityLimit);\n                } else this._controlPoint = this.geometry.controlPoints[0];\n                var cp1x, cp2x, cp1y, cp2y;\n                cp1x = this._controlPoint.x;\n                cp2x = this._controlPoint.x;\n                cp1y = this._controlPoint.y;\n                cp2y = this._controlPoint.y;\n                this.geometry = {\n                    controlPoints: [\n                        this._controlPoint,\n                        this._controlPoint\n                    ],\n                    source: params.sourcePos,\n                    target: params.targetPos\n                };\n                this._addSegment(BezierSegment, {\n                    x1: _tx,\n                    y1: _ty,\n                    x2: _sx,\n                    y2: _sy,\n                    cp1x: cp1x,\n                    cp1y: cp1y,\n                    cp2x: cp2x,\n                    cp2y: cp2y\n                });\n            }\n        }\n    ]);\n    return StateMachineConnector;\n}(AbstractBezierConnector);\n_defineProperty(StateMachineConnector, \"type\", \"StateMachine\");\nConnectors.register(BezierConnector.type, BezierConnector);\nConnectors.register(StateMachineConnector.type, StateMachineConnector);\nfunction sgn(n) {\n    return n < 0 ? -1 : n === 0 ? 0 : 1;\n}\nfunction segmentDirections(segment) {\n    return [\n        sgn(segment[2] - segment[0]),\n        sgn(segment[3] - segment[1])\n    ];\n}\nfunction segLength(s) {\n    return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2));\n}\nfunction _cloneArray(a) {\n    var _a = [];\n    _a.push.apply(_a, a);\n    return _a;\n}\nvar FlowchartConnector = function(_AbstractConnector) {\n    _inherits(FlowchartConnector, _AbstractConnector);\n    var _super = _createSuper(FlowchartConnector);\n    function FlowchartConnector(connection, params) {\n        var _this;\n        _classCallCheck(this, FlowchartConnector);\n        _this = _super.call(this, connection, params);\n        _this.connection = connection;\n        _defineProperty(_assertThisInitialized(_this), \"type\", FlowchartConnector.type);\n        _defineProperty(_assertThisInitialized(_this), \"internalSegments\", []);\n        _defineProperty(_assertThisInitialized(_this), \"midpoint\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"alwaysRespectStubs\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cornerRadius\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"lastx\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"lasty\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"lastOrientation\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"loopbackRadius\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"isLoopbackCurrently\", void 0);\n        _this.midpoint = params.midpoint == null || isNaN(params.midpoint) ? 0.5 : params.midpoint;\n        _this.cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0;\n        _this.alwaysRespectStubs = params.alwaysRespectStubs === true;\n        _this.lastx = null;\n        _this.lasty = null;\n        _this.lastOrientation = null;\n        _this.loopbackRadius = params.loopbackRadius || 25;\n        _this.isLoopbackCurrently = false;\n        return _this;\n    }\n    _createClass(FlowchartConnector, [\n        {\n            key: \"getDefaultStubs\",\n            value: function getDefaultStubs() {\n                return [\n                    30,\n                    30\n                ];\n            }\n        },\n        {\n            key: \"addASegment\",\n            value: function addASegment(x, y, paintInfo) {\n                if (this.lastx === x && this.lasty === y) return;\n                var lx = this.lastx == null ? paintInfo.sx : this.lastx, ly = this.lasty == null ? paintInfo.sy : this.lasty, o = lx === x ? \"v\" : \"h\";\n                this.lastx = x;\n                this.lasty = y;\n                this.internalSegments.push([\n                    lx,\n                    ly,\n                    x,\n                    y,\n                    o\n                ]);\n            }\n        },\n        {\n            key: \"writeSegments\",\n            value: function writeSegments(paintInfo) {\n                var current = null, next, currentDirection, nextDirection;\n                for(var i = 0; i < this.internalSegments.length - 1; i++){\n                    current = current || _cloneArray(this.internalSegments[i]);\n                    next = _cloneArray(this.internalSegments[i + 1]);\n                    currentDirection = segmentDirections(current);\n                    nextDirection = segmentDirections(next);\n                    if (this.cornerRadius > 0 && current[4] !== next[4]) {\n                        var minSegLength = Math.min(segLength(current), segLength(next));\n                        var radiusToUse = Math.min(this.cornerRadius, minSegLength / 2);\n                        current[2] -= currentDirection[0] * radiusToUse;\n                        current[3] -= currentDirection[1] * radiusToUse;\n                        next[0] += nextDirection[0] * radiusToUse;\n                        next[1] += nextDirection[1] * radiusToUse;\n                        var ac = currentDirection[1] === nextDirection[0] && nextDirection[0] === 1 || currentDirection[1] === nextDirection[0] && nextDirection[0] === 0 && currentDirection[0] !== nextDirection[1] || currentDirection[1] === nextDirection[0] && nextDirection[0] === -1, sgny = next[1] > current[3] ? 1 : -1, sgnx = next[0] > current[2] ? 1 : -1, sgnEqual = sgny === sgnx, cx = sgnEqual && ac || !sgnEqual && !ac ? next[0] : current[2], cy = sgnEqual && ac || !sgnEqual && !ac ? current[3] : next[1];\n                        this._addSegment(StraightSegment, {\n                            x1: current[0],\n                            y1: current[1],\n                            x2: current[2],\n                            y2: current[3]\n                        });\n                        this._addSegment(ArcSegment, {\n                            r: radiusToUse,\n                            x1: current[2],\n                            y1: current[3],\n                            x2: next[0],\n                            y2: next[1],\n                            cx: cx,\n                            cy: cy,\n                            ac: ac\n                        });\n                    } else this._addSegment(StraightSegment, {\n                        x1: current[0],\n                        y1: current[1],\n                        x2: current[2],\n                        y2: current[3]\n                    });\n                    current = next;\n                }\n                if (next != null) this._addSegment(StraightSegment, {\n                    x1: next[0],\n                    y1: next[1],\n                    x2: next[2],\n                    y2: next[3]\n                });\n            }\n        },\n        {\n            key: \"_compute\",\n            value: function _compute(paintInfo, params) {\n                var _this2 = this;\n                this.internalSegments.length = 0;\n                this.lastx = null;\n                this.lasty = null;\n                this.lastOrientation = null;\n                var commonStubCalculator = function commonStubCalculator(axis) {\n                    return [\n                        paintInfo.startStubX,\n                        paintInfo.startStubY,\n                        paintInfo.endStubX,\n                        paintInfo.endStubY\n                    ];\n                }, stubCalculators = {\n                    perpendicular: commonStubCalculator,\n                    orthogonal: commonStubCalculator,\n                    opposite: function opposite(axis) {\n                        var pi = paintInfo, idx = axis === \"x\" ? 0 : 1, areInProximity = {\n                            \"x\": function x() {\n                                return pi.so[idx] === 1 && (pi.startStubX > pi.endStubX && pi.tx > pi.startStubX || pi.sx > pi.endStubX && pi.tx > pi.sx) || pi.so[idx] === -1 && (pi.startStubX < pi.endStubX && pi.tx < pi.startStubX || pi.sx < pi.endStubX && pi.tx < pi.sx);\n                            },\n                            \"y\": function y() {\n                                return pi.so[idx] === 1 && (pi.startStubY > pi.endStubY && pi.ty > pi.startStubY || pi.sy > pi.endStubY && pi.ty > pi.sy) || pi.so[idx] === -1 && (pi.startStubY < pi.endStubY && pi.ty < pi.startStubY || pi.sy < pi.endStubY && pi.ty < pi.sy);\n                            }\n                        };\n                        if (!_this2.alwaysRespectStubs && areInProximity[axis]()) return ({\n                            \"x\": [\n                                (paintInfo.sx + paintInfo.tx) / 2,\n                                paintInfo.startStubY,\n                                (paintInfo.sx + paintInfo.tx) / 2,\n                                paintInfo.endStubY\n                            ],\n                            \"y\": [\n                                paintInfo.startStubX,\n                                (paintInfo.sy + paintInfo.ty) / 2,\n                                paintInfo.endStubX,\n                                (paintInfo.sy + paintInfo.ty) / 2\n                            ]\n                        })[axis];\n                        else return [\n                            paintInfo.startStubX,\n                            paintInfo.startStubY,\n                            paintInfo.endStubX,\n                            paintInfo.endStubY\n                        ];\n                    }\n                };\n                var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis), idx = paintInfo.sourceAxis === \"x\" ? 0 : 1, oidx = paintInfo.sourceAxis === \"x\" ? 1 : 0, ss = stubs[idx], oss = stubs[oidx], es = stubs[idx + 2], oes = stubs[oidx + 2];\n                this.addASegment(stubs[0], stubs[1], paintInfo);\n                var midx = paintInfo.startStubX + (paintInfo.endStubX - paintInfo.startStubX) * this.midpoint, midy = paintInfo.startStubY + (paintInfo.endStubY - paintInfo.startStubY) * this.midpoint;\n                var orientations = {\n                    x: [\n                        0,\n                        1\n                    ],\n                    y: [\n                        1,\n                        0\n                    ]\n                }, lineCalculators = {\n                    perpendicular: function perpendicular(axis, ss, oss, es, oes) {\n                        var pi = paintInfo, sis = {\n                            x: [\n                                [\n                                    [\n                                        1,\n                                        2,\n                                        3,\n                                        4\n                                    ],\n                                    null,\n                                    [\n                                        2,\n                                        1,\n                                        4,\n                                        3\n                                    ]\n                                ],\n                                null,\n                                [\n                                    [\n                                        4,\n                                        3,\n                                        2,\n                                        1\n                                    ],\n                                    null,\n                                    [\n                                        3,\n                                        4,\n                                        1,\n                                        2\n                                    ]\n                                ]\n                            ],\n                            y: [\n                                [\n                                    [\n                                        3,\n                                        2,\n                                        1,\n                                        4\n                                    ],\n                                    null,\n                                    [\n                                        2,\n                                        3,\n                                        4,\n                                        1\n                                    ]\n                                ],\n                                null,\n                                [\n                                    [\n                                        4,\n                                        1,\n                                        2,\n                                        3\n                                    ],\n                                    null,\n                                    [\n                                        1,\n                                        4,\n                                        3,\n                                        2\n                                    ]\n                                ]\n                            ]\n                        }, stubs = {\n                            x: [\n                                [\n                                    pi.startStubX,\n                                    pi.endStubX\n                                ],\n                                null,\n                                [\n                                    pi.endStubX,\n                                    pi.startStubX\n                                ]\n                            ],\n                            y: [\n                                [\n                                    pi.startStubY,\n                                    pi.endStubY\n                                ],\n                                null,\n                                [\n                                    pi.endStubY,\n                                    pi.startStubY\n                                ]\n                            ]\n                        }, midLines = {\n                            x: [\n                                [\n                                    midx,\n                                    pi.startStubY\n                                ],\n                                [\n                                    midx,\n                                    pi.endStubY\n                                ]\n                            ],\n                            y: [\n                                [\n                                    pi.startStubX,\n                                    midy\n                                ],\n                                [\n                                    pi.endStubX,\n                                    midy\n                                ]\n                            ]\n                        }, linesToEnd = {\n                            x: [\n                                [\n                                    pi.endStubX,\n                                    pi.startStubY\n                                ]\n                            ],\n                            y: [\n                                [\n                                    pi.startStubX,\n                                    pi.endStubY\n                                ]\n                            ]\n                        }, startToEnd = {\n                            x: [\n                                [\n                                    pi.startStubX,\n                                    pi.endStubY\n                                ],\n                                [\n                                    pi.endStubX,\n                                    pi.endStubY\n                                ]\n                            ],\n                            y: [\n                                [\n                                    pi.endStubX,\n                                    pi.startStubY\n                                ],\n                                [\n                                    pi.endStubX,\n                                    pi.endStubY\n                                ]\n                            ]\n                        }, startToMidToEnd = {\n                            x: [\n                                [\n                                    pi.startStubX,\n                                    midy\n                                ],\n                                [\n                                    pi.endStubX,\n                                    midy\n                                ],\n                                [\n                                    pi.endStubX,\n                                    pi.endStubY\n                                ]\n                            ],\n                            y: [\n                                [\n                                    midx,\n                                    pi.startStubY\n                                ],\n                                [\n                                    midx,\n                                    pi.endStubY\n                                ],\n                                [\n                                    pi.endStubX,\n                                    pi.endStubY\n                                ]\n                            ]\n                        }, otherStubs = {\n                            x: [\n                                pi.startStubY,\n                                pi.endStubY\n                            ],\n                            y: [\n                                pi.startStubX,\n                                pi.endStubX\n                            ]\n                        }, soIdx = orientations[axis][0], toIdx = orientations[axis][1], _so = pi.so[soIdx] + 1, _to = pi.to[toIdx] + 1, otherFlipped = pi.to[toIdx] === -1 && otherStubs[axis][1] < otherStubs[axis][0] || pi.to[toIdx] === 1 && otherStubs[axis][1] > otherStubs[axis][0], stub1 = stubs[axis][_so][0], stub2 = stubs[axis][_so][1], segmentIndexes = sis[axis][_so][_to];\n                        if (pi.segment === segmentIndexes[3] || pi.segment === segmentIndexes[2] && otherFlipped) return midLines[axis];\n                        else if (pi.segment === segmentIndexes[2] && stub2 < stub1) return linesToEnd[axis];\n                        else if (pi.segment === segmentIndexes[2] && stub2 >= stub1 || pi.segment === segmentIndexes[1] && !otherFlipped) return startToMidToEnd[axis];\n                        else if (pi.segment === segmentIndexes[0] || pi.segment === segmentIndexes[1] && otherFlipped) return startToEnd[axis];\n                    },\n                    orthogonal: function orthogonal(axis, startStub, otherStartStub, endStub, otherEndStub) {\n                        var pi = paintInfo, extent = {\n                            \"x\": pi.so[0] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),\n                            \"y\": pi.so[1] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)\n                        }[axis];\n                        return ({\n                            \"x\": [\n                                [\n                                    extent,\n                                    otherStartStub\n                                ],\n                                [\n                                    extent,\n                                    otherEndStub\n                                ],\n                                [\n                                    endStub,\n                                    otherEndStub\n                                ]\n                            ],\n                            \"y\": [\n                                [\n                                    otherStartStub,\n                                    extent\n                                ],\n                                [\n                                    otherEndStub,\n                                    extent\n                                ],\n                                [\n                                    otherEndStub,\n                                    endStub\n                                ]\n                            ]\n                        })[axis];\n                    },\n                    opposite: function opposite(axis, ss, oss, es, oes) {\n                        var pi = paintInfo, otherAxis = {\n                            \"x\": \"y\",\n                            \"y\": \"x\"\n                        }[axis], dim = {\n                            \"x\": \"h\",\n                            \"y\": \"w\"\n                        }[axis], comparator = pi[\"is\" + axis.toUpperCase() + \"GreaterThanStubTimes2\"];\n                        if (params.sourceEndpoint.elementId === params.targetEndpoint.elementId) {\n                            var _val = oss + (1 - params.sourceEndpoint._anchor.computedPosition[otherAxis]) * params.sourceInfo[dim] + _this2.maxStub;\n                            return ({\n                                \"x\": [\n                                    [\n                                        ss,\n                                        _val\n                                    ],\n                                    [\n                                        es,\n                                        _val\n                                    ]\n                                ],\n                                \"y\": [\n                                    [\n                                        _val,\n                                        ss\n                                    ],\n                                    [\n                                        _val,\n                                        es\n                                    ]\n                                ]\n                            })[axis];\n                        } else if (!comparator || pi.so[idx] === 1 && ss > es || pi.so[idx] === -1 && ss < es) return ({\n                            \"x\": [\n                                [\n                                    ss,\n                                    midy\n                                ],\n                                [\n                                    es,\n                                    midy\n                                ]\n                            ],\n                            \"y\": [\n                                [\n                                    midx,\n                                    ss\n                                ],\n                                [\n                                    midx,\n                                    es\n                                ]\n                            ]\n                        })[axis];\n                        else if (pi.so[idx] === 1 && ss < es || pi.so[idx] === -1 && ss > es) return ({\n                            \"x\": [\n                                [\n                                    midx,\n                                    pi.sy\n                                ],\n                                [\n                                    midx,\n                                    pi.ty\n                                ]\n                            ],\n                            \"y\": [\n                                [\n                                    pi.sx,\n                                    midy\n                                ],\n                                [\n                                    pi.tx,\n                                    midy\n                                ]\n                            ]\n                        })[axis];\n                    }\n                };\n                var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);\n                if (p) for(var i = 0; i < p.length; i++)this.addASegment(p[i][0], p[i][1], paintInfo);\n                this.addASegment(stubs[2], stubs[3], paintInfo);\n                this.addASegment(paintInfo.tx, paintInfo.ty, paintInfo);\n                this.writeSegments(paintInfo);\n            }\n        },\n        {\n            key: \"transformGeometry\",\n            value: function transformGeometry(g, dx, dy) {\n                return g;\n            }\n        }\n    ]);\n    return FlowchartConnector;\n}(AbstractConnector);\n_defineProperty(FlowchartConnector, \"type\", \"Flowchart\");\nConnectors.register(FlowchartConnector.type, FlowchartConnector);\nEndpointFactory.registerHandler(DotEndpointHandler);\nEndpointFactory.registerHandler(RectangleEndpointHandler);\nEndpointFactory.registerHandler(BlankEndpointHandler);\nConnectors.register(StraightConnector.type, StraightConnector);\nfunction _randomEvent() {\n    var x = Math.floor(Math.random() * 2000), y = Math.floor(Math.random() * 2000);\n    return {\n        clientX: x,\n        clientY: y,\n        screenX: x,\n        screenY: y,\n        pageX: x,\n        pageY: y\n    };\n}\nvar _distantPointEvent = {\n    clientX: 50000,\n    clientY: 50000,\n    screenX: 50000,\n    screenY: 50000,\n    pageX: 50000,\n    pageY: 50000\n};\nvar lut = [];\nfor(var i = 0; i < 256; i++)lut[i] = (i < 16 ? \"0\" : \"\") + i.toString(16);\nvar VERY_SMALL_NUMBER = 0.00000000001;\nvar BrowserUITestSupport = function() {\n    function BrowserUITestSupport(_jsPlumb, ok, equal) {\n        _classCallCheck(this, BrowserUITestSupport);\n        this._jsPlumb = _jsPlumb;\n        this.ok = ok;\n        this.equal = equal;\n        _defineProperty(this, \"_divs\", []);\n        _defineProperty(this, \"mottle\", void 0);\n        this.mottle = new EventManager();\n    }\n    _createClass(BrowserUITestSupport, [\n        {\n            key: \"_t\",\n            value: function _t(el, evt, x, y) {\n                this.mottle.trigger(el, evt, {\n                    pageX: x,\n                    pageY: y,\n                    screenX: x,\n                    screenY: y,\n                    clientX: x,\n                    clientY: y\n                });\n            }\n        },\n        {\n            key: \"addDiv\",\n            value: function addDiv(id, parent, className, x, y, w, h) {\n                var d1 = document.createElement(\"div\");\n                d1.style.position = \"absolute\";\n                d1.innerHTML = id;\n                if (parent) parent.appendChild(d1);\n                else this._jsPlumb.getContainer().appendChild(d1);\n                d1.setAttribute(\"id\", id);\n                d1.style.left = (x != null ? x : Math.floor(Math.random() * 1000)) + \"px\";\n                d1.style.top = (y != null ? y : Math.floor(Math.random() * 1000)) + \"px\";\n                if (className) d1.className = className;\n                if (w) d1.style.width = w + \"px\";\n                if (h) d1.style.height = h + \"px\";\n                this._divs.push(id);\n                return d1;\n            }\n        },\n        {\n            key: \"addDivs\",\n            value: function addDivs(ids, parent) {\n                for(var _i = 0; _i < ids.length; _i++)this.addDiv(ids[_i], parent);\n            }\n        },\n        {\n            key: \"assertEndpointCount\",\n            value: function assertEndpointCount(el, count) {\n                var ep = this._jsPlumb.getEndpoints(el), epl = ep ? ep.length : 0;\n                this.equal(epl, count, el.getAttribute(\"data-jtk-managed\") + \" has \" + count + (count > 1 || count == 0 ? \" endpoints\" : \" endpoint\"));\n            }\n        },\n        {\n            key: \"_assertManagedEndpointCount\",\n            value: function _assertManagedEndpointCount(el, count) {\n                var id = this._jsPlumb.getId(el), _mel = this._jsPlumb._managedElements[id];\n                this.equal(_mel.endpoints.length, count, id + \" has \" + count + \" endpoints in managed record\");\n            }\n        },\n        {\n            key: \"_assertManagedConnectionCount\",\n            value: function _assertManagedConnectionCount(el, count) {\n                var id = this._jsPlumb.getId(el), _mel = this._jsPlumb._managedElements[id];\n                this.equal(_mel.connections.length, count, id + \" has \" + count + \" connections in managed record\");\n            }\n        },\n        {\n            key: \"_registerDiv\",\n            value: function _registerDiv(div) {\n                this._divs.push(div);\n            }\n        },\n        {\n            key: \"makeDragStartEvt\",\n            value: function makeDragStartEvt(el) {\n                var e = this.makeEvent(el), c = this._jsPlumb.getContainer();\n                e.clientX += c.offsetLeft;\n                e.screenX += c.offsetLeft;\n                e.pageX += c.offsetLeft;\n                e.clientY += c.offsetTop;\n                e.screenY += c.offsetTop;\n                e.pageY += c.offsetTop;\n                return e;\n            }\n        },\n        {\n            key: \"getAttribute\",\n            value: function getAttribute(el, att) {\n                return el.getAttribute(att);\n            }\n        },\n        {\n            key: \"dragNodeBy\",\n            value: function dragNodeBy(el, x, y, events) {\n                events = events || {};\n                if (events.before) events.before();\n                var downEvent = this.makeEvent(el);\n                this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, downEvent);\n                if (events.beforeMouseMove) events.beforeMouseMove();\n                this._t(document, EVENT_MOUSEMOVE, downEvent.pageX + x, downEvent.pageY + y);\n                if (events.beforeMouseUp) events.beforeMouseUp();\n                this.mottle.trigger(document, EVENT_MOUSEUP, null);\n                if (events.after) events.after();\n            }\n        },\n        {\n            key: \"dragNodeTo\",\n            value: function dragNodeTo(el, x, y, events) {\n                events = events || {};\n                var size = this._jsPlumb.viewport.getPosition(this._jsPlumb.getId(el));\n                if (events.before) events.before();\n                var downEvent = this.makeEvent(el);\n                this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, downEvent);\n                var cb = this._jsPlumb.getContainer().getBoundingClientRect();\n                if (events.beforeMouseMove) events.beforeMouseMove();\n                this._t(document, EVENT_MOUSEMOVE, cb.x + x + size.w / 2, cb.y + y + size.h / 2);\n                if (events.beforeMouseUp) events.beforeMouseUp();\n                this.mottle.trigger(document, EVENT_MOUSEUP, null);\n                if (events.after) events.after();\n            }\n        },\n        {\n            key: \"dragToGroup\",\n            value: function dragToGroup(el, targetGroupId, events) {\n                var targetGroup = this._jsPlumb.getGroup(targetGroupId);\n                var tgo = this._jsPlumb.viewport.getPosition(targetGroup.elId), tx = tgo.x + tgo.w / 2, ty = tgo.y + tgo.h / 2;\n                this.dragNodeTo(el, tx, ty, events);\n            }\n        },\n        {\n            key: \"aSyncDragNodeBy\",\n            value: function aSyncDragNodeBy(el, x, y, events) {\n                var _this = this;\n                events = events || {};\n                if (events.before) events.before();\n                var downEvent = this.makeEvent(el);\n                this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, downEvent);\n                if (events.beforeMouseMove) events.beforeMouseMove();\n                setTimeout(function() {\n                    _this._t(document, EVENT_MOUSEMOVE, downEvent.pageX + x, downEvent.pageY + y);\n                    if (events.beforeMouseUp) events.beforeMouseUp();\n                    setTimeout(function() {\n                        _this.mottle.trigger(document, EVENT_MOUSEUP, null);\n                        if (events.after) events.after();\n                    }, 45);\n                }, 45);\n            }\n        },\n        {\n            key: \"dragANodeAround\",\n            value: function dragANodeAround(el, functionToAssertWhileDragging, assertMessage) {\n                this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, this.makeEvent(el));\n                var steps = Math.random() * 50;\n                for(var _i2 = 0; _i2 < steps; _i2++){\n                    var evt = _randomEvent();\n                    el.style.left = evt.screenX + \"px\";\n                    el.style.top = evt.screenY + \"px\";\n                    this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, evt);\n                }\n                if (functionToAssertWhileDragging) this.ok(functionToAssertWhileDragging(), assertMessage || \"while dragging assert\");\n                this._jsPlumb.trigger(document, EVENT_MOUSEUP, _distantPointEvent);\n            }\n        },\n        {\n            key: \"dragConnection\",\n            value: function dragConnection(d1, d2, mouseUpOnTarget, events) {\n                var el1 = this.getCanvas(d1), el2 = this.getCanvas(d2);\n                var e1 = this.makeEvent(el1), e2 = this.makeEvent(el2);\n                events = events || {};\n                var conns = this._jsPlumb.select().length;\n                this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\n                if (events.beforeMouseMove) events.beforeMouseMove();\n                this._jsPlumb.trigger(mouseUpOnTarget ? el2 : document, EVENT_MOUSEMOVE, e2);\n                if (events.beforeMouseUp) events.beforeMouseUp();\n                this._jsPlumb.trigger(mouseUpOnTarget ? el2 : document, EVENT_MOUSEUP, e2);\n                return this._jsPlumb.select().get(conns);\n            }\n        },\n        {\n            key: \"aSyncDragConnection\",\n            value: function aSyncDragConnection(d1, d2, events) {\n                var _this2 = this;\n                events = events || {};\n                var el1 = this.getCanvas(d1), el2 = this.getCanvas(d2);\n                var e1 = this.makeEvent(el1), e2 = this.makeEvent(el2);\n                var conns = this._jsPlumb.select().length;\n                this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\n                setTimeout(function() {\n                    if (events.beforeMouseMove) events.beforeMouseMove();\n                    _this2._jsPlumb.trigger(document, EVENT_MOUSEMOVE, e2);\n                    setTimeout(function() {\n                        if (events.beforeMouseUp) events.beforeMouseUp();\n                        _this2._jsPlumb.trigger(el2, EVENT_MOUSEUP, e2);\n                        if (events.after) events.after(_this2._jsPlumb.select().get(conns));\n                    }, 5);\n                }, 5);\n            }\n        },\n        {\n            key: \"dragAndAbortConnection\",\n            value: function dragAndAbortConnection(d1) {\n                var el1 = this.getCanvas(d1);\n                var e1 = this.makeEvent(el1);\n                this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\n                this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, _distantPointEvent);\n                this._jsPlumb.trigger(document, EVENT_MOUSEUP, _distantPointEvent);\n            }\n        },\n        {\n            key: \"detachConnection\",\n            value: function detachConnection(e, events) {\n                events = events || {};\n                var el1 = this.getEndpointCanvas(e);\n                var e1 = this.makeEvent(el1);\n                events.before && events.before();\n                this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\n                events.beforeMouseMove && events.beforeMouseMove();\n                this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, _distantPointEvent);\n                events.beforeMouseUp && events.beforeMouseUp();\n                this._jsPlumb.trigger(document, EVENT_MOUSEUP, _distantPointEvent);\n                events.after && events.after();\n            }\n        },\n        {\n            key: \"detachAndReattachConnection\",\n            value: function detachAndReattachConnection(e, events) {\n                events = events || {};\n                var el1 = this.getEndpointCanvas(e);\n                var e1 = this.makeEvent(el1);\n                events.before && events.before();\n                this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\n                events.beforeMouseMove && events.beforeMouseMove();\n                this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, _distantPointEvent);\n                this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, e1);\n                events.beforeMouseUp && events.beforeMouseUp();\n                this._jsPlumb.trigger(document, EVENT_MOUSEUP, e1);\n                events.after && events.after();\n            }\n        },\n        {\n            key: \"detachConnectionByTarget\",\n            value: function detachConnectionByTarget(c, events) {\n                this.detachConnection(c.endpoints[1], events);\n            }\n        },\n        {\n            key: \"relocateTarget\",\n            value: function relocateTarget(conn, newEl, events) {\n                this.relocate(conn, 1, newEl, events);\n            }\n        },\n        {\n            key: \"relocate\",\n            value: function relocate(conn, idx, newEl, events) {\n                events = events || {};\n                newEl = this.getCanvas(newEl);\n                var el1 = this.getEndpointCanvas(conn.endpoints[idx]);\n                var e1 = this.makeEvent(el1);\n                var e2 = this.makeEvent(newEl);\n                events.before && events.before();\n                this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\n                events.beforeMouseMove && events.beforeMouseMove();\n                this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, e2);\n                events.beforeMouseUp && events.beforeMouseUp();\n                this._jsPlumb.trigger(newEl, EVENT_MOUSEUP, e2);\n                events.after && events.after();\n            }\n        },\n        {\n            key: \"relocateSource\",\n            value: function relocateSource(conn, newEl, events) {\n                this.relocate(conn, 0, newEl, events);\n            }\n        },\n        {\n            key: \"makeEvent\",\n            value: function makeEvent(el) {\n                var b = el.getBoundingClientRect();\n                var l = b.x + b.width / 2, t = b.y + b.height / 2;\n                return {\n                    clientX: l,\n                    clientY: t,\n                    screenX: l,\n                    screenY: t,\n                    pageX: l,\n                    pageY: t\n                };\n            }\n        },\n        {\n            key: \"getCanvas\",\n            value: function getCanvas(epOrEl) {\n                if (epOrEl.endpoint) return this.getEndpointCanvas(epOrEl);\n                else return epOrEl;\n            }\n        },\n        {\n            key: \"getEndpointCanvas\",\n            value: function getEndpointCanvas(ep) {\n                return ep.endpoint.canvas;\n            }\n        },\n        {\n            key: \"getConnectionCanvas\",\n            value: function getConnectionCanvas(c) {\n                return c.connector.canvas;\n            }\n        },\n        {\n            key: \"getEndpointCanvasPosition\",\n            value: function getEndpointCanvasPosition(ep) {\n                var c = this.getEndpointCanvas(ep);\n                return {\n                    x: parseInt(c.style.left, 10),\n                    y: parseInt(c.style.top, 10),\n                    w: c.getAttribute(\"width\"),\n                    h: c.getAttribute(\"height\")\n                };\n            }\n        },\n        {\n            key: \"within\",\n            value: function within(val, target, msg) {\n                this.ok(Math.abs(val - target) < VERY_SMALL_NUMBER, msg + \"[expected: \" + target + \" got \" + val + \"] [diff:\" + Math.abs(val - target) + \"]\");\n            }\n        },\n        {\n            key: \"assertManagedEndpointCount\",\n            value: function assertManagedEndpointCount(el, count) {\n                var id = this._jsPlumb.getId(el), _mel = this._jsPlumb._managedElements[id];\n                this.equal(_mel.endpoints.length, count, id + \" has \" + count + \" endpoints in managed record\");\n            }\n        },\n        {\n            key: \"assertManagedConnectionCount\",\n            value: function assertManagedConnectionCount(el, count) {\n                var id = this._jsPlumb.getId(el), _mel = this._jsPlumb._managedElements[id];\n                this.equal(_mel.connections.length, count, id + \" has \" + count + \" connections in managed record\");\n            }\n        },\n        {\n            key: \"fireEventOnEndpoint\",\n            value: function fireEventOnEndpoint(ep) {\n                var canvas = this.getEndpointCanvas(ep);\n                for(var _i3 = 0; _i3 < (arguments.length <= 1 ? 0 : arguments.length - 1); _i3++)this._jsPlumb.trigger(canvas, _i3 + 1 < 1 || arguments.length <= _i3 + 1 ? undefined : arguments[_i3 + 1]);\n            }\n        },\n        {\n            key: \"fireEventOnElement\",\n            value: function fireEventOnElement(e) {\n                for(var _i4 = 0; _i4 < (arguments.length <= 1 ? 0 : arguments.length - 1); _i4++)this._jsPlumb.trigger(e, _i4 + 1 < 1 || arguments.length <= _i4 + 1 ? undefined : arguments[_i4 + 1]);\n            }\n        },\n        {\n            key: \"fireEventOnConnection\",\n            value: function fireEventOnConnection(connection) {\n                var canvas = this.getConnectionCanvas(connection);\n                for(var _len = arguments.length, events = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)events[_key - 1] = arguments[_key];\n                this.fireEventOnElement.apply(this, [\n                    canvas\n                ].concat(events));\n            }\n        },\n        {\n            key: \"clickOnConnection\",\n            value: function clickOnConnection(connection) {\n                this.fireEventOnConnection(connection, EVENT_CLICK);\n            }\n        },\n        {\n            key: \"dblClickOnConnection\",\n            value: function dblClickOnConnection(connection) {\n                this.fireEventOnConnection(connection, EVENT_DBL_CLICK);\n            }\n        },\n        {\n            key: \"tapOnConnection\",\n            value: function tapOnConnection(connection) {\n                this.fireEventOnConnection(connection, EVENT_MOUSEDOWN);\n                this.fireEventOnConnection(connection, EVENT_MOUSEUP);\n            }\n        },\n        {\n            key: \"dblTapOnConnection\",\n            value: function dblTapOnConnection(connection) {\n                this.fireEventOnConnection(connection, EVENT_MOUSEDOWN);\n                this.fireEventOnConnection(connection, EVENT_MOUSEUP);\n                this.fireEventOnConnection(connection, EVENT_MOUSEDOWN);\n                this.fireEventOnConnection(connection, EVENT_MOUSEUP);\n            }\n        },\n        {\n            key: \"clickOnElement\",\n            value: function clickOnElement(element, clickCount) {\n                this._jsPlumb.trigger(element, EVENT_CLICK, null, null, clickCount == null ? 1 : clickCount);\n            }\n        },\n        {\n            key: \"dblClickOnElement\",\n            value: function dblClickOnElement(element) {\n                this._jsPlumb.trigger(element, EVENT_DBL_CLICK);\n            }\n        },\n        {\n            key: \"tapOnElement\",\n            value: function tapOnElement(element) {\n                this._jsPlumb.trigger(element, EVENT_MOUSEDOWN);\n                this._jsPlumb.trigger(element, EVENT_MOUSEUP);\n            }\n        },\n        {\n            key: \"dblTapOnElement\",\n            value: function dblTapOnElement(element) {\n                this._jsPlumb.trigger(element, EVENT_MOUSEDOWN);\n                this._jsPlumb.trigger(element, EVENT_MOUSEUP);\n                this._jsPlumb.trigger(element, EVENT_MOUSEDOWN);\n                this._jsPlumb.trigger(element, EVENT_MOUSEUP);\n            }\n        },\n        {\n            key: \"getOverlayCanvas\",\n            value: function getOverlayCanvas(overlay) {\n                return overlay.canvas || overlay.path;\n            }\n        },\n        {\n            key: \"fireEventOnOverlay\",\n            value: function fireEventOnOverlay(connection, overlayId, event) {\n                var overlay = connection.getOverlay(overlayId);\n                var canvas = this.getOverlayCanvas(overlay);\n                this._jsPlumb.trigger(canvas, event);\n            }\n        },\n        {\n            key: \"clickOnOverlay\",\n            value: function clickOnOverlay(connection, overlayId) {\n                this.fireEventOnOverlay(connection, overlayId, EVENT_CLICK);\n            }\n        },\n        {\n            key: \"dblClickOnOverlay\",\n            value: function dblClickOnOverlay(connection, overlayId) {\n                this.fireEventOnOverlay(connection, overlayId, EVENT_DBL_CLICK);\n            }\n        },\n        {\n            key: \"tapOnOverlay\",\n            value: function tapOnOverlay(connection, overlayId) {\n                this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEDOWN);\n                this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEUP);\n            }\n        },\n        {\n            key: \"dblTapOnOverlay\",\n            value: function dblTapOnOverlay(connection, overlayId) {\n                this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEDOWN);\n                this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEUP);\n                this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEDOWN);\n                this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEUP);\n            }\n        },\n        {\n            key: \"cleanup\",\n            value: function cleanup() {\n                var container = this._jsPlumb.getContainer();\n                this._jsPlumb.destroy();\n                for(var _i5 in this._divs){\n                    var d = document.getElementById(this._divs[_i5]);\n                    d && d.parentNode.removeChild(d);\n                }\n                this._divs.length = 0;\n                var connCount = this._jsPlumb.select().length, epCount = this._jsPlumb.selectEndpoints().length, epElCount = container.querySelectorAll(\".jtk-endpoint\").length, connElCount = container.querySelectorAll(\".jtk-connector\").length;\n                for(var k in container.__ta){\n                    for(var kk in container.__ta[k])throw \"Container event bindings not empty for key \" + k;\n                }\n                if (connCount > 0) throw \"there are connections in the data model!\";\n                if (epCount > 0) throw \"there are endpoints in the data model!\";\n                if (epElCount > 0) throw \"there are \" + epElCount + \" endpoints left in the dom!\";\n                if (connElCount > 0) throw \"there are \" + connElCount + \" connections left in the dom!\";\n            }\n        },\n        {\n            key: \"makeContent\",\n            value: function makeContent(s) {\n                var d = document.createElement(\"div\");\n                d.innerHTML = s;\n                return d.firstChild;\n            }\n        },\n        {\n            key: \"length\",\n            value: function length1(obj) {\n                var c = 0;\n                for(var _i6 in obj)if (obj.hasOwnProperty(_i6)) c++;\n                return c;\n            }\n        },\n        {\n            key: \"head\",\n            value: function head(obj) {\n                for(var _i7 in obj)return obj[_i7];\n            }\n        },\n        {\n            key: \"uuid\",\n            value: function uuid$1() {\n                return uuid();\n            }\n        }\n    ]);\n    return BrowserUITestSupport;\n}();\nfunction createTestSupportInstance(instance, ok, equal) {\n    return new BrowserUITestSupport(instance, ok, equal);\n}\nfunction createTestSupportInstanceQUnit(instance) {\n    return new BrowserUITestSupport(instance, QUnit.ok, QUnit.equal);\n}\nvar _jsPlumbInstanceIndex = 0;\nfunction getInstanceIndex() {\n    var i = _jsPlumbInstanceIndex + 1;\n    _jsPlumbInstanceIndex++;\n    return i;\n}\nfunction newInstance(defaults) {\n    return new BrowserJsPlumbInstance(getInstanceIndex(), defaults);\n}\nfunction ready(f) {\n    var _do = function _do() {\n        if (/complete|loaded|interactive/.test(document.readyState) && typeof document.body !== \"undefined\" && document.body != null) f();\n        else setTimeout(_do, 9);\n    };\n    _do();\n}\n\n});\n\n\nvar $gYAp4 = parcelRequire(\"gYAp4\");\nclass $83625ed049aab94e$var$Input {\n}\nclass $83625ed049aab94e$var$eqnOutput {\n    constructor(instance){\n        this.cssClass = \"\";\n        this.strTex = \"=\";\n    }\n}\nclass $83625ed049aab94e$export$f78be8d334fd9409 {\n    constructor(whiteboard, instance, pos = [\n        0,\n        0\n    ]){\n        this.outputs = [];\n        this.children = [];\n        this.frozen = false;\n        this.container = document.createElement(\"span\");\n        // this.container.classList.add('draggableNode');\n        this.container.classList.add(\"node-container\");\n        whiteboard.appendChild(this.container);\n        // setup main row\n        this.mainRowContainer = document.createElement(\"main-row-container\");\n        this.lhsSpan = document.createElement(\"span\");\n        this.lhsSpan.id = \"lhsSpan\";\n        // this.lhsMathField = MathField\n        this.mainRowContainer.appendChild(this.lhsSpan);\n        instance.manage(this.container);\n    }\n    updateSelf() {\n        console.log(\"Updating\");\n    }\n    updateChildren() {\n        console.log(\"Updating Children\");\n    }\n}\n\n\nvar $953f4e1cfd7c4c4b$var$whiteboard = document.getElementById(\"whiteboard\");\n(0, $gYAp4.ready)(()=>{\n    const instance = (0, $gYAp4.newInstance)({\n        container: $953f4e1cfd7c4c4b$var$whiteboard,\n        connector: {\n            type: (0, $gYAp4.FlowchartConnector).type,\n            options: {}\n        }\n    });\n    var nodes = [];\n    nodes.push(new (0, $83625ed049aab94e$export$f78be8d334fd9409)($953f4e1cfd7c4c4b$var$whiteboard, instance));\n});\n\n\n//# sourceMappingURL=whiteboard-main.js.map\n","function _typeof(obj) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n    _typeof = function (obj) {\r\n      return typeof obj;\r\n    };\r\n  } else {\r\n    _typeof = function (obj) {\r\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    };\r\n  }\r\n\r\n  return _typeof(obj);\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n  for (var i = 0; i < props.length; i++) {\r\n    var descriptor = props[i];\r\n    descriptor.enumerable = descriptor.enumerable || false;\r\n    descriptor.configurable = true;\r\n    if (\"value\" in descriptor) descriptor.writable = true;\r\n    Object.defineProperty(target, descriptor.key, descriptor);\r\n  }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n  if (staticProps) _defineProperties(Constructor, staticProps);\r\n  return Constructor;\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n  if (typeof superClass !== \"function\" && superClass !== null) {\r\n    throw new TypeError(\"Super expression must either be null or a function\");\r\n  }\r\n\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n  if (superClass) _setPrototypeOf(subClass, superClass);\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\r\n    return o.__proto__ || Object.getPrototypeOf(o);\r\n  };\r\n  return _getPrototypeOf(o);\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\r\n    o.__proto__ = p;\r\n    return o;\r\n  };\r\n\r\n  return _setPrototypeOf(o, p);\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n  if (Reflect.construct.sham) return false;\r\n  if (typeof Proxy === \"function\") return true;\r\n\r\n  try {\r\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n  if (self === void 0) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n  }\r\n\r\n  return self;\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\r\n    return call;\r\n  }\r\n\r\n  return _assertThisInitialized(self);\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n\r\n  return function _createSuperInternal() {\r\n    var Super = _getPrototypeOf(Derived),\r\n        result;\r\n\r\n    if (hasNativeReflectConstruct) {\r\n      var NewTarget = _getPrototypeOf(this).constructor;\r\n\r\n      result = Reflect.construct(Super, arguments, NewTarget);\r\n    } else {\r\n      result = Super.apply(this, arguments);\r\n    }\r\n\r\n    return _possibleConstructorReturn(this, result);\r\n  };\r\n}\r\n\r\nfunction _superPropBase(object, property) {\r\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n    object = _getPrototypeOf(object);\r\n    if (object === null) break;\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\nfunction _get(target, property, receiver) {\r\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\r\n    _get = Reflect.get;\r\n  } else {\r\n    _get = function _get(target, property, receiver) {\r\n      var base = _superPropBase(target, property);\r\n\r\n      if (!base) return;\r\n      var desc = Object.getOwnPropertyDescriptor(base, property);\r\n\r\n      if (desc.get) {\r\n        return desc.get.call(receiver);\r\n      }\r\n\r\n      return desc.value;\r\n    };\r\n  }\r\n\r\n  return _get(target, property, receiver || target);\r\n}\r\n\r\nfunction _slicedToArray(arr, i) {\r\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n}\r\n\r\nfunction _arrayWithHoles(arr) {\r\n  if (Array.isArray(arr)) return arr;\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\n\r\nfunction _iterableToArrayLimit(arr, i) {\r\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\r\n\r\n  if (_i == null) return;\r\n  var _arr = [];\r\n  var _n = true;\r\n  var _d = false;\r\n\r\n  var _s, _e;\r\n\r\n  try {\r\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\r\n      _arr.push(_s.value);\r\n\r\n      if (i && _arr.length === i) break;\r\n    }\r\n  } catch (err) {\r\n    _d = true;\r\n    _e = err;\r\n  } finally {\r\n    try {\r\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n    } finally {\r\n      if (_d) throw _e;\r\n    }\r\n  }\r\n\r\n  return _arr;\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n  return arr2;\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\nfunction _nonIterableRest() {\r\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\nfunction filterList(list, value, missingIsFalse) {\r\n  if (list === \"*\") {\r\n    return true;\r\n  }\r\n  return list.length > 0 ? list.indexOf(value) !== -1 : !missingIsFalse;\r\n}\r\nfunction extend(o1, o2, keys) {\r\n  var i;\r\n  o1 = o1 || {};\r\n  o2 = o2 || {};\r\n  var _o1 = o1,\r\n      _o2 = o2;\r\n  if (keys) {\r\n    for (i = 0; i < keys.length; i++) {\r\n      _o1[keys[i]] = _o2[keys[i]];\r\n    }\r\n  } else {\r\n    for (i in _o2) {\r\n      _o1[i] = _o2[i];\r\n    }\r\n  }\r\n  return o1;\r\n}\r\nfunction isNumber(n) {\r\n  return Object.prototype.toString.call(n) === \"[object Number]\";\r\n}\r\nfunction isString(s) {\r\n  return typeof s === \"string\";\r\n}\r\nfunction isBoolean(s) {\r\n  return typeof s === \"boolean\";\r\n}\r\nfunction isObject(o) {\r\n  return o == null ? false : Object.prototype.toString.call(o) === \"[object Object]\";\r\n}\r\nfunction isDate(o) {\r\n  return Object.prototype.toString.call(o) === \"[object Date]\";\r\n}\r\nfunction isFunction(o) {\r\n  return Object.prototype.toString.call(o) === \"[object Function]\";\r\n}\r\nfunction isNamedFunction(o) {\r\n  return isFunction(o) && o.name != null && o.name.length > 0;\r\n}\r\nfunction isEmpty(o) {\r\n  for (var i in o) {\r\n    if (o.hasOwnProperty(i)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction clone(a) {\r\n  if (isString(a)) {\r\n    return \"\" + a;\r\n  } else if (isBoolean(a)) {\r\n    return !!a;\r\n  } else if (isDate(a)) {\r\n    return new Date(a.getTime());\r\n  } else if (isFunction(a)) {\r\n    return a;\r\n  } else if (Array.isArray(a)) {\r\n    var _b = [];\r\n    for (var i = 0; i < a.length; i++) {\r\n      _b.push(clone(a[i]));\r\n    }\r\n    return _b;\r\n  } else if (isObject(a)) {\r\n    var c = {};\r\n    for (var j in a) {\r\n      c[j] = clone(a[j]);\r\n    }\r\n    return c;\r\n  } else {\r\n    return a;\r\n  }\r\n}\r\nfunction filterNull(obj) {\r\n  var o = {};\r\n  for (var k in obj) {\r\n    if (obj[k] != null) {\r\n      o[k] = obj[k];\r\n    }\r\n  }\r\n  return o;\r\n}\r\nfunction merge(a, b, collations, overwrites) {\r\n  var cMap = {},\r\n      ar,\r\n      i,\r\n      oMap = {};\r\n  collations = collations || [];\r\n  overwrites = overwrites || [];\r\n  for (i = 0; i < collations.length; i++) {\r\n    cMap[collations[i]] = true;\r\n  }\r\n  for (i = 0; i < overwrites.length; i++) {\r\n    oMap[overwrites[i]] = true;\r\n  }\r\n  var c = clone(a);\r\n  for (i in b) {\r\n    if (c[i] == null || oMap[i]) {\r\n      c[i] = b[i];\r\n    } else if (cMap[i]) {\r\n      ar = [];\r\n      ar.push.apply(ar, Array.isArray(c[i]) ? c[i] : [c[i]]);\r\n      ar.push(b[i]);\r\n      c[i] = ar;\r\n    } else if (isString(b[i]) || isBoolean(b[i]) || isFunction(b[i]) || isNumber(b[i])) {\r\n      c[i] = b[i];\r\n    } else {\r\n      if (Array.isArray(b[i])) {\r\n        ar = [];\r\n        if (Array.isArray(c[i])) {\r\n          ar.push.apply(ar, c[i]);\r\n        }\r\n        ar.push.apply(ar, b[i]);\r\n        c[i] = ar;\r\n      } else if (isObject(b[i])) {\r\n        if (!isObject(c[i])) {\r\n          c[i] = {};\r\n        }\r\n        for (var j in b[i]) {\r\n          c[i][j] = b[i][j];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return c;\r\n}\r\nfunction _areEqual(a, b) {\r\n  if (a != null && b == null) {\r\n    return false;\r\n  } else {\r\n    if ((a == null || isString(a) || isBoolean(a) || isNumber(a)) && a !== b) {\r\n      return false;\r\n    } else {\r\n      if (Array.isArray(a)) {\r\n        if (!Array.isArray(b)) {\r\n          return false;\r\n        } else {\r\n          if (!arraysEqual(a, b)) {\r\n            return false;\r\n          }\r\n        }\r\n      } else if (isObject(a)) {\r\n        if (!isObject(a)) {\r\n          return false;\r\n        } else {\r\n          if (!objectsEqual(a, b)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction arraysEqual(a, b) {\r\n  if (a == null && b == null) {\r\n    return true;\r\n  } else if (a == null && b != null) {\r\n    return false;\r\n  } else if (a != null && b == null) {\r\n    return false;\r\n  }\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  } else {\r\n    for (var i = 0; i < a.length; i++) {\r\n      if (!_areEqual(a[i], b[i])) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction objectsEqual(a, b) {\r\n  if (a == null && b == null) {\r\n    return true;\r\n  } else if (a == null && b != null) {\r\n    return false;\r\n  } else if (a != null && b == null) {\r\n    return false;\r\n  }\r\n  for (var key in a) {\r\n    var va = a[key],\r\n        vb = b[key];\r\n    if (!_areEqual(va, vb)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction replace(inObj, path, value) {\r\n  if (inObj == null) {\r\n    return;\r\n  }\r\n  var q = inObj,\r\n      t = q;\r\n  path.replace(/([^\\.])+/g, function (term, lc, pos, str) {\r\n    var array = term.match(/([^\\[0-9]+){1}(\\[)([0-9+])/),\r\n        last = pos + term.length >= str.length,\r\n        _getArray = function _getArray() {\r\n      return t[array[1]] || function () {\r\n        t[array[1]] = [];\r\n        return t[array[1]];\r\n      }();\r\n    };\r\n    if (last) {\r\n      if (array) {\r\n        _getArray()[array[3]] = value;\r\n      } else {\r\n        t[term] = value;\r\n      }\r\n    } else {\r\n      if (array) {\r\n        var _a2 = _getArray();\r\n        t = _a2[array[3]] || function () {\r\n          _a2[array[3]] = {};\r\n          return _a2[array[3]];\r\n        }();\r\n      } else {\r\n        t = t[term] || function () {\r\n          t[term] = {};\r\n          return t[term];\r\n        }();\r\n      }\r\n    }\r\n    return \"\";\r\n  });\r\n  return inObj;\r\n}\r\nfunction functionChain(successValue, failValue, fns) {\r\n  for (var i = 0; i < fns.length; i++) {\r\n    var o = fns[i][0][fns[i][1]].apply(fns[i][0], fns[i][2]);\r\n    if (o === failValue) {\r\n      return o;\r\n    }\r\n  }\r\n  return successValue;\r\n}\r\nfunction populate(model, values, functionPrefix, doNotExpandFunctions) {\r\n  var getValue = function getValue(fromString) {\r\n    var matches = fromString.match(/(\\${.*?})/g);\r\n    if (matches != null) {\r\n      for (var i = 0; i < matches.length; i++) {\r\n        var val = values[matches[i].substring(2, matches[i].length - 1)] || \"\";\r\n        if (val != null) {\r\n          fromString = fromString.replace(matches[i], val);\r\n        }\r\n      }\r\n    }\r\n    matches = fromString.match(/({{.*?}})/g);\r\n    if (matches != null) {\r\n      for (var _i = 0; _i < matches.length; _i++) {\r\n        var _val = values[matches[_i].substring(2, matches[_i].length - 2)] || \"\";\r\n        if (_val != null) {\r\n          fromString = fromString.replace(matches[_i], _val);\r\n        }\r\n      }\r\n    }\r\n    return fromString;\r\n  };\r\n  var _one = function _one(d) {\r\n    if (d != null) {\r\n      if (isString(d)) {\r\n        return getValue(d);\r\n      } else if (isFunction(d) && !doNotExpandFunctions && (functionPrefix == null || (d.name || \"\").indexOf(functionPrefix) === 0)) {\r\n        return d(values);\r\n      } else if (Array.isArray(d)) {\r\n        var r = [];\r\n        for (var i = 0; i < d.length; i++) {\r\n          r.push(_one(d[i]));\r\n        }\r\n        return r;\r\n      } else if (isObject(d)) {\r\n        var s = {};\r\n        for (var j in d) {\r\n          s[j] = _one(d[j]);\r\n        }\r\n        return s;\r\n      } else {\r\n        return d;\r\n      }\r\n    }\r\n  };\r\n  return _one(model);\r\n}\r\nfunction forEach(a, f) {\r\n  if (a) {\r\n    for (var i = 0; i < a.length; i++) {\r\n      f(a[i]);\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\nfunction findWithFunction(a, f) {\r\n  if (a) {\r\n    for (var i = 0; i < a.length; i++) {\r\n      if (f(a[i])) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\nfunction findAllWithFunction(a, predicate) {\r\n  var o = [];\r\n  if (a) {\r\n    for (var i = 0; i < a.length; i++) {\r\n      if (predicate(a[i])) {\r\n        o.push(i);\r\n      }\r\n    }\r\n  }\r\n  return o;\r\n}\r\nfunction getWithFunction(a, f) {\r\n  var idx = findWithFunction(a, f);\r\n  return idx === -1 ? null : a[idx];\r\n}\r\nfunction getAllWithFunction(a, f) {\r\n  var indexes = findAllWithFunction(a, f);\r\n  return indexes.map(function (i) {\r\n    return a[i];\r\n  });\r\n}\r\nfunction getFromSetWithFunction(s, f) {\r\n  var out = null;\r\n  s.forEach(function (t) {\r\n    if (f(t)) {\r\n      out = t;\r\n    }\r\n  });\r\n  return out;\r\n}\r\nfunction setToArray(s) {\r\n  var a = [];\r\n  s.forEach(function (t) {\r\n    a.push(t);\r\n  });\r\n  return a;\r\n}\r\nfunction removeWithFunction(a, f) {\r\n  var idx = findWithFunction(a, f);\r\n  if (idx > -1) {\r\n    a.splice(idx, 1);\r\n  }\r\n  return idx !== -1;\r\n}\r\nfunction fromArray(a) {\r\n  if (Array.fromArray != null) {\r\n    return Array.from(a);\r\n  } else {\r\n    var arr = [];\r\n    Array.prototype.push.apply(arr, a);\r\n    return arr;\r\n  }\r\n}\r\nfunction remove(l, v) {\r\n  var idx = l.indexOf(v);\r\n  if (idx > -1) {\r\n    l.splice(idx, 1);\r\n  }\r\n  return idx !== -1;\r\n}\r\nfunction addWithFunction(list, item, hashFunction) {\r\n  if (findWithFunction(list, hashFunction) === -1) {\r\n    list.push(item);\r\n  }\r\n}\r\nfunction addToDictionary(map, key, value, insertAtStart) {\r\n  var l = map[key];\r\n  if (l == null) {\r\n    l = [];\r\n    map[key] = l;\r\n  }\r\n  l[insertAtStart ? \"unshift\" : \"push\"](value);\r\n  return l;\r\n}\r\nfunction addToList(map, key, value, insertAtStart) {\r\n  var l = map.get(key);\r\n  if (l == null) {\r\n    l = [];\r\n    map.set(key, l);\r\n  }\r\n  l[insertAtStart ? \"unshift\" : \"push\"](value);\r\n  return l;\r\n}\r\nfunction suggest(list, item, insertAtHead) {\r\n  if (list.indexOf(item) === -1) {\r\n    if (insertAtHead) {\r\n      list.unshift(item);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar lut$1 = [];\r\nfor (var i$1 = 0; i$1 < 256; i$1++) {\r\n  lut$1[i$1] = (i$1 < 16 ? '0' : '') + i$1.toString(16);\r\n}\r\nfunction uuid() {\r\n  var d0 = Math.random() * 0xffffffff | 0;\r\n  var d1 = Math.random() * 0xffffffff | 0;\r\n  var d2 = Math.random() * 0xffffffff | 0;\r\n  var d3 = Math.random() * 0xffffffff | 0;\r\n  return lut$1[d0 & 0xff] + lut$1[d0 >> 8 & 0xff] + lut$1[d0 >> 16 & 0xff] + lut$1[d0 >> 24 & 0xff] + '-' + lut$1[d1 & 0xff] + lut$1[d1 >> 8 & 0xff] + '-' + lut$1[d1 >> 16 & 0x0f | 0x40] + lut$1[d1 >> 24 & 0xff] + '-' + lut$1[d2 & 0x3f | 0x80] + lut$1[d2 >> 8 & 0xff] + '-' + lut$1[d2 >> 16 & 0xff] + lut$1[d2 >> 24 & 0xff] + lut$1[d3 & 0xff] + lut$1[d3 >> 8 & 0xff] + lut$1[d3 >> 16 & 0xff] + lut$1[d3 >> 24 & 0xff];\r\n}\r\nfunction rotatePoint(point, center, rotation) {\r\n  var radial = {\r\n    x: point.x - center.x,\r\n    y: point.y - center.y\r\n  },\r\n      cr = Math.cos(rotation / 360 * Math.PI * 2),\r\n      sr = Math.sin(rotation / 360 * Math.PI * 2);\r\n  return {\r\n    x: radial.x * cr - radial.y * sr + center.x,\r\n    y: radial.y * cr + radial.x * sr + center.y,\r\n    cr: cr,\r\n    sr: sr\r\n  };\r\n}\r\nfunction rotateAnchorOrientation(orientation, rotation) {\r\n  var r = rotatePoint({\r\n    x: orientation[0],\r\n    y: orientation[1]\r\n  }, {\r\n    x: 0,\r\n    y: 0\r\n  }, rotation);\r\n  return [Math.round(r.x), Math.round(r.y)];\r\n}\r\nfunction fastTrim(s) {\r\n  if (s == null) {\r\n    return null;\r\n  }\r\n  var str = s.replace(/^\\s\\s*/, ''),\r\n      ws = /\\s/,\r\n      i = str.length;\r\n  while (ws.test(str.charAt(--i))) {}\r\n  return str.slice(0, i + 1);\r\n}\r\nfunction each(obj, fn) {\r\n  obj = obj.length == null || typeof obj === \"string\" ? [obj] : obj;\r\n  for (var _i2 = 0; _i2 < obj.length; _i2++) {\r\n    fn(obj[_i2]);\r\n  }\r\n}\r\nfunction map(obj, fn) {\r\n  var o = [];\r\n  for (var _i3 = 0; _i3 < obj.length; _i3++) {\r\n    o.push(fn(obj[_i3]));\r\n  }\r\n  return o;\r\n}\r\nvar logEnabled = true;\r\nfunction log() {\r\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n  if (typeof console !== \"undefined\") {\r\n    try {\r\n      var msg = arguments[arguments.length - 1];\r\n      console.log(msg);\r\n    } catch (e) {}\r\n  }\r\n}\r\nfunction sgn$1(x) {\r\n  return x < 0 ? -1 : x > 0 ? 1 : 0;\r\n}\r\nfunction wrap(wrappedFunction, newFunction, returnOnThisValue) {\r\n  return function () {\r\n    var r = null;\r\n    try {\r\n      if (newFunction != null) {\r\n        r = newFunction.apply(this, arguments);\r\n      }\r\n    } catch (e) {\r\n      log(\"jsPlumb function failed : \" + e);\r\n    }\r\n    if (wrappedFunction != null && (returnOnThisValue == null || r !== returnOnThisValue)) {\r\n      try {\r\n        r = wrappedFunction.apply(this, arguments);\r\n      } catch (e) {\r\n        log(\"wrapped function failed : \" + e);\r\n      }\r\n    }\r\n    return r;\r\n  };\r\n}\r\nfunction getsert(map, key, valueGenerator) {\r\n  if (!map.has(key)) {\r\n    map.set(key, valueGenerator());\r\n  }\r\n  return map.get(key);\r\n}\r\nfunction isAssignableFrom(object, cls) {\r\n  var proto = object.__proto__;\r\n  while (proto != null) {\r\n    if (proto instanceof cls) {\r\n      return true;\r\n    } else {\r\n      proto = proto.__proto__;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction insertSorted(value, array, comparator, sortDescending) {\r\n  if (array.length === 0) {\r\n    array.push(value);\r\n  } else {\r\n    var flip = sortDescending ? -1 : 1;\r\n    var min = 0;\r\n    var max = array.length;\r\n    var index = Math.floor((min + max) / 2);\r\n    while (max > min) {\r\n      var c = comparator(value, array[index]) * flip;\r\n      if (c < 0) {\r\n        max = index;\r\n      } else {\r\n        min = index + 1;\r\n      }\r\n      index = Math.floor((min + max) / 2);\r\n    }\r\n    array.splice(index, 0, value);\r\n  }\r\n}\r\n\r\nfunction matchesSelector$1(el, selector, ctx) {\r\n  ctx = ctx || el.parentNode;\r\n  var possibles = ctx.querySelectorAll(selector);\r\n  for (var i = 0; i < possibles.length; i++) {\r\n    if (possibles[i] === el) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction consume(e, doNotPreventDefault) {\r\n  if (e.stopPropagation) {\r\n    e.stopPropagation();\r\n  } else {\r\n    e.returnValue = false;\r\n  }\r\n  if (!doNotPreventDefault && e.preventDefault) {\r\n    e.preventDefault();\r\n  }\r\n}\r\nfunction findParent(el, selector, container, matchOnElementAlso) {\r\n  if (matchOnElementAlso && matchesSelector$1(el, selector, container)) {\r\n    return el;\r\n  } else {\r\n    el = el.parentNode;\r\n  }\r\n  while (el != null && el !== container) {\r\n    if (matchesSelector$1(el, selector)) {\r\n      return el;\r\n    } else {\r\n      el = el.parentNode;\r\n    }\r\n  }\r\n}\r\nfunction getEventSource(e) {\r\n  return e.srcElement || e.target;\r\n}\r\nfunction _setClassName(el, cn, classList) {\r\n  cn = fastTrim(cn);\r\n  if (typeof el.className.baseVal !== \"undefined\") {\r\n    el.className.baseVal = cn;\r\n  } else {\r\n    el.className = cn;\r\n  }\r\n  try {\r\n    var cl = el.classList;\r\n    if (cl != null) {\r\n      while (cl.length > 0) {\r\n        cl.remove(cl.item(0));\r\n      }\r\n      for (var i = 0; i < classList.length; i++) {\r\n        if (classList[i]) {\r\n          cl.add(classList[i]);\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    log(\"WARN: cannot set class list\", e);\r\n  }\r\n}\r\nfunction _getClassName(el) {\r\n  return el.className != null ? typeof el.className.baseVal === \"undefined\" ? el.className : el.className.baseVal : \"\";\r\n}\r\nfunction _classManip(el, classesToAdd, classesToRemove) {\r\n  var cta = classesToAdd == null ? [] : Array.isArray(classesToAdd) ? classesToAdd : classesToAdd.split(/\\s+/);\r\n  var ctr = classesToRemove == null ? [] : Array.isArray(classesToRemove) ? classesToRemove : classesToRemove.split(/\\s+/);\r\n  var className = _getClassName(el),\r\n      curClasses = className.split(/\\s+/);\r\n  var _oneSet = function _oneSet(add, classes) {\r\n    for (var i = 0; i < classes.length; i++) {\r\n      if (add) {\r\n        if (curClasses.indexOf(classes[i]) === -1) {\r\n          curClasses.push(classes[i]);\r\n        }\r\n      } else {\r\n        var idx = curClasses.indexOf(classes[i]);\r\n        if (idx !== -1) {\r\n          curClasses.splice(idx, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  _oneSet(true, cta);\r\n  _oneSet(false, ctr);\r\n  _setClassName(el, curClasses.join(\" \"), curClasses);\r\n}\r\nfunction isNodeList(el) {\r\n  return !isString(el) && !Array.isArray(el) && el.length != null && el.documentElement == null && el.nodeType == null;\r\n}\r\nfunction isArrayLike(el) {\r\n  return !isString(el) && (Array.isArray(el) || isNodeList(el));\r\n}\r\nfunction getClass(el) {\r\n  return _getClassName(el);\r\n}\r\nfunction addClass(el, clazz) {\r\n  var _one = function _one(el, clazz) {\r\n    if (el != null && clazz != null && clazz.length > 0) {\r\n      if (el.classList) {\r\n        var parts = fastTrim(clazz).split(/\\s+/);\r\n        forEach(parts, function (part) {\r\n          el.classList.add(part);\r\n        });\r\n      } else {\r\n        _classManip(el, clazz);\r\n      }\r\n    }\r\n  };\r\n  if (isNodeList(el)) {\r\n    forEach(el, function (el) {\r\n      return _one(el, clazz);\r\n    });\r\n  } else {\r\n    _one(el, clazz);\r\n  }\r\n}\r\nfunction hasClass(el, clazz) {\r\n  if (el.classList) {\r\n    return el.classList.contains(clazz);\r\n  } else {\r\n    return _getClassName(el).indexOf(clazz) !== -1;\r\n  }\r\n}\r\nfunction removeClass(el, clazz) {\r\n  var _one = function _one(el, clazz) {\r\n    if (el != null && clazz != null && clazz.length > 0) {\r\n      if (el.classList) {\r\n        var parts = fastTrim(clazz).split(/\\s+/);\r\n        parts.forEach(function (part) {\r\n          el.classList.remove(part);\r\n        });\r\n      } else {\r\n        _classManip(el, null, clazz);\r\n      }\r\n    }\r\n  };\r\n  if (isNodeList(el)) {\r\n    forEach(el, function (el) {\r\n      return _one(el, clazz);\r\n    });\r\n  } else {\r\n    _one(el, clazz);\r\n  }\r\n}\r\nfunction toggleClass(el, clazz) {\r\n  var _this = this;\r\n  var _one = function _one(el, clazz) {\r\n    if (el != null && clazz != null && clazz.length > 0) {\r\n      if (el.classList) {\r\n        el.classList.toggle(clazz);\r\n      } else {\r\n        if (_this.hasClass(el, clazz)) {\r\n          _this.removeClass(el, clazz);\r\n        } else {\r\n          _this.addClass(el, clazz);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  if (isNodeList(el)) {\r\n    forEach(el, function (el) {\r\n      return _one(el, clazz);\r\n    });\r\n  } else {\r\n    _one(el, clazz);\r\n  }\r\n}\r\nfunction createElement(tag, style, clazz, atts) {\r\n  return createElementNS(null, tag, style, clazz, atts);\r\n}\r\nfunction createElementNS(ns, tag, style, clazz, atts) {\r\n  var e = ns == null ? document.createElement(tag) : document.createElementNS(ns, tag);\r\n  var i;\r\n  style = style || {};\r\n  for (i in style) {\r\n    e.style[i] = style[i];\r\n  }\r\n  if (clazz) {\r\n    e.className = clazz;\r\n  }\r\n  atts = atts || {};\r\n  for (i in atts) {\r\n    e.setAttribute(i, \"\" + atts[i]);\r\n  }\r\n  return e;\r\n}\r\nfunction offsetRelativeToRoot(el) {\r\n  var box = el.getBoundingClientRect(),\r\n      body = document.body,\r\n      docElem = document.documentElement,\r\n  scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\r\n      scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\r\n  clientTop = docElem.clientTop || body.clientTop || 0,\r\n      clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n  top = box.top + scrollTop - clientTop,\r\n      left = box.left + scrollLeft - clientLeft;\r\n  return {\r\n    x: Math.round(left),\r\n    y: Math.round(top)\r\n  };\r\n}\r\nfunction offsetSize(el) {\r\n  return {\r\n    w: el.offsetWidth,\r\n    h: el.offsetHeight\r\n  };\r\n}\r\nfunction svgWidthHeightSize(el) {\r\n  try {\r\n    return {\r\n      w: parseFloat(el.width.baseVal.value),\r\n      h: parseFloat(el.height.baseVal.value)\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      w: 0,\r\n      h: 0\r\n    };\r\n  }\r\n}\r\nfunction svgXYPosition(el) {\r\n  try {\r\n    return {\r\n      x: parseFloat(el.x.baseVal.value),\r\n      y: parseFloat(el.y.baseVal.value)\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n  }\r\n}\r\nfunction getElementPosition(el, instance) {\r\n  var pc = instance.getContainer().getBoundingClientRect();\r\n  var ec = el.getBoundingClientRect();\r\n  var z = instance.currentZoom;\r\n  return {\r\n    x: (ec.left - pc.left) / z,\r\n    y: (ec.top - pc.top) / z\r\n  };\r\n}\r\nfunction getElementSize(el, instance) {\r\n  var ec = el.getBoundingClientRect();\r\n  var z = instance.currentZoom;\r\n  return {\r\n    w: ec.width / z,\r\n    h: ec.height / z\r\n  };\r\n}\r\nvar ElementTypes;\r\n(function (ElementTypes) {\r\n  ElementTypes[\"SVG\"] = \"SVG\";\r\n  ElementTypes[\"HTML\"] = \"HTML\";\r\n})(ElementTypes || (ElementTypes = {}));\r\nfunction getElementType(el) {\r\n  return el instanceof SVGElement ? ElementTypes.SVG : ElementTypes.HTML;\r\n}\r\nfunction isSVGElement(el) {\r\n  return getElementType(el) === ElementTypes.SVG;\r\n}\r\nfunction onDocumentReady(f) {\r\n  var _do = function _do() {\r\n    if (/complete|loaded|interactive/.test(document.readyState) && typeof document.body !== \"undefined\" && document.body != null) {\r\n      f();\r\n    } else {\r\n      setTimeout(_do, 9);\r\n    }\r\n  };\r\n  _do();\r\n}\r\n\r\nfunction cls() {\r\n  for (var _len = arguments.length, className = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    className[_key] = arguments[_key];\r\n  }\r\n  return className.map(function (cn) {\r\n    return \".\" + cn;\r\n  }).join(\",\");\r\n}\r\nfunction classList() {\r\n  for (var _len2 = arguments.length, className = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n    className[_key2] = arguments[_key2];\r\n  }\r\n  return className.join(\" \");\r\n}\r\nfunction att() {\r\n  for (var _len3 = arguments.length, attName = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n    attName[_key3] = arguments[_key3];\r\n  }\r\n  return attName.map(function (an) {\r\n    return \"[\" + an + \"]\";\r\n  }).join(\",\");\r\n}\r\nvar SOURCE = \"source\";\r\nvar TARGET = \"target\";\r\nvar BLOCK = \"block\";\r\nvar NONE = \"none\";\r\nvar SOURCE_INDEX = 0;\r\nvar TARGET_INDEX = 1;\r\nvar ABSOLUTE = \"absolute\";\r\nvar FIXED = \"fixed\";\r\nvar STATIC = \"static\";\r\nvar ATTRIBUTE_GROUP = \"data-jtk-group\";\r\nvar ATTRIBUTE_MANAGED = \"data-jtk-managed\";\r\nvar ATTRIBUTE_NOT_DRAGGABLE = \"data-jtk-not-draggable\";\r\nvar ATTRIBUTE_TABINDEX = \"tabindex\";\r\nvar ATTRIBUTE_SCOPE = \"data-jtk-scope\";\r\nvar ATTRIBUTE_SCOPE_PREFIX = ATTRIBUTE_SCOPE + \"-\";\r\nvar CHECK_CONDITION = \"checkCondition\";\r\nvar CHECK_DROP_ALLOWED = \"checkDropAllowed\";\r\nvar CLASS_CONNECTOR = \"jtk-connector\";\r\nvar CLASS_CONNECTOR_OUTLINE = \"jtk-connector-outline\";\r\nvar CLASS_CONNECTED = \"jtk-connected\";\r\nvar CLASS_ENDPOINT = \"jtk-endpoint\";\r\nvar CLASS_ENDPOINT_CONNECTED = \"jtk-endpoint-connected\";\r\nvar CLASS_ENDPOINT_FULL = \"jtk-endpoint-full\";\r\nvar CLASS_ENDPOINT_FLOATING = \"jtk-floating-endpoint\";\r\nvar CLASS_ENDPOINT_DROP_ALLOWED = \"jtk-endpoint-drop-allowed\";\r\nvar CLASS_ENDPOINT_DROP_FORBIDDEN = \"jtk-endpoint-drop-forbidden\";\r\nvar CLASS_ENDPOINT_ANCHOR_PREFIX = \"jtk-endpoint-anchor\";\r\nvar CLASS_GROUP_COLLAPSED = \"jtk-group-collapsed\";\r\nvar CLASS_GROUP_EXPANDED = \"jtk-group-expanded\";\r\nvar CLASS_OVERLAY = \"jtk-overlay\";\r\nvar EVENT_ANCHOR_CHANGED = \"anchor:changed\";\r\nvar EVENT_CONNECTION = \"connection\";\r\nvar EVENT_INTERNAL_CONNECTION = \"internal.connection\";\r\nvar EVENT_CONNECTION_DETACHED = \"connection:detach\";\r\nvar EVENT_CONNECTION_MOVED = \"connection:move\";\r\nvar EVENT_CONTAINER_CHANGE = \"container:change\";\r\nvar EVENT_ENDPOINT_REPLACED = \"endpoint:replaced\";\r\nvar EVENT_INTERNAL_ENDPOINT_UNREGISTERED = \"internal.endpoint:unregistered\";\r\nvar EVENT_INTERNAL_CONNECTION_DETACHED = \"internal.connection:detached\";\r\nvar EVENT_MANAGE_ELEMENT = \"element:manage\";\r\nvar EVENT_GROUP_ADDED = \"group:added\";\r\nvar EVENT_GROUP_COLLAPSE = \"group:collapse\";\r\nvar EVENT_GROUP_EXPAND = \"group:expand\";\r\nvar EVENT_GROUP_MEMBER_ADDED = \"group:member:added\";\r\nvar EVENT_GROUP_MEMBER_REMOVED = \"group:member:removed\";\r\nvar EVENT_GROUP_REMOVED = \"group:removed\";\r\nvar EVENT_MAX_CONNECTIONS = \"maxConnections\";\r\nvar EVENT_NESTED_GROUP_ADDED = \"group:nested:added\";\r\nvar EVENT_NESTED_GROUP_REMOVED = \"group:nested:removed\";\r\nvar EVENT_UNMANAGE_ELEMENT = \"element:unmanage\";\r\nvar EVENT_ZOOM = \"zoom\";\r\nvar IS_DETACH_ALLOWED = \"isDetachAllowed\";\r\nvar INTERCEPT_BEFORE_DRAG = \"beforeDrag\";\r\nvar INTERCEPT_BEFORE_DROP = \"beforeDrop\";\r\nvar INTERCEPT_BEFORE_DETACH = \"beforeDetach\";\r\nvar INTERCEPT_BEFORE_START_DETACH = \"beforeStartDetach\";\r\nvar SELECTOR_MANAGED_ELEMENT = att(ATTRIBUTE_MANAGED);\r\nvar ERROR_SOURCE_ENDPOINT_FULL = \"Cannot establish connection: source endpoint is full\";\r\nvar ERROR_TARGET_ENDPOINT_FULL = \"Cannot establish connection: target endpoint is full\";\r\nvar ERROR_SOURCE_DOES_NOT_EXIST = \"Cannot establish connection: source does not exist\";\r\nvar ERROR_TARGET_DOES_NOT_EXIST = \"Cannot establish connection: target does not exist\";\r\nvar KEY_CONNECTION_OVERLAYS = \"connectionOverlays\";\r\n\r\nvar svgAttributeMap = {\r\n  \"stroke-linejoin\": \"stroke-linejoin\",\r\n  \"stroke-dashoffset\": \"stroke-dashoffset\",\r\n  \"stroke-linecap\": \"stroke-linecap\"\r\n};\r\nvar STROKE_DASHARRAY = \"stroke-dasharray\";\r\nvar DASHSTYLE = \"dashstyle\";\r\nvar FILL = \"fill\";\r\nvar STROKE = \"stroke\";\r\nvar STROKE_WIDTH = \"stroke-width\";\r\nvar LINE_WIDTH = \"strokeWidth\";\r\nvar ELEMENT_SVG = \"svg\";\r\nvar ELEMENT_PATH = \"path\";\r\nvar ns = {\r\n  svg: \"http://www.w3.org/2000/svg\"\r\n};\r\nfunction _attr(node, attributes) {\r\n  for (var i in attributes) {\r\n    node.setAttribute(i, \"\" + attributes[i]);\r\n  }\r\n}\r\nfunction _node(name, attributes) {\r\n  attributes = attributes || {};\r\n  attributes.version = \"1.1\";\r\n  attributes.xmlns = ns.svg;\r\n  return createElementNS(ns.svg, name, null, null, attributes);\r\n}\r\nfunction _pos(d) {\r\n  return \"position:absolute;left:\" + d[0] + \"px;top:\" + d[1] + \"px\";\r\n}\r\nfunction _applyStyles(parent, node, style) {\r\n  node.setAttribute(FILL, style.fill ? style.fill : NONE);\r\n  node.setAttribute(STROKE, style.stroke ? style.stroke : NONE);\r\n  if (style.strokeWidth) {\r\n    node.setAttribute(STROKE_WIDTH, style.strokeWidth);\r\n  }\r\n  if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {\r\n    var sep = style[DASHSTYLE].indexOf(\",\") === -1 ? \" \" : \",\",\r\n        parts = style[DASHSTYLE].split(sep),\r\n        styleToUse = \"\";\r\n    forEach(parts, function (p) {\r\n      styleToUse += Math.floor(p * style.strokeWidth) + sep;\r\n    });\r\n    node.setAttribute(STROKE_DASHARRAY, styleToUse);\r\n  } else if (style[STROKE_DASHARRAY]) {\r\n    node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);\r\n  }\r\n  for (var i in svgAttributeMap) {\r\n    if (style[i]) {\r\n      node.setAttribute(svgAttributeMap[i], style[i]);\r\n    }\r\n  }\r\n}\r\nfunction _appendAtIndex(svg, path, idx) {\r\n  if (svg.childNodes.length > idx) {\r\n    svg.insertBefore(path, svg.childNodes[idx]);\r\n  } else {\r\n    svg.appendChild(path);\r\n  }\r\n}\r\nvar svg = {\r\n  attr: _attr,\r\n  node: _node,\r\n  ns: ns\r\n};\r\n\r\nfunction compoundEvent(stem, event, subevent) {\r\n  var a = [stem, event];\r\n  if (subevent) {\r\n    a.push(subevent);\r\n  }\r\n  return a.join(\":\");\r\n}\r\nvar ATTRIBUTE_CONTAINER = \"data-jtk-container\";\r\nvar ATTRIBUTE_GROUP_CONTENT = \"data-jtk-group-content\";\r\nvar ATTRIBUTE_JTK_ENABLED = \"data-jtk-enabled\";\r\nvar ATTRIBUTE_JTK_SCOPE = \"data-jtk-scope\";\r\nvar ENDPOINT = \"endpoint\";\r\nvar ELEMENT = \"element\";\r\nvar CONNECTION = \"connection\";\r\nvar ELEMENT_DIV = \"div\";\r\nvar EVENT_CLICK = \"click\";\r\nvar EVENT_CONTEXTMENU = \"contextmenu\";\r\nvar EVENT_DBL_CLICK = \"dblclick\";\r\nvar EVENT_DBL_TAP = \"dbltap\";\r\nvar EVENT_FOCUS = \"focus\";\r\nvar EVENT_MOUSEDOWN = \"mousedown\";\r\nvar EVENT_MOUSEENTER = \"mouseenter\";\r\nvar EVENT_MOUSEEXIT = \"mouseexit\";\r\nvar EVENT_MOUSEMOVE = \"mousemove\";\r\nvar EVENT_MOUSEUP = \"mouseup\";\r\nvar EVENT_MOUSEOUT = \"mouseout\";\r\nvar EVENT_MOUSEOVER = \"mouseover\";\r\nvar EVENT_TAP = \"tap\";\r\nvar EVENT_TOUCHSTART = \"touchstart\";\r\nvar EVENT_TOUCHEND = \"touchend\";\r\nvar EVENT_TOUCHMOVE = \"touchmove\";\r\nvar EVENT_DRAG_MOVE = \"drag:move\";\r\nvar EVENT_DRAG_STOP = \"drag:stop\";\r\nvar EVENT_DRAG_START = \"drag:start\";\r\nvar EVENT_REVERT = \"revert\";\r\nvar EVENT_CONNECTION_ABORT = \"connection:abort\";\r\nvar EVENT_CONNECTION_DRAG = \"connection:drag\";\r\nvar EVENT_ELEMENT_CLICK = compoundEvent(ELEMENT, EVENT_CLICK);\r\nvar EVENT_ELEMENT_DBL_CLICK = compoundEvent(ELEMENT, EVENT_DBL_CLICK);\r\nvar EVENT_ELEMENT_DBL_TAP = compoundEvent(ELEMENT, EVENT_DBL_TAP);\r\nvar EVENT_ELEMENT_MOUSE_OUT = compoundEvent(ELEMENT, EVENT_MOUSEOUT);\r\nvar EVENT_ELEMENT_MOUSE_OVER = compoundEvent(ELEMENT, EVENT_MOUSEOVER);\r\nvar EVENT_ELEMENT_MOUSE_MOVE = compoundEvent(ELEMENT, EVENT_MOUSEMOVE);\r\nvar EVENT_ELEMENT_MOUSE_UP = compoundEvent(ELEMENT, EVENT_MOUSEUP);\r\nvar EVENT_ELEMENT_MOUSE_DOWN = compoundEvent(ELEMENT, EVENT_MOUSEDOWN);\r\nvar EVENT_ELEMENT_CONTEXTMENU = compoundEvent(ELEMENT, EVENT_CONTEXTMENU);\r\nvar EVENT_ELEMENT_TAP = compoundEvent(ELEMENT, EVENT_TAP);\r\nvar EVENT_ENDPOINT_CLICK = compoundEvent(ENDPOINT, EVENT_CLICK);\r\nvar EVENT_ENDPOINT_DBL_CLICK = compoundEvent(ENDPOINT, EVENT_DBL_CLICK);\r\nvar EVENT_ENDPOINT_DBL_TAP = compoundEvent(ENDPOINT, EVENT_DBL_TAP);\r\nvar EVENT_ENDPOINT_MOUSEOUT = compoundEvent(ENDPOINT, EVENT_MOUSEOUT);\r\nvar EVENT_ENDPOINT_MOUSEOVER = compoundEvent(ENDPOINT, EVENT_MOUSEOVER);\r\nvar EVENT_ENDPOINT_MOUSEUP = compoundEvent(ENDPOINT, EVENT_MOUSEUP);\r\nvar EVENT_ENDPOINT_MOUSEDOWN = compoundEvent(ENDPOINT, EVENT_MOUSEDOWN);\r\nvar EVENT_ENDPOINT_TAP = compoundEvent(ENDPOINT, EVENT_TAP);\r\nvar EVENT_CONNECTION_CLICK = compoundEvent(CONNECTION, EVENT_CLICK);\r\nvar EVENT_CONNECTION_DBL_CLICK = compoundEvent(CONNECTION, EVENT_DBL_CLICK);\r\nvar EVENT_CONNECTION_DBL_TAP = compoundEvent(CONNECTION, EVENT_DBL_TAP);\r\nvar EVENT_CONNECTION_MOUSEOUT = compoundEvent(CONNECTION, EVENT_MOUSEOUT);\r\nvar EVENT_CONNECTION_MOUSEOVER = compoundEvent(CONNECTION, EVENT_MOUSEOVER);\r\nvar EVENT_CONNECTION_MOUSEUP = compoundEvent(CONNECTION, EVENT_MOUSEUP);\r\nvar EVENT_CONNECTION_MOUSEDOWN = compoundEvent(CONNECTION, EVENT_MOUSEDOWN);\r\nvar EVENT_CONNECTION_CONTEXTMENU = compoundEvent(CONNECTION, EVENT_CONTEXTMENU);\r\nvar EVENT_CONNECTION_TAP = compoundEvent(CONNECTION, EVENT_TAP);\r\nvar PROPERTY_POSITION = \"position\";\r\nvar SELECTOR_CONNECTOR = cls(CLASS_CONNECTOR);\r\nvar SELECTOR_ENDPOINT = cls(CLASS_ENDPOINT);\r\nvar SELECTOR_GROUP = att(ATTRIBUTE_GROUP);\r\nvar SELECTOR_GROUP_CONTAINER = att(ATTRIBUTE_GROUP_CONTENT);\r\nvar SELECTOR_OVERLAY = cls(CLASS_OVERLAY);\r\n\r\nvar PerimeterAnchorShapes;\r\n(function (PerimeterAnchorShapes) {\r\n  PerimeterAnchorShapes[\"Circle\"] = \"Circle\";\r\n  PerimeterAnchorShapes[\"Ellipse\"] = \"Ellipse\";\r\n  PerimeterAnchorShapes[\"Triangle\"] = \"Triangle\";\r\n  PerimeterAnchorShapes[\"Diamond\"] = \"Diamond\";\r\n  PerimeterAnchorShapes[\"Rectangle\"] = \"Rectangle\";\r\n  PerimeterAnchorShapes[\"Square\"] = \"Square\";\r\n})(PerimeterAnchorShapes || (PerimeterAnchorShapes = {}));\r\nvar AnchorLocations;\r\n(function (AnchorLocations) {\r\n  AnchorLocations[\"Assign\"] = \"Assign\";\r\n  AnchorLocations[\"AutoDefault\"] = \"AutoDefault\";\r\n  AnchorLocations[\"Bottom\"] = \"Bottom\";\r\n  AnchorLocations[\"BottomLeft\"] = \"BottomLeft\";\r\n  AnchorLocations[\"BottomRight\"] = \"BottomRight\";\r\n  AnchorLocations[\"Center\"] = \"Center\";\r\n  AnchorLocations[\"Continuous\"] = \"Continuous\";\r\n  AnchorLocations[\"ContinuousBottom\"] = \"ContinuousBottom\";\r\n  AnchorLocations[\"ContinuousLeft\"] = \"ContinuousLeft\";\r\n  AnchorLocations[\"ContinuousRight\"] = \"ContinuousRight\";\r\n  AnchorLocations[\"ContinuousTop\"] = \"ContinuousTop\";\r\n  AnchorLocations[\"ContinuousLeftRight\"] = \"ContinuousLeftRight\";\r\n  AnchorLocations[\"ContinuousTopBottom\"] = \"ContinuousTopBottom\";\r\n  AnchorLocations[\"Left\"] = \"Left\";\r\n  AnchorLocations[\"Perimeter\"] = \"Perimeter\";\r\n  AnchorLocations[\"Right\"] = \"Right\";\r\n  AnchorLocations[\"Top\"] = \"Top\";\r\n  AnchorLocations[\"TopLeft\"] = \"TopLeft\";\r\n  AnchorLocations[\"TopRight\"] = \"TopRight\";\r\n})(AnchorLocations || (AnchorLocations = {}));\r\n\r\nfunction noSuchPoint() {\r\n  return {\r\n    d: Infinity,\r\n    x: null,\r\n    y: null,\r\n    l: null,\r\n    x1: null,\r\n    y1: null,\r\n    x2: null,\r\n    y2: null\r\n  };\r\n}\r\nfunction EMPTY_BOUNDS() {\r\n  return {\r\n    xmin: Infinity,\r\n    xmax: -Infinity,\r\n    ymin: Infinity,\r\n    ymax: -Infinity\r\n  };\r\n}\r\nvar AbstractSegment = function () {\r\n  function AbstractSegment(params) {\r\n    _classCallCheck(this, AbstractSegment);\r\n    this.params = params;\r\n    _defineProperty(this, \"x1\", void 0);\r\n    _defineProperty(this, \"x2\", void 0);\r\n    _defineProperty(this, \"y1\", void 0);\r\n    _defineProperty(this, \"y2\", void 0);\r\n    _defineProperty(this, \"extents\", EMPTY_BOUNDS());\r\n    _defineProperty(this, \"type\", void 0);\r\n    this.x1 = params.x1;\r\n    this.y1 = params.y1;\r\n    this.x2 = params.x2;\r\n    this.y2 = params.y2;\r\n  }\r\n  _createClass(AbstractSegment, [{\r\n    key: \"findClosestPointOnPath\",\r\n    value: function findClosestPointOnPath(x, y) {\r\n      return noSuchPoint();\r\n    }\r\n  }, {\r\n    key: \"lineIntersection\",\r\n    value: function lineIntersection(x1, y1, x2, y2) {\r\n      return [];\r\n    }\r\n  }, {\r\n    key: \"boxIntersection\",\r\n    value: function boxIntersection(x, y, w, h) {\r\n      var a = [];\r\n      a.push.apply(a, this.lineIntersection(x, y, x + w, y));\r\n      a.push.apply(a, this.lineIntersection(x + w, y, x + w, y + h));\r\n      a.push.apply(a, this.lineIntersection(x + w, y + h, x, y + h));\r\n      a.push.apply(a, this.lineIntersection(x, y + h, x, y));\r\n      return a;\r\n    }\r\n  }, {\r\n    key: \"boundingBoxIntersection\",\r\n    value: function boundingBoxIntersection(box) {\r\n      return this.boxIntersection(box.x, box.y, box.w, box.h);\r\n    }\r\n  }]);\r\n  return AbstractSegment;\r\n}();\r\n\r\nvar UNDEFINED = \"undefined\";\r\nvar DEFAULT = \"default\";\r\nvar TRUE$1 = \"true\";\r\nvar FALSE$1 = \"false\";\r\nvar WILDCARD = \"*\";\r\n\r\nvar _touchMap, _tapProfiles2;\r\nfunction _touch(target, pageX, pageY, screenX, screenY, clientX, clientY) {\r\n  return new Touch({\r\n    target: target,\r\n    identifier: uuid(),\r\n    pageX: pageX,\r\n    pageY: pageY,\r\n    screenX: screenX,\r\n    screenY: screenY,\r\n    clientX: clientX || screenX,\r\n    clientY: clientY || screenY\r\n  });\r\n}\r\nfunction _touchList() {\r\n  var list = [];\r\n  list.push.apply(list, arguments);\r\n  list.item = function (index) {\r\n    return this[index];\r\n  };\r\n  return list;\r\n}\r\nfunction _touchAndList(target, pageX, pageY, screenX, screenY, clientX, clientY) {\r\n  return _touchList(_touch(target, pageX, pageY, screenX, screenY, clientX, clientY));\r\n}\r\nfunction matchesSelector(el, selector, ctx) {\r\n  ctx = ctx || el.parentNode;\r\n  var possibles = ctx.querySelectorAll(selector);\r\n  for (var i = 0; i < possibles.length; i++) {\r\n    if (possibles[i] === el) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction _t(e) {\r\n  return e.srcElement || e.target;\r\n}\r\nfunction _pi(e, target, obj, doCompute) {\r\n  if (!doCompute) {\r\n    return {\r\n      path: [target],\r\n      end: 1\r\n    };\r\n  } else {\r\n    var path = e.composedPath ? e.composedPath() : e.path;\r\n    if (typeof path !== \"undefined\" && path.indexOf) {\r\n      return {\r\n        path: path,\r\n        end: path.indexOf(obj)\r\n      };\r\n    } else {\r\n      var out = {\r\n        path: [],\r\n        end: -1\r\n      },\r\n          _one = function _one(el) {\r\n        out.path.push(el);\r\n        if (el === obj) {\r\n          out.end = out.path.length - 1;\r\n        } else if (el.parentNode != null) {\r\n          _one(el.parentNode);\r\n        }\r\n      };\r\n      _one(target);\r\n      return out;\r\n    }\r\n  }\r\n}\r\nfunction _d(l, fn) {\r\n  var i = 0,\r\n      j;\r\n  for (i = 0, j = l.length; i < j; i++) {\r\n    if (l[i][0] === fn) {\r\n      break;\r\n    }\r\n  }\r\n  if (i < l.length) {\r\n    l.splice(i, 1);\r\n  }\r\n}\r\nvar guid = 1;\r\nvar forceTouchEvents = false;\r\nvar forceMouseEvents = false;\r\nfunction isTouchDevice() {\r\n  return forceTouchEvents || \"ontouchstart\" in document.documentElement || navigator.maxTouchPoints != null && navigator.maxTouchPoints > 0;\r\n}\r\nfunction isMouseDevice() {\r\n  return forceMouseEvents || \"onmousedown\" in document.documentElement;\r\n}\r\nvar touchMap = (_touchMap = {}, _defineProperty(_touchMap, EVENT_MOUSEDOWN, EVENT_TOUCHSTART), _defineProperty(_touchMap, EVENT_MOUSEUP, EVENT_TOUCHEND), _defineProperty(_touchMap, EVENT_MOUSEMOVE, EVENT_TOUCHMOVE), _touchMap);\r\nvar PAGE = \"page\";\r\nvar SCREEN = \"screen\";\r\nvar CLIENT = \"client\";\r\nfunction _genLoc(e, prefix) {\r\n  if (e == null) return {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  var ts = touches(e),\r\n      t = getTouch(ts, 0);\r\n  return {\r\n    x: t[prefix + \"X\"],\r\n    y: t[prefix + \"Y\"]\r\n  };\r\n}\r\nfunction pageLocation(e) {\r\n  return _genLoc(e, PAGE);\r\n}\r\nfunction screenLocation(e) {\r\n  return _genLoc(e, SCREEN);\r\n}\r\nfunction clientLocation(e) {\r\n  return _genLoc(e, CLIENT);\r\n}\r\nfunction getTouch(touches, idx) {\r\n  return touches.item ? touches.item(idx) : touches[idx];\r\n}\r\nfunction touches(e) {\r\n  return e.touches && e.touches.length > 0 ? e.touches : e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches : e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches : [e];\r\n}\r\nfunction touchCount(e) {\r\n  return touches(e).length;\r\n}\r\nfunction getPageLocation(e) {\r\n  if (e == null) {\r\n    return {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n  } else if (e.pageX !== null) {\r\n    return {\r\n      x: e.pageX,\r\n      y: e.pageY\r\n    };\r\n  } else {\r\n    var ts = touches(e),\r\n        t = getTouch(ts, 0);\r\n    if (t != null && t.pageX != null) {\r\n      return {\r\n        x: t.pageX,\r\n        y: t.pageY\r\n      };\r\n    } else {\r\n      return {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n    }\r\n  }\r\n}\r\nfunction _bind(obj, type, fn, originalFn, options) {\r\n  _store(obj, type, fn);\r\n  originalFn.__tauid = fn.__tauid;\r\n  if (obj.addEventListener) {\r\n    obj.addEventListener(type, fn, false, options);\r\n  } else if (obj.attachEvent) {\r\n    var key = type + fn.__tauid;\r\n    obj[\"e\" + key] = fn;\r\n    obj[key] = function () {\r\n      obj[\"e\" + key] && obj[\"e\" + key](window.event);\r\n    };\r\n    obj.attachEvent(\"on\" + type, obj[key]);\r\n  }\r\n}\r\nfunction _unbind(obj, type, fn) {\r\n  var _this = this;\r\n  if (fn == null) return;\r\n  _each$1(obj, function (_el) {\r\n    _unstore(_el, type, fn);\r\n    if (fn.__tauid != null) {\r\n      if (_el.removeEventListener) {\r\n        _el.removeEventListener(type, fn, false);\r\n        if (isTouchDevice() && touchMap[type]) _el.removeEventListener(touchMap[type], fn, false);\r\n      } else if (_this.detachEvent) {\r\n        var key = type + fn.__tauid;\r\n        _el[key] && _el.detachEvent(\"on\" + type, _el[key]);\r\n        _el[key] = null;\r\n        _el[\"e\" + key] = null;\r\n      }\r\n    }\r\n    if (fn.__taTouchProxy) {\r\n      _unbind(obj, fn.__taTouchProxy[1], fn.__taTouchProxy[0]);\r\n    }\r\n  });\r\n}\r\nfunction _each$1(obj, fn) {\r\n  if (obj == null) return;\r\n  var entries = typeof obj === \"string\" ? document.querySelectorAll(obj) : obj.length != null ? obj : [obj];\r\n  for (var i = 0; i < entries.length; i++) {\r\n    fn(entries[i]);\r\n  }\r\n}\r\nfunction _store(obj, event, fn) {\r\n  var g = guid++;\r\n  obj.__ta = obj.__ta || {};\r\n  obj.__ta[event] = obj.__ta[event] || {};\r\n  obj.__ta[event][g] = fn;\r\n  fn.__tauid = g;\r\n  return g;\r\n}\r\nfunction _unstore(obj, event, fn) {\r\n  obj.__ta && obj.__ta[event] && delete obj.__ta[event][fn.__tauid];\r\n  if (fn.__taExtra) {\r\n    for (var i = 0; i < fn.__taExtra.length; i++) {\r\n      _unbind(obj, fn.__taExtra[i][0], fn.__taExtra[i][1]);\r\n    }\r\n    fn.__taExtra.length = 0;\r\n  }\r\n  fn.__taUnstore && fn.__taUnstore();\r\n}\r\nvar NOT_SELECTOR_REGEX = /:not\\(([^)]+)\\)/;\r\nfunction _curryChildFilter(children, obj, fn, evt) {\r\n  if (children == null) {\r\n    return fn;\r\n  } else {\r\n    var c = children.split(\",\"),\r\n        pc = [],\r\n        nc = [];\r\n    forEach(c, function (sel) {\r\n      var m = sel.match(NOT_SELECTOR_REGEX);\r\n      if (m != null) {\r\n        nc.push(m[1]);\r\n      } else {\r\n        pc.push(sel);\r\n      }\r\n    });\r\n    if (nc.length > 0 && pc.length === 0) {\r\n      pc.push(WILDCARD);\r\n    }\r\n    var _fn = function _fn(e) {\r\n      _fn.__tauid = fn.__tauid;\r\n      var t = _t(e);\r\n      var done = false;\r\n      var target = t;\r\n      var pathInfo = _pi(e, t, obj, children != null);\r\n      if (pathInfo.end != -1) {\r\n        for (var p = 0; !done && p < pathInfo.end; p++) {\r\n          target = pathInfo.path[p];\r\n          for (var i = 0; i < nc.length; i++) {\r\n            if (matchesSelector(target, nc[i], obj)) {\r\n              return;\r\n            }\r\n          }\r\n          for (var _i = 0; !done && _i < pc.length; _i++) {\r\n            if (matchesSelector(target, pc[_i], obj)) {\r\n              fn.apply(target, [e, target]);\r\n              done = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n    registerExtraFunction(fn, evt, _fn);\r\n    return _fn;\r\n  }\r\n}\r\nfunction registerExtraFunction(fn, evt, newFn) {\r\n  fn.__taExtra = fn.__taExtra || [];\r\n  fn.__taExtra.push([evt, newFn]);\r\n}\r\nvar DefaultHandler = function DefaultHandler(obj, evt, fn, children, options) {\r\n  if (isTouchDevice() && touchMap[evt]) {\r\n    var tfn = _curryChildFilter(children, obj, fn, touchMap[evt]);\r\n    _bind(obj, touchMap[evt], tfn, fn, options);\r\n  }\r\n  if (evt === EVENT_FOCUS && obj.getAttribute(ATTRIBUTE_TABINDEX) == null) {\r\n    obj.setAttribute(ATTRIBUTE_TABINDEX, \"1\");\r\n  }\r\n  _bind(obj, evt, _curryChildFilter(children, obj, fn, evt), fn, options);\r\n};\r\nvar _tapProfiles = (_tapProfiles2 = {}, _defineProperty(_tapProfiles2, EVENT_TAP, {\r\n  touches: 1,\r\n  taps: 1\r\n}), _defineProperty(_tapProfiles2, EVENT_DBL_TAP, {\r\n  touches: 1,\r\n  taps: 2\r\n}), _defineProperty(_tapProfiles2, EVENT_CONTEXTMENU, {\r\n  touches: 2,\r\n  taps: 1\r\n}), _tapProfiles2);\r\nfunction meeHelper(type, evt, obj, target) {\r\n  for (var i in obj.__tamee[type]) {\r\n    if (obj.__tamee[type].hasOwnProperty(i)) {\r\n      obj.__tamee[type][i].apply(target, [evt]);\r\n    }\r\n  }\r\n}\r\nvar TapHandler = function () {\r\n  function TapHandler() {\r\n    _classCallCheck(this, TapHandler);\r\n  }\r\n  _createClass(TapHandler, null, [{\r\n    key: \"generate\",\r\n    value: function generate(clickThreshold, dblClickThreshold) {\r\n      return function (obj, evt, fn, children) {\r\n        if (evt == EVENT_CONTEXTMENU && isMouseDevice()) DefaultHandler(obj, evt, fn, children);else {\r\n          if (obj.__taTapHandler == null) {\r\n            var tt = obj.__taTapHandler = {\r\n              tap: [],\r\n              dbltap: [],\r\n              down: false,\r\n              taps: 0,\r\n              downSelectors: []\r\n            };\r\n            var down = function down(e) {\r\n              var target = _t(e),\r\n                  pathInfo = _pi(e, target, obj, children != null),\r\n                  finished = false;\r\n              for (var p = 0; p < pathInfo.end; p++) {\r\n                if (finished) return;\r\n                target = pathInfo.path[p];\r\n                for (var i = 0; i < tt.downSelectors.length; i++) {\r\n                  if (tt.downSelectors[i] == null || matchesSelector(target, tt.downSelectors[i], obj)) {\r\n                    tt.down = true;\r\n                    setTimeout(clearSingle, clickThreshold);\r\n                    setTimeout(clearDouble, dblClickThreshold);\r\n                    finished = true;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            },\r\n                up = function up(e) {\r\n              if (tt.down) {\r\n                var target = _t(e),\r\n                    currentTarget,\r\n                    pathInfo;\r\n                tt.taps++;\r\n                var tc = touchCount(e);\r\n                for (var eventId in _tapProfiles) {\r\n                  if (_tapProfiles.hasOwnProperty(eventId)) {\r\n                    var p = _tapProfiles[eventId];\r\n                    if (p.touches === tc && (p.taps === 1 || p.taps === tt.taps)) {\r\n                      for (var i = 0; i < tt[eventId].length; i++) {\r\n                        pathInfo = _pi(e, target, obj, tt[eventId][i][1] != null);\r\n                        for (var pLoop = 0; pLoop < pathInfo.end; pLoop++) {\r\n                          currentTarget = pathInfo.path[pLoop];\r\n                          if (tt[eventId][i][1] == null || matchesSelector(currentTarget, tt[eventId][i][1], obj)) {\r\n                            tt[eventId][i][0].apply(currentTarget, [e, currentTarget]);\r\n                            break;\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n                clearSingle = function clearSingle() {\r\n              tt.down = false;\r\n            },\r\n                clearDouble = function clearDouble() {\r\n              tt.taps = 0;\r\n            };\r\n            obj.__taTapHandler.downHandler = down;\r\n            obj.__taTapHandler.upHandler = up;\r\n            DefaultHandler(obj, EVENT_MOUSEDOWN, down);\r\n            DefaultHandler(obj, EVENT_MOUSEUP, up);\r\n          }\r\n          obj.__taTapHandler.downSelectors.push(children);\r\n          obj.__taTapHandler[evt].push([fn, children]);\r\n          fn.__taUnstore = function () {\r\n            if (obj.__taTapHandler != null) {\r\n              removeWithFunction(obj.__taTapHandler.downSelectors, function (ds) {\r\n                return ds === children;\r\n              });\r\n              _d(obj.__taTapHandler[evt], fn);\r\n              if (obj.__taTapHandler.downSelectors.length === 0) {\r\n                _unbind(obj, EVENT_MOUSEDOWN, obj.__taTapHandler.downHandler);\r\n                _unbind(obj, EVENT_MOUSEUP, obj.__taTapHandler.upHandler);\r\n                delete obj.__taTapHandler;\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    }\r\n  }]);\r\n  return TapHandler;\r\n}();\r\nvar MouseEnterExitHandler = function () {\r\n  function MouseEnterExitHandler() {\r\n    _classCallCheck(this, MouseEnterExitHandler);\r\n  }\r\n  _createClass(MouseEnterExitHandler, null, [{\r\n    key: \"generate\",\r\n    value: function generate() {\r\n      var activeElements = [];\r\n      return function (obj, evt, fn, children) {\r\n        if (!obj.__tamee) {\r\n          obj.__tamee = {\r\n            over: false,\r\n            mouseenter: [],\r\n            mouseexit: []\r\n          };\r\n          var over = function over(e) {\r\n            var t = _t(e);\r\n            if (children == null && t == obj && !obj.__tamee.over || matchesSelector(t, children, obj) && (t.__tamee == null || !t.__tamee.over)) {\r\n              meeHelper(EVENT_MOUSEENTER, e, obj, t);\r\n              t.__tamee = t.__tamee || {};\r\n              t.__tamee.over = true;\r\n              activeElements.push(t);\r\n            }\r\n          },\r\n              out = function out(e) {\r\n            var t = _t(e);\r\n            for (var i = 0; i < activeElements.length; i++) {\r\n              if (t == activeElements[i] && !matchesSelector(e.relatedTarget || e.toElement, \"*\", t)) {\r\n                t.__tamee.over = false;\r\n                activeElements.splice(i, 1);\r\n                meeHelper(EVENT_MOUSEEXIT, e, obj, t);\r\n              }\r\n            }\r\n          };\r\n          _bind(obj, EVENT_MOUSEOVER, _curryChildFilter(children, obj, over, EVENT_MOUSEOVER), over);\r\n          _bind(obj, EVENT_MOUSEOUT, _curryChildFilter(children, obj, out, EVENT_MOUSEOUT), out);\r\n        }\r\n        fn.__taUnstore = function () {\r\n          delete obj.__tamee[evt][fn.__tauid];\r\n        };\r\n        _store(obj, evt, fn);\r\n        obj.__tamee[evt][fn.__tauid] = fn;\r\n      };\r\n    }\r\n  }]);\r\n  return MouseEnterExitHandler;\r\n}();\r\nvar EventManager = function () {\r\n  function EventManager(params) {\r\n    _classCallCheck(this, EventManager);\r\n    _defineProperty(this, \"clickThreshold\", void 0);\r\n    _defineProperty(this, \"dblClickThreshold\", void 0);\r\n    _defineProperty(this, \"tapHandler\", void 0);\r\n    _defineProperty(this, \"mouseEnterExitHandler\", void 0);\r\n    params = params || {};\r\n    this.clickThreshold = params.clickThreshold || 250;\r\n    this.dblClickThreshold = params.dblClickThreshold || 450;\r\n    this.mouseEnterExitHandler = MouseEnterExitHandler.generate();\r\n    this.tapHandler = TapHandler.generate(this.clickThreshold, this.dblClickThreshold);\r\n  }\r\n  _createClass(EventManager, [{\r\n    key: \"_doBind\",\r\n    value: function _doBind(el, evt, fn, children, options) {\r\n      if (fn == null) return;\r\n      var jel = el;\r\n      if (evt === EVENT_TAP || evt === EVENT_DBL_TAP || evt === EVENT_CONTEXTMENU) {\r\n        this.tapHandler(jel, evt, fn, children, options);\r\n      } else if (evt === EVENT_MOUSEENTER || evt == EVENT_MOUSEEXIT) this.mouseEnterExitHandler(jel, evt, fn, children, options);else {\r\n        DefaultHandler(jel, evt, fn, children, options);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"on\",\r\n    value: function on(el, event, children, fn, options) {\r\n      var _c = fn == null ? null : children,\r\n          _f = fn == null ? children : fn;\r\n      this._doBind(el, event, _f, _c, options);\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"off\",\r\n    value: function off(el, event, fn) {\r\n      _unbind(el, event, fn);\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"trigger\",\r\n    value: function trigger(el, event, originalEvent, payload, detail) {\r\n      var originalIsMouse = isMouseDevice() && (typeof MouseEvent === \"undefined\" || originalEvent == null || originalEvent.constructor === MouseEvent);\r\n      var eventToBind = isTouchDevice() && !isMouseDevice() && touchMap[event] ? touchMap[event] : event,\r\n          bindingAMouseEvent = !(isTouchDevice() && !isMouseDevice() && touchMap[event]);\r\n      var pl = pageLocation(originalEvent),\r\n          sl = screenLocation(originalEvent),\r\n          cl = clientLocation(originalEvent);\r\n      _each$1(el, function (_el) {\r\n        var evt;\r\n        originalEvent = originalEvent || {\r\n          screenX: sl.x,\r\n          screenY: sl.y,\r\n          clientX: cl.x,\r\n          clientY: cl.y\r\n        };\r\n        var _decorate = function _decorate(_evt) {\r\n          if (payload) {\r\n            _evt.payload = payload;\r\n          }\r\n        };\r\n        var eventGenerators = {\r\n          \"TouchEvent\": function TouchEvent(evt) {\r\n            var touchList = _touchAndList(_el, pl.x, pl.y, sl.x, sl.y, cl.x, cl.y),\r\n                init = evt.initTouchEvent || evt.initEvent;\r\n            init(eventToBind, true, true, window, null, sl.x, sl.y, cl.x, cl.y, false, false, false, false, touchList, touchList, touchList, 1, 0);\r\n          },\r\n          \"MouseEvents\": function MouseEvents(evt) {\r\n            evt.initMouseEvent(eventToBind, true, true, window, detail == null ? 1 : detail, sl.x, sl.y, cl.x, cl.y, false, false, false, false, 1, _el);\r\n          }\r\n        };\r\n        var ite = !bindingAMouseEvent && !originalIsMouse && isTouchDevice() && touchMap[event],\r\n            evtName = ite ? \"TouchEvent\" : \"MouseEvents\";\r\n        evt = document.createEvent(evtName);\r\n        eventGenerators[evtName](evt);\r\n        _decorate(evt);\r\n        _el.dispatchEvent(evt);\r\n      });\r\n      return this;\r\n    }\r\n  }]);\r\n  return EventManager;\r\n}();\r\nfunction setForceTouchEvents(value) {\r\n  forceTouchEvents = value;\r\n}\r\nfunction setForceMouseEvents(value) {\r\n  forceMouseEvents = value;\r\n}\r\n\r\nvar segmentMultipliers = [null, [1, -1], [1, 1], [-1, 1], [-1, -1]];\r\nvar inverseSegmentMultipliers = [null, [-1, -1], [-1, 1], [1, 1], [1, -1]];\r\nvar TWO_PI = 2 * Math.PI;\r\nfunction add(p1, p2) {\r\n  return {\r\n    x: p1.x + p2.x,\r\n    y: p1.y + p2.y\r\n  };\r\n}\r\nfunction subtract(p1, p2) {\r\n  return {\r\n    x: p1.x - p2.x,\r\n    y: p1.y - p2.y\r\n  };\r\n}\r\nfunction gradient(p1, p2) {\r\n  if (p2.x === p1.x) return p2.y > p1.y ? Infinity : -Infinity;else if (p2.y === p1.y) return p2.x > p1.x ? 0 : -0;else return (p2.y - p1.y) / (p2.x - p1.x);\r\n}\r\nfunction normal(p1, p2) {\r\n  return -1 / gradient(p1, p2);\r\n}\r\nfunction lineLength(p1, p2) {\r\n  return Math.sqrt(Math.pow(p2.y - p1.y, 2) + Math.pow(p2.x - p1.x, 2));\r\n}\r\nfunction quadrant(p1, p2) {\r\n  if (p2.x > p1.x) {\r\n    return p2.y > p1.y ? 2 : 1;\r\n  } else if (p2.x == p1.x) {\r\n    return p2.y > p1.y ? 2 : 1;\r\n  } else {\r\n    return p2.y > p1.y ? 3 : 4;\r\n  }\r\n}\r\nfunction theta(p1, p2) {\r\n  var m = gradient(p1, p2),\r\n      t = Math.atan(m),\r\n      s = quadrant(p1, p2);\r\n  if (s == 4 || s == 3) t += Math.PI;\r\n  if (t < 0) t += 2 * Math.PI;\r\n  return t;\r\n}\r\nfunction intersects(r1, r2) {\r\n  var x1 = r1.x,\r\n      x2 = r1.x + r1.w,\r\n      y1 = r1.y,\r\n      y2 = r1.y + r1.h,\r\n      a1 = r2.x,\r\n      a2 = r2.x + r2.w,\r\n      b1 = r2.y,\r\n      b2 = r2.y + r2.h;\r\n  return x1 <= a1 && a1 <= x2 && y1 <= b1 && b1 <= y2 || x1 <= a2 && a2 <= x2 && y1 <= b1 && b1 <= y2 || x1 <= a1 && a1 <= x2 && y1 <= b2 && b2 <= y2 || x1 <= a2 && a1 <= x2 && y1 <= b2 && b2 <= y2 || a1 <= x1 && x1 <= a2 && b1 <= y1 && y1 <= b2 || a1 <= x2 && x2 <= a2 && b1 <= y1 && y1 <= b2 || a1 <= x1 && x1 <= a2 && b1 <= y2 && y2 <= b2 || a1 <= x2 && x1 <= a2 && b1 <= y2 && y2 <= b2;\r\n}\r\nfunction toABC(line) {\r\n  var A = line[1].y - line[0].y;\r\n  var B = line[0].x - line[1].x;\r\n  return {\r\n    A: A,\r\n    B: B,\r\n    C: fixPrecision(A * line[0].x + B * line[0].y)\r\n  };\r\n}\r\nfunction fixPrecision(n, digits) {\r\n  digits = digits == null ? 3 : digits;\r\n  return Math.floor(n * Math.pow(10, digits)) / Math.pow(10, digits);\r\n}\r\nfunction lineIntersection(l1, l2) {\r\n  var abc1 = toABC(l1),\r\n      abc2 = toABC(l2),\r\n      det = abc1.A * abc2.B - abc2.A * abc1.B;\r\n  if (det == 0) {\r\n    return null;\r\n  } else {\r\n    var candidate = {\r\n      x: Math.round((abc2.B * abc1.C - abc1.B * abc2.C) / det),\r\n      y: Math.round((abc1.A * abc2.C - abc2.A * abc1.C) / det)\r\n    },\r\n        l1xmin = Math.floor(Math.min(l1[0].x, l1[1].x)),\r\n        l1xmax = Math.round(Math.max(l1[0].x, l1[1].x)),\r\n        l1ymin = Math.floor(Math.min(l1[0].y, l1[1].y)),\r\n        l1ymax = Math.round(Math.max(l1[0].y, l1[1].y)),\r\n        l2xmin = Math.floor(Math.min(l2[0].x, l2[1].x)),\r\n        l2xmax = Math.round(Math.max(l2[0].x, l2[1].x)),\r\n        l2ymin = Math.floor(Math.min(l2[0].y, l2[1].y)),\r\n        l2ymax = Math.round(Math.max(l2[0].y, l2[1].y));\r\n    if (candidate.x >= l1xmin && candidate.x <= l1xmax && candidate.y >= l1ymin && candidate.y <= l1ymax && candidate.x >= l2xmin && candidate.x <= l2xmax && candidate.y >= l2ymin && candidate.y <= l2ymax) {\r\n      return candidate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nfunction lineRectangleIntersection(line, r) {\r\n  var out = [],\r\n      rectangleLines = [[{\r\n    x: r.x,\r\n    y: r.y\r\n  }, {\r\n    x: r.x + r.w,\r\n    y: r.y\r\n  }], [{\r\n    x: r.x + r.w,\r\n    y: r.y\r\n  }, {\r\n    x: r.x + r.w,\r\n    y: r.y + r.h\r\n  }], [{\r\n    x: r.x,\r\n    y: r.y\r\n  }, {\r\n    x: r.x,\r\n    y: r.y + r.h\r\n  }], [{\r\n    x: r.x,\r\n    y: r.y + r.h\r\n  }, {\r\n    x: r.x + r.w,\r\n    y: r.y + r.h\r\n  }]];\r\n  forEach(rectangleLines, function (rLine) {\r\n    var intersection = lineIntersection(line, rLine);\r\n    if (intersection != null) {\r\n      out.push(intersection);\r\n    }\r\n  });\r\n  return out;\r\n}\r\nfunction encloses(r1, r2, allowSharedEdges) {\r\n  var x1 = r1.x,\r\n      x2 = r1.x + r1.w,\r\n      y1 = r1.y,\r\n      y2 = r1.y + r1.h,\r\n      a1 = r2.x,\r\n      a2 = r2.x + r2.w,\r\n      b1 = r2.y,\r\n      b2 = r2.y + r2.h,\r\n      c = function c(v1, v2, v3, v4) {\r\n    return allowSharedEdges ? v1 <= v2 && v3 >= v4 : v1 < v2 && v3 > v4;\r\n  };\r\n  return c(x1, a1, x2, a2) && c(y1, b1, y2, b2);\r\n}\r\nfunction pointOnLine(fromPoint, toPoint, distance) {\r\n  var m = gradient(fromPoint, toPoint),\r\n      s = quadrant(fromPoint, toPoint),\r\n      segmentMultiplier = distance > 0 ? segmentMultipliers[s] : inverseSegmentMultipliers[s],\r\n      theta = Math.atan(m),\r\n      y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1],\r\n      x = Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];\r\n  return {\r\n    x: fromPoint.x + x,\r\n    y: fromPoint.y + y\r\n  };\r\n}\r\nfunction perpendicularLineTo(fromPoint, toPoint, length) {\r\n  var m = gradient(fromPoint, toPoint),\r\n      theta2 = Math.atan(-1 / m),\r\n      y = length / 2 * Math.sin(theta2),\r\n      x = length / 2 * Math.cos(theta2);\r\n  return [{\r\n    x: toPoint.x + x,\r\n    y: toPoint.y + y\r\n  }, {\r\n    x: toPoint.x - x,\r\n    y: toPoint.y - y\r\n  }];\r\n}\r\nfunction snapToGrid(pos, grid, thresholdX, thresholdY) {\r\n  thresholdX = thresholdX == null ? grid.thresholdX == null ? grid.w / 2 : grid.thresholdX : thresholdX;\r\n  thresholdY = thresholdY == null ? grid.thresholdY == null ? grid.h / 2 : grid.thresholdY : thresholdY;\r\n  var _dx = Math.floor(pos.x / grid.w),\r\n      _dxl = grid.w * _dx,\r\n      _dxt = _dxl + grid.w,\r\n      x = Math.abs(pos.x - _dxl) <= thresholdX ? _dxl : Math.abs(_dxt - pos.x) <= thresholdX ? _dxt : pos.x;\r\n  var _dy = Math.floor(pos.y / grid.h),\r\n      _dyl = grid.h * _dy,\r\n      _dyt = _dyl + grid.h,\r\n      y = Math.abs(pos.y - _dyl) <= thresholdY ? _dyl : Math.abs(_dyt - pos.y) <= thresholdY ? _dyt : pos.y;\r\n  return {\r\n    x: x,\r\n    y: y\r\n  };\r\n}\r\n\r\nfunction findDelegateElement(parentElement, childElement, selector) {\r\n  if (matchesSelector$1(childElement, selector, parentElement)) {\r\n    return childElement;\r\n  } else {\r\n    var currentParent = childElement.parentNode;\r\n    while (currentParent != null && currentParent !== parentElement) {\r\n      if (matchesSelector$1(currentParent, selector, parentElement)) {\r\n        return currentParent;\r\n      } else {\r\n        currentParent = currentParent.parentNode;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction _assignId(obj) {\r\n  if (typeof obj === \"function\") {\r\n    obj._katavorioId = uuid();\r\n    return obj._katavorioId;\r\n  } else {\r\n    return obj;\r\n  }\r\n}\r\nfunction isInsideParent(instance, _el, pos) {\r\n  var p = _el.parentNode,\r\n      s = instance.getSize(p),\r\n      ss = instance.getSize(_el),\r\n      leftEdge = pos.x,\r\n      rightEdge = leftEdge + ss.w,\r\n      topEdge = pos.y,\r\n      bottomEdge = topEdge + ss.h;\r\n  return rightEdge > 0 && leftEdge < s.w && bottomEdge > 0 && topEdge < s.h;\r\n}\r\nfunction findMatchingSelector(availableSelectors, parentElement, childElement) {\r\n  var el = null;\r\n  var draggableId = parentElement.getAttribute(\"katavorio-draggable\"),\r\n      prefix = draggableId != null ? \"[katavorio-draggable='\" + draggableId + \"'] \" : \"\";\r\n  for (var i = 0; i < availableSelectors.length; i++) {\r\n    el = findDelegateElement(parentElement, childElement, prefix + availableSelectors[i].selector);\r\n    if (el != null) {\r\n      if (availableSelectors[i].filter) {\r\n        var matches = matchesSelector$1(childElement, availableSelectors[i].filter, el),\r\n            exclude = availableSelectors[i].filterExclude === true;\r\n        if (exclude && !matches || matches) {\r\n          return null;\r\n        }\r\n      }\r\n      return [availableSelectors[i], el];\r\n    }\r\n  }\r\n  return null;\r\n}\r\nvar EVENT_START = \"start\";\r\nvar EVENT_BEFORE_START = \"beforeStart\";\r\nvar EVENT_DRAG = \"drag\";\r\nvar EVENT_DROP = \"drop\";\r\nvar EVENT_OVER = \"over\";\r\nvar EVENT_OUT = \"out\";\r\nvar EVENT_STOP = \"stop\";\r\nvar ATTRIBUTE_DRAGGABLE = \"katavorio-draggable\";\r\nvar CLASS_DRAGGABLE$1 = ATTRIBUTE_DRAGGABLE;\r\nvar DEFAULT_GRID_X = 10;\r\nvar DEFAULT_GRID_Y = 10;\r\nvar TRUE = function TRUE() {\r\n  return true;\r\n};\r\nvar FALSE = function FALSE() {\r\n  return false;\r\n};\r\nvar _classes = {\r\n  delegatedDraggable: \"katavorio-delegated-draggable\",\r\n  draggable: CLASS_DRAGGABLE$1,\r\n  drag: \"katavorio-drag\",\r\n  selected: \"katavorio-drag-selected\",\r\n  noSelect: \"katavorio-drag-no-select\",\r\n  ghostProxy: \"katavorio-ghost-proxy\",\r\n  clonedDrag: \"katavorio-clone-drag\"\r\n};\r\nvar PositioningStrategies;\r\n(function (PositioningStrategies) {\r\n  PositioningStrategies[\"absolutePosition\"] = \"absolutePosition\";\r\n  PositioningStrategies[\"transform\"] = \"transform\";\r\n  PositioningStrategies[\"xyAttributes\"] = \"xyAttributes\";\r\n})(PositioningStrategies || (PositioningStrategies = {}));\r\nvar positionerSetters = new Map();\r\npositionerSetters.set(PositioningStrategies.absolutePosition, function (el, p) {\r\n  el.style.left = \"\".concat(p.x, \"px\");\r\n  el.style.top = \"\".concat(p.y, \"px\");\r\n});\r\npositionerSetters.set(PositioningStrategies.xyAttributes, function (el, p) {\r\n  el.setAttribute(\"x\", \"\".concat(p.x));\r\n  el.setAttribute(\"y\", \"\".concat(p.y));\r\n});\r\nvar positionerGetters = new Map();\r\npositionerGetters.set(PositioningStrategies.absolutePosition, function (el) {\r\n  return {\r\n    x: el.offsetLeft,\r\n    y: el.offsetTop\r\n  };\r\n});\r\npositionerGetters.set(PositioningStrategies.xyAttributes, function (el) {\r\n  return {\r\n    x: parseFloat(el.getAttribute(\"x\")),\r\n    y: parseFloat(el.getAttribute(\"y\"))\r\n  };\r\n});\r\nvar sizeSetters = new Map();\r\nsizeSetters.set(PositioningStrategies.absolutePosition, function (el, s) {\r\n  el.style.width = \"\".concat(s.w, \"px\");\r\n  el.style.height = \"\".concat(s.h, \"px\");\r\n});\r\nsizeSetters.set(PositioningStrategies.xyAttributes, function (el, s) {\r\n  el.setAttribute(\"width\", \"\".concat(s.w));\r\n  el.setAttribute(\"height\", \"\".concat(s.h));\r\n});\r\nvar sizeGetters = new Map();\r\nsizeGetters.set(PositioningStrategies.absolutePosition, function (el) {\r\n  return {\r\n    w: el.offsetWidth,\r\n    h: el.offsetHeight\r\n  };\r\n});\r\nsizeGetters.set(PositioningStrategies.xyAttributes, function (el) {\r\n  return {\r\n    w: parseFloat(el.getAttribute(\"width\")),\r\n    h: parseFloat(el.getAttribute(\"height\"))\r\n  };\r\n});\r\nvar _events = [EVENT_STOP, EVENT_START, EVENT_DRAG, EVENT_DROP, EVENT_OVER, EVENT_OUT, EVENT_BEFORE_START];\r\nvar _devNull = function _devNull() {};\r\nvar _each = function _each(obj, fn) {\r\n  if (obj == null) return;\r\n  obj = !isString(obj) && obj.tagName == null && obj.length != null ? obj : [obj];\r\n  for (var i = 0; i < obj.length; i++) {\r\n    fn.apply(obj[i], [obj[i]]);\r\n  }\r\n};\r\nvar _inputFilter = function _inputFilter(e, el, collicat) {\r\n  var t = e.srcElement || e.target;\r\n  return !matchesSelector$1(t, collicat.getInputFilterSelector(), el);\r\n};\r\nvar Base = function () {\r\n  function Base(el, manager) {\r\n    _classCallCheck(this, Base);\r\n    this.el = el;\r\n    this.manager = manager;\r\n    _defineProperty(this, \"_class\", void 0);\r\n    _defineProperty(this, \"uuid\", uuid());\r\n    _defineProperty(this, \"enabled\", true);\r\n    _defineProperty(this, \"scopes\", []);\r\n    _defineProperty(this, \"eventManager\", void 0);\r\n    this.eventManager = manager.eventManager;\r\n  }\r\n  _createClass(Base, [{\r\n    key: \"setEnabled\",\r\n    value: function setEnabled(e) {\r\n      this.enabled = e;\r\n    }\r\n  }, {\r\n    key: \"isEnabled\",\r\n    value: function isEnabled() {\r\n      return this.enabled;\r\n    }\r\n  }, {\r\n    key: \"toggleEnabled\",\r\n    value: function toggleEnabled() {\r\n      this.enabled = !this.enabled;\r\n    }\r\n  }, {\r\n    key: \"addScope\",\r\n    value: function addScope(scopes) {\r\n      var m = {};\r\n      _each(this.scopes, function (s) {\r\n        m[s] = true;\r\n      });\r\n      _each(scopes ? scopes.split(/\\s+/) : [], function (s) {\r\n        m[s] = true;\r\n      });\r\n      this.scopes.length = 0;\r\n      for (var i in m) {\r\n        this.scopes.push(i);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeScope\",\r\n    value: function removeScope(scopes) {\r\n      var m = {};\r\n      _each(this.scopes, function (s) {\r\n        m[s] = true;\r\n      });\r\n      _each(scopes ? scopes.split(/\\s+/) : [], function (s) {\r\n        delete m[s];\r\n      });\r\n      this.scopes.length = 0;\r\n      for (var i in m) {\r\n        this.scopes.push(i);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"toggleScope\",\r\n    value: function toggleScope(scopes) {\r\n      var m = {};\r\n      _each(this.scopes, function (s) {\r\n        m[s] = true;\r\n      });\r\n      _each(scopes ? scopes.split(/\\s+/) : [], function (s) {\r\n        if (m[s]) delete m[s];else m[s] = true;\r\n      });\r\n      this.scopes.length = 0;\r\n      for (var i in m) {\r\n        this.scopes.push(i);\r\n      }\r\n    }\r\n  }]);\r\n  return Base;\r\n}();\r\nfunction getConstrainingRectangle(el) {\r\n  return {\r\n    w: el.parentNode.offsetWidth + el.parentNode.scrollLeft,\r\n    h: el.parentNode.offsetHeight + el.parentNode.scrollTop\r\n  };\r\n}\r\nvar ContainmentType;\r\n(function (ContainmentType) {\r\n  ContainmentType[\"notNegative\"] = \"notNegative\";\r\n  ContainmentType[\"parent\"] = \"parent\";\r\n  ContainmentType[\"parentEnclosed\"] = \"parentEnclosed\";\r\n})(ContainmentType || (ContainmentType = {}));\r\nvar Drag = function (_Base) {\r\n  _inherits(Drag, _Base);\r\n  var _super = _createSuper(Drag);\r\n  function Drag(el, params, manager) {\r\n    var _this;\r\n    _classCallCheck(this, Drag);\r\n    _this = _super.call(this, el, manager);\r\n    _defineProperty(_assertThisInitialized(_this), \"_class\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"rightButtonCanDrag\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"consumeStartEvent\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"clone\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"scroll\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"trackScroll\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_downAt\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_posAtDown\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_pagePosAtDown\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_pageDelta\", {\r\n      x: 0,\r\n      y: 0\r\n    });\r\n    _defineProperty(_assertThisInitialized(_this), \"_moving\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_lastPosition\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_lastScrollValues\", {\r\n      x: 0,\r\n      y: 0\r\n    });\r\n    _defineProperty(_assertThisInitialized(_this), \"_initialScroll\", {\r\n      x: 0,\r\n      y: 0\r\n    });\r\n    _defineProperty(_assertThisInitialized(_this), \"_size\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_currentParentPosition\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ghostParentPosition\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_dragEl\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_multipleDrop\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ghostProxyOffsets\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ghostDx\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ghostDy\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_isConstrained\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ghostProxyParent\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_useGhostProxy\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ghostProxyFunction\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_activeSelectorParams\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_availableSelectors\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"_canDrag\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_consumeFilteredEvents\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_parent\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_ignoreZoom\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_filters\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"_constrainRect\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementToDrag\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"downListener\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"moveListener\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"upListener\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"scrollTracker\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"listeners\", {\r\n      \"start\": [],\r\n      \"drag\": [],\r\n      \"stop\": [],\r\n      \"over\": [],\r\n      \"out\": [],\r\n      \"beforeStart\": [],\r\n      \"revert\": []\r\n    });\r\n    _this._class = _this.manager.css.draggable;\r\n    addClass(_this.el, _this._class);\r\n    _this.downListener = _this._downListener.bind(_assertThisInitialized(_this));\r\n    _this.upListener = _this._upListener.bind(_assertThisInitialized(_this));\r\n    _this.moveListener = _this._moveListener.bind(_assertThisInitialized(_this));\r\n    _this.rightButtonCanDrag = params.rightButtonCanDrag === true;\r\n    _this.consumeStartEvent = params.consumeStartEvent !== false;\r\n    _this._dragEl = _this.el;\r\n    _this.clone = params.clone === true;\r\n    _this.scroll = params.scroll === true;\r\n    _this.trackScroll = params.trackScroll !== false;\r\n    _this._multipleDrop = params.multipleDrop !== false;\r\n    _this._canDrag = params.canDrag || TRUE;\r\n    _this._consumeFilteredEvents = params.consumeFilteredEvents;\r\n    _this._parent = params.parent;\r\n    _this._ignoreZoom = params.ignoreZoom === true;\r\n    _this._ghostProxyParent = params.ghostProxyParent;\r\n    if (_this.trackScroll) {\r\n      _this.scrollTracker = _this._trackScroll.bind(_assertThisInitialized(_this));\r\n      document.addEventListener(\"scroll\", _this.scrollTracker);\r\n    }\r\n    if (params.ghostProxy === true) {\r\n      _this._useGhostProxy = TRUE;\r\n    } else {\r\n      if (params.ghostProxy && typeof params.ghostProxy === \"function\") {\r\n        _this._useGhostProxy = params.ghostProxy;\r\n      } else {\r\n        _this._useGhostProxy = function (container, dragEl) {\r\n          if (_this._activeSelectorParams && _this._activeSelectorParams.useGhostProxy) {\r\n            return _this._activeSelectorParams.useGhostProxy(container, dragEl);\r\n          } else {\r\n            return false;\r\n          }\r\n        };\r\n      }\r\n    }\r\n    if (params.makeGhostProxy) {\r\n      _this._ghostProxyFunction = params.makeGhostProxy;\r\n    } else {\r\n      _this._ghostProxyFunction = function (el) {\r\n        if (_this._activeSelectorParams && _this._activeSelectorParams.makeGhostProxy) {\r\n          return _this._activeSelectorParams.makeGhostProxy(el);\r\n        } else {\r\n          return el.cloneNode(true);\r\n        }\r\n      };\r\n    }\r\n    if (params.selector) {\r\n      var draggableId = _this.el.getAttribute(ATTRIBUTE_DRAGGABLE);\r\n      if (draggableId == null) {\r\n        draggableId = \"\" + new Date().getTime();\r\n        _this.el.setAttribute(\"katavorio-draggable\", draggableId);\r\n      }\r\n      _this._availableSelectors.push(params);\r\n    }\r\n    _this.eventManager.on(_this.el, EVENT_MOUSEDOWN, _this.downListener);\r\n    return _this;\r\n  }\r\n  _createClass(Drag, [{\r\n    key: \"_trackScroll\",\r\n    value: function _trackScroll(e) {\r\n      if (this._moving) {\r\n        var currentScrollValues = {\r\n          x: document.documentElement.scrollLeft,\r\n          y: document.documentElement.scrollTop\r\n        },\r\n            dsx = currentScrollValues.x - this._lastScrollValues.x,\r\n            dsy = currentScrollValues.y - this._lastScrollValues.y,\r\n            _pos = {\r\n          x: dsx + this._lastPosition.x,\r\n          y: dsy + this._lastPosition.y\r\n        },\r\n        dx = _pos.x - this._downAt.x,\r\n            dy = _pos.y - this._downAt.y,\r\n            _z = this._ignoreZoom ? 1 : this.manager.getZoom();\r\n        if (this._dragEl && this._dragEl.parentNode) {\r\n          dx += this._dragEl.parentNode.scrollLeft - this._initialScroll.x;\r\n          dy += this._dragEl.parentNode.scrollTop - this._initialScroll.y;\r\n        }\r\n        dx /= _z;\r\n        dy /= _z;\r\n        this.moveBy(dx, dy, e);\r\n        this._lastPosition = _pos;\r\n        this._lastScrollValues = currentScrollValues;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"on\",\r\n    value: function on(evt, fn) {\r\n      if (this.listeners[evt]) {\r\n        this.listeners[evt].push(fn);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"off\",\r\n    value: function off(evt, fn) {\r\n      if (this.listeners[evt]) {\r\n        var l = [];\r\n        for (var i = 0; i < this.listeners[evt].length; i++) {\r\n          if (this.listeners[evt][i] !== fn) {\r\n            l.push(this.listeners[evt][i]);\r\n          }\r\n        }\r\n        this.listeners[evt] = l;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_upListener\",\r\n    value: function _upListener(e) {\r\n      if (this._downAt) {\r\n        this._downAt = null;\r\n        this.eventManager.off(document, EVENT_MOUSEMOVE, this.moveListener);\r\n        this.eventManager.off(document, EVENT_MOUSEUP, this.upListener);\r\n        removeClass(document.body, _classes.noSelect);\r\n        this.unmark(e);\r\n        this.stop(e);\r\n        this._moving = false;\r\n        if (this.clone) {\r\n          this._dragEl && this._dragEl.parentNode && this._dragEl.parentNode.removeChild(this._dragEl);\r\n          this._dragEl = null;\r\n        } else {\r\n          if (this._activeSelectorParams && this._activeSelectorParams.revertFunction) {\r\n            if (this._activeSelectorParams.revertFunction(this._dragEl, this.manager.getPosition(this._dragEl)) === true) {\r\n              this.manager.setPosition(this._dragEl, this._posAtDown);\r\n              this._dispatch(EVENT_REVERT, this._dragEl);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_downListener\",\r\n    value: function _downListener(e) {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      var isNotRightClick = this.rightButtonCanDrag || e.which !== 3 && e.button !== 2;\r\n      if (isNotRightClick && this.isEnabled() && this._canDrag()) {\r\n        var _f = this._testFilter(e) && _inputFilter(e, this.el, this.manager);\r\n        if (_f) {\r\n          this._activeSelectorParams = null;\r\n          this._elementToDrag = null;\r\n          if (this._availableSelectors.length === 0) {\r\n            console.log(\"JSPLUMB: no available drag selectors\");\r\n          }\r\n          var eventTarget = e.target || e.srcElement;\r\n          var match = findMatchingSelector(this._availableSelectors, this.el, eventTarget);\r\n          if (match != null) {\r\n            this._activeSelectorParams = match[0];\r\n            this._elementToDrag = match[1];\r\n          }\r\n          if (this._activeSelectorParams == null || this._elementToDrag == null) {\r\n            return;\r\n          }\r\n          var initial = this._activeSelectorParams.dragInit ? this._activeSelectorParams.dragInit(this._elementToDrag, e) : null;\r\n          if (initial != null) {\r\n            this._elementToDrag = initial;\r\n          }\r\n          if (this.clone) {\r\n            this._dragEl = this._elementToDrag.cloneNode(true);\r\n            addClass(this._dragEl, _classes.clonedDrag);\r\n            this._dragEl.setAttribute(\"id\", null);\r\n            this._dragEl.style.position = \"absolute\";\r\n            if (this._parent != null) {\r\n              var _p2 = this.manager.getPosition(this.el);\r\n              this._dragEl.style.left = _p2.x + \"px\";\r\n              this._dragEl.style.top = _p2.y + \"px\";\r\n              this._parent.appendChild(this._dragEl);\r\n            } else {\r\n              var b = offsetRelativeToRoot(this._elementToDrag);\r\n              this._dragEl.style.left = b.x + \"px\";\r\n              this._dragEl.style.top = b.y + \"px\";\r\n              document.body.appendChild(this._dragEl);\r\n            }\r\n          } else {\r\n            this._dragEl = this._elementToDrag;\r\n          }\r\n          if (this.consumeStartEvent) {\r\n            consume(e);\r\n          }\r\n          this._downAt = pageLocation(e);\r\n          if (this._dragEl && this._dragEl.parentNode) {\r\n            this._initialScroll = {\r\n              x: this._dragEl.parentNode.scrollLeft,\r\n              y: this._dragEl.parentNode.scrollTop\r\n            };\r\n          }\r\n          this._posAtDown = this.manager.getPosition(this._dragEl);\r\n          this._pagePosAtDown = offsetRelativeToRoot(this._dragEl);\r\n          this._pageDelta = {\r\n            x: this._pagePosAtDown.x - this._posAtDown.x,\r\n            y: this._pagePosAtDown.y - this._posAtDown.y\r\n          };\r\n          this._size = this.manager.getSize(this._dragEl);\r\n          this.eventManager.on(document, EVENT_MOUSEMOVE, this.moveListener);\r\n          this.eventManager.on(document, EVENT_MOUSEUP, this.upListener);\r\n          addClass(document.body, _classes.noSelect);\r\n          this._dispatch(EVENT_BEFORE_START, {\r\n            el: this.el,\r\n            pos: this._posAtDown,\r\n            e: e,\r\n            drag: this,\r\n            size: this._size\r\n          });\r\n        } else if (this._consumeFilteredEvents) {\r\n          consume(e);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_moveListener\",\r\n    value: function _moveListener(e) {\r\n      if (this._downAt) {\r\n        if (!this._moving) {\r\n          var dispatchResult = this._dispatch(EVENT_START, {\r\n            el: this.el,\r\n            pos: this._posAtDown,\r\n            e: e,\r\n            drag: this,\r\n            size: this._size\r\n          });\r\n          if (dispatchResult !== false) {\r\n            if (!this._downAt) {\r\n              return;\r\n            }\r\n            this.mark(dispatchResult);\r\n            this._moving = true;\r\n          } else {\r\n            this.abort();\r\n          }\r\n        }\r\n        if (this._downAt) {\r\n          var _pos2 = pageLocation(e),\r\n              dx = _pos2.x - this._downAt.x,\r\n              dy = _pos2.y - this._downAt.y,\r\n              _z2 = this._ignoreZoom ? 1 : this.manager.getZoom();\r\n          this._lastPosition = {\r\n            x: _pos2.x,\r\n            y: _pos2.y\r\n          };\r\n          this._lastScrollValues = {\r\n            x: document.documentElement.scrollLeft,\r\n            y: document.documentElement.scrollTop\r\n          };\r\n          if (this._dragEl && this._dragEl.parentNode) {\r\n            dx += this._dragEl.parentNode.scrollLeft - this._initialScroll.x;\r\n            dy += this._dragEl.parentNode.scrollTop - this._initialScroll.y;\r\n          }\r\n          dx /= _z2;\r\n          dy /= _z2;\r\n          this.moveBy(dx, dy, e);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getDragDelta\",\r\n    value: function getDragDelta() {\r\n      if (this._posAtDown != null && this._downAt != null) {\r\n        return {\r\n          x: this._downAt.x - this._posAtDown.x,\r\n          y: this._downAt.y - this._posAtDown.y\r\n        };\r\n      } else {\r\n        return {\r\n          x: 0,\r\n          y: 0\r\n        };\r\n      }\r\n    }\r\n  }, {\r\n    key: \"mark\",\r\n    value: function mark(payload) {\r\n      this._posAtDown = this.manager.getPosition(this._dragEl);\r\n      this._pagePosAtDown = offsetRelativeToRoot(this._dragEl);\r\n      this._pageDelta = {\r\n        x: this._pagePosAtDown.x - this._posAtDown.x,\r\n        y: this._pagePosAtDown.y - this._posAtDown.y\r\n      };\r\n      this._size = this.manager.getSize(this._dragEl);\r\n      addClass(this._dragEl, this.manager.css.drag);\r\n      this._constrainRect = getConstrainingRectangle(this._dragEl);\r\n      this._ghostDx = 0;\r\n      this._ghostDy = 0;\r\n    }\r\n  }, {\r\n    key: \"unmark\",\r\n    value: function unmark(e) {\r\n      if (this._isConstrained && this._useGhostProxy(this._elementToDrag, this._dragEl)) {\r\n        this._ghostProxyOffsets = {\r\n          x: this._dragEl.offsetLeft - this._ghostDx,\r\n          y: this._dragEl.offsetTop - this._ghostDy\r\n        };\r\n        this._dragEl.parentNode.removeChild(this._dragEl);\r\n        this._dragEl = this._elementToDrag;\r\n      } else {\r\n        this._ghostProxyOffsets = null;\r\n      }\r\n      removeClass(this._dragEl, this.manager.css.drag);\r\n      this._isConstrained = false;\r\n    }\r\n  }, {\r\n    key: \"moveBy\",\r\n    value: function moveBy(dx, dy, e) {\r\n      var desiredLoc = this.toGrid({\r\n        x: this._posAtDown.x + dx,\r\n        y: this._posAtDown.y + dy\r\n      }),\r\n          cPos = this._doConstrain(desiredLoc, this._dragEl, this._constrainRect, this._size, e);\r\n      if (cPos != null) {\r\n        if (this._useGhostProxy(this.el, this._dragEl)) {\r\n          if (desiredLoc.x !== cPos.x || desiredLoc.y !== cPos.y) {\r\n            if (!this._isConstrained) {\r\n              var gp = this._ghostProxyFunction(this._elementToDrag);\r\n              addClass(gp, _classes.ghostProxy);\r\n              if (this._ghostProxyParent) {\r\n                this._ghostProxyParent.appendChild(gp);\r\n                this._currentParentPosition = offsetRelativeToRoot(this._elementToDrag.parentNode);\r\n                this._ghostParentPosition = offsetRelativeToRoot(this._ghostProxyParent);\r\n                this._ghostDx = this._currentParentPosition.x - this._ghostParentPosition.x;\r\n                this._ghostDy = this._currentParentPosition.y - this._ghostParentPosition.y;\r\n              } else {\r\n                this._elementToDrag.parentNode.appendChild(gp);\r\n              }\r\n              this._dragEl = gp;\r\n              this._isConstrained = true;\r\n            }\r\n            cPos = desiredLoc;\r\n          } else {\r\n            if (this._isConstrained) {\r\n              this._dragEl.parentNode.removeChild(this._dragEl);\r\n              this._dragEl = this._elementToDrag;\r\n              this._isConstrained = false;\r\n              this._currentParentPosition = null;\r\n              this._ghostParentPosition = null;\r\n              this._ghostDx = 0;\r\n              this._ghostDy = 0;\r\n            }\r\n          }\r\n        }\r\n        this.manager.setPosition(this._dragEl, {\r\n          x: cPos.x + this._ghostDx,\r\n          y: cPos.y + this._ghostDy\r\n        });\r\n        this._dispatch(EVENT_DRAG, {\r\n          el: this.el,\r\n          pos: cPos,\r\n          e: e,\r\n          drag: this,\r\n          size: this._size,\r\n          originalPos: this._posAtDown\r\n        });\r\n      }\r\n    }\r\n  }, {\r\n    key: \"abort\",\r\n    value: function abort() {\r\n      if (this._downAt != null) {\r\n        this._upListener();\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getDragElement\",\r\n    value: function getDragElement(retrieveOriginalElement) {\r\n      return retrieveOriginalElement ? this._elementToDrag || this.el : this._dragEl || this.el;\r\n    }\r\n  }, {\r\n    key: \"stop\",\r\n    value: function stop(e, force) {\r\n      if (force || this._moving) {\r\n        var positions = [],\r\n            dPos = this.manager.getPosition(this._dragEl);\r\n        positions.push([this._dragEl, dPos, this, this._size]);\r\n        this._dispatch(EVENT_STOP, {\r\n          el: this._dragEl,\r\n          pos: this._ghostProxyOffsets || dPos,\r\n          finalPos: dPos,\r\n          e: e,\r\n          drag: this,\r\n          selection: positions,\r\n          size: this._size,\r\n          originalPos: {\r\n            x: this._posAtDown.x,\r\n            y: this._posAtDown.y\r\n          }\r\n        });\r\n      } else if (!this._moving) {\r\n        this._activeSelectorParams.dragAbort ? this._activeSelectorParams.dragAbort(this._elementToDrag) : null;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_dispatch\",\r\n    value: function _dispatch(evt, value) {\r\n      var result = null;\r\n      if (this._activeSelectorParams && this._activeSelectorParams[evt]) {\r\n        result = this._activeSelectorParams[evt](value);\r\n      } else if (this.listeners[evt]) {\r\n        for (var i = 0; i < this.listeners[evt].length; i++) {\r\n          try {\r\n            var v = this.listeners[evt][i](value);\r\n            if (v != null) {\r\n              result = v;\r\n            }\r\n          } catch (e) {}\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n  }, {\r\n    key: \"resolveGrid\",\r\n    value: function resolveGrid() {\r\n      var out = {\r\n        grid: null,\r\n        thresholdX: DEFAULT_GRID_X / 2,\r\n        thresholdY: DEFAULT_GRID_Y / 2\r\n      };\r\n      if (this._activeSelectorParams != null && this._activeSelectorParams.grid != null) {\r\n        out.grid = this._activeSelectorParams.grid;\r\n        if (this._activeSelectorParams.snapThreshold != null) {\r\n          out.thresholdX = this._activeSelectorParams.snapThreshold;\r\n          out.thresholdY = this._activeSelectorParams.snapThreshold;\r\n        }\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"toGrid\",\r\n    value: function toGrid(pos) {\r\n      var _this$resolveGrid = this.resolveGrid(),\r\n          grid = _this$resolveGrid.grid,\r\n          thresholdX = _this$resolveGrid.thresholdX,\r\n          thresholdY = _this$resolveGrid.thresholdY;\r\n      if (grid == null) {\r\n        return pos;\r\n      } else {\r\n        var tx = grid ? grid.w / 2 : thresholdX,\r\n            ty = grid ? grid.h / 2 : thresholdY;\r\n        return snapToGrid(pos, grid, tx, ty);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setUseGhostProxy\",\r\n    value: function setUseGhostProxy(val) {\r\n      this._useGhostProxy = val ? TRUE : FALSE;\r\n    }\r\n  }, {\r\n    key: \"_doConstrain\",\r\n    value: function _doConstrain(pos, dragEl, _constrainRect, _size, e) {\r\n      if (this._activeSelectorParams != null && this._activeSelectorParams.constrainFunction && typeof this._activeSelectorParams.constrainFunction === \"function\") {\r\n        return this._activeSelectorParams.constrainFunction(pos, dragEl, _constrainRect, _size, e);\r\n      } else {\r\n        return pos;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_testFilter\",\r\n    value: function _testFilter(e) {\r\n      for (var key in this._filters) {\r\n        var f = this._filters[key];\r\n        var rv = f[0](e);\r\n        if (f[1]) {\r\n          rv = !rv;\r\n        }\r\n        if (!rv) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"addFilter\",\r\n    value: function addFilter(f, _exclude) {\r\n      var _this2 = this;\r\n      if (f) {\r\n        var key = _assignId(f);\r\n        this._filters[key] = [function (e) {\r\n          var t = e.srcElement || e.target;\r\n          var m;\r\n          if (isString(f)) {\r\n            m = matchesSelector$1(t, f, _this2.el);\r\n          } else if (typeof f === \"function\") {\r\n            m = f(e, _this2.el);\r\n          }\r\n          return m;\r\n        }, _exclude !== false];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeFilter\",\r\n    value: function removeFilter(f) {\r\n      var key = typeof f === \"function\" ? f._katavorioId : f;\r\n      delete this._filters[key];\r\n    }\r\n  }, {\r\n    key: \"clearAllFilters\",\r\n    value: function clearAllFilters() {\r\n      this._filters = {};\r\n    }\r\n  }, {\r\n    key: \"addSelector\",\r\n    value: function addSelector(params, atStart) {\r\n      if (params.selector) {\r\n        if (atStart) {\r\n          this._availableSelectors.unshift(params);\r\n        } else {\r\n          this._availableSelectors.push(params);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.eventManager.off(this.el, EVENT_MOUSEDOWN, this.downListener);\r\n      this.eventManager.off(document, EVENT_MOUSEMOVE, this.moveListener);\r\n      this.eventManager.off(document, EVENT_MOUSEUP, this.upListener);\r\n      this.downListener = null;\r\n      this.upListener = null;\r\n      this.moveListener = null;\r\n      if (this.scrollTracker != null) {\r\n        document.removeEventListener(\"scroll\", this.scrollTracker);\r\n      }\r\n    }\r\n  }]);\r\n  return Drag;\r\n}(Base);\r\nvar DEFAULT_INPUTS = [\"input\", \"textarea\", \"select\", \"button\", \"option\"];\r\nvar DEFAULT_INPUT_FILTER_SELECTOR = DEFAULT_INPUTS.join(\",\");\r\nvar Collicat = function () {\r\n  function Collicat(options) {\r\n    _classCallCheck(this, Collicat);\r\n    _defineProperty(this, \"eventManager\", void 0);\r\n    _defineProperty(this, \"zoom\", 1);\r\n    _defineProperty(this, \"css\", {});\r\n    _defineProperty(this, \"inputFilterSelector\", void 0);\r\n    _defineProperty(this, \"positioningStrategy\", void 0);\r\n    _defineProperty(this, \"_positionSetter\", void 0);\r\n    _defineProperty(this, \"_positionGetter\", void 0);\r\n    _defineProperty(this, \"_sizeSetter\", void 0);\r\n    _defineProperty(this, \"_sizeGetter\", void 0);\r\n    options = options || {};\r\n    this.inputFilterSelector = options.inputFilterSelector || DEFAULT_INPUT_FILTER_SELECTOR;\r\n    this.eventManager = new EventManager();\r\n    this.zoom = options.zoom || 1;\r\n    this.positioningStrategy = options.positioningStrategy || PositioningStrategies.absolutePosition;\r\n    this._positionGetter = positionerGetters.get(this.positioningStrategy);\r\n    this._positionSetter = positionerSetters.get(this.positioningStrategy);\r\n    this._sizeGetter = sizeGetters.get(this.positioningStrategy);\r\n    this._sizeSetter = sizeSetters.get(this.positioningStrategy);\r\n    var _c = options.css || {};\r\n    extend(this.css, _c);\r\n  }\r\n  _createClass(Collicat, [{\r\n    key: \"getPosition\",\r\n    value: function getPosition(el) {\r\n      return this._positionGetter(el);\r\n    }\r\n  }, {\r\n    key: \"setPosition\",\r\n    value: function setPosition(el, p) {\r\n      this._positionSetter(el, p);\r\n    }\r\n  }, {\r\n    key: \"getSize\",\r\n    value: function getSize(el) {\r\n      return this._sizeGetter(el);\r\n    }\r\n  }, {\r\n    key: \"getZoom\",\r\n    value: function getZoom() {\r\n      return this.zoom;\r\n    }\r\n  }, {\r\n    key: \"setZoom\",\r\n    value: function setZoom(z) {\r\n      this.zoom = z;\r\n    }\r\n  }, {\r\n    key: \"_prepareParams\",\r\n    value: function _prepareParams(p) {\r\n      p = p || {};\r\n      var _p = {\r\n        events: {}\r\n      },\r\n          i;\r\n      for (i in p) {\r\n        _p[i] = p[i];\r\n      }\r\n      for (i = 0; i < _events.length; i++) {\r\n        _p.events[_events[i]] = p[_events[i]] || _devNull;\r\n      }\r\n      return _p;\r\n    }\r\n  }, {\r\n    key: \"getInputFilterSelector\",\r\n    value: function getInputFilterSelector() {\r\n      return this.inputFilterSelector;\r\n    }\r\n  }, {\r\n    key: \"setInputFilterSelector\",\r\n    value: function setInputFilterSelector(selector) {\r\n      this.inputFilterSelector = selector;\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"draggable\",\r\n    value: function draggable(el, params) {\r\n      if (el._katavorioDrag == null) {\r\n        var _p3 = this._prepareParams(params);\r\n        var d = new Drag(el, _p3, this);\r\n        addClass(el, _classes.delegatedDraggable);\r\n        el._katavorioDrag = d;\r\n        return d;\r\n      } else {\r\n        return el._katavorioDrag;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"destroyDraggable\",\r\n    value: function destroyDraggable(el) {\r\n      if (el._katavorioDrag) {\r\n        el._katavorioDrag.destroy();\r\n        delete el._katavorioDrag;\r\n      }\r\n    }\r\n  }]);\r\n  return Collicat;\r\n}();\r\n\r\nvar CLASS_DRAG_SELECTED = \"jtk-drag-selected\";\r\nvar DragSelection = function () {\r\n  function DragSelection(instance) {\r\n    _classCallCheck(this, DragSelection);\r\n    this.instance = instance;\r\n    _defineProperty(this, \"_dragSelection\", []);\r\n    _defineProperty(this, \"_dragSizes\", new Map());\r\n    _defineProperty(this, \"_dragElements\", new Map());\r\n    _defineProperty(this, \"_dragElementStartPositions\", new Map());\r\n    _defineProperty(this, \"_dragElementPositions\", new Map());\r\n    _defineProperty(this, \"__activeSet\", void 0);\r\n  }\r\n  _createClass(DragSelection, [{\r\n    key: \"_activeSet\",\r\n    get: function get() {\r\n      if (this.__activeSet == null) {\r\n        return this._dragSelection;\r\n      } else {\r\n        return this.__activeSet;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"length\",\r\n    get: function get() {\r\n      return this._dragSelection.length;\r\n    }\r\n  }, {\r\n    key: \"filterActiveSet\",\r\n    value: function filterActiveSet(fn) {\r\n      var _this = this;\r\n      this.__activeSet = [];\r\n      forEach(this._dragSelection, function (p) {\r\n        if (fn(p)) {\r\n          _this.__activeSet.push(p);\r\n        }\r\n      });\r\n    }\r\n  }, {\r\n    key: \"clear\",\r\n    value: function clear() {\r\n      var _this2 = this;\r\n      this.reset();\r\n      forEach(this._dragSelection, function (p) {\r\n        return _this2.instance.removeClass(p.jel, CLASS_DRAG_SELECTED);\r\n      });\r\n      this._dragSelection.length = 0;\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      this._dragElementStartPositions.clear();\r\n      this._dragElementPositions.clear();\r\n      this._dragSizes.clear();\r\n      this._dragElements.clear();\r\n      this.__activeSet = null;\r\n    }\r\n  }, {\r\n    key: \"initialisePositions\",\r\n    value: function initialisePositions() {\r\n      var _this3 = this;\r\n      forEach(this._activeSet, function (p) {\r\n        var vp = _this3.instance.viewport.getPosition(p.id);\r\n        var off = {\r\n          x: parseInt(\"\" + p.jel.offsetLeft, 10),\r\n          y: parseInt(\"\" + p.jel.offsetTop, 10)\r\n        };\r\n        _this3._dragElementStartPositions.set(p.id, off);\r\n        _this3._dragElementPositions.set(p.id, off);\r\n        _this3._dragSizes.set(p.id, {\r\n          w: vp.w,\r\n          h: vp.h\r\n        });\r\n      });\r\n    }\r\n  }, {\r\n    key: \"updatePositions\",\r\n    value: function updatePositions(currentPosition, originalPosition, callback) {\r\n      var _this4 = this;\r\n      var dx = currentPosition.x - originalPosition.x,\r\n          dy = currentPosition.y - originalPosition.y;\r\n      forEach(this._activeSet, function (p) {\r\n        var op = _this4._dragElementStartPositions.get(p.id);\r\n        if (op) {\r\n          var x = op.x + dx,\r\n              y = op.y + dy;\r\n          var _s = _this4._dragSizes.get(p.id);\r\n          var _b = {\r\n            x: x,\r\n            y: y,\r\n            w: _s.w,\r\n            h: _s.h\r\n          };\r\n          if (p.jel._jsPlumbParentGroup && p.jel._jsPlumbParentGroup.constrain) {\r\n            var constrainRect = {\r\n              w: p.jel.parentNode.offsetWidth + p.jel.parentNode.scrollLeft,\r\n              h: p.jel.parentNode.offsetHeight + p.jel.parentNode.scrollTop\r\n            };\r\n            _b.x = Math.max(_b.x, 0);\r\n            _b.y = Math.max(_b.y, 0);\r\n            _b.x = Math.min(_b.x, constrainRect.w - _s.w);\r\n            _b.y = Math.min(_b.y, constrainRect.h - _s.h);\r\n          }\r\n          _this4._dragElementPositions.set(p.id, {\r\n            x: x,\r\n            y: y\r\n          });\r\n          p.jel.style.left = _b.x + \"px\";\r\n          p.jel.style.top = _b.y + \"px\";\r\n          callback(p.jel, p.id, _s, _b);\r\n        }\r\n      });\r\n    }\r\n  }, {\r\n    key: \"each\",\r\n    value: function each(f) {\r\n      var _this5 = this;\r\n      forEach(this._activeSet, function (p) {\r\n        var s = _this5._dragSizes.get(p.id);\r\n        var o = _this5._dragElementPositions.get(p.id);\r\n        var orig = _this5._dragElementStartPositions.get(p.id);\r\n        f(p.jel, p.id, o, s, orig);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"add\",\r\n    value: function add(el, id) {\r\n      var jel = el;\r\n      id = id || this.instance.getId(jel);\r\n      var idx = findWithFunction(this._dragSelection, function (p) {\r\n        return p.id === id;\r\n      });\r\n      if (idx === -1) {\r\n        this.instance.addClass(el, CLASS_DRAG_SELECTED);\r\n        this._dragSelection.push({\r\n          id: id,\r\n          jel: jel\r\n        });\r\n      }\r\n    }\r\n  }, {\r\n    key: \"remove\",\r\n    value: function remove(el) {\r\n      var _this6 = this;\r\n      var jel = el;\r\n      this._dragSelection = this._dragSelection.filter(function (p) {\r\n        var out = p.jel !== jel;\r\n        if (!out) {\r\n          _this6.instance.removeClass(p.jel, CLASS_DRAG_SELECTED);\r\n        }\r\n        return out;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"toggle\",\r\n    value: function toggle(el) {\r\n      var jel = el;\r\n      var idx = findWithFunction(this._dragSelection, function (p) {\r\n        return p.jel === jel;\r\n      });\r\n      if (idx !== -1) {\r\n        this.remove(jel);\r\n      } else {\r\n        this.add(el);\r\n      }\r\n    }\r\n  }]);\r\n  return DragSelection;\r\n}();\r\n\r\nvar CLASS_DELEGATED_DRAGGABLE = \"jtk-delegated-draggable\";\r\nvar CLASS_DRAGGABLE = \"jtk-draggable\";\r\nvar CLASS_DRAG_CONTAINER = \"jtk-drag\";\r\nvar CLASS_GHOST_PROXY = \"jtk-ghost-proxy\";\r\nvar CLASS_DRAG_ACTIVE = \"jtk-drag-active\";\r\nvar CLASS_DRAGGED = \"jtk-dragged\";\r\nvar CLASS_DRAG_HOVER = \"jtk-drag-hover\";\r\nvar DragManager = function () {\r\n  function DragManager(instance, dragSelection, options) {\r\n    var _this = this;\r\n    _classCallCheck(this, DragManager);\r\n    this.instance = instance;\r\n    this.dragSelection = dragSelection;\r\n    _defineProperty(this, \"collicat\", void 0);\r\n    _defineProperty(this, \"drag\", void 0);\r\n    _defineProperty(this, \"_draggables\", {});\r\n    _defineProperty(this, \"_dlist\", []);\r\n    _defineProperty(this, \"_elementsWithEndpoints\", {});\r\n    _defineProperty(this, \"_draggablesForElements\", {});\r\n    _defineProperty(this, \"handlers\", []);\r\n    _defineProperty(this, \"_trackScroll\", void 0);\r\n    _defineProperty(this, \"_filtersToAdd\", []);\r\n    this.collicat = new Collicat({\r\n      zoom: this.instance.currentZoom,\r\n      css: {\r\n        noSelect: this.instance.dragSelectClass,\r\n        delegatedDraggable: CLASS_DELEGATED_DRAGGABLE,\r\n        draggable: CLASS_DRAGGABLE,\r\n        drag: CLASS_DRAG_CONTAINER,\r\n        selected: CLASS_DRAG_SELECTED,\r\n        active: CLASS_DRAG_ACTIVE,\r\n        hover: CLASS_DRAG_HOVER,\r\n        ghostProxy: CLASS_GHOST_PROXY\r\n      }\r\n    });\r\n    this.instance.bind(EVENT_ZOOM, function (z) {\r\n      _this.collicat.setZoom(z);\r\n    });\r\n    options = options || {};\r\n    this._trackScroll = options.trackScroll !== false;\r\n  }\r\n  _createClass(DragManager, [{\r\n    key: \"addHandler\",\r\n    value: function addHandler(handler, dragOptions) {\r\n      var _this2 = this;\r\n      var o = extend({\r\n        selector: handler.selector\r\n      }, dragOptions || {});\r\n      o.start = wrap(o.start, function (p) {\r\n        return handler.onStart(p);\r\n      }, false);\r\n      o.drag = wrap(o.drag, function (p) {\r\n        return handler.onDrag(p);\r\n      });\r\n      o.stop = wrap(o.stop, function (p) {\r\n        return handler.onStop(p);\r\n      });\r\n      var handlerBeforeStart = (handler.onBeforeStart || function (p) {}).bind(handler);\r\n      o.beforeStart = wrap(o.beforeStart, function (p) {\r\n        return handlerBeforeStart(p);\r\n      });\r\n      o.dragInit = function (el, e) {\r\n        return handler.onDragInit(el, e);\r\n      };\r\n      o.dragAbort = function (el) {\r\n        return handler.onDragAbort(el);\r\n      };\r\n      if (handler.useGhostProxy) {\r\n        o.useGhostProxy = handler.useGhostProxy;\r\n        o.makeGhostProxy = handler.makeGhostProxy;\r\n      }\r\n      if (o.constrainFunction == null && o.containment != null) {\r\n        switch (o.containment) {\r\n          case ContainmentType.notNegative:\r\n            {\r\n              o.constrainFunction = function (pos, dragEl, _constrainRect, _size) {\r\n                return {\r\n                  x: Math.max(0, Math.min(pos.x)),\r\n                  y: Math.max(0, Math.min(pos.y))\r\n                };\r\n              };\r\n              break;\r\n            }\r\n          case ContainmentType.parent:\r\n            {\r\n              var padding = o.containmentPadding || 5;\r\n              o.constrainFunction = function (pos, dragEl, _constrainRect, _size) {\r\n                var x = pos.x < 0 ? 0 : pos.x > _constrainRect.w - padding ? _constrainRect.w - padding : pos.x;\r\n                var y = pos.y < 0 ? 0 : pos.y > _constrainRect.h - padding ? _constrainRect.h - padding : pos.y;\r\n                return {\r\n                  x: x,\r\n                  y: y\r\n                };\r\n              };\r\n              break;\r\n            }\r\n          case ContainmentType.parentEnclosed:\r\n            {\r\n              o.constrainFunction = function (pos, dragEl, _constrainRect, _size) {\r\n                var x = pos.x < 0 ? 0 : pos.x + _size.w > _constrainRect.w ? _constrainRect.w - _size.w : pos.x;\r\n                var y = pos.y < 0 ? 0 : pos.y + _size.h > _constrainRect.h ? _constrainRect.h - _size.h : pos.y;\r\n                return {\r\n                  x: x,\r\n                  y: y\r\n                };\r\n              };\r\n              break;\r\n            }\r\n        }\r\n      }\r\n      if (this.drag == null) {\r\n        o.trackScroll = this._trackScroll;\r\n        this.drag = this.collicat.draggable(this.instance.getContainer(), o);\r\n        forEach(this._filtersToAdd, function (filterToAdd) {\r\n          return _this2.drag.addFilter(filterToAdd[0], filterToAdd[1]);\r\n        });\r\n        this.drag.on(EVENT_REVERT, function (el) {\r\n          _this2.instance.revalidate(el);\r\n        });\r\n      } else {\r\n        this.drag.addSelector(o);\r\n      }\r\n      this.handlers.push({\r\n        handler: handler,\r\n        options: o\r\n      });\r\n      handler.init(this.drag);\r\n    }\r\n  }, {\r\n    key: \"addSelector\",\r\n    value: function addSelector(params, atStart) {\r\n      this.drag && this.drag.addSelector(params, atStart);\r\n    }\r\n  }, {\r\n    key: \"addFilter\",\r\n    value: function addFilter(filter, exclude) {\r\n      if (this.drag == null) {\r\n        this._filtersToAdd.push([filter, exclude === true]);\r\n      } else {\r\n        this.drag.addFilter(filter, exclude);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeFilter\",\r\n    value: function removeFilter(filter) {\r\n      if (this.drag != null) {\r\n        this.drag.removeFilter(filter);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setFilters\",\r\n    value: function setFilters(filters) {\r\n      var _this3 = this;\r\n      forEach(filters, function (f) {\r\n        _this3.drag.addFilter(f[0], f[1]);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      var out = [];\r\n      forEach(this.handlers, function (p) {\r\n        p.handler.reset();\r\n      });\r\n      this.handlers.length = 0;\r\n      if (this.drag != null) {\r\n        var currentFilters = this.drag._filters;\r\n        for (var f in currentFilters) {\r\n          out.push([f, currentFilters[f][1]]);\r\n        }\r\n        this.collicat.destroyDraggable(this.instance.getContainer());\r\n      }\r\n      delete this.drag;\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"setOption\",\r\n    value: function setOption(handler, options) {\r\n      var handlerAndOptions = getWithFunction(this.handlers, function (p) {\r\n        return p.handler === handler;\r\n      });\r\n      if (handlerAndOptions != null) {\r\n        extend(handlerAndOptions.options, options || {});\r\n      }\r\n    }\r\n  }]);\r\n  return DragManager;\r\n}();\r\n\r\nfunction decodeDragGroupSpec(instance, spec) {\r\n  if (isString(spec)) {\r\n    return {\r\n      id: spec,\r\n      active: true\r\n    };\r\n  } else {\r\n    return {\r\n      id: spec.id,\r\n      active: spec.active\r\n    };\r\n  }\r\n}\r\nfunction isActiveDragGroupMember(dragGroup, el) {\r\n  var details = getFromSetWithFunction(dragGroup.members, function (m) {\r\n    return m.el === el;\r\n  });\r\n  if (details !== null) {\r\n    return details.active === true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nfunction getAncestors(el) {\r\n  var ancestors = [];\r\n  var p = el._jsPlumbParentGroup;\r\n  while (p != null) {\r\n    ancestors.push(p.el);\r\n    p = p.group;\r\n  }\r\n  return ancestors;\r\n}\r\nvar ElementDragHandler = function () {\r\n  function ElementDragHandler(instance, _dragSelection) {\r\n    _classCallCheck(this, ElementDragHandler);\r\n    this.instance = instance;\r\n    this._dragSelection = _dragSelection;\r\n    _defineProperty(this, \"selector\", \"> \" + SELECTOR_MANAGED_ELEMENT + \":not(\" + cls(CLASS_OVERLAY) + \")\");\r\n    _defineProperty(this, \"_dragOffset\", null);\r\n    _defineProperty(this, \"_groupLocations\", []);\r\n    _defineProperty(this, \"_intersectingGroups\", []);\r\n    _defineProperty(this, \"_currentDragParentGroup\", null);\r\n    _defineProperty(this, \"_dragGroupByElementIdMap\", {});\r\n    _defineProperty(this, \"_dragGroupMap\", {});\r\n    _defineProperty(this, \"_currentDragGroup\", null);\r\n    _defineProperty(this, \"_currentDragGroupOffsets\", new Map());\r\n    _defineProperty(this, \"_currentDragGroupSizes\", new Map());\r\n    _defineProperty(this, \"_currentDragGroupOriginalPositions\", new Map());\r\n    _defineProperty(this, \"_dragPayload\", null);\r\n    _defineProperty(this, \"drag\", void 0);\r\n    _defineProperty(this, \"originalPosition\", void 0);\r\n  }\r\n  _createClass(ElementDragHandler, [{\r\n    key: \"onDragInit\",\r\n    value: function onDragInit(el) {\r\n      return null;\r\n    }\r\n  }, {\r\n    key: \"onDragAbort\",\r\n    value: function onDragAbort(el) {\r\n      return null;\r\n    }\r\n  }, {\r\n    key: \"getDropGroup\",\r\n    value: function getDropGroup() {\r\n      var dropGroup = null;\r\n      if (this._intersectingGroups.length > 0) {\r\n        var targetGroup = this._intersectingGroups[0].groupLoc.group;\r\n        var intersectingElement = this._intersectingGroups[0].intersectingElement;\r\n        var currentGroup = intersectingElement._jsPlumbParentGroup;\r\n        if (currentGroup !== targetGroup) {\r\n          if (currentGroup == null || !currentGroup.overrideDrop(intersectingElement, targetGroup)) {\r\n            dropGroup = this._intersectingGroups[0];\r\n          }\r\n        }\r\n      }\r\n      return dropGroup;\r\n    }\r\n  }, {\r\n    key: \"onStop\",\r\n    value: function onStop(params) {\r\n      var _this$_currentDragGro,\r\n          _this = this;\r\n      var jel = params.drag.getDragElement();\r\n      var dropGroup = this.getDropGroup();\r\n      var elementsToProcess = [];\r\n      elementsToProcess.push({\r\n        el: jel,\r\n        id: this.instance.getId(jel),\r\n        pos: params.finalPos,\r\n        originalGroup: jel._jsPlumbParentGroup,\r\n        redrawResult: null,\r\n        originalPos: params.originalPos,\r\n        reverted: false,\r\n        dropGroup: dropGroup != null ? dropGroup.groupLoc.group : null\r\n      });\r\n      function addElementToProcess(el, id, currentPos, s, originalPosition) {\r\n        var x = currentPos.x,\r\n            y = currentPos.y;\r\n        if (el._jsPlumbParentGroup && el._jsPlumbParentGroup.constrain) {\r\n          var constrainRect = {\r\n            w: el.parentNode.offsetWidth + el.parentNode.scrollLeft,\r\n            h: el.parentNode.offsetHeight + el.parentNode.scrollTop\r\n          };\r\n          x = Math.max(x, 0);\r\n          y = Math.max(y, 0);\r\n          x = Math.min(x, constrainRect.w - s.w);\r\n          y = Math.min(y, constrainRect.h - s.h);\r\n          currentPos.x = x;\r\n          currentPos.y = y;\r\n        }\r\n        elementsToProcess.push({\r\n          el: el,\r\n          id: id,\r\n          pos: currentPos,\r\n          originalPos: originalPosition,\r\n          originalGroup: el._jsPlumbParentGroup,\r\n          redrawResult: null,\r\n          reverted: false,\r\n          dropGroup: dropGroup === null || dropGroup === void 0 ? void 0 : dropGroup.groupLoc.group\r\n        });\r\n      }\r\n      this._dragSelection.each(function (el, id, o, s, originalPosition) {\r\n        if (el !== params.el) {\r\n          addElementToProcess(el, id, {\r\n            x: o.x,\r\n            y: o.y\r\n          }, s, originalPosition);\r\n        }\r\n      });\r\n      (_this$_currentDragGro = this._currentDragGroup) === null || _this$_currentDragGro === void 0 ? void 0 : _this$_currentDragGro.members.forEach(function (d) {\r\n        if (d.el !== params.el) {\r\n          var offset = _this._currentDragGroupOffsets.get(d.elId);\r\n          var s = _this._currentDragGroupSizes.get(d.elId);\r\n          var pp = {\r\n            x: params.finalPos.x + offset[0].x,\r\n            y: params.finalPos.y + offset[0].y\r\n          };\r\n          addElementToProcess(d.el, d.elId, pp, s, _this._currentDragGroupOriginalPositions.get(d.elId));\r\n        }\r\n      });\r\n      forEach(elementsToProcess, function (p) {\r\n        var wasInGroup = p.originalGroup != null,\r\n            isInOriginalGroup = wasInGroup && isInsideParent(_this.instance, p.el, p.pos),\r\n            parentOffset = {\r\n          x: 0,\r\n          y: 0\r\n        };\r\n        if (wasInGroup && !isInOriginalGroup) {\r\n          if (dropGroup == null) {\r\n            var orphanedPosition = _this._pruneOrOrphan(p, true, true);\r\n            if (orphanedPosition.pos != null) {\r\n              p.pos = orphanedPosition.pos.pos;\r\n            } else {\r\n              if (!orphanedPosition.pruned && p.originalGroup.revert) {\r\n                p.pos = p.originalPos;\r\n                p.reverted = true;\r\n              }\r\n            }\r\n          }\r\n        } else if (wasInGroup && isInOriginalGroup) {\r\n          parentOffset = _this._computeOffsetByParentGroup(p.originalGroup);\r\n        }\r\n        if (dropGroup != null && !isInOriginalGroup) {\r\n          _this.instance.groupManager.addToGroup(dropGroup.groupLoc.group, false, p.el);\r\n        } else {\r\n          p.dropGroup = null;\r\n        }\r\n        if (p.reverted) {\r\n          _this.instance.setPosition(p.el, p.pos);\r\n        }\r\n        p.redrawResult = _this.instance.setElementPosition(p.el, p.pos.x + parentOffset.x, p.pos.y + parentOffset.y);\r\n        _this.instance.removeClass(p.el, CLASS_DRAGGED);\r\n        _this.instance.select({\r\n          source: p.el\r\n        }).removeClass(_this.instance.elementDraggingClass + \" \" + _this.instance.sourceElementDraggingClass, true);\r\n        _this.instance.select({\r\n          target: p.el\r\n        }).removeClass(_this.instance.elementDraggingClass + \" \" + _this.instance.targetElementDraggingClass, true);\r\n      });\r\n      if (elementsToProcess[0].originalGroup != null) {\r\n        var currentGroup = jel._jsPlumbParentGroup;\r\n        if (currentGroup !== elementsToProcess[0].originalGroup) {\r\n          var originalElement = params.drag.getDragElement(true);\r\n          if (elementsToProcess[0].originalGroup.ghost) {\r\n            var o1 = this.instance.getPosition(this.instance.getGroupContentArea(currentGroup));\r\n            var o2 = this.instance.getPosition(this.instance.getGroupContentArea(elementsToProcess[0].originalGroup));\r\n            var o = {\r\n              x: o2.x + params.pos.x - o1.x,\r\n              y: o2.y + params.pos.y - o1.y\r\n            };\r\n            originalElement.style.left = o.x + \"px\";\r\n            originalElement.style.top = o.y + \"px\";\r\n            this.instance.revalidate(originalElement);\r\n          }\r\n        }\r\n      }\r\n      this.instance.fire(EVENT_DRAG_STOP, {\r\n        elements: elementsToProcess,\r\n        e: params.e,\r\n        el: jel,\r\n        payload: this._dragPayload\r\n      });\r\n      this._cleanup();\r\n    }\r\n  }, {\r\n    key: \"_cleanup\",\r\n    value: function _cleanup() {\r\n      var _this2 = this;\r\n      forEach(this._groupLocations, function (groupLoc) {\r\n        _this2.instance.removeClass(groupLoc.el, CLASS_DRAG_ACTIVE);\r\n        _this2.instance.removeClass(groupLoc.el, CLASS_DRAG_HOVER);\r\n      });\r\n      this._currentDragParentGroup = null;\r\n      this._groupLocations.length = 0;\r\n      this.instance.hoverSuspended = false;\r\n      this._dragOffset = null;\r\n      this._dragSelection.reset();\r\n      this._dragPayload = null;\r\n      this._currentDragGroupOffsets.clear();\r\n      this._currentDragGroupSizes.clear();\r\n      this._currentDragGroupOriginalPositions.clear();\r\n      this._currentDragGroup = null;\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {}\r\n  }, {\r\n    key: \"init\",\r\n    value: function init(drag) {\r\n      this.drag = drag;\r\n    }\r\n  }, {\r\n    key: \"onDrag\",\r\n    value: function onDrag(params) {\r\n      var _this3 = this;\r\n      var el = params.drag.getDragElement();\r\n      var id = this.instance.getId(el);\r\n      var finalPos = params.pos;\r\n      var elSize = this.instance.viewport.getPosition(id);\r\n      var ui = {\r\n        x: finalPos.x,\r\n        y: finalPos.y\r\n      };\r\n      this._intersectingGroups.length = 0;\r\n      if (this._dragOffset != null) {\r\n        ui.x += this._dragOffset.x;\r\n        ui.y += this._dragOffset.y;\r\n      }\r\n      var _one = function _one(el, bounds, findIntersectingGroups) {\r\n        if (findIntersectingGroups) {\r\n          var ancestorsOfIntersectingGroups = new Set();\r\n          forEach(_this3._groupLocations, function (groupLoc) {\r\n            if (!ancestorsOfIntersectingGroups.has(groupLoc.group.id) && intersects(bounds, groupLoc.r)) {\r\n              if (groupLoc.group !== _this3._currentDragParentGroup) {\r\n                _this3.instance.addClass(groupLoc.el, CLASS_DRAG_HOVER);\r\n              }\r\n              _this3._intersectingGroups.push({\r\n                groupLoc: groupLoc,\r\n                intersectingElement: params.drag.getDragElement(true),\r\n                d: 0\r\n              });\r\n              forEach(_this3.instance.groupManager.getAncestors(groupLoc.group), function (g) {\r\n                return ancestorsOfIntersectingGroups.add(g.id);\r\n              });\r\n            } else {\r\n              _this3.instance.removeClass(groupLoc.el, CLASS_DRAG_HOVER);\r\n            }\r\n          });\r\n        }\r\n        _this3.instance.setElementPosition(el, bounds.x, bounds.y);\r\n        _this3.instance.fire(EVENT_DRAG_MOVE, {\r\n          el: el,\r\n          e: params.e,\r\n          pos: {\r\n            x: bounds.x,\r\n            y: bounds.y\r\n          },\r\n          originalPosition: _this3.originalPosition,\r\n          payload: _this3._dragPayload\r\n        });\r\n      };\r\n      var elBounds = {\r\n        x: ui.x,\r\n        y: ui.y,\r\n        w: elSize.w,\r\n        h: elSize.h\r\n      };\r\n      _one(el, elBounds, true);\r\n      this._dragSelection.updatePositions(finalPos, this.originalPosition, function (el, id, s, b) {\r\n        _one(el, b, false);\r\n      });\r\n      this._currentDragGroupOffsets.forEach(function (v, k) {\r\n        var s = _this3._currentDragGroupSizes.get(k);\r\n        var _b = {\r\n          x: elBounds.x + v[0].x,\r\n          y: elBounds.y + v[0].y,\r\n          w: s.w,\r\n          h: s.h\r\n        };\r\n        v[1].style.left = _b.x + \"px\";\r\n        v[1].style.top = _b.y + \"px\";\r\n        _one(v[1], _b, false);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"_computeOffsetByParentGroup\",\r\n    value: function _computeOffsetByParentGroup(group) {\r\n      var parentGroupOffset = this.instance.getPosition(group.el);\r\n      var contentArea = group.contentArea;\r\n      if (contentArea !== group.el) {\r\n        var caOffset = this.instance.getPosition(contentArea);\r\n        parentGroupOffset.x += caOffset.x;\r\n        parentGroupOffset.y += caOffset.y;\r\n      }\r\n      if (group.el._jsPlumbParentGroup) {\r\n        var ancestorOffset = this._computeOffsetByParentGroup(group.el._jsPlumbParentGroup);\r\n        parentGroupOffset.x += ancestorOffset.x;\r\n        parentGroupOffset.y += ancestorOffset.y;\r\n      }\r\n      return parentGroupOffset;\r\n    }\r\n  }, {\r\n    key: \"onStart\",\r\n    value: function onStart(params) {\r\n      var _this4 = this;\r\n      var el = params.drag.getDragElement();\r\n      var elOffset = this.instance.getPosition(el);\r\n      this.originalPosition = {\r\n        x: params.pos.x,\r\n        y: params.pos.y\r\n      };\r\n      if (el._jsPlumbParentGroup) {\r\n        this._dragOffset = this._computeOffsetByParentGroup(el._jsPlumbParentGroup);\r\n        this._currentDragParentGroup = el._jsPlumbParentGroup;\r\n      }\r\n      var cont = true;\r\n      var nd = el.getAttribute(ATTRIBUTE_NOT_DRAGGABLE);\r\n      if (this.instance.elementsDraggable === false || nd != null && nd !== FALSE$1) {\r\n        cont = false;\r\n      }\r\n      if (cont) {\r\n        this._groupLocations.length = 0;\r\n        this._intersectingGroups.length = 0;\r\n        this.instance.hoverSuspended = true;\r\n        var originalElement = params.drag.getDragElement(true),\r\n            descendants = originalElement.querySelectorAll(SELECTOR_MANAGED_ELEMENT),\r\n            ancestors = getAncestors(originalElement),\r\n            a = [];\r\n        Array.prototype.push.apply(a, descendants);\r\n        Array.prototype.push.apply(a, ancestors);\r\n        this._dragSelection.filterActiveSet(function (p) {\r\n          return a.indexOf(p.jel) === -1;\r\n        });\r\n        this._dragSelection.initialisePositions();\r\n        var _one = function _one(_el, dragGroup, dragGroupMemberSpec) {\r\n          if (!_el._isJsPlumbGroup || _this4.instance.allowNestedGroups) {\r\n            var isNotInAGroup = !_el._jsPlumbParentGroup;\r\n            var membersAreDroppable = isNotInAGroup || _el._jsPlumbParentGroup.dropOverride !== true;\r\n            var isGhostOrNotConstrained = !isNotInAGroup && (_el._jsPlumbParentGroup.ghost || _el._jsPlumbParentGroup.constrain !== true);\r\n            if (isNotInAGroup || membersAreDroppable && isGhostOrNotConstrained) {\r\n              forEach(_this4.instance.groupManager.getGroups(), function (group) {\r\n                var elementGroup = _el._jsPlumbGroup;\r\n                if (group.droppable !== false && group.enabled !== false && _el._jsPlumbGroup !== group && !_this4.instance.groupManager.isDescendant(group, elementGroup)) {\r\n                  var groupEl = group.el,\r\n                      groupElId = _this4.instance.getId(groupEl),\r\n                      p = _this4.instance.viewport.getPosition(groupElId),\r\n                      boundingRect = {\r\n                    x: p.x,\r\n                    y: p.y,\r\n                    w: p.w,\r\n                    h: p.h\r\n                  };\r\n                  var groupLocation = {\r\n                    el: groupEl,\r\n                    r: boundingRect,\r\n                    group: group\r\n                  };\r\n                  _this4._groupLocations.push(groupLocation);\r\n                  if (group !== _this4._currentDragParentGroup) {\r\n                    _this4.instance.addClass(groupEl, CLASS_DRAG_ACTIVE);\r\n                  }\r\n                }\r\n              });\r\n              _this4._groupLocations.sort(function (a, b) {\r\n                if (_this4.instance.groupManager.isDescendant(a.group, b.group)) {\r\n                  return -1;\r\n                } else if (_this4.instance.groupManager.isAncestor(b.group, a.group)) {\r\n                  return 1;\r\n                } else {\r\n                  return 0;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          _this4.instance.select({\r\n            source: _el\r\n          }).addClass(_this4.instance.elementDraggingClass + \" \" + _this4.instance.sourceElementDraggingClass, true);\r\n          _this4.instance.select({\r\n            target: _el\r\n          }).addClass(_this4.instance.elementDraggingClass + \" \" + _this4.instance.targetElementDraggingClass, true);\r\n          return _this4.instance.fire(EVENT_DRAG_START, {\r\n            el: _el,\r\n            e: params.e,\r\n            originalPosition: _this4.originalPosition,\r\n            pos: _this4.originalPosition,\r\n            dragGroup: dragGroup,\r\n            dragGroupMemberSpec: dragGroupMemberSpec\r\n          });\r\n        };\r\n        var elId = this.instance.getId(el);\r\n        this._currentDragGroup = this._dragGroupByElementIdMap[elId];\r\n        if (this._currentDragGroup && !isActiveDragGroupMember(this._currentDragGroup, el)) {\r\n          this._currentDragGroup = null;\r\n        }\r\n        var dragStartReturn = _one(el);\r\n        if (dragStartReturn === false) {\r\n          this._cleanup();\r\n          return false;\r\n        } else {\r\n          this._dragPayload = dragStartReturn;\r\n        }\r\n        if (this._currentDragGroup != null) {\r\n          this._currentDragGroupOffsets.clear();\r\n          this._currentDragGroupSizes.clear();\r\n          this._currentDragGroup.members.forEach(function (jel) {\r\n            var vp = _this4.instance.viewport.getPosition(jel.elId);\r\n            _this4._currentDragGroupOffsets.set(jel.elId, [{\r\n              x: vp.x - elOffset.x,\r\n              y: vp.y - elOffset.y\r\n            }, jel.el]);\r\n            _this4._currentDragGroupSizes.set(jel.elId, vp);\r\n            _this4._currentDragGroupOriginalPositions.set(jel.elId, {\r\n              x: vp.x,\r\n              y: vp.y\r\n            });\r\n            _one(jel.el, _this4._currentDragGroup, jel);\r\n          });\r\n        }\r\n      }\r\n      return cont;\r\n    }\r\n  }, {\r\n    key: \"addToDragGroup\",\r\n    value: function addToDragGroup(spec) {\r\n      var _this5 = this;\r\n      var details = decodeDragGroupSpec(this.instance, spec);\r\n      var dragGroup = this._dragGroupMap[details.id];\r\n      if (dragGroup == null) {\r\n        dragGroup = {\r\n          id: details.id,\r\n          members: new Set()\r\n        };\r\n        this._dragGroupMap[details.id] = dragGroup;\r\n      }\r\n      for (var _len = arguments.length, els = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        els[_key - 1] = arguments[_key];\r\n      }\r\n      this.removeFromDragGroup.apply(this, els);\r\n      forEach(els, function (el) {\r\n        var elId = _this5.instance.getId(el);\r\n        dragGroup.members.add({\r\n          elId: elId,\r\n          el: el,\r\n          active: details.active\r\n        });\r\n        _this5._dragGroupByElementIdMap[elId] = dragGroup;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"removeFromDragGroup\",\r\n    value: function removeFromDragGroup() {\r\n      var _this6 = this;\r\n      for (var _len2 = arguments.length, els = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        els[_key2] = arguments[_key2];\r\n      }\r\n      forEach(els, function (el) {\r\n        var id = _this6.instance.getId(el);\r\n        var dragGroup = _this6._dragGroupByElementIdMap[id];\r\n        if (dragGroup != null) {\r\n          var s = new Set();\r\n          dragGroup.members.forEach(function (member) {\r\n            if (member.el !== el) {\r\n              s.add(member);\r\n            }\r\n          });\r\n          dragGroup.members = s;\r\n          delete _this6._dragGroupByElementIdMap[id];\r\n        }\r\n      });\r\n    }\r\n  }, {\r\n    key: \"setDragGroupState\",\r\n    value: function setDragGroupState(active) {\r\n      var _this7 = this;\r\n      for (var _len3 = arguments.length, els = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\r\n        els[_key3 - 1] = arguments[_key3];\r\n      }\r\n      var elementIds = els.map(function (el) {\r\n        return _this7.instance.getId(el);\r\n      });\r\n      forEach(elementIds, function (id) {\r\n        var dragGroup = _this7._dragGroupByElementIdMap[id];\r\n        if (dragGroup != null) {\r\n          var member = getFromSetWithFunction(dragGroup.members, function (m) {\r\n            return m.elId === id;\r\n          });\r\n          if (member != null) {\r\n            member.active = active;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, {\r\n    key: \"clearDragGroup\",\r\n    value: function clearDragGroup(name) {\r\n      var _this8 = this;\r\n      var dragGroup = this._dragGroupMap[name];\r\n      if (dragGroup != null) {\r\n        dragGroup.members.forEach(function (member) {\r\n          delete _this8._dragGroupByElementIdMap[member.elId];\r\n        });\r\n        dragGroup.members.clear();\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_pruneOrOrphan\",\r\n    value: function _pruneOrOrphan(params, doNotTransferToAncestor, isDefinitelyNotInsideParent) {\r\n      var jel = params.el;\r\n      var orphanedPosition = {\r\n        pruned: false,\r\n        pos: null\r\n      };\r\n      if (isDefinitelyNotInsideParent || !isInsideParent(this.instance, jel, params.pos)) {\r\n        var group = jel._jsPlumbParentGroup;\r\n        if (group.prune) {\r\n          if (jel._isJsPlumbGroup) {\r\n            this.instance.removeGroup(jel._jsPlumbGroup);\r\n          } else {\r\n            group.remove(params.el, true);\r\n          }\r\n          orphanedPosition.pruned = true;\r\n        } else if (group.orphan) {\r\n          orphanedPosition.pos = this.instance.groupManager.orphan(params.el, doNotTransferToAncestor);\r\n          if (jel._isJsPlumbGroup) {\r\n            group.removeGroup(jel._jsPlumbGroup);\r\n          } else {\r\n            group.remove(params.el);\r\n          }\r\n        }\r\n      }\r\n      return orphanedPosition;\r\n    }\r\n  }]);\r\n  return ElementDragHandler;\r\n}();\r\n\r\nvar endpointMap$1 = {};\r\nvar endpointComputers = {};\r\nvar handlers = {};\r\nvar EndpointFactory = {\r\n  get: function get(ep, name, params) {\r\n    var e = endpointMap$1[name];\r\n    if (!e) {\r\n      throw {\r\n        message: \"jsPlumb: unknown endpoint type '\" + name + \"'\"\r\n      };\r\n    } else {\r\n      return new e(ep, params);\r\n    }\r\n  },\r\n  clone: function clone(epr) {\r\n    var handler = handlers[epr.type];\r\n    return EndpointFactory.get(epr.endpoint, epr.type, handler.getParams(epr));\r\n  },\r\n  compute: function compute(endpoint, anchorPoint, orientation, endpointStyle) {\r\n    var c = endpointComputers[endpoint.type];\r\n    if (c != null) {\r\n      return c(endpoint, anchorPoint, orientation, endpointStyle);\r\n    } else {\r\n      log(\"jsPlumb: cannot find endpoint calculator for endpoint of type \", endpoint.type);\r\n    }\r\n  },\r\n  registerHandler: function registerHandler(eph) {\r\n    handlers[eph.type] = eph;\r\n    endpointMap$1[eph.type] = eph.cls;\r\n    endpointComputers[eph.type] = eph.compute;\r\n  }\r\n};\r\n\r\nvar EndpointRepresentation = function () {\r\n  function EndpointRepresentation(endpoint, params) {\r\n    _classCallCheck(this, EndpointRepresentation);\r\n    this.endpoint = endpoint;\r\n    _defineProperty(this, \"typeId\", void 0);\r\n    _defineProperty(this, \"x\", void 0);\r\n    _defineProperty(this, \"y\", void 0);\r\n    _defineProperty(this, \"w\", void 0);\r\n    _defineProperty(this, \"h\", void 0);\r\n    _defineProperty(this, \"computedValue\", void 0);\r\n    _defineProperty(this, \"bounds\", EMPTY_BOUNDS());\r\n    _defineProperty(this, \"classes\", []);\r\n    _defineProperty(this, \"instance\", void 0);\r\n    _defineProperty(this, \"type\", void 0);\r\n    params = params || {};\r\n    this.instance = endpoint.instance;\r\n    if (endpoint.cssClass) {\r\n      this.classes.push(endpoint.cssClass);\r\n    }\r\n    if (params.cssClass) {\r\n      this.classes.push(params.cssClass);\r\n    }\r\n  }\r\n  _createClass(EndpointRepresentation, [{\r\n    key: \"addClass\",\r\n    value: function addClass(c) {\r\n      this.classes.push(c);\r\n      this.instance.addEndpointClass(this.endpoint, c);\r\n    }\r\n  }, {\r\n    key: \"removeClass\",\r\n    value: function removeClass(c) {\r\n      this.classes = this.classes.filter(function (_c) {\r\n        return _c !== c;\r\n      });\r\n      this.instance.removeEndpointClass(this.endpoint, c);\r\n    }\r\n  }, {\r\n    key: \"compute\",\r\n    value: function compute(anchorPoint, orientation, endpointStyle) {\r\n      this.computedValue = EndpointFactory.compute(this, anchorPoint, orientation, endpointStyle);\r\n      this.bounds.xmin = this.x;\r\n      this.bounds.ymin = this.y;\r\n      this.bounds.xmax = this.x + this.w;\r\n      this.bounds.ymax = this.y + this.h;\r\n    }\r\n  }, {\r\n    key: \"setVisible\",\r\n    value: function setVisible(v) {\r\n      this.instance.setEndpointVisible(this.endpoint, v);\r\n    }\r\n  }]);\r\n  return EndpointRepresentation;\r\n}();\r\n\r\nvar _opposites, _clockwiseOptions, _antiClockwiseOptions;\r\nvar FaceValues;\r\n(function (FaceValues) {\r\n  FaceValues[\"top\"] = \"top\";\r\n  FaceValues[\"left\"] = \"left\";\r\n  FaceValues[\"right\"] = \"right\";\r\n  FaceValues[\"bottom\"] = \"bottom\";\r\n})(FaceValues || (FaceValues = {}));\r\nvar TOP = FaceValues.top;\r\nvar LEFT = FaceValues.left;\r\nvar RIGHT = FaceValues.right;\r\nvar BOTTOM = FaceValues.bottom;\r\nvar X_AXIS_FACES = [LEFT, RIGHT];\r\nvar Y_AXIS_FACES = [TOP, BOTTOM];\r\nvar LightweightFloatingAnchor = function () {\r\n  function LightweightFloatingAnchor(instance, element, elementId) {\r\n    _classCallCheck(this, LightweightFloatingAnchor);\r\n    this.instance = instance;\r\n    this.element = element;\r\n    _defineProperty(this, \"isFloating\", true);\r\n    _defineProperty(this, \"isContinuous\", void 0);\r\n    _defineProperty(this, \"isDynamic\", void 0);\r\n    _defineProperty(this, \"locations\", []);\r\n    _defineProperty(this, \"currentLocation\", 0);\r\n    _defineProperty(this, \"locked\", false);\r\n    _defineProperty(this, \"cssClass\", '');\r\n    _defineProperty(this, \"timestamp\", null);\r\n    _defineProperty(this, \"type\", \"Floating\");\r\n    _defineProperty(this, \"id\", uuid());\r\n    _defineProperty(this, \"orientation\", [0, 0]);\r\n    _defineProperty(this, \"size\", void 0);\r\n    this.size = instance.viewport.getPosition(elementId);\r\n    this.locations.push({\r\n      x: 0.5,\r\n      y: 0.5,\r\n      ox: this.orientation[0],\r\n      oy: this.orientation[1],\r\n      offx: 0,\r\n      offy: 0,\r\n      iox: this.orientation[0],\r\n      ioy: this.orientation[1],\r\n      cls: ''\r\n    });\r\n  }\r\n  _createClass(LightweightFloatingAnchor, [{\r\n    key: \"_updateOrientationInRouter\",\r\n    value: function _updateOrientationInRouter() {\r\n      this.instance.router.setAnchorOrientation(this, [this.locations[0].ox, this.locations[0].oy]);\r\n    }\r\n  }, {\r\n    key: \"over\",\r\n    value: function over(endpoint) {\r\n      this.orientation = this.instance.router.getEndpointOrientation(endpoint);\r\n      this.locations[0].ox = this.orientation[0];\r\n      this.locations[0].oy = this.orientation[1];\r\n      this._updateOrientationInRouter();\r\n    }\r\n  }, {\r\n    key: \"out\",\r\n    value: function out() {\r\n      this.orientation = null;\r\n      this.locations[0].ox = this.locations[0].iox;\r\n      this.locations[0].oy = this.locations[0].ioy;\r\n      this._updateOrientationInRouter();\r\n    }\r\n  }]);\r\n  return LightweightFloatingAnchor;\r\n}();\r\nvar opposites = (_opposites = {}, _defineProperty(_opposites, TOP, BOTTOM), _defineProperty(_opposites, RIGHT, LEFT), _defineProperty(_opposites, LEFT, RIGHT), _defineProperty(_opposites, BOTTOM, TOP), _opposites);\r\nvar clockwiseOptions = (_clockwiseOptions = {}, _defineProperty(_clockwiseOptions, TOP, RIGHT), _defineProperty(_clockwiseOptions, RIGHT, BOTTOM), _defineProperty(_clockwiseOptions, LEFT, TOP), _defineProperty(_clockwiseOptions, BOTTOM, LEFT), _clockwiseOptions);\r\nvar antiClockwiseOptions = (_antiClockwiseOptions = {}, _defineProperty(_antiClockwiseOptions, TOP, LEFT), _defineProperty(_antiClockwiseOptions, RIGHT, TOP), _defineProperty(_antiClockwiseOptions, LEFT, BOTTOM), _defineProperty(_antiClockwiseOptions, BOTTOM, RIGHT), _antiClockwiseOptions);\r\nfunction getDefaultFace(a) {\r\n  return a.faces.length === 0 ? TOP : a.faces[0];\r\n}\r\nfunction _isFaceAvailable(a, face) {\r\n  return a.faces.indexOf(face) !== -1;\r\n}\r\nfunction _secondBest(a, edge) {\r\n  return (a.clockwise ? clockwiseOptions : antiClockwiseOptions)[edge];\r\n}\r\nfunction _lastChoice(a, edge) {\r\n  return (a.clockwise ? antiClockwiseOptions : clockwiseOptions)[edge];\r\n}\r\nfunction isEdgeSupported(a, edge) {\r\n  return a.lockedAxis == null ? a.lockedFace == null ? _isFaceAvailable(a, edge) === true : a.lockedFace === edge : a.lockedAxis.indexOf(edge) !== -1;\r\n}\r\nfunction verifyFace(a, edge) {\r\n  if (_isFaceAvailable(a, edge)) {\r\n    return edge;\r\n  } else if (_isFaceAvailable(a, opposites[edge])) {\r\n    return opposites[edge];\r\n  } else {\r\n    var secondBest = _secondBest(a, edge);\r\n    if (_isFaceAvailable(a, secondBest)) {\r\n      return secondBest;\r\n    } else {\r\n      var lastChoice = _lastChoice(a, edge);\r\n      if (_isFaceAvailable(a, lastChoice)) {\r\n        return lastChoice;\r\n      }\r\n    }\r\n  }\r\n  return edge;\r\n}\r\nvar _top = {\r\n  x: 0.5,\r\n  y: 0,\r\n  ox: 0,\r\n  oy: -1,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _bottom = {\r\n  x: 0.5,\r\n  y: 1,\r\n  ox: 0,\r\n  oy: 1,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _left = {\r\n  x: 0,\r\n  y: 0.5,\r\n  ox: -1,\r\n  oy: 0,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _right = {\r\n  x: 1,\r\n  y: 0.5,\r\n  ox: 1,\r\n  oy: 0,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _topLeft = {\r\n  x: 0,\r\n  y: 0,\r\n  ox: 0,\r\n  oy: -1,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _topRight = {\r\n  x: 1,\r\n  y: 0,\r\n  ox: 1,\r\n  oy: -1,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _bottomLeft = {\r\n  x: 0,\r\n  y: 1,\r\n  ox: 0,\r\n  oy: 1,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _bottomRight = {\r\n  x: 1,\r\n  y: 1,\r\n  ox: 0,\r\n  oy: 1,\r\n  offx: 0,\r\n  offy: 0\r\n},\r\n    _center = {\r\n  x: 0.5,\r\n  y: 0.5,\r\n  ox: 0,\r\n  oy: 0,\r\n  offx: 0,\r\n  offy: 0\r\n};\r\nvar namedValues = {\r\n  \"Top\": [_top],\r\n  \"Bottom\": [_bottom],\r\n  \"Left\": [_left],\r\n  \"Right\": [_right],\r\n  \"TopLeft\": [_topLeft],\r\n  \"TopRight\": [_topRight],\r\n  \"BottomLeft\": [_bottomLeft],\r\n  \"BottomRight\": [_bottomRight],\r\n  \"Center\": [_center],\r\n  \"AutoDefault\": [_top, _left, _bottom, _right]\r\n};\r\nvar namedContinuousValues = {\r\n  \"Continuous\": {\r\n    faces: [TOP, LEFT, BOTTOM, RIGHT]\r\n  },\r\n  \"ContinuousTop\": {\r\n    faces: [TOP]\r\n  },\r\n  \"ContinuousRight\": {\r\n    faces: [RIGHT]\r\n  },\r\n  \"ContinuousBottom\": {\r\n    faces: [BOTTOM]\r\n  },\r\n  \"ContinuousLeft\": {\r\n    faces: [LEFT]\r\n  },\r\n  \"ContinuousLeftRight\": {\r\n    faces: [LEFT, RIGHT]\r\n  },\r\n  \"ContinuousTopBottom\": {\r\n    faces: [TOP, BOTTOM]\r\n  }\r\n};\r\nfunction getNamedAnchor(name, params) {\r\n  params = params || {};\r\n  if (name === AnchorLocations.Perimeter) {\r\n    return _createPerimeterAnchor(params);\r\n  }\r\n  var a = namedValues[name];\r\n  if (a != null) {\r\n    return _createAnchor(name, map(a, function (_a) {\r\n      return extend({\r\n        iox: _a.ox,\r\n        ioy: _a.oy\r\n      }, _a);\r\n    }), params);\r\n  }\r\n  a = namedContinuousValues[name];\r\n  if (a != null) {\r\n    return _createContinuousAnchor(name, a.faces, params);\r\n  }\r\n  throw {\r\n    message: \"jsPlumb: unknown anchor type '\" + name + \"'\"\r\n  };\r\n}\r\nfunction _createAnchor(type, locations, params) {\r\n  return {\r\n    type: type,\r\n    locations: locations,\r\n    currentLocation: 0,\r\n    locked: false,\r\n    id: uuid(),\r\n    isFloating: false,\r\n    isContinuous: false,\r\n    isDynamic: locations.length > 1,\r\n    timestamp: null,\r\n    cssClass: params.cssClass || \"\"\r\n  };\r\n}\r\nfunction createFloatingAnchor(instance, element, elementId) {\r\n  return new LightweightFloatingAnchor(instance, element, elementId);\r\n}\r\nvar PROPERTY_CURRENT_FACE = \"currentFace\";\r\nfunction _createContinuousAnchor(type, faces, params) {\r\n  var ca = {\r\n    type: type,\r\n    locations: [],\r\n    currentLocation: 0,\r\n    locked: false,\r\n    id: uuid(),\r\n    cssClass: params.cssClass || \"\",\r\n    isFloating: false,\r\n    isContinuous: true,\r\n    timestamp: null,\r\n    faces: params.faces || faces,\r\n    lockedFace: null,\r\n    lockedAxis: null,\r\n    clockwise: !(params.clockwise === false),\r\n    __currentFace: null\r\n  };\r\n  Object.defineProperty(ca, PROPERTY_CURRENT_FACE, {\r\n    get: function get() {\r\n      return this.__currentFace;\r\n    },\r\n    set: function set(f) {\r\n      this.__currentFace = verifyFace(this, f);\r\n    }\r\n  });\r\n  return ca;\r\n}\r\nfunction isPrimitiveAnchorSpec(sa) {\r\n  return sa.length < 7 && sa.every(isNumber) || sa.length === 7 && sa.slice(0, 5).every(isNumber) && isString(sa[6]);\r\n}\r\nfunction makeLightweightAnchorFromSpec(spec) {\r\n  if (isString(spec)) {\r\n    return getNamedAnchor(spec, null);\r\n  } else if (Array.isArray(spec)) {\r\n    if (isPrimitiveAnchorSpec(spec)) {\r\n      var _spec = spec;\r\n      return _createAnchor(null, [{\r\n        x: _spec[0],\r\n        y: _spec[1],\r\n        ox: _spec[2],\r\n        oy: _spec[3],\r\n        offx: _spec[4] == null ? 0 : _spec[4],\r\n        offy: _spec[5] == null ? 0 : _spec[5],\r\n        iox: _spec[2],\r\n        ioy: _spec[3],\r\n        cls: _spec[6] || \"\"\r\n      }], {\r\n        cssClass: _spec[6] || \"\"\r\n      });\r\n    } else {\r\n      var locations = map(spec, function (aSpec) {\r\n        if (isString(aSpec)) {\r\n          var a = namedValues[aSpec];\r\n          return a != null ? extend({\r\n            iox: a[0].ox,\r\n            ioy: a[0].oy,\r\n            cls: \"\"\r\n          }, a[0]) : null;\r\n        } else if (isPrimitiveAnchorSpec(aSpec)) {\r\n          return {\r\n            x: aSpec[0],\r\n            y: aSpec[1],\r\n            ox: aSpec[2],\r\n            oy: aSpec[3],\r\n            offx: aSpec[4] == null ? 0 : aSpec[4],\r\n            offy: aSpec[5] == null ? 0 : aSpec[5],\r\n            iox: aSpec[2],\r\n            ioy: aSpec[3],\r\n            cls: aSpec[6] || \"\"\r\n          };\r\n        }\r\n      }).filter(function (ar) {\r\n        return ar != null;\r\n      });\r\n      return _createAnchor(\"Dynamic\", locations, {});\r\n    }\r\n  } else {\r\n    var sa = spec;\r\n    return getNamedAnchor(sa.type, sa.options);\r\n  }\r\n}\r\nfunction circleGenerator(anchorCount) {\r\n  var r = 0.5,\r\n      step = Math.PI * 2 / anchorCount,\r\n      a = [];\r\n  var current = 0;\r\n  for (var i = 0; i < anchorCount; i++) {\r\n    var x = r + r * Math.sin(current),\r\n        y = r + r * Math.cos(current);\r\n    a.push({\r\n      x: x,\r\n      y: y,\r\n      ox: 0,\r\n      oy: 0,\r\n      offx: 0,\r\n      offy: 0,\r\n      iox: 0,\r\n      ioy: 0,\r\n      cls: ''\r\n    });\r\n    current += step;\r\n  }\r\n  return a;\r\n}\r\nfunction _path(segments, anchorCount) {\r\n  var anchorsPerFace = anchorCount / segments.length,\r\n      a = [],\r\n      _computeFace = function _computeFace(x1, y1, x2, y2, fractionalLength, ox, oy) {\r\n    anchorsPerFace = anchorCount * fractionalLength;\r\n    var dx = (x2 - x1) / anchorsPerFace,\r\n        dy = (y2 - y1) / anchorsPerFace;\r\n    for (var i = 0; i < anchorsPerFace; i++) {\r\n      a.push({\r\n        x: x1 + dx * i,\r\n        y: y1 + dy * i,\r\n        ox: ox == null ? 0 : ox,\r\n        oy: oy == null ? 0 : oy,\r\n        offx: 0,\r\n        offy: 0,\r\n        iox: 0,\r\n        ioy: 0,\r\n        cls: ''\r\n      });\r\n    }\r\n  };\r\n  for (var i = 0; i < segments.length; i++) {\r\n    _computeFace.apply(null, segments[i]);\r\n  }\r\n  return a;\r\n}\r\nfunction shapeGenerator(faces, anchorCount) {\r\n  var s = [];\r\n  for (var i = 0; i < faces.length; i++) {\r\n    s.push([faces[i][0], faces[i][1], faces[i][2], faces[i][3], 1 / faces.length, faces[i][4], faces[i][5]]);\r\n  }\r\n  return _path(s, anchorCount);\r\n}\r\nfunction rectangleGenerator(anchorCount) {\r\n  return shapeGenerator([[0, 0, 1, 0, 0, -1], [1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1], [0, 1, 0, 0, -1, 0]], anchorCount);\r\n}\r\nfunction diamondGenerator(anchorCount) {\r\n  return shapeGenerator([[0.5, 0, 1, 0.5], [1, 0.5, 0.5, 1], [0.5, 1, 0, 0.5], [0, 0.5, 0.5, 0]], anchorCount);\r\n}\r\nfunction triangleGenerator(anchorCount) {\r\n  return shapeGenerator([[0.5, 0, 1, 1], [1, 1, 0, 1], [0, 1, 0.5, 0]], anchorCount);\r\n}\r\nfunction rotate$1(points, amountInDegrees) {\r\n  var o = [],\r\n      theta = amountInDegrees / 180 * Math.PI;\r\n  for (var i = 0; i < points.length; i++) {\r\n    var _x = points[i].x - 0.5,\r\n        _y = points[i].y - 0.5;\r\n    o.push({\r\n      x: 0.5 + (_x * Math.cos(theta) - _y * Math.sin(theta)),\r\n      y: 0.5 + (_x * Math.sin(theta) + _y * Math.cos(theta)),\r\n      ox: points[i].ox,\r\n      oy: points[i].oy,\r\n      offx: 0,\r\n      offy: 0,\r\n      iox: 0,\r\n      ioy: 0,\r\n      cls: ''\r\n    });\r\n  }\r\n  return o;\r\n}\r\nvar anchorGenerators = new Map();\r\nanchorGenerators.set(PerimeterAnchorShapes.Circle, circleGenerator);\r\nanchorGenerators.set(PerimeterAnchorShapes.Ellipse, circleGenerator);\r\nanchorGenerators.set(PerimeterAnchorShapes.Rectangle, rectangleGenerator);\r\nanchorGenerators.set(PerimeterAnchorShapes.Square, rectangleGenerator);\r\nanchorGenerators.set(PerimeterAnchorShapes.Diamond, diamondGenerator);\r\nanchorGenerators.set(PerimeterAnchorShapes.Triangle, triangleGenerator);\r\nfunction _createPerimeterAnchor(params) {\r\n  params = params || {};\r\n  var anchorCount = params.anchorCount || 60,\r\n      shape = params.shape;\r\n  if (!shape) {\r\n    throw new Error(\"no shape supplied to Perimeter Anchor type\");\r\n  }\r\n  if (!anchorGenerators.has(shape)) {\r\n    throw new Error(\"Shape [\" + shape + \"] is unknown by Perimeter Anchor type\");\r\n  }\r\n  var da = anchorGenerators.get(shape)(anchorCount);\r\n  if (params.rotation) {\r\n    da = rotate$1(da, params.rotation);\r\n  }\r\n  var a = _createAnchor(AnchorLocations.Perimeter, da, params);\r\n  var aa = extend(a, {\r\n    shape: shape\r\n  });\r\n  return aa;\r\n}\r\n\r\nvar ConnectionDragSelector = function () {\r\n  function ConnectionDragSelector(selector, def) {\r\n    var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    _classCallCheck(this, ConnectionDragSelector);\r\n    this.selector = selector;\r\n    this.def = def;\r\n    this.exclude = exclude;\r\n    _defineProperty(this, \"id\", void 0);\r\n    _defineProperty(this, \"redrop\", void 0);\r\n    this.id = uuid();\r\n    this.redrop = def.def.redrop || REDROP_POLICY_STRICT;\r\n  }\r\n  _createClass(ConnectionDragSelector, [{\r\n    key: \"setEnabled\",\r\n    value: function setEnabled(enabled) {\r\n      this.def.enabled = enabled;\r\n    }\r\n  }, {\r\n    key: \"isEnabled\",\r\n    value: function isEnabled() {\r\n      return this.def.enabled !== false;\r\n    }\r\n  }]);\r\n  return ConnectionDragSelector;\r\n}();\r\nvar REDROP_POLICY_STRICT = \"strict\";\r\nvar REDROP_POLICY_ANY = \"any\";\r\nvar REDROP_POLICY_ANY_SOURCE = \"anySource\";\r\nvar REDROP_POLICY_ANY_TARGET = \"anyTarget\";\r\nvar REDROP_POLICY_ANY_SOURCE_OR_TARGET = \"anySourceOrTarget\";\r\n\r\nfunction _makeFloatingEndpoint(ep, endpoint, referenceCanvas, sourceElement, sourceElementId, instance) {\r\n  var floatingAnchor = createFloatingAnchor(instance, sourceElement, sourceElementId);\r\n  var p = {\r\n    paintStyle: ep.getPaintStyle(),\r\n    preparedAnchor: floatingAnchor,\r\n    element: sourceElement,\r\n    scope: ep.scope,\r\n    cssClass: [CLASS_ENDPOINT_FLOATING, ep.cssClass].join(\" \")\r\n  };\r\n  if (endpoint != null) {\r\n    if (isAssignableFrom(endpoint, EndpointRepresentation)) {\r\n      p.existingEndpoint = endpoint;\r\n    } else {\r\n      p.endpoint = endpoint;\r\n    }\r\n  }\r\n  var actualEndpoint = instance._internal_newEndpoint(p);\r\n  instance._paintEndpoint(actualEndpoint, {});\r\n  return actualEndpoint;\r\n}\r\nfunction selectorFilter(evt, _el, selector, _instance, negate) {\r\n  var t = evt.target || evt.srcElement,\r\n      ok = false,\r\n      sel = _instance.getSelector(_el, selector);\r\n  for (var j = 0; j < sel.length; j++) {\r\n    if (sel[j] === t) {\r\n      ok = true;\r\n      break;\r\n    }\r\n  }\r\n  return negate ? !ok : ok;\r\n}\r\nvar SELECTOR_DRAG_ACTIVE_OR_HOVER = cls(CLASS_DRAG_ACTIVE, CLASS_DRAG_HOVER);\r\nvar SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA = \"sourceSelectorEndpoint\";\r\nvar EndpointDragHandler = function () {\r\n  function EndpointDragHandler(instance) {\r\n    _classCallCheck(this, EndpointDragHandler);\r\n    this.instance = instance;\r\n    _defineProperty(this, \"jpc\", void 0);\r\n    _defineProperty(this, \"existingJpc\", void 0);\r\n    _defineProperty(this, \"_originalAnchorSpec\", void 0);\r\n    _defineProperty(this, \"ep\", void 0);\r\n    _defineProperty(this, \"endpointRepresentation\", void 0);\r\n    _defineProperty(this, \"canvasElement\", void 0);\r\n    _defineProperty(this, \"_activeDefinition\", void 0);\r\n    _defineProperty(this, \"placeholderInfo\", {\r\n      id: null,\r\n      element: null\r\n    });\r\n    _defineProperty(this, \"floatingIndex\", void 0);\r\n    _defineProperty(this, \"floatingId\", void 0);\r\n    _defineProperty(this, \"floatingElement\", void 0);\r\n    _defineProperty(this, \"floatingEndpoint\", void 0);\r\n    _defineProperty(this, \"floatingAnchor\", void 0);\r\n    _defineProperty(this, \"_stopped\", void 0);\r\n    _defineProperty(this, \"inPlaceCopy\", void 0);\r\n    _defineProperty(this, \"endpointDropTargets\", []);\r\n    _defineProperty(this, \"currentDropTarget\", null);\r\n    _defineProperty(this, \"payload\", void 0);\r\n    _defineProperty(this, \"floatingConnections\", {});\r\n    _defineProperty(this, \"_forceReattach\", void 0);\r\n    _defineProperty(this, \"_forceDetach\", void 0);\r\n    _defineProperty(this, \"mousedownHandler\", void 0);\r\n    _defineProperty(this, \"mouseupHandler\", void 0);\r\n    _defineProperty(this, \"selector\", cls(CLASS_ENDPOINT));\r\n    var container = instance.getContainer();\r\n    this.mousedownHandler = this._mousedownHandler.bind(this);\r\n    this.mouseupHandler = this._mouseupHandler.bind(this);\r\n    instance.on(container, EVENT_MOUSEDOWN, SELECTOR_MANAGED_ELEMENT, this.mousedownHandler);\r\n    instance.on(container, EVENT_MOUSEUP, [SELECTOR_MANAGED_ELEMENT, cls(CLASS_ENDPOINT)].join(\",\"), this.mouseupHandler);\r\n  }\r\n  _createClass(EndpointDragHandler, [{\r\n    key: \"_resolveDragParent\",\r\n    value: function _resolveDragParent(def, eventTarget) {\r\n      var container = this.instance.getContainer();\r\n      var parent = findParent(eventTarget, SELECTOR_MANAGED_ELEMENT, container, true);\r\n      if (def.parentSelector != null) {\r\n        var child = findParent(eventTarget, def.parentSelector, container, true);\r\n        if (child != null) {\r\n          parent = findParent(child.parentNode, SELECTOR_MANAGED_ELEMENT, container, false);\r\n        }\r\n        return child || parent;\r\n      } else {\r\n        return parent;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_mousedownHandler\",\r\n    value: function _mousedownHandler(e) {\r\n      var sourceEl;\r\n      var sourceSelector;\r\n      if (e.which === 3 || e.button === 2) {\r\n        return;\r\n      }\r\n      var eventTarget = e.target || e.srcElement;\r\n      sourceSelector = this._getSourceDefinition(e);\r\n      if (sourceSelector != null) {\r\n        sourceEl = this._resolveDragParent(sourceSelector.def.def, eventTarget);\r\n        if (sourceEl == null || sourceEl.getAttribute(ATTRIBUTE_JTK_ENABLED) === FALSE$1) {\r\n          return;\r\n        }\r\n      }\r\n      if (sourceSelector) {\r\n        var sourceElement = e.currentTarget,\r\n            def;\r\n        if (eventTarget.getAttribute(ATTRIBUTE_JTK_ENABLED) !== FALSE$1) {\r\n          consume(e);\r\n          this._activeDefinition = sourceSelector;\r\n          def = sourceSelector.def.def;\r\n          if (def.canAcceptNewConnection != null && !def.canAcceptNewConnection(sourceEl, e)) {\r\n            return false;\r\n          }\r\n          var elxy = getPositionOnElement(e, sourceEl, this.instance.currentZoom);\r\n          var tempEndpointParams = {\r\n            element: sourceEl\r\n          };\r\n          extend(tempEndpointParams, def);\r\n          tempEndpointParams.isTemporarySource = true;\r\n          if (def.scope) {\r\n            tempEndpointParams.scope = def.scope;\r\n          } else {\r\n            var scopeFromElement = eventTarget.getAttribute(ATTRIBUTE_JTK_SCOPE);\r\n            if (scopeFromElement != null) {\r\n              tempEndpointParams.scope = scopeFromElement;\r\n            }\r\n          }\r\n          var extractedParameters = def.parameterExtractor ? def.parameterExtractor(sourceEl, eventTarget, e) : {};\r\n          tempEndpointParams = merge(tempEndpointParams, extractedParameters);\r\n          if (tempEndpointParams.maxConnections != null && tempEndpointParams.maxConnections >= 0) {\r\n            var sourceCount = this.instance.select({\r\n              source: sourceEl\r\n            }).length;\r\n            if (sourceCount >= tempEndpointParams.maxConnections) {\r\n              consume(e);\r\n              if (def.onMaxConnections) {\r\n                def.onMaxConnections({\r\n                  element: sourceEl,\r\n                  maxConnections: tempEndpointParams.maxConnections\r\n                }, e);\r\n              }\r\n              e.stopImmediatePropagation && e.stopImmediatePropagation();\r\n              return false;\r\n            }\r\n          }\r\n          if (def.anchorPositionFinder) {\r\n            var maybeAnchorSpec = def.anchorPositionFinder(sourceEl, elxy, def, e);\r\n            if (maybeAnchorSpec != null) {\r\n              tempEndpointParams.anchor = maybeAnchorSpec;\r\n            }\r\n          }\r\n          this._originalAnchorSpec = tempEndpointParams.anchor || (this.instance.areDefaultAnchorsSet() ? this.instance.defaults.anchors[0] : this.instance.defaults.anchor);\r\n          var _originalAnchor = this.instance.router.prepareAnchor(this._originalAnchorSpec);\r\n          var anchorSpecToUse = [elxy.x, elxy.y, 0, 0];\r\n          if (_originalAnchor.locations.length > 0) {\r\n            anchorSpecToUse[2] = _originalAnchor.locations[0].ox;\r\n            anchorSpecToUse[3] = _originalAnchor.locations[0].oy;\r\n          } else if (_originalAnchor.isContinuous) {\r\n            var dx = elxy.x < 0.5 ? elxy.x : 1 - elxy.x;\r\n            var dy = elxy.y < 0.5 ? elxy.y : 1 - elxy.y;\r\n            anchorSpecToUse[2] = dx < dy ? elxy.x < 0.5 ? -1 : 1 : 0;\r\n            anchorSpecToUse[3] = dy < dx ? elxy.y < 0.5 ? -1 : 1 : 0;\r\n          }\r\n          tempEndpointParams.anchor = anchorSpecToUse;\r\n          tempEndpointParams.deleteOnEmpty = true;\r\n          this.ep = this.instance._internal_newEndpoint(tempEndpointParams);\r\n          var payload = {};\r\n          if (def.extract) {\r\n            for (var att in def.extract) {\r\n              var v = eventTarget.getAttribute(att);\r\n              if (v) {\r\n                payload[def.extract[att]] = v;\r\n              }\r\n            }\r\n            this.ep.mergeParameters(payload);\r\n          }\r\n          if (tempEndpointParams.uniqueEndpoint) {\r\n            var elementId = this.ep.elementId;\r\n            var existingUniqueEndpoint = this.instance.getManagedData(elementId, SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA, sourceSelector.id);\r\n            if (existingUniqueEndpoint == null) {\r\n              this.instance.setManagedData(elementId, SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA, sourceSelector.id, this.ep);\r\n              this.ep.deleteOnEmpty = false;\r\n            } else {\r\n              this.ep.finalEndpoint = existingUniqueEndpoint;\r\n            }\r\n          }\r\n          sourceElement._jsPlumbOrphanedEndpoints = sourceElement._jsPlumbOrphanedEndpoints || [];\r\n          sourceElement._jsPlumbOrphanedEndpoints.push(this.ep);\r\n          this.instance.trigger(this.ep.endpoint.canvas, EVENT_MOUSEDOWN, e, payload);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_mouseupHandler\",\r\n    value: function _mouseupHandler(e) {\r\n      var el = e.currentTarget || e.srcElement;\r\n      if (el._jsPlumbOrphanedEndpoints) {\r\n        each(el._jsPlumbOrphanedEndpoints, this.instance._maybePruneEndpoint.bind(this.instance));\r\n        el._jsPlumbOrphanedEndpoints.length = 0;\r\n      }\r\n      this._activeDefinition = null;\r\n    }\r\n  }, {\r\n    key: \"onDragInit\",\r\n    value: function onDragInit(el) {\r\n      var ipco = getElementPosition(el, this.instance),\r\n          ips = getElementSize(el, this.instance);\r\n      this._makeDraggablePlaceholder(ipco, ips);\r\n      this.placeholderInfo.element.jtk = el.jtk;\r\n      return this.placeholderInfo.element;\r\n    }\r\n  }, {\r\n    key: \"onDragAbort\",\r\n    value: function onDragAbort(el) {\r\n      this._cleanupDraggablePlaceholder();\r\n    }\r\n  }, {\r\n    key: \"_makeDraggablePlaceholder\",\r\n    value: function _makeDraggablePlaceholder(ipco, ips) {\r\n      this.placeholderInfo = this.placeholderInfo || {};\r\n      var n = createElement(ELEMENT_DIV, {\r\n        position: \"absolute\"\r\n      });\r\n      this.instance._appendElementToContainer(n);\r\n      var id = this.instance.getId(n);\r\n      this.instance.setPosition(n, ipco);\r\n      n.style.width = ips.w + \"px\";\r\n      n.style.height = ips.h + \"px\";\r\n      this.instance.manage(n);\r\n      this.placeholderInfo.id = id;\r\n      this.placeholderInfo.element = n;\r\n      return n;\r\n    }\r\n  }, {\r\n    key: \"_cleanupDraggablePlaceholder\",\r\n    value: function _cleanupDraggablePlaceholder() {\r\n      if (this.placeholderInfo.element) {\r\n        this.instance.unmanage(this.placeholderInfo.element, true);\r\n        delete this.placeholderInfo.element;\r\n        delete this.placeholderInfo.id;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      var c = this.instance.getContainer();\r\n      this.instance.off(c, EVENT_MOUSEUP, this.mouseupHandler);\r\n      this.instance.off(c, EVENT_MOUSEDOWN, this.mousedownHandler);\r\n    }\r\n  }, {\r\n    key: \"init\",\r\n    value: function init(drag) {}\r\n  }, {\r\n    key: \"startNewConnectionDrag\",\r\n    value: function startNewConnectionDrag(scope, data) {\r\n      this.jpc = this.instance._newConnection({\r\n        sourceEndpoint: this.ep,\r\n        targetEndpoint: this.floatingEndpoint,\r\n        source: this.ep.element,\r\n        target: this.placeholderInfo.element,\r\n        paintStyle: this.ep.connectorStyle,\r\n        hoverPaintStyle: this.ep.connectorHoverStyle,\r\n        connector: this.ep.connector,\r\n        overlays: this.ep.connectorOverlays,\r\n        type: this.ep.edgeType,\r\n        cssClass: this.ep.connectorClass,\r\n        hoverClass: this.ep.connectorHoverClass,\r\n        scope: scope,\r\n        data: data\r\n      });\r\n      this.jpc.pending = true;\r\n      this.jpc.addClass(this.instance.draggingClass);\r\n      this.ep.addClass(this.instance.draggingClass);\r\n      this.instance.fire(EVENT_CONNECTION_DRAG, this.jpc);\r\n    }\r\n  }, {\r\n    key: \"startExistingConnectionDrag\",\r\n    value: function startExistingConnectionDrag() {\r\n      this.existingJpc = true;\r\n      this.instance.setHover(this.jpc, false);\r\n      var anchorIdx = this.jpc.endpoints[0].id === this.ep.id ? 0 : 1;\r\n      this.ep.detachFromConnection(this.jpc, null, true);\r\n      this.floatingEndpoint.addConnection(this.jpc);\r\n      this.instance.fire(EVENT_CONNECTION_DRAG, this.jpc);\r\n      this.instance.sourceOrTargetChanged(this.jpc.endpoints[anchorIdx].elementId, this.placeholderInfo.id, this.jpc, this.placeholderInfo.element, anchorIdx);\r\n      this.jpc.suspendedEndpoint = this.jpc.endpoints[anchorIdx];\r\n      this.jpc.suspendedElement = this.jpc.endpoints[anchorIdx].element;\r\n      this.jpc.suspendedElementId = this.jpc.endpoints[anchorIdx].elementId;\r\n      this.jpc.suspendedElementType = anchorIdx === 0 ? SOURCE : TARGET;\r\n      this.instance.setHover(this.jpc.suspendedEndpoint, false);\r\n      this.floatingEndpoint.referenceEndpoint = this.jpc.suspendedEndpoint;\r\n      this.floatingEndpoint.mergeParameters(this.jpc.suspendedEndpoint.parameters);\r\n      this.jpc.endpoints[anchorIdx] = this.floatingEndpoint;\r\n      this.jpc.addClass(this.instance.draggingClass);\r\n      this.floatingId = this.placeholderInfo.id;\r\n      this.floatingIndex = anchorIdx;\r\n      this.instance._refreshEndpoint(this.ep);\r\n    }\r\n  }, {\r\n    key: \"_shouldStartDrag\",\r\n    value: function _shouldStartDrag() {\r\n      var _continue = true;\r\n      if (!this.ep.enabled) {\r\n        _continue = false;\r\n      }\r\n      if (this.jpc == null && !this.ep.isSource && !this.ep.isTemporarySource) {\r\n        _continue = false;\r\n      }\r\n      if (this.ep.isSource && this.ep.isFull() && !(this.jpc != null && this.ep.dragAllowedWhenFull)) {\r\n        _continue = false;\r\n      }\r\n      if (this.jpc != null && !this.jpc.isDetachable(this.ep)) {\r\n        if (this.ep.isFull()) {\r\n          _continue = false;\r\n        } else {\r\n          this.jpc = null;\r\n        }\r\n      }\r\n      var payload = {};\r\n      var beforeDrag = this.instance.checkCondition(this.jpc == null ? INTERCEPT_BEFORE_DRAG : INTERCEPT_BEFORE_START_DETACH, {\r\n        endpoint: this.ep,\r\n        source: this.ep.element,\r\n        sourceId: this.ep.elementId,\r\n        connection: this.jpc\r\n      });\r\n      if (beforeDrag === false) {\r\n        _continue = false;\r\n      }\r\n      else if (_typeof(beforeDrag) === \"object\") {\r\n        payload = beforeDrag;\r\n        extend(payload, this.payload || {});\r\n      } else {\r\n        payload = this.payload || {};\r\n      }\r\n      return [_continue, payload];\r\n    }\r\n  }, {\r\n    key: \"_createFloatingEndpoint\",\r\n    value: function _createFloatingEndpoint(canvasElement) {\r\n      var endpointToFloat = this.ep.endpoint;\r\n      if (this.ep.edgeType != null) {\r\n        var aae = this.instance._deriveEndpointAndAnchorSpec(this.ep.edgeType);\r\n        endpointToFloat = aae.endpoints[1];\r\n      }\r\n      this.floatingEndpoint = _makeFloatingEndpoint(this.ep, endpointToFloat, canvasElement, this.placeholderInfo.element, this.placeholderInfo.id, this.instance);\r\n      this.floatingAnchor = this.floatingEndpoint._anchor;\r\n      this.floatingEndpoint.deleteOnEmpty = true;\r\n      this.floatingElement = this.floatingEndpoint.endpoint.canvas;\r\n      this.floatingId = this.instance.getId(this.floatingElement);\r\n    }\r\n  }, {\r\n    key: \"_populateTargets\",\r\n    value: function _populateTargets(canvasElement, event) {\r\n      var _this = this;\r\n      var isSourceDrag = this.jpc && this.jpc.endpoints[0] === this.ep;\r\n      var boundingRect;\r\n      var matchingEndpoints = this.instance.getContainer().querySelectorAll([\".\", CLASS_ENDPOINT, \"[\", ATTRIBUTE_SCOPE_PREFIX, this.ep.scope, \"]:not(.\", CLASS_ENDPOINT_FLOATING, \")\"].join(\"\"));\r\n      forEach(matchingEndpoints, function (candidate) {\r\n        if ((_this.jpc != null || candidate !== canvasElement) && candidate !== _this.floatingElement && (_this.jpc != null || !candidate.jtk.endpoint.isFull())) {\r\n          if (isSourceDrag && candidate.jtk.endpoint.isSource || !isSourceDrag && candidate.jtk.endpoint.isTarget) {\r\n            var o = getElementPosition(candidate, _this.instance),\r\n                s = getElementSize(candidate, _this.instance);\r\n            boundingRect = {\r\n              x: o.x,\r\n              y: o.y,\r\n              w: s.w,\r\n              h: s.h\r\n            };\r\n            _this.endpointDropTargets.push({\r\n              el: candidate,\r\n              targetEl: candidate,\r\n              r: boundingRect,\r\n              endpoint: candidate.jtk.endpoint,\r\n              def: null\r\n            });\r\n            _this.instance.addClass(candidate, CLASS_DRAG_ACTIVE);\r\n          }\r\n        }\r\n      });\r\n      if (isSourceDrag) {\r\n        var sourceDef = getWithFunction(this.instance.sourceSelectors, function (sSel) {\r\n          return sSel.isEnabled() && (sSel.def.def.scope == null || sSel.def.def.scope === _this.ep.scope);\r\n        });\r\n        if (sourceDef != null) {\r\n          var targetZones = this._findTargetZones(sourceDef);\r\n          forEach(targetZones, function (el) {\r\n            if (el.getAttribute(ATTRIBUTE_JTK_ENABLED) !== FALSE$1) {\r\n              var scopeFromElement = el.getAttribute(ATTRIBUTE_JTK_SCOPE);\r\n              if (scopeFromElement != null && scopeFromElement !== _this.ep.scope) {\r\n                return;\r\n              }\r\n              var d = {\r\n                r: null,\r\n                el: el\r\n              };\r\n              d.targetEl = findParent(el, SELECTOR_MANAGED_ELEMENT, _this.instance.getContainer(), true);\r\n              var o = getElementPosition(d.el, _this.instance),\r\n                  s = getElementSize(d.el, _this.instance);\r\n              d.r = {\r\n                x: o.x,\r\n                y: o.y,\r\n                w: s.w,\r\n                h: s.h\r\n              };\r\n              if (sourceDef.def.def.rank != null) {\r\n                d.rank = sourceDef.def.def.rank;\r\n              }\r\n              d.def = sourceDef.def;\r\n              _this.endpointDropTargets.push(d);\r\n              _this.instance.addClass(d.targetEl, CLASS_DRAG_ACTIVE);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        var targetDefs = getAllWithFunction(this.instance.targetSelectors, function (tSel) {\r\n          return tSel.isEnabled();\r\n        });\r\n        targetDefs.forEach(function (targetDef) {\r\n          var targetZones = _this._findTargetZones(targetDef);\r\n          forEach(targetZones, function (el) {\r\n            if (el.getAttribute(ATTRIBUTE_JTK_ENABLED) !== FALSE$1) {\r\n              var scopeFromElement = el.getAttribute(ATTRIBUTE_JTK_SCOPE);\r\n              if (scopeFromElement != null && scopeFromElement !== _this.ep.scope) {\r\n                return;\r\n              }\r\n              var d = {\r\n                r: null,\r\n                el: el\r\n              };\r\n              if (targetDef.def.def.parentSelector != null) {\r\n                d.targetEl = findParent(el, targetDef.def.def.parentSelector, _this.instance.getContainer(), true);\r\n              }\r\n              if (d.targetEl == null) {\r\n                d.targetEl = findParent(el, SELECTOR_MANAGED_ELEMENT, _this.instance.getContainer(), true);\r\n              }\r\n              if (targetDef.def.def.allowLoopback === false || _this._activeDefinition && _this._activeDefinition.def.def.allowLoopback === false) {\r\n                if (d.targetEl === _this.ep.element) {\r\n                  return;\r\n                }\r\n              }\r\n              if (targetDef.def.def.canAcceptNewConnection != null && !targetDef.def.def.canAcceptNewConnection(d.targetEl, event)) {\r\n                return;\r\n              }\r\n              var maxConnections = targetDef.def.def.maxConnections;\r\n              if (maxConnections != null && maxConnections !== -1) {\r\n                if (_this.instance.select({\r\n                  target: d.targetEl\r\n                }).length >= maxConnections) {\r\n                  return;\r\n                }\r\n              }\r\n              var o = getElementPosition(el, _this.instance),\r\n                  s = getElementSize(el, _this.instance);\r\n              d.r = {\r\n                x: o.x,\r\n                y: o.y,\r\n                w: s.w,\r\n                h: s.h\r\n              };\r\n              d.def = targetDef.def;\r\n              if (targetDef.def.def.rank != null) {\r\n                d.rank = targetDef.def.def.rank;\r\n              }\r\n              _this.endpointDropTargets.push(d);\r\n              _this.instance.addClass(d.targetEl, CLASS_DRAG_ACTIVE);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      this.endpointDropTargets.sort(function (a, b) {\r\n        if (a.targetEl._isJsPlumbGroup && !b.targetEl._isJsPlumbGroup) {\r\n          return 1;\r\n        } else if (!a.targetEl._isJsPlumbGroup && b.targetEl._isJsPlumbGroup) {\r\n          return -1;\r\n        } else {\r\n          if (a.targetEl._isJsPlumbGroup && b.targetEl._isJsPlumbGroup) {\r\n            if (_this.instance.groupManager.isAncestor(a.targetEl._jsPlumbGroup, b.targetEl._jsPlumbGroup)) {\r\n              return -1;\r\n            } else if (_this.instance.groupManager.isAncestor(b.targetEl._jsPlumbGroup, a.targetEl._jsPlumbGroup)) {\r\n              return 1;\r\n            }\r\n          } else {\r\n            if (a.rank != null && b.rank != null) {\r\n              if (a.rank > b.rank) {\r\n                return -1;\r\n              } else if (a.rank < b.rank) {\r\n                return 1;\r\n              } else ;\r\n            } else {\r\n              return 0;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, {\r\n    key: \"_findTargetZones\",\r\n    value: function _findTargetZones(dragSelector) {\r\n      var targetZonesSelector;\r\n      if (dragSelector.redrop === REDROP_POLICY_ANY) {\r\n        var t = this.instance.targetSelectors.map(function (s) {\r\n          return s.selector;\r\n        });\r\n        t.push.apply(t, _toConsumableArray(this.instance.sourceSelectors.map(function (s) {\r\n          return s.selector;\r\n        })));\r\n        t.push(SELECTOR_MANAGED_ELEMENT);\r\n        targetZonesSelector = t.join(\",\");\r\n      } else if (dragSelector.redrop === REDROP_POLICY_STRICT) {\r\n        targetZonesSelector = dragSelector.selector;\r\n      } else if (dragSelector.redrop === REDROP_POLICY_ANY_SOURCE) {\r\n        targetZonesSelector = this.instance.sourceSelectors.map(function (s) {\r\n          return s.selector;\r\n        }).join(\",\");\r\n      } else if (dragSelector.redrop === REDROP_POLICY_ANY_TARGET) {\r\n        targetZonesSelector = this.instance.targetSelectors.map(function (s) {\r\n          return s.selector;\r\n        }).join(\",\");\r\n      } else if (dragSelector.redrop === REDROP_POLICY_ANY_SOURCE_OR_TARGET) {\r\n        var _t = this.instance.targetSelectors.map(function (s) {\r\n          return s.selector;\r\n        });\r\n        _t.push.apply(_t, _toConsumableArray(this.instance.sourceSelectors.map(function (s) {\r\n          return s.selector;\r\n        })));\r\n        targetZonesSelector = _t.join(\",\");\r\n      }\r\n      return this.instance.getContainer().querySelectorAll(targetZonesSelector);\r\n    }\r\n  }, {\r\n    key: \"onStart\",\r\n    value: function onStart(p) {\r\n      this.endpointDropTargets.length = 0;\r\n      this.currentDropTarget = null;\r\n      this._stopped = false;\r\n      var dragEl = p.drag.getDragElement();\r\n      this.ep = dragEl.jtk.endpoint;\r\n      if (!this.ep) {\r\n        return false;\r\n      }\r\n      this.endpointRepresentation = this.ep.endpoint;\r\n      this.canvasElement = this.endpointRepresentation.canvas;\r\n      this.jpc = this.ep.connectorSelector();\r\n      var _this$_shouldStartDra = this._shouldStartDrag(),\r\n          _this$_shouldStartDra2 = _slicedToArray(_this$_shouldStartDra, 2),\r\n          _continue = _this$_shouldStartDra2[0],\r\n          payload = _this$_shouldStartDra2[1];\r\n      if (_continue === false) {\r\n        this._stopped = true;\r\n        return false;\r\n      }\r\n      this.instance.setHover(this.ep, false);\r\n      this.instance.isConnectionBeingDragged = true;\r\n      if (this.jpc && !this.ep.isFull() && this.ep.isSource) {\r\n        this.jpc = null;\r\n      }\r\n      this._createFloatingEndpoint(this.canvasElement);\r\n      this._populateTargets(this.canvasElement, p.e);\r\n      if (this.jpc == null) {\r\n        this.startNewConnectionDrag(this.ep.scope, payload);\r\n      } else {\r\n        this.startExistingConnectionDrag();\r\n      }\r\n      this._registerFloatingConnection(this.placeholderInfo, this.jpc);\r\n      this.instance.currentlyDragging = true;\r\n    }\r\n  }, {\r\n    key: \"onBeforeStart\",\r\n    value: function onBeforeStart(beforeStartParams) {\r\n      this.payload = beforeStartParams.e.payload || {};\r\n    }\r\n  }, {\r\n    key: \"onDrag\",\r\n    value: function onDrag(params) {\r\n      if (this._stopped) {\r\n        return true;\r\n      }\r\n      if (this.placeholderInfo.element) {\r\n        var floatingElementSize = getElementSize(this.floatingElement, this.instance);\r\n        this.instance.setElementPosition(this.placeholderInfo.element, params.pos.x, params.pos.y);\r\n        var boundingRect = {\r\n          x: params.pos.x,\r\n          y: params.pos.y,\r\n          w: floatingElementSize.w,\r\n          h: floatingElementSize.h\r\n        },\r\n            newDropTarget,\r\n            idx,\r\n            _cont;\r\n        for (var i = 0; i < this.endpointDropTargets.length; i++) {\r\n          if (intersects(boundingRect, this.endpointDropTargets[i].r)) {\r\n            newDropTarget = this.endpointDropTargets[i];\r\n            break;\r\n          }\r\n        }\r\n        if (newDropTarget !== this.currentDropTarget && this.currentDropTarget != null) {\r\n          idx = this._getFloatingAnchorIndex();\r\n          this.instance.removeClass(this.currentDropTarget.el, CLASS_DRAG_HOVER);\r\n          if (this.currentDropTarget.endpoint) {\r\n            this.currentDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropAllowedClass);\r\n            this.currentDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropForbiddenClass);\r\n          }\r\n          this.floatingAnchor.out();\r\n        }\r\n        if (newDropTarget != null) {\r\n          this.instance.addClass(newDropTarget.el, CLASS_DRAG_HOVER);\r\n          idx = this._getFloatingAnchorIndex();\r\n          if (newDropTarget.endpoint != null) {\r\n            _cont = newDropTarget.endpoint.isSource && idx === 0 || newDropTarget.endpoint.isTarget && idx !== 0 || this.jpc.suspendedEndpoint && newDropTarget.endpoint.referenceEndpoint && newDropTarget.endpoint.referenceEndpoint.id === this.jpc.suspendedEndpoint.id;\r\n            if (_cont) {\r\n              var bb = this.instance.checkCondition(CHECK_DROP_ALLOWED, {\r\n                sourceEndpoint: this.jpc.endpoints[idx],\r\n                targetEndpoint: newDropTarget.endpoint.endpoint,\r\n                connection: this.jpc\r\n              });\r\n              if (bb) {\r\n                newDropTarget.endpoint.endpoint.addClass(this.instance.endpointDropAllowedClass);\r\n                newDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropForbiddenClass);\r\n              } else {\r\n                newDropTarget.endpoint.endpoint.removeClass(this.instance.endpointDropAllowedClass);\r\n                newDropTarget.endpoint.endpoint.addClass(this.instance.endpointDropForbiddenClass);\r\n              }\r\n              this.floatingAnchor.over(newDropTarget.endpoint);\r\n              this.instance._paintConnection(this.jpc);\r\n            } else {\r\n              newDropTarget = null;\r\n            }\r\n          }\r\n        }\r\n        this.currentDropTarget = newDropTarget;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_maybeCleanup\",\r\n    value: function _maybeCleanup(ep) {\r\n      if (ep._mtNew && ep.connections.length === 0) {\r\n        this.instance.deleteEndpoint(ep);\r\n      } else {\r\n        delete ep._mtNew;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_reattachOrDiscard\",\r\n    value: function _reattachOrDiscard(originalEvent) {\r\n      var existingConnection = this.jpc.suspendedEndpoint != null;\r\n      var idx = this._getFloatingAnchorIndex();\r\n      if (existingConnection && this._shouldReattach()) {\r\n        if (idx === 0) {\r\n          this.jpc.source = this.jpc.suspendedElement;\r\n          this.jpc.sourceId = this.jpc.suspendedElementId;\r\n        } else {\r\n          this.jpc.target = this.jpc.suspendedElement;\r\n          this.jpc.targetId = this.jpc.suspendedElementId;\r\n        }\r\n        this._doForceReattach(idx);\r\n        return true;\r\n      } else {\r\n        this._discard(idx, originalEvent);\r\n        return false;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"onStop\",\r\n    value: function onStop(p) {\r\n      var _this2 = this;\r\n      var originalEvent = p.e;\r\n      this.instance.isConnectionBeingDragged = false;\r\n      this.instance.currentlyDragging = false;\r\n      var classesToRemove = classList(CLASS_DRAG_HOVER, CLASS_DRAG_ACTIVE);\r\n      var matchingSelectors = this.instance.getContainer().querySelectorAll(SELECTOR_DRAG_ACTIVE_OR_HOVER);\r\n      forEach(matchingSelectors, function (el) {\r\n        _this2.instance.removeClass(el, classesToRemove);\r\n      });\r\n      if (this.jpc && this.jpc.endpoints != null) {\r\n        var existingConnection = this.jpc.suspendedEndpoint != null;\r\n        var idx = this._getFloatingAnchorIndex();\r\n        var suspendedEndpoint = this.jpc.suspendedEndpoint;\r\n        var dropEndpoint;\r\n        if (this.currentDropTarget != null) {\r\n          dropEndpoint = this._getDropEndpoint(p, this.jpc);\r\n          if (dropEndpoint == null) {\r\n            this._reattachOrDiscard(p.e);\r\n          } else {\r\n            if (suspendedEndpoint && suspendedEndpoint.id === dropEndpoint.id) {\r\n              this._doForceReattach(idx);\r\n            } else {\r\n              if (!dropEndpoint.enabled) {\r\n                this._reattachOrDiscard(p.e);\r\n              } else if (dropEndpoint.isFull()) {\r\n                dropEndpoint.fire(EVENT_MAX_CONNECTIONS, {\r\n                  endpoint: this,\r\n                  connection: this.jpc,\r\n                  maxConnections: this.instance.defaults.maxConnections\r\n                }, originalEvent);\r\n                this._reattachOrDiscard(p.e);\r\n              } else {\r\n                if (idx === 0) {\r\n                  this.jpc.source = dropEndpoint.element;\r\n                  this.jpc.sourceId = dropEndpoint.elementId;\r\n                } else {\r\n                  this.jpc.target = dropEndpoint.element;\r\n                  this.jpc.targetId = dropEndpoint.elementId;\r\n                }\r\n                var _doContinue = true;\r\n                if (existingConnection && this.jpc.suspendedEndpoint.id !== dropEndpoint.id) {\r\n                  if (!this.jpc.isDetachAllowed(this.jpc) || !this.jpc.endpoints[idx].isDetachAllowed(this.jpc) || !this.jpc.suspendedEndpoint.isDetachAllowed(this.jpc) || !this.instance.checkCondition(\"beforeDetach\", this.jpc)) {\r\n                    _doContinue = false;\r\n                  }\r\n                }\r\n                _doContinue = _doContinue && dropEndpoint.isDropAllowed(this.jpc.sourceId, this.jpc.targetId, this.jpc.scope, this.jpc, dropEndpoint);\r\n                if (_doContinue) {\r\n                  this._drop(dropEndpoint, idx, originalEvent, _doContinue);\r\n                } else {\r\n                  this._reattachOrDiscard(p.e);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this._reattachOrDiscard(p.e);\r\n        }\r\n        this.instance._refreshEndpoint(this.ep);\r\n        this.ep.removeClass(this.instance.draggingClass);\r\n        this._cleanupDraggablePlaceholder();\r\n        this.jpc.removeClass(this.instance.draggingClass);\r\n        delete this.jpc.suspendedEndpoint;\r\n        delete this.jpc.suspendedElement;\r\n        delete this.jpc.suspendedElementType;\r\n        delete this.jpc.suspendedElementId;\r\n        delete this.jpc.suspendedIndex;\r\n        delete this.floatingId;\r\n        delete this.floatingIndex;\r\n        delete this.floatingElement;\r\n        delete this.floatingEndpoint;\r\n        delete this.floatingAnchor;\r\n        delete this.jpc.pending;\r\n        if (dropEndpoint != null) {\r\n          this._maybeCleanup(dropEndpoint);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_getSourceDefinition\",\r\n    value: function _getSourceDefinition(evt) {\r\n      var selector;\r\n      var container = this.instance.getContainer();\r\n      for (var i = 0; i < this.instance.sourceSelectors.length; i++) {\r\n        selector = this.instance.sourceSelectors[i];\r\n        if (selector.isEnabled()) {\r\n          var r = selectorFilter(evt, container, selector.selector, this.instance, selector.exclude);\r\n          if (r !== false) {\r\n            return selector;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_getDropEndpoint\",\r\n    value: function _getDropEndpoint(p, jpc) {\r\n      var dropEndpoint;\r\n      if (this.currentDropTarget.endpoint == null) {\r\n        var targetDefinition = this.currentDropTarget.def;\r\n        var eventTarget = p.e.target || p.e.srcElement;\r\n        if (targetDefinition == null) {\r\n          return null;\r\n        }\r\n        var targetElement = this.currentDropTarget.targetEl;\r\n        var elxy = getPositionOnElement(p.e, targetElement, this.instance.currentZoom);\r\n        var eps = this.instance._deriveEndpointAndAnchorSpec(jpc.getType().join(\" \"), true);\r\n        var pp = eps.endpoints ? extend(p, {\r\n          endpoint: targetDefinition.def.endpoint || eps.endpoints[1],\r\n          cssClass: targetDefinition.def.cssClass || \"\",\r\n          source: targetDefinition.def.source === true,\r\n          target: targetDefinition.def.target === true\r\n        }) : p;\r\n        var anchorsToUse = this.instance.validAnchorsSpec(eps.anchors) ? eps.anchors : this.instance.areDefaultAnchorsSet() ? this.instance.defaults.anchors : null;\r\n        var anchorFromDef = targetDefinition.def.anchor;\r\n        var anchorFromPositionFinder = targetDefinition.def.anchorPositionFinder ? targetDefinition.def.anchorPositionFinder(targetElement, elxy, targetDefinition.def, p.e) : null;\r\n        var dropAnchor = anchorFromPositionFinder != null ? anchorFromPositionFinder : anchorFromDef != null ? anchorFromDef : anchorsToUse != null && anchorsToUse[1] != null ? anchorsToUse[1] : null;\r\n        if (dropAnchor != null) {\r\n          pp = extend(pp, {\r\n            anchor: dropAnchor\r\n          });\r\n        }\r\n        if (targetDefinition.def.portId != null) {\r\n          pp.portId = targetDefinition.def.portId;\r\n        }\r\n        var extractedParameters = targetDefinition.def.parameterExtractor ? targetDefinition.def.parameterExtractor(this.currentDropTarget.el, eventTarget, p.e) : {};\r\n        pp = merge(pp, extractedParameters);\r\n        pp.element = targetElement;\r\n        dropEndpoint = this.instance._internal_newEndpoint(pp);\r\n        dropEndpoint._mtNew = true;\r\n        dropEndpoint.deleteOnEmpty = true;\r\n        if (targetDefinition.def.parameters) {\r\n          dropEndpoint.mergeParameters(targetDefinition.def.parameters);\r\n        }\r\n        if (targetDefinition.def.extract) {\r\n          var tpayload = {};\r\n          for (var att in targetDefinition.def.extract) {\r\n            var v = this.currentDropTarget.el.getAttribute(att);\r\n            if (v) {\r\n              tpayload[targetDefinition.def.extract[att]] = v;\r\n            }\r\n          }\r\n          dropEndpoint.mergeParameters(tpayload);\r\n        }\r\n      } else {\r\n        dropEndpoint = this.currentDropTarget.endpoint;\r\n      }\r\n      if (dropEndpoint) {\r\n        dropEndpoint.removeClass(this.instance.endpointDropAllowedClass);\r\n        dropEndpoint.removeClass(this.instance.endpointDropForbiddenClass);\r\n      }\r\n      return dropEndpoint;\r\n    }\r\n  }, {\r\n    key: \"_doForceReattach\",\r\n    value: function _doForceReattach(idx) {\r\n      this.floatingEndpoint.detachFromConnection(this.jpc, null, true);\r\n      this.jpc.endpoints[idx] = this.jpc.suspendedEndpoint;\r\n      this.instance.setHover(this.jpc, false);\r\n      this.jpc._forceDetach = true;\r\n      this.jpc.suspendedEndpoint.addConnection(this.jpc);\r\n      this.instance.sourceOrTargetChanged(this.floatingId, this.jpc.suspendedEndpoint.elementId, this.jpc, this.jpc.suspendedEndpoint.element, idx);\r\n      this.instance.deleteEndpoint(this.floatingEndpoint);\r\n      this.instance.repaint(this.jpc.source);\r\n      delete this.jpc._forceDetach;\r\n    }\r\n  }, {\r\n    key: \"_shouldReattach\",\r\n    value: function _shouldReattach() {\r\n      if (this.jpc.isReattach() || this.jpc._forceReattach) {\r\n        return true;\r\n      } else {\r\n        var suspendedEndpoint = this.jpc.suspendedEndpoint,\r\n            otherEndpointIdx = this.jpc.suspendedElementType == SOURCE ? 1 : 0,\r\n            otherEndpoint = this.jpc.endpoints[otherEndpointIdx];\r\n        return !functionChain(true, false, [[suspendedEndpoint, IS_DETACH_ALLOWED, [this.jpc]], [otherEndpoint, IS_DETACH_ALLOWED, [this.jpc]], [this.jpc, IS_DETACH_ALLOWED, [this.jpc]], [this.instance, CHECK_CONDITION, [INTERCEPT_BEFORE_DETACH, this.jpc]]]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_discard\",\r\n    value: function _discard(idx, originalEvent) {\r\n      if (this.jpc.pending) {\r\n        this.instance.fire(EVENT_CONNECTION_ABORT, this.jpc, originalEvent);\r\n      } else {\r\n        if (idx === 0) {\r\n          this.jpc.source = this.jpc.suspendedEndpoint.element;\r\n          this.jpc.sourceId = this.jpc.suspendedEndpoint.elementId;\r\n        } else {\r\n          this.jpc.target = this.jpc.suspendedEndpoint.element;\r\n          this.jpc.targetId = this.jpc.suspendedEndpoint.elementId;\r\n        }\r\n        this.jpc.endpoints[idx] = this.jpc.suspendedEndpoint;\r\n      }\r\n      if (this.floatingEndpoint) {\r\n        this.floatingEndpoint.detachFromConnection(this.jpc);\r\n      }\r\n      this.instance.deleteConnection(this.jpc, {\r\n        originalEvent: originalEvent,\r\n        force: true\r\n      });\r\n    }\r\n  }, {\r\n    key: \"_drop\",\r\n    value: function _drop(dropEndpoint, idx, originalEvent, optionalData) {\r\n      this.jpc.endpoints[idx].detachFromConnection(this.jpc);\r\n      if (this.jpc.suspendedEndpoint) {\r\n        this.jpc.suspendedEndpoint.detachFromConnection(this.jpc);\r\n      }\r\n      this.jpc.endpoints[idx] = dropEndpoint;\r\n      dropEndpoint.addConnection(this.jpc);\r\n      if (this.jpc.suspendedEndpoint) {\r\n        var suspendedElementId = this.jpc.suspendedEndpoint.elementId;\r\n        this.instance.fireMoveEvent({\r\n          index: idx,\r\n          originalSourceId: idx === 0 ? suspendedElementId : this.jpc.sourceId,\r\n          newSourceId: idx === 0 ? dropEndpoint.elementId : this.jpc.sourceId,\r\n          originalTargetId: idx === 1 ? suspendedElementId : this.jpc.targetId,\r\n          newTargetId: idx === 1 ? dropEndpoint.elementId : this.jpc.targetId,\r\n          originalEndpoint: this.jpc.suspendedEndpoint,\r\n          connection: this.jpc,\r\n          newEndpoint: dropEndpoint\r\n        }, originalEvent);\r\n      }\r\n      if (idx === 1) {\r\n        this.instance.sourceOrTargetChanged(this.floatingId, this.jpc.targetId, this.jpc, this.jpc.target, 1);\r\n      } else {\r\n        this.instance.sourceOrTargetChanged(this.floatingId, this.jpc.sourceId, this.jpc, this.jpc.source, 0);\r\n      }\r\n      if (this.jpc.endpoints[0].finalEndpoint) {\r\n        var _toDelete = this.jpc.endpoints[0];\r\n        _toDelete.detachFromConnection(this.jpc);\r\n        this.jpc.endpoints[0] = this.jpc.endpoints[0].finalEndpoint;\r\n        this.jpc.endpoints[0].addConnection(this.jpc);\r\n      }\r\n      if (isObject(optionalData)) {\r\n        this.jpc.mergeData(optionalData);\r\n      }\r\n      if (this._originalAnchorSpec) {\r\n        this.jpc.endpoints[0].setAnchor(this._originalAnchorSpec);\r\n        this._originalAnchorSpec = null;\r\n      }\r\n      this.instance._finaliseConnection(this.jpc, null, originalEvent);\r\n      this.instance.setHover(this.jpc, false);\r\n      this.instance.revalidate(this.jpc.endpoints[0].element);\r\n    }\r\n  }, {\r\n    key: \"_registerFloatingConnection\",\r\n    value: function _registerFloatingConnection(info, conn) {\r\n      this.floatingConnections[info.id] = conn;\r\n    }\r\n  }, {\r\n    key: \"_getFloatingAnchorIndex\",\r\n    value: function _getFloatingAnchorIndex() {\r\n      return this.floatingIndex == null ? 1 : this.floatingIndex;\r\n    }\r\n  }]);\r\n  return EndpointDragHandler;\r\n}();\r\n\r\nvar GroupDragHandler = function (_ElementDragHandler) {\r\n  _inherits(GroupDragHandler, _ElementDragHandler);\r\n  var _super = _createSuper(GroupDragHandler);\r\n  function GroupDragHandler(instance, dragSelection) {\r\n    var _this;\r\n    _classCallCheck(this, GroupDragHandler);\r\n    _this = _super.call(this, instance, dragSelection);\r\n    _this.instance = instance;\r\n    _this.dragSelection = dragSelection;\r\n    _defineProperty(_assertThisInitialized(_this), \"selector\", [\">\", SELECTOR_GROUP, SELECTOR_MANAGED_ELEMENT].join(\" \"));\r\n    _defineProperty(_assertThisInitialized(_this), \"doRevalidate\", void 0);\r\n    _this.doRevalidate = _this._revalidate.bind(_assertThisInitialized(_this));\r\n    return _this;\r\n  }\r\n  _createClass(GroupDragHandler, [{\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      this.drag.off(EVENT_REVERT, this.doRevalidate);\r\n    }\r\n  }, {\r\n    key: \"_revalidate\",\r\n    value: function _revalidate(el) {\r\n      this.instance.revalidate(el);\r\n    }\r\n  }, {\r\n    key: \"init\",\r\n    value: function init(drag) {\r\n      this.drag = drag;\r\n      drag.on(EVENT_REVERT, this.doRevalidate);\r\n    }\r\n  }, {\r\n    key: \"useGhostProxy\",\r\n    value: function useGhostProxy(container, dragEl) {\r\n      var group = dragEl._jsPlumbParentGroup;\r\n      return group == null ? false : group.ghost === true;\r\n    }\r\n  }, {\r\n    key: \"makeGhostProxy\",\r\n    value: function makeGhostProxy(el) {\r\n      var jel = el;\r\n      var newEl = jel.cloneNode(true);\r\n      newEl._jsPlumbParentGroup = jel._jsPlumbParentGroup;\r\n      return newEl;\r\n    }\r\n  }]);\r\n  return GroupDragHandler;\r\n}(ElementDragHandler);\r\n\r\nvar HTMLElementOverlay = function () {\r\n  function HTMLElementOverlay(instance, overlay) {\r\n    _classCallCheck(this, HTMLElementOverlay);\r\n    this.instance = instance;\r\n    this.overlay = overlay;\r\n    _defineProperty(this, \"htmlElementOverlay\", void 0);\r\n    this.htmlElementOverlay = overlay;\r\n  }\r\n  _createClass(HTMLElementOverlay, null, [{\r\n    key: \"getElement\",\r\n    value: function getElement(o, component, elementCreator) {\r\n      if (o.canvas == null) {\r\n        if (elementCreator && component) {\r\n          o.canvas = elementCreator(component);\r\n          var cls = o.instance.overlayClass + \" \" + (o.cssClass ? o.cssClass : \"\");\r\n          o.instance.addClass(o.canvas, cls);\r\n        } else {\r\n          o.canvas = createElement(ELEMENT_DIV, {}, o.instance.overlayClass + \" \" + (o.cssClass ? o.cssClass : \"\"));\r\n        }\r\n        o.instance.setAttribute(o.canvas, \"jtk-overlay-id\", o.id);\r\n        for (var att in o.attributes) {\r\n          o.instance.setAttribute(o.canvas, att, o.attributes[att]);\r\n        }\r\n        o.canvas.style.position = ABSOLUTE;\r\n        o.instance._appendElement(o.canvas, o.instance.getContainer());\r\n        o.instance.getId(o.canvas);\r\n        var ts = \"translate(-50%, -50%)\";\r\n        o.canvas.style.webkitTransform = ts;\r\n        o.canvas.style.mozTransform = ts;\r\n        o.canvas.style.msTransform = ts;\r\n        o.canvas.style.oTransform = ts;\r\n        o.canvas.style.transform = ts;\r\n        if (!o.isVisible()) {\r\n          o.canvas.style.display = NONE;\r\n        }\r\n        o.canvas.jtk = {\r\n          overlay: o\r\n        };\r\n      }\r\n      return o.canvas;\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy(o) {\r\n      o.canvas && o.canvas.parentNode && o.canvas.parentNode.removeChild(o.canvas);\r\n      delete o.canvas;\r\n      delete o.cachedDimensions;\r\n    }\r\n  }, {\r\n    key: \"_getDimensions\",\r\n    value: function _getDimensions(o, forceRefresh) {\r\n      if (o.cachedDimensions == null || forceRefresh) {\r\n        o.cachedDimensions = {\r\n          w: 1,\r\n          h: 1\r\n        };\r\n      }\r\n      return o.cachedDimensions;\r\n    }\r\n  }]);\r\n  return HTMLElementOverlay;\r\n}();\r\n\r\nvar EventGenerator = function () {\r\n  function EventGenerator() {\r\n    _classCallCheck(this, EventGenerator);\r\n    _defineProperty(this, \"_listeners\", {});\r\n    _defineProperty(this, \"eventsSuspended\", false);\r\n    _defineProperty(this, \"tick\", false);\r\n    _defineProperty(this, \"eventsToDieOn\", {\r\n      \"ready\": true\r\n    });\r\n    _defineProperty(this, \"queue\", []);\r\n  }\r\n  _createClass(EventGenerator, [{\r\n    key: \"fire\",\r\n    value: function fire(event, value, originalEvent) {\r\n      var ret = null;\r\n      if (!this.tick) {\r\n        this.tick = true;\r\n        if (!this.eventsSuspended && this._listeners[event]) {\r\n          var l = this._listeners[event].length,\r\n              i = 0,\r\n              _gone = false;\r\n          if (!this.shouldFireEvent || this.shouldFireEvent(event, value, originalEvent)) {\r\n            while (!_gone && i < l && ret !== false) {\r\n              if (this.eventsToDieOn[event]) {\r\n                this._listeners[event][i](value, originalEvent);\r\n              } else {\r\n                try {\r\n                  ret = this._listeners[event][i](value, originalEvent);\r\n                } catch (e) {\r\n                  log(\"jsPlumb: fire failed for event \" + event + \" : \" + (e.message || e));\r\n                }\r\n              }\r\n              i++;\r\n              if (this._listeners == null || this._listeners[event] == null) {\r\n                _gone = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.tick = false;\r\n        this._drain();\r\n      } else {\r\n        this.queue.unshift(arguments);\r\n      }\r\n      return ret;\r\n    }\r\n  }, {\r\n    key: \"_drain\",\r\n    value: function _drain() {\r\n      var n = this.queue.pop();\r\n      if (n) {\r\n        this.fire.apply(this, n);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"unbind\",\r\n    value: function unbind(eventOrListener, listener) {\r\n      if (arguments.length === 0) {\r\n        this._listeners = {};\r\n      } else if (arguments.length === 1) {\r\n        if (typeof eventOrListener === \"string\") {\r\n          delete this._listeners[eventOrListener];\r\n        } else if (eventOrListener.__jsPlumb) {\r\n          var evt;\r\n          for (var i in eventOrListener.__jsPlumb) {\r\n            evt = eventOrListener.__jsPlumb[i];\r\n            remove(this._listeners[evt] || [], eventOrListener);\r\n          }\r\n        }\r\n      } else if (arguments.length === 2) {\r\n        remove(this._listeners[eventOrListener] || [], listener);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"getListener\",\r\n    value: function getListener(forEvent) {\r\n      return this._listeners[forEvent] || [];\r\n    }\r\n  }, {\r\n    key: \"isSuspendEvents\",\r\n    value: function isSuspendEvents() {\r\n      return this.eventsSuspended;\r\n    }\r\n  }, {\r\n    key: \"setSuspendEvents\",\r\n    value: function setSuspendEvents(val) {\r\n      this.eventsSuspended = val;\r\n    }\r\n  }, {\r\n    key: \"bind\",\r\n    value: function bind(event, listener, insertAtStart) {\r\n      var _this = this;\r\n      var _one = function _one(evt) {\r\n        addToDictionary(_this._listeners, evt, listener, insertAtStart);\r\n        listener.__jsPlumb = listener.__jsPlumb || {};\r\n        listener.__jsPlumb[uuid()] = evt;\r\n      };\r\n      if (typeof event === \"string\") {\r\n        _one(event);\r\n      } else if (event.length != null) {\r\n        for (var i = 0; i < event.length; i++) {\r\n          _one(event[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"silently\",\r\n    value: function silently(fn) {\r\n      this.setSuspendEvents(true);\r\n      try {\r\n        fn();\r\n      } catch (e) {\r\n        log(\"Cannot execute silent function \" + e);\r\n      }\r\n      this.setSuspendEvents(false);\r\n    }\r\n  }]);\r\n  return EventGenerator;\r\n}();\r\nvar OptimisticEventGenerator = function (_EventGenerator) {\r\n  _inherits(OptimisticEventGenerator, _EventGenerator);\r\n  var _super = _createSuper(OptimisticEventGenerator);\r\n  function OptimisticEventGenerator() {\r\n    _classCallCheck(this, OptimisticEventGenerator);\r\n    return _super.apply(this, arguments);\r\n  }\r\n  _createClass(OptimisticEventGenerator, [{\r\n    key: \"shouldFireEvent\",\r\n    value: function shouldFireEvent(event, value, originalEvent) {\r\n      return true;\r\n    }\r\n  }]);\r\n  return OptimisticEventGenerator;\r\n}(EventGenerator);\r\n\r\nfunction isFullOverlaySpec(o) {\r\n  return o.type != null && o.options != null;\r\n}\r\nfunction convertToFullOverlaySpec(spec) {\r\n  var o = null;\r\n  if (isString(spec)) {\r\n    o = {\r\n      type: spec,\r\n      options: {}\r\n    };\r\n  } else {\r\n    o = spec;\r\n  }\r\n  o.options.id = o.options.id || uuid();\r\n  return o;\r\n}\r\nvar Overlay = function (_EventGenerator) {\r\n  _inherits(Overlay, _EventGenerator);\r\n  var _super = _createSuper(Overlay);\r\n  function Overlay(instance, component, p) {\r\n    var _this;\r\n    _classCallCheck(this, Overlay);\r\n    _this = _super.call(this);\r\n    _this.instance = instance;\r\n    _this.component = component;\r\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cssClass\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"visible\", true);\r\n    _defineProperty(_assertThisInitialized(_this), \"location\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"events\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"attributes\", void 0);\r\n    p = p || {};\r\n    _this.id = p.id || uuid();\r\n    _this.cssClass = p.cssClass || \"\";\r\n    _this.setLocation(p.location);\r\n    _this.events = p.events || {};\r\n    _this.attributes = p.attributes || {};\r\n    for (var _event in _this.events) {\r\n      _this.bind(_event, _this.events[_event]);\r\n    }\r\n    return _this;\r\n  }\r\n  _createClass(Overlay, [{\r\n    key: \"setLocation\",\r\n    value: function setLocation(l) {\r\n      var newLocation = this.location == null ? 0.5 : this.location;\r\n      if (l != null) {\r\n        try {\r\n          var _l = typeof l === \"string\" ? parseFloat(l) : l;\r\n          if (!isNaN(_l)) {\r\n            newLocation = _l;\r\n          }\r\n        } catch (e) {\r\n        }\r\n      }\r\n      this.location = newLocation;\r\n    }\r\n  }, {\r\n    key: \"shouldFireEvent\",\r\n    value: function shouldFireEvent(event, value, originalEvent) {\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"setVisible\",\r\n    value: function setVisible(v) {\r\n      this.visible = v;\r\n      this.instance.setOverlayVisible(this, v);\r\n    }\r\n  }, {\r\n    key: \"isVisible\",\r\n    value: function isVisible() {\r\n      return this.visible;\r\n    }\r\n  }]);\r\n  return Overlay;\r\n}(EventGenerator);\r\n\r\nvar overlayMap = {};\r\nvar OverlayFactory = {\r\n  get: function get(instance, name, component, params) {\r\n    var c = overlayMap[name];\r\n    if (!c) {\r\n      throw {\r\n        message: \"jsPlumb: unknown overlay type '\" + name + \"'\"\r\n      };\r\n    } else {\r\n      return new c(instance, component, params);\r\n    }\r\n  },\r\n  register: function register(name, overlay) {\r\n    overlayMap[name] = overlay;\r\n  }\r\n};\r\n\r\nvar LabelOverlay = function (_Overlay) {\r\n  _inherits(LabelOverlay, _Overlay);\r\n  var _super = _createSuper(LabelOverlay);\r\n  function LabelOverlay(instance, component, p) {\r\n    var _this;\r\n    _classCallCheck(this, LabelOverlay);\r\n    _this = _super.call(this, instance, component, p);\r\n    _this.instance = instance;\r\n    _this.component = component;\r\n    _defineProperty(_assertThisInitialized(_this), \"label\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"labelText\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", LabelOverlay.type);\r\n    _defineProperty(_assertThisInitialized(_this), \"cachedDimensions\", void 0);\r\n    p = p || {\r\n      label: \"\"\r\n    };\r\n    _this.setLabel(p.label);\r\n    return _this;\r\n  }\r\n  _createClass(LabelOverlay, [{\r\n    key: \"getLabel\",\r\n    value: function getLabel() {\r\n      if (isFunction(this.label)) {\r\n        return this.label(this);\r\n      } else {\r\n        return this.labelText;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setLabel\",\r\n    value: function setLabel(l) {\r\n      this.label = l;\r\n      this.labelText = null;\r\n      this.instance.updateLabel(this);\r\n    }\r\n  }, {\r\n    key: \"getDimensions\",\r\n    value: function getDimensions() {\r\n      return {\r\n        w: 1,\r\n        h: 1\r\n      };\r\n    }\r\n  }, {\r\n    key: \"updateFrom\",\r\n    value: function updateFrom(d) {\r\n      if (d.label != null) {\r\n        this.setLabel(d.label);\r\n      }\r\n      if (d.location != null) {\r\n        this.setLocation(d.location);\r\n        this.instance.updateLabel(this);\r\n      }\r\n    }\r\n  }]);\r\n  return LabelOverlay;\r\n}(Overlay);\r\n_defineProperty(LabelOverlay, \"type\", \"Label\");\r\nfunction isLabelOverlay(o) {\r\n  return o.type === LabelOverlay.type;\r\n}\r\nOverlayFactory.register(LabelOverlay.type, LabelOverlay);\r\n\r\nfunction _splitType(t) {\r\n  return t == null ? null : t.split(\" \").filter(function (t) {\r\n    return t != null && t.length > 0;\r\n  });\r\n}\r\nfunction _mapType(map, obj, typeId) {\r\n  for (var i in obj) {\r\n    map[i] = typeId;\r\n  }\r\n}\r\nvar CONNECTOR = \"connector\";\r\nvar MERGE_STRATEGY_OVERRIDE = \"override\";\r\nvar CSS_CLASS = \"cssClass\";\r\nvar DEFAULT_TYPE_KEY = \"__default\";\r\nvar ANCHOR = \"anchor\";\r\nvar ANCHORS = \"anchors\";\r\nvar _internalLabelOverlayId = \"__label\";\r\nvar _internalLabelOverlayClass = \"jtk-default-label\";\r\nvar TYPE_ITEM_OVERLAY = \"overlay\";\r\nvar LOCATION_ATTRIBUTE = \"labelLocation\";\r\nvar ACTION_ADD = \"add\";\r\nvar ACTION_REMOVE = \"remove\";\r\nfunction _applyTypes(component, params) {\r\n  if (component.getDefaultType) {\r\n    var td = component.getTypeDescriptor(),\r\n        map = {};\r\n    var defType = component.getDefaultType();\r\n    var o = extend({}, defType);\r\n    _mapType(map, defType, DEFAULT_TYPE_KEY);\r\n    component._types.forEach(function (tid) {\r\n      if (tid !== DEFAULT_TYPE_KEY) {\r\n        var _t = component.instance.getType(tid, td);\r\n        if (_t != null) {\r\n          var overrides = new Set([CONNECTOR, ANCHOR, ANCHORS]);\r\n          if (_t.mergeStrategy === MERGE_STRATEGY_OVERRIDE) {\r\n            for (var k in _t) {\r\n              overrides.add(k);\r\n            }\r\n          }\r\n          o = merge(o, _t, [CSS_CLASS], setToArray(overrides));\r\n          _mapType(map, _t, tid);\r\n        }\r\n      }\r\n    });\r\n    if (params) {\r\n      o = populate(o, params, \"_\");\r\n    }\r\n    component.applyType(o, map);\r\n  }\r\n}\r\nfunction _removeTypeCssHelper(component, typeId) {\r\n  var type = component.instance.getType(typeId, component.getTypeDescriptor());\r\n  if (type != null && type.cssClass) {\r\n    component.removeClass(type.cssClass);\r\n  }\r\n}\r\nfunction _updateHoverStyle(component) {\r\n  if (component.paintStyle && component.hoverPaintStyle) {\r\n    var mergedHoverStyle = {};\r\n    extend(mergedHoverStyle, component.paintStyle);\r\n    extend(mergedHoverStyle, component.hoverPaintStyle);\r\n    component.hoverPaintStyle = mergedHoverStyle;\r\n  }\r\n}\r\nvar ADD_CLASS_ACTION = \"add\";\r\nvar REMOVE_CLASS_ACTION = \"remove\";\r\nfunction _makeLabelOverlay(component, params) {\r\n  var _params = {\r\n    cssClass: params.cssClass,\r\n    id: _internalLabelOverlayId,\r\n    component: component\r\n  },\r\n      mergedParams = extend(_params, params);\r\n  return new LabelOverlay(component.instance, component, mergedParams);\r\n}\r\nfunction _processOverlay(component, o) {\r\n  var _newOverlay = null;\r\n  if (isString(o)) {\r\n    _newOverlay = OverlayFactory.get(component.instance, o, component, {});\r\n  } else if (o.type != null && o.options != null) {\r\n    var oa = o;\r\n    var p = extend({}, oa.options);\r\n    _newOverlay = OverlayFactory.get(component.instance, oa.type, component, p);\r\n  } else {\r\n    _newOverlay = o;\r\n  }\r\n  _newOverlay.id = _newOverlay.id || uuid();\r\n  component.cacheTypeItem(TYPE_ITEM_OVERLAY, _newOverlay, _newOverlay.id);\r\n  component.overlays[_newOverlay.id] = _newOverlay;\r\n  return _newOverlay;\r\n}\r\nvar Component = function (_EventGenerator) {\r\n  _inherits(Component, _EventGenerator);\r\n  var _super = _createSuper(Component);\r\n  function Component(instance, params) {\r\n    var _this;\r\n    _classCallCheck(this, Component);\r\n    _this = _super.call(this);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", 0.5);\r\n    _defineProperty(_assertThisInitialized(_this), \"overlays\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"overlayPositions\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"overlayPlacements\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"clone\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"deleted\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"segment\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"x\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"y\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"w\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"h\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"visible\", true);\r\n    _defineProperty(_assertThisInitialized(_this), \"typeId\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"params\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"paintStyle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"hoverPaintStyle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"paintStyleInUse\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_hover\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"lastPaintedAt\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"data\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_defaultType\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"events\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"parameters\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_types\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_typeCache\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cssClass\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"hoverClass\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"beforeDetach\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"beforeDrop\", void 0);\r\n    params = params || {};\r\n    _this.cssClass = params.cssClass || \"\";\r\n    _this.hoverClass = params.hoverClass || instance.defaults.hoverClass;\r\n    _this.beforeDetach = params.beforeDetach;\r\n    _this.beforeDrop = params.beforeDrop;\r\n    _this._types = new Set();\r\n    _this._typeCache = {};\r\n    _this.parameters = clone(params.parameters || {});\r\n    _this.id = params.id || _this.getIdPrefix() + new Date().getTime();\r\n    _this._defaultType = {\r\n      parameters: _this.parameters,\r\n      scope: params.scope || _this.instance.defaultScope,\r\n      overlays: {}\r\n    };\r\n    if (params.events) {\r\n      for (var evtName in params.events) {\r\n        _this.bind(evtName, params.events[evtName]);\r\n      }\r\n    }\r\n    _this.clone = function () {\r\n      var o = Object.create(_this.constructor.prototype);\r\n      _this.constructor.apply(o, [instance, params]);\r\n      return o;\r\n    };\r\n    _this.overlays = {};\r\n    _this.overlayPositions = {};\r\n    var o = params.overlays || [],\r\n        oo = {};\r\n    var defaultOverlayKey = _this.getDefaultOverlayKey();\r\n    if (defaultOverlayKey) {\r\n      var defaultOverlays = _this.instance.defaults[defaultOverlayKey];\r\n      if (defaultOverlays) {\r\n        o.push.apply(o, _toConsumableArray(defaultOverlays));\r\n      }\r\n      for (var i = 0; i < o.length; i++) {\r\n        var fo = convertToFullOverlaySpec(o[i]);\r\n        oo[fo.options.id] = fo;\r\n      }\r\n    }\r\n    _this._defaultType.overlays = oo;\r\n    if (params.label) {\r\n      _this.getDefaultType().overlays[_internalLabelOverlayId] = {\r\n        type: LabelOverlay.type,\r\n        options: {\r\n          label: params.label,\r\n          location: params.labelLocation || _this.defaultLabelLocation,\r\n          id: _internalLabelOverlayId,\r\n          cssClass: _internalLabelOverlayClass\r\n        }\r\n      };\r\n    }\r\n    return _this;\r\n  }\r\n  _createClass(Component, [{\r\n    key: \"isDetachAllowed\",\r\n    value: function isDetachAllowed(connection) {\r\n      var r = true;\r\n      if (this.beforeDetach) {\r\n        try {\r\n          r = this.beforeDetach(connection);\r\n        } catch (e) {\r\n          log(\"jsPlumb: beforeDetach callback failed\", e);\r\n        }\r\n      }\r\n      return r;\r\n    }\r\n  }, {\r\n    key: \"isDropAllowed\",\r\n    value: function isDropAllowed(sourceId, targetId, scope, connection, dropEndpoint) {\r\n      var r;\r\n      var payload = {\r\n        sourceId: sourceId,\r\n        targetId: targetId,\r\n        scope: scope,\r\n        connection: connection,\r\n        dropEndpoint: dropEndpoint\r\n      };\r\n      if (this.beforeDrop) {\r\n        try {\r\n          r = this.beforeDrop(payload);\r\n        } catch (e) {\r\n          log(\"jsPlumb: beforeDrop callback failed\", e);\r\n        }\r\n      } else {\r\n        r = this.instance.checkCondition(INTERCEPT_BEFORE_DROP, payload);\r\n      }\r\n      return r;\r\n    }\r\n  }, {\r\n    key: \"getDefaultType\",\r\n    value: function getDefaultType() {\r\n      return this._defaultType;\r\n    }\r\n  }, {\r\n    key: \"appendToDefaultType\",\r\n    value: function appendToDefaultType(obj) {\r\n      for (var i in obj) {\r\n        this._defaultType[i] = obj[i];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getId\",\r\n    value: function getId() {\r\n      return this.id;\r\n    }\r\n  }, {\r\n    key: \"cacheTypeItem\",\r\n    value: function cacheTypeItem(key, item, typeId) {\r\n      this._typeCache[typeId] = this._typeCache[typeId] || {};\r\n      this._typeCache[typeId][key] = item;\r\n    }\r\n  }, {\r\n    key: \"getCachedTypeItem\",\r\n    value: function getCachedTypeItem(key, typeId) {\r\n      return this._typeCache[typeId] ? this._typeCache[typeId][key] : null;\r\n    }\r\n  }, {\r\n    key: \"setType\",\r\n    value: function setType(typeId, params) {\r\n      this.clearTypes();\r\n      (_splitType(typeId) || []).forEach(this._types.add, this._types);\r\n      _applyTypes(this, params);\r\n    }\r\n  }, {\r\n    key: \"getType\",\r\n    value: function getType() {\r\n      return Array.from(this._types.keys());\r\n    }\r\n  }, {\r\n    key: \"reapplyTypes\",\r\n    value: function reapplyTypes(params) {\r\n      _applyTypes(this, params);\r\n    }\r\n  }, {\r\n    key: \"hasType\",\r\n    value: function hasType(typeId) {\r\n      return this._types.has(typeId);\r\n    }\r\n  }, {\r\n    key: \"addType\",\r\n    value: function addType(typeId, params) {\r\n      var t = _splitType(typeId),\r\n          _somethingAdded = false;\r\n      if (t != null) {\r\n        for (var i = 0, j = t.length; i < j; i++) {\r\n          if (!this._types.has(t[i])) {\r\n            this._types.add(t[i]);\r\n            _somethingAdded = true;\r\n          }\r\n        }\r\n        if (_somethingAdded) {\r\n          _applyTypes(this, params);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeType\",\r\n    value: function removeType(typeId, params) {\r\n      var _this2 = this;\r\n      var t = _splitType(typeId),\r\n          _cont = false,\r\n          _one = function _one(tt) {\r\n        if (_this2._types.has(tt)) {\r\n          _removeTypeCssHelper(_this2, tt);\r\n          _this2._types[\"delete\"](tt);\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      if (t != null) {\r\n        for (var i = 0, j = t.length; i < j; i++) {\r\n          _cont = _one(t[i]) || _cont;\r\n        }\r\n        if (_cont) {\r\n          _applyTypes(this, params);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"clearTypes\",\r\n    value: function clearTypes(params) {\r\n      var _this3 = this;\r\n      this._types.forEach(function (t) {\r\n        _removeTypeCssHelper(_this3, t);\r\n      });\r\n      this._types.clear();\r\n      _applyTypes(this, params);\r\n    }\r\n  }, {\r\n    key: \"toggleType\",\r\n    value: function toggleType(typeId, params) {\r\n      var t = _splitType(typeId);\r\n      if (t != null) {\r\n        for (var i = 0, j = t.length; i < j; i++) {\r\n          if (this._types.has(t[i])) {\r\n            _removeTypeCssHelper(this, t[i]);\r\n            this._types[\"delete\"](t[i]);\r\n          } else {\r\n            this._types.add(t[i]);\r\n          }\r\n        }\r\n        _applyTypes(this, params);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"applyType\",\r\n    value: function applyType(t, params) {\r\n      this.setPaintStyle(t.paintStyle);\r\n      this.setHoverPaintStyle(t.hoverPaintStyle);\r\n      this.mergeParameters(t.parameters);\r\n      this.paintStyleInUse = this.getPaintStyle();\r\n      if (t.overlays) {\r\n        var keep = {},\r\n            i;\r\n        for (i in t.overlays) {\r\n          var existing = this.overlays[t.overlays[i].options.id];\r\n          if (existing) {\r\n            existing.updateFrom(t.overlays[i].options);\r\n            keep[t.overlays[i].options.id] = true;\r\n            this.instance.reattachOverlay(existing, this);\r\n          } else {\r\n            var _c = this.getCachedTypeItem(TYPE_ITEM_OVERLAY, t.overlays[i].options.id);\r\n            if (_c != null) {\r\n              this.instance.reattachOverlay(_c, this);\r\n              _c.setVisible(true);\r\n              _c.updateFrom(t.overlays[i].options);\r\n              this.overlays[_c.id] = _c;\r\n            } else {\r\n              _c = this.addOverlay(t.overlays[i]);\r\n            }\r\n            keep[_c.id] = true;\r\n          }\r\n        }\r\n        for (i in this.overlays) {\r\n          if (keep[this.overlays[i].id] == null) {\r\n            this.removeOverlay(this.overlays[i].id, true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setPaintStyle\",\r\n    value: function setPaintStyle(style) {\r\n      this.paintStyle = style;\r\n      this.paintStyleInUse = this.paintStyle;\r\n      _updateHoverStyle(this);\r\n    }\r\n  }, {\r\n    key: \"getPaintStyle\",\r\n    value: function getPaintStyle() {\r\n      return this.paintStyle;\r\n    }\r\n  }, {\r\n    key: \"setHoverPaintStyle\",\r\n    value: function setHoverPaintStyle(style) {\r\n      this.hoverPaintStyle = style;\r\n      _updateHoverStyle(this);\r\n    }\r\n  }, {\r\n    key: \"getHoverPaintStyle\",\r\n    value: function getHoverPaintStyle() {\r\n      return this.hoverPaintStyle;\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      for (var i in this.overlays) {\r\n        this.instance.destroyOverlay(this.overlays[i]);\r\n      }\r\n      this.overlays = {};\r\n      this.overlayPositions = {};\r\n      this.unbind();\r\n      this.clone = null;\r\n    }\r\n  }, {\r\n    key: \"isHover\",\r\n    value: function isHover() {\r\n      return this._hover;\r\n    }\r\n  }, {\r\n    key: \"mergeParameters\",\r\n    value: function mergeParameters(p) {\r\n      if (p != null) {\r\n        extend(this.parameters, p);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setVisible\",\r\n    value: function setVisible(v) {\r\n      this.visible = v;\r\n      if (v) {\r\n        this.showOverlays();\r\n      } else {\r\n        this.hideOverlays();\r\n      }\r\n    }\r\n  }, {\r\n    key: \"isVisible\",\r\n    value: function isVisible() {\r\n      return this.visible;\r\n    }\r\n  }, {\r\n    key: \"setAbsoluteOverlayPosition\",\r\n    value: function setAbsoluteOverlayPosition(overlay, xy) {\r\n      this.overlayPositions[overlay.id] = xy;\r\n    }\r\n  }, {\r\n    key: \"getAbsoluteOverlayPosition\",\r\n    value: function getAbsoluteOverlayPosition(overlay) {\r\n      return this.overlayPositions ? this.overlayPositions[overlay.id] : null;\r\n    }\r\n  }, {\r\n    key: \"_clazzManip\",\r\n    value: function _clazzManip(action, clazz) {\r\n      for (var i in this.overlays) {\r\n        if (action === ACTION_ADD) {\r\n          this.instance.addOverlayClass(this.overlays[i], clazz);\r\n        } else if (action === ACTION_REMOVE) {\r\n          this.instance.removeOverlayClass(this.overlays[i], clazz);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"addClass\",\r\n    value: function addClass(clazz, cascade) {\r\n      var parts = (this.cssClass || \"\").split(\" \");\r\n      parts.push(clazz);\r\n      this.cssClass = parts.join(\" \");\r\n      this._clazzManip(ACTION_ADD, clazz);\r\n    }\r\n  }, {\r\n    key: \"removeClass\",\r\n    value: function removeClass(clazz, cascade) {\r\n      var parts = (this.cssClass || \"\").split(\" \");\r\n      this.cssClass = parts.filter(function (p) {\r\n        return p !== clazz;\r\n      }).join(\" \");\r\n      this._clazzManip(ACTION_REMOVE, clazz);\r\n    }\r\n  }, {\r\n    key: \"getClass\",\r\n    value: function getClass() {\r\n      return this.cssClass;\r\n    }\r\n  }, {\r\n    key: \"shouldFireEvent\",\r\n    value: function shouldFireEvent(event, value, originalEvent) {\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"getData\",\r\n    value: function getData() {\r\n      return this.data;\r\n    }\r\n  }, {\r\n    key: \"setData\",\r\n    value: function setData(d) {\r\n      this.data = d || {};\r\n    }\r\n  }, {\r\n    key: \"mergeData\",\r\n    value: function mergeData(d) {\r\n      this.data = extend(this.data, d);\r\n    }\r\n  }, {\r\n    key: \"addOverlay\",\r\n    value: function addOverlay(overlay) {\r\n      var o = _processOverlay(this, overlay);\r\n      if (this.getData && o.type === LabelOverlay.type && !isString(overlay)) {\r\n        var d = this.getData(),\r\n            p = overlay.options;\r\n        if (d) {\r\n          var locationAttribute = p.labelLocationAttribute || LOCATION_ATTRIBUTE;\r\n          var loc = d[locationAttribute];\r\n          if (loc) {\r\n            o.location = loc;\r\n          }\r\n        }\r\n      }\r\n      return o;\r\n    }\r\n  }, {\r\n    key: \"getOverlay\",\r\n    value: function getOverlay(id) {\r\n      return this.overlays[id];\r\n    }\r\n  }, {\r\n    key: \"getOverlays\",\r\n    value: function getOverlays() {\r\n      return this.overlays;\r\n    }\r\n  }, {\r\n    key: \"hideOverlay\",\r\n    value: function hideOverlay(id) {\r\n      var o = this.getOverlay(id);\r\n      if (o) {\r\n        o.setVisible(false);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"hideOverlays\",\r\n    value: function hideOverlays() {\r\n      for (var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        ids[_key] = arguments[_key];\r\n      }\r\n      ids = ids || [];\r\n      for (var i in this.overlays) {\r\n        if (ids.length === 0 || ids.indexOf(i) !== -1) {\r\n          this.overlays[i].setVisible(false);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"showOverlay\",\r\n    value: function showOverlay(id) {\r\n      var o = this.getOverlay(id);\r\n      if (o) {\r\n        o.setVisible(true);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"showOverlays\",\r\n    value: function showOverlays() {\r\n      for (var _len2 = arguments.length, ids = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        ids[_key2] = arguments[_key2];\r\n      }\r\n      ids = ids || [];\r\n      for (var i in this.overlays) {\r\n        if (ids.length === 0 || ids.indexOf(i) !== -1) {\r\n          this.overlays[i].setVisible(true);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeAllOverlays\",\r\n    value: function removeAllOverlays() {\r\n      for (var i in this.overlays) {\r\n        this.instance.destroyOverlay(this.overlays[i]);\r\n      }\r\n      this.overlays = {};\r\n      this.overlayPositions = null;\r\n      this.overlayPlacements = {};\r\n    }\r\n  }, {\r\n    key: \"removeOverlay\",\r\n    value: function removeOverlay(overlayId, dontCleanup) {\r\n      var o = this.overlays[overlayId];\r\n      if (o) {\r\n        o.setVisible(false);\r\n        if (!dontCleanup) {\r\n          this.instance.destroyOverlay(o);\r\n        }\r\n        delete this.overlays[overlayId];\r\n        if (this.overlayPositions) {\r\n          delete this.overlayPositions[overlayId];\r\n        }\r\n        if (this.overlayPlacements) {\r\n          delete this.overlayPlacements[overlayId];\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeOverlays\",\r\n    value: function removeOverlays() {\r\n      for (var _len3 = arguments.length, overlays = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n        overlays[_key3] = arguments[_key3];\r\n      }\r\n      for (var i = 0, j = overlays.length; i < j; i++) {\r\n        this.removeOverlay(arguments[i]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getLabel\",\r\n    value: function getLabel() {\r\n      var lo = this.getLabelOverlay();\r\n      return lo != null ? lo.getLabel() : null;\r\n    }\r\n  }, {\r\n    key: \"getLabelOverlay\",\r\n    value: function getLabelOverlay() {\r\n      return this.getOverlay(_internalLabelOverlayId);\r\n    }\r\n  }, {\r\n    key: \"setLabel\",\r\n    value: function setLabel(l) {\r\n      var lo = this.getLabelOverlay();\r\n      if (!lo) {\r\n        var _params2 = isString(l) || isFunction(l) ? {\r\n          label: l\r\n        } : l;\r\n        lo = _makeLabelOverlay(this, _params2);\r\n        this.overlays[_internalLabelOverlayId] = lo;\r\n      } else {\r\n        if (isString(l) || isFunction(l)) {\r\n          lo.setLabel(l);\r\n        } else {\r\n          var ll = l;\r\n          if (ll.label) {\r\n            lo.setLabel(ll.label);\r\n          }\r\n          if (ll.location) {\r\n            lo.location = ll.location;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n  return Component;\r\n}(EventGenerator);\r\n\r\nvar typeParameters = [\"connectorStyle\", \"connectorHoverStyle\", \"connectorOverlays\", \"connector\", \"connectionType\", \"connectorClass\", \"connectorHoverClass\"];\r\nvar Endpoint = function (_Component) {\r\n  _inherits(Endpoint, _Component);\r\n  var _super = _createSuper(Endpoint);\r\n  function Endpoint(instance, params) {\r\n    var _this;\r\n    _classCallCheck(this, Endpoint);\r\n    _this = _super.call(this, instance, params);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"connections\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpoint\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"element\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"elementId\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"dragAllowedWhenFull\", true);\r\n    _defineProperty(_assertThisInitialized(_this), \"timestamp\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"portId\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"maxConnections\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"proxiedBy\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorClass\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorHoverClass\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"finalEndpoint\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\r\n    _defineProperty(_assertThisInitialized(_this), \"isSource\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"isTarget\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"isTemporarySource\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectionCost\", 1);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectionsDirected\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectionsDetachable\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"reattachConnections\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"currentAnchorClass\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"referenceEndpoint\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"edgeType\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connector\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorOverlays\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorStyle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorHoverStyle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"deleteOnEmpty\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"uuid\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"scope\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_anchor\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", [0.5, 0.5]);\r\n    _this.appendToDefaultType({\r\n      edgeType: params.edgeType,\r\n      maxConnections: params.maxConnections == null ? _this.instance.defaults.maxConnections : params.maxConnections,\r\n      paintStyle: params.paintStyle || _this.instance.defaults.endpointStyle,\r\n      hoverPaintStyle: params.hoverPaintStyle || _this.instance.defaults.endpointHoverStyle,\r\n      connectorStyle: params.connectorStyle,\r\n      connectorHoverStyle: params.connectorHoverStyle,\r\n      connectorClass: params.connectorClass,\r\n      connectorHoverClass: params.connectorHoverClass,\r\n      connectorOverlays: params.connectorOverlays,\r\n      connector: params.connector\r\n    });\r\n    _this.enabled = !(params.enabled === false);\r\n    _this.visible = true;\r\n    _this.element = params.element;\r\n    _this.uuid = params.uuid;\r\n    _this.portId = params.portId;\r\n    _this.elementId = params.elementId;\r\n    _this.connectionCost = params.connectionCost == null ? 1 : params.connectionCost;\r\n    _this.connectionsDirected = params.connectionsDirected;\r\n    _this.currentAnchorClass = \"\";\r\n    _this.events = {};\r\n    _this.connectorOverlays = params.connectorOverlays;\r\n    _this.connectorStyle = params.connectorStyle;\r\n    _this.connectorHoverStyle = params.connectorHoverStyle;\r\n    _this.connector = params.connector;\r\n    _this.edgeType = params.edgeType;\r\n    _this.connectorClass = params.connectorClass;\r\n    _this.connectorHoverClass = params.connectorHoverClass;\r\n    _this.deleteOnEmpty = params.deleteOnEmpty === true;\r\n    _this.isSource = params.source || false;\r\n    _this.isTemporarySource = params.isTemporarySource || false;\r\n    _this.isTarget = params.target || false;\r\n    _this.connections = params.connections || [];\r\n    _this.scope = params.scope || instance.defaultScope;\r\n    _this.timestamp = null;\r\n    _this.reattachConnections = params.reattachConnections || instance.defaults.reattachConnections;\r\n    _this.connectionsDetachable = instance.defaults.connectionsDetachable;\r\n    if (params.connectionsDetachable === false) {\r\n      _this.connectionsDetachable = false;\r\n    }\r\n    _this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\r\n    if (params.onMaxConnections) {\r\n      _this.bind(EVENT_MAX_CONNECTIONS, params.onMaxConnections);\r\n    }\r\n    var ep = params.endpoint || params.existingEndpoint || instance.defaults.endpoint;\r\n    _this.setEndpoint(ep);\r\n    if (params.preparedAnchor != null) {\r\n      _this.setPreparedAnchor(params.preparedAnchor);\r\n    } else {\r\n      var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : instance.defaults.anchor || AnchorLocations.Top;\r\n      _this.setAnchor(anchorParamsToUse);\r\n    }\r\n    var type = [DEFAULT, params.type || \"\"].join(\" \");\r\n    _this.addType(type, params.data);\r\n    return _this;\r\n  }\r\n  _createClass(Endpoint, [{\r\n    key: \"getIdPrefix\",\r\n    value: function getIdPrefix() {\r\n      return \"_jsplumb_e\";\r\n    }\r\n  }, {\r\n    key: \"getTypeDescriptor\",\r\n    value: function getTypeDescriptor() {\r\n      return \"endpoint\";\r\n    }\r\n  }, {\r\n    key: \"getXY\",\r\n    value: function getXY() {\r\n      return {\r\n        x: this.endpoint.x,\r\n        y: this.endpoint.y\r\n      };\r\n    }\r\n  }, {\r\n    key: \"getDefaultOverlayKey\",\r\n    value: function getDefaultOverlayKey() {\r\n      return \"endpointOverlays\";\r\n    }\r\n  }, {\r\n    key: \"_updateAnchorClass\",\r\n    value: function _updateAnchorClass() {\r\n      var ac = this._anchor && this._anchor.cssClass;\r\n      if (ac != null && ac.length > 0) {\r\n        var oldAnchorClass = this.instance.endpointAnchorClassPrefix + \"-\" + this.currentAnchorClass;\r\n        this.currentAnchorClass = ac;\r\n        var anchorClass = this.instance.endpointAnchorClassPrefix + (this.currentAnchorClass ? \"-\" + this.currentAnchorClass : \"\");\r\n        if (oldAnchorClass !== anchorClass) {\r\n          this.removeClass(oldAnchorClass);\r\n          this.addClass(anchorClass);\r\n          this.instance.removeClass(this.element, oldAnchorClass);\r\n          this.instance.addClass(this.element, anchorClass);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setPreparedAnchor\",\r\n    value: function setPreparedAnchor(anchor) {\r\n      this.instance.router.setAnchor(this, anchor);\r\n      this._updateAnchorClass();\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"_anchorLocationChanged\",\r\n    value: function _anchorLocationChanged(currentAnchor) {\r\n      this.fire(EVENT_ANCHOR_CHANGED, {\r\n        endpoint: this,\r\n        anchor: currentAnchor\r\n      });\r\n      this._updateAnchorClass();\r\n    }\r\n  }, {\r\n    key: \"setAnchor\",\r\n    value: function setAnchor(anchorParams) {\r\n      var a = this.instance.router.prepareAnchor(anchorParams);\r\n      this.setPreparedAnchor(a);\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"addConnection\",\r\n    value: function addConnection(conn) {\r\n      this.connections.push(conn);\r\n      this.instance._refreshEndpoint(this);\r\n    }\r\n  }, {\r\n    key: \"detachFromConnection\",\r\n    value: function detachFromConnection(connection, idx, transientDetach) {\r\n      idx = idx == null ? this.connections.indexOf(connection) : idx;\r\n      if (idx >= 0) {\r\n        this.connections.splice(idx, 1);\r\n        this.instance._refreshEndpoint(this);\r\n      }\r\n      if (!transientDetach && this.deleteOnEmpty && this.connections.length === 0) {\r\n        this.instance.deleteEndpoint(this);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"deleteEveryConnection\",\r\n    value: function deleteEveryConnection(params) {\r\n      var c = this.connections.length;\r\n      for (var i = 0; i < c; i++) {\r\n        this.instance.deleteConnection(this.connections[0], params);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"detachFrom\",\r\n    value: function detachFrom(otherEndpoint) {\r\n      var c = [];\r\n      for (var i = 0; i < this.connections.length; i++) {\r\n        if (this.connections[i].endpoints[1] === otherEndpoint || this.connections[i].endpoints[0] === otherEndpoint) {\r\n          c.push(this.connections[i]);\r\n        }\r\n      }\r\n      for (var j = 0, count = c.length; j < count; j++) {\r\n        this.instance.deleteConnection(c[0]);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setVisible\",\r\n    value: function setVisible(v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\r\n      _get(_getPrototypeOf(Endpoint.prototype), \"setVisible\", this).call(this, v);\r\n      this.endpoint.setVisible(v);\r\n      if (v) {\r\n        this.showOverlays();\r\n      } else {\r\n        this.hideOverlays();\r\n      }\r\n      if (!doNotChangeConnections) {\r\n        for (var i = 0; i < this.connections.length; i++) {\r\n          this.connections[i].setVisible(v);\r\n          if (!doNotNotifyOtherEndpoint) {\r\n            var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\r\n            if (this.connections[i].endpoints[oIdx].connections.length === 1) {\r\n              this.connections[i].endpoints[oIdx].setVisible(v, true, true);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"applyType\",\r\n    value: function applyType(t, typeMap) {\r\n      _get(_getPrototypeOf(Endpoint.prototype), \"applyType\", this).call(this, t, typeMap);\r\n      this.setPaintStyle(t.endpointStyle || t.paintStyle);\r\n      this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle);\r\n      this.connectorStyle = t.connectorStyle;\r\n      this.connectorHoverStyle = t.connectorHoverStyle;\r\n      this.connector = t.connector;\r\n      this.connectorOverlays = t.connectorOverlays;\r\n      this.edgeType = t.edgeType;\r\n      if (t.maxConnections != null) {\r\n        this.maxConnections = t.maxConnections;\r\n      }\r\n      if (t.scope) {\r\n        this.scope = t.scope;\r\n      }\r\n      extend(t, typeParameters);\r\n      this.instance.applyEndpointType(this, t);\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      _get(_getPrototypeOf(Endpoint.prototype), \"destroy\", this).call(this);\r\n      this.deleted = true;\r\n      if (this.endpoint != null) {\r\n        this.instance.destroyEndpoint(this);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"isFull\",\r\n    value: function isFull() {\r\n      return this.maxConnections === 0 ? true : !(this.isFloating() || this.maxConnections < 0 || this.connections.length < this.maxConnections);\r\n    }\r\n  }, {\r\n    key: \"isFloating\",\r\n    value: function isFloating() {\r\n      return this.instance.router.isFloating(this);\r\n    }\r\n  }, {\r\n    key: \"isConnectedTo\",\r\n    value: function isConnectedTo(otherEndpoint) {\r\n      var found = false;\r\n      if (otherEndpoint) {\r\n        for (var i = 0; i < this.connections.length; i++) {\r\n          if (this.connections[i].endpoints[1] === otherEndpoint || this.connections[i].endpoints[0] === otherEndpoint) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return found;\r\n    }\r\n  }, {\r\n    key: \"setDragAllowedWhenFull\",\r\n    value: function setDragAllowedWhenFull(allowed) {\r\n      this.dragAllowedWhenFull = allowed;\r\n    }\r\n  }, {\r\n    key: \"getUuid\",\r\n    value: function getUuid() {\r\n      return this.uuid;\r\n    }\r\n  }, {\r\n    key: \"connectorSelector\",\r\n    value: function connectorSelector() {\r\n      return this.connections[0];\r\n    }\r\n  }, {\r\n    key: \"prepareEndpoint\",\r\n    value: function prepareEndpoint(ep, typeId) {\r\n      var endpointArgs = {\r\n        cssClass: this.cssClass,\r\n        endpoint: this\r\n      };\r\n      var endpoint;\r\n      if (isAssignableFrom(ep, EndpointRepresentation)) {\r\n        var epr = ep;\r\n        endpoint = EndpointFactory.clone(epr);\r\n        endpoint.classes = endpointArgs.cssClass.split(\" \");\r\n      } else if (isString(ep)) {\r\n        endpoint = EndpointFactory.get(this, ep, endpointArgs);\r\n      } else {\r\n        var fep = ep;\r\n        extend(endpointArgs, fep.options || {});\r\n        endpoint = EndpointFactory.get(this, fep.type, endpointArgs);\r\n      }\r\n      endpoint.typeId = typeId;\r\n      return endpoint;\r\n    }\r\n  }, {\r\n    key: \"setEndpoint\",\r\n    value: function setEndpoint(ep) {\r\n      var _ep = this.prepareEndpoint(ep);\r\n      this.setPreparedEndpoint(_ep);\r\n    }\r\n  }, {\r\n    key: \"setPreparedEndpoint\",\r\n    value: function setPreparedEndpoint(ep) {\r\n      if (this.endpoint != null) {\r\n        this.instance.destroyEndpoint(this);\r\n      }\r\n      this.endpoint = ep;\r\n    }\r\n  }, {\r\n    key: \"addClass\",\r\n    value: function addClass(clazz, cascade) {\r\n      _get(_getPrototypeOf(Endpoint.prototype), \"addClass\", this).call(this, clazz, cascade);\r\n      if (this.endpoint != null) {\r\n        this.endpoint.addClass(clazz);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeClass\",\r\n    value: function removeClass(clazz, cascade) {\r\n      _get(_getPrototypeOf(Endpoint.prototype), \"removeClass\", this).call(this, clazz, cascade);\r\n      if (this.endpoint != null) {\r\n        this.endpoint.removeClass(clazz);\r\n      }\r\n    }\r\n  }]);\r\n  return Endpoint;\r\n}(Component);\r\n\r\nvar TYPE_ITEM_ANCHORS = \"anchors\";\r\nvar TYPE_ITEM_CONNECTOR = \"connector\";\r\nfunction prepareEndpoint(conn, existing, index, anchor, element, elementId, endpoint) {\r\n  var e;\r\n  if (existing) {\r\n    conn.endpoints[index] = existing;\r\n    existing.addConnection(conn);\r\n  } else {\r\n    var ep = endpoint || conn.endpointSpec || conn.endpointsSpec[index] || conn.instance.defaults.endpoints[index] || conn.instance.defaults.endpoint;\r\n    var es = conn.endpointStyles[index] || conn.endpointStyle || conn.instance.defaults.endpointStyles[index] || conn.instance.defaults.endpointStyle;\r\n    if (es.fill == null && conn.paintStyle != null) {\r\n      es.fill = conn.paintStyle.stroke;\r\n    }\r\n    if (es.outlineStroke == null && conn.paintStyle != null) {\r\n      es.outlineStroke = conn.paintStyle.outlineStroke;\r\n    }\r\n    if (es.outlineWidth == null && conn.paintStyle != null) {\r\n      es.outlineWidth = conn.paintStyle.outlineWidth;\r\n    }\r\n    var ehs = conn.endpointHoverStyles[index] || conn.endpointHoverStyle || conn.endpointHoverStyle || conn.instance.defaults.endpointHoverStyles[index] || conn.instance.defaults.endpointHoverStyle;\r\n    if (conn.hoverPaintStyle != null) {\r\n      if (ehs == null) {\r\n        ehs = {};\r\n      }\r\n      if (ehs.fill == null) {\r\n        ehs.fill = conn.hoverPaintStyle.stroke;\r\n      }\r\n    }\r\n    var u = conn.uuids ? conn.uuids[index] : null;\r\n    anchor = anchor != null ? anchor : conn.instance.defaults.anchors != null ? conn.instance.defaults.anchors[index] : conn.instance.defaults.anchor;\r\n    e = conn.instance._internal_newEndpoint({\r\n      paintStyle: es,\r\n      hoverPaintStyle: ehs,\r\n      endpoint: ep,\r\n      connections: [conn],\r\n      uuid: u,\r\n      element: element,\r\n      scope: conn.scope,\r\n      anchor: anchor,\r\n      reattachConnections: conn.reattach || conn.instance.defaults.reattachConnections,\r\n      connectionsDetachable: conn.detachable || conn.instance.defaults.connectionsDetachable\r\n    });\r\n    conn.instance._refreshEndpoint(e);\r\n    if (existing == null) {\r\n      e.deleteOnEmpty = true;\r\n    }\r\n    conn.endpoints[index] = e;\r\n  }\r\n  return e;\r\n}\r\nvar Connection = function (_Component) {\r\n  _inherits(Connection, _Component);\r\n  var _super = _createSuper(Connection);\r\n  function Connection(instance, params) {\r\n    var _this;\r\n    _classCallCheck(this, Connection);\r\n    _this = _super.call(this, instance, params);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"connector\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", 0.5);\r\n    _defineProperty(_assertThisInitialized(_this), \"scope\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"typeId\", \"_jsplumb_connection\");\r\n    _defineProperty(_assertThisInitialized(_this), \"previousConnection\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"sourceId\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"targetId\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"source\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"target\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"detachable\", true);\r\n    _defineProperty(_assertThisInitialized(_this), \"reattach\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"uuids\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cost\", 1);\r\n    _defineProperty(_assertThisInitialized(_this), \"directed\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpoints\", [null, null]);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointStyles\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointSpec\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointsSpec\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointStyle\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointHoverStyle\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointHoverStyles\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"suspendedEndpoint\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"suspendedIndex\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"suspendedElement\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"suspendedElementId\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"suspendedElementType\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_forceReattach\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_forceDetach\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"proxies\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"pending\", false);\r\n    _this.id = params.id;\r\n    _this.previousConnection = params.previousConnection;\r\n    _this.source = params.source;\r\n    _this.target = params.target;\r\n    if (params.sourceEndpoint) {\r\n      _this.source = params.sourceEndpoint.element;\r\n      _this.sourceId = params.sourceEndpoint.elementId;\r\n    } else {\r\n      _this.sourceId = instance.getId(_this.source);\r\n    }\r\n    if (params.targetEndpoint) {\r\n      _this.target = params.targetEndpoint.element;\r\n      _this.targetId = params.targetEndpoint.elementId;\r\n    } else {\r\n      _this.targetId = instance.getId(_this.target);\r\n    }\r\n    _this.scope = params.scope;\r\n    var sourceAnchor = params.anchors ? params.anchors[0] : params.anchor;\r\n    var targetAnchor = params.anchors ? params.anchors[1] : params.anchor;\r\n    instance.manage(_this.source);\r\n    instance.manage(_this.target);\r\n    _this.visible = true;\r\n    _this.params = {\r\n      cssClass: params.cssClass,\r\n      hoverClass: params.hoverClass,\r\n      \"pointer-events\": params[\"pointer-events\"],\r\n      overlays: params.overlays\r\n    };\r\n    _this.lastPaintedAt = null;\r\n    if (params.type) {\r\n      params.endpoints = params.endpoints || _this.instance._deriveEndpointAndAnchorSpec(params.type).endpoints;\r\n    }\r\n    _this.endpointSpec = params.endpoint;\r\n    _this.endpointsSpec = params.endpoints || [null, null];\r\n    _this.endpointStyle = params.endpointStyle;\r\n    _this.endpointHoverStyle = params.endpointHoverStyle;\r\n    _this.endpointStyles = params.endpointStyles || [null, null];\r\n    _this.endpointHoverStyles = params.endpointHoverStyles || [null, null];\r\n    _this.paintStyle = params.paintStyle;\r\n    _this.hoverPaintStyle = params.hoverPaintStyle;\r\n    _this.uuids = params.uuids;\r\n    _this.makeEndpoint(true, _this.source, _this.sourceId, sourceAnchor, params.sourceEndpoint);\r\n    _this.makeEndpoint(false, _this.target, _this.targetId, targetAnchor, params.targetEndpoint);\r\n    if (!_this.scope) {\r\n      _this.scope = _this.endpoints[0].scope;\r\n    }\r\n    if (params.deleteEndpointsOnEmpty != null) {\r\n      _this.endpoints[0].deleteOnEmpty = params.deleteEndpointsOnEmpty;\r\n      _this.endpoints[1].deleteOnEmpty = params.deleteEndpointsOnEmpty;\r\n    }\r\n    var _detachable = _this.instance.defaults.connectionsDetachable;\r\n    if (params.detachable === false) {\r\n      _detachable = false;\r\n    }\r\n    if (_this.endpoints[0].connectionsDetachable === false) {\r\n      _detachable = false;\r\n    }\r\n    if (_this.endpoints[1].connectionsDetachable === false) {\r\n      _detachable = false;\r\n    }\r\n    _this.endpointsSpec = params.endpoints || [null, null];\r\n    _this.endpointSpec = params.endpoint || null;\r\n    var _reattach = params.reattach || _this.endpoints[0].reattachConnections || _this.endpoints[1].reattachConnections || _this.instance.defaults.reattachConnections;\r\n    var initialPaintStyle = extend({}, _this.endpoints[0].connectorStyle || _this.endpoints[1].connectorStyle || params.paintStyle || _this.instance.defaults.paintStyle);\r\n    _this.appendToDefaultType({\r\n      detachable: _detachable,\r\n      reattach: _reattach,\r\n      paintStyle: initialPaintStyle,\r\n      hoverPaintStyle: extend({}, _this.endpoints[0].connectorHoverStyle || _this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _this.instance.defaults.hoverPaintStyle)\r\n    });\r\n    if (params.outlineWidth) {\r\n      initialPaintStyle.outlineWidth = params.outlineWidth;\r\n    }\r\n    if (params.outlineColor) {\r\n      initialPaintStyle.outlineStroke = params.outlineColor;\r\n    }\r\n    if (params.lineWidth) {\r\n      initialPaintStyle.strokeWidth = params.lineWidth;\r\n    }\r\n    if (params.color) {\r\n      initialPaintStyle.stroke = params.color;\r\n    }\r\n    if (!_this.instance._suspendDrawing) {\r\n      var initialTimestamp = _this.instance._suspendedAt || uuid();\r\n      _this.instance._paintEndpoint(_this.endpoints[0], {\r\n        timestamp: initialTimestamp\r\n      });\r\n      _this.instance._paintEndpoint(_this.endpoints[1], {\r\n        timestamp: initialTimestamp\r\n      });\r\n    }\r\n    _this.cost = params.cost || _this.endpoints[0].connectionCost;\r\n    _this.directed = params.directed;\r\n    if (params.directed == null) {\r\n      _this.directed = _this.endpoints[0].connectionsDirected;\r\n    }\r\n    var _p = extend({}, _this.endpoints[1].parameters);\r\n    extend(_p, _this.endpoints[0].parameters);\r\n    extend(_p, _this.parameters);\r\n    _this.parameters = _p;\r\n    _this.paintStyleInUse = _this.getPaintStyle() || {};\r\n    _this._setConnector(_this.endpoints[0].connector || _this.endpoints[1].connector || params.connector || _this.instance.defaults.connector, true);\r\n    var data = params.data == null || !isObject(params.data) ? {} : params.data;\r\n    _this.setData(data);\r\n    var _types = [DEFAULT, _this.endpoints[0].edgeType, _this.endpoints[1].edgeType, params.type].join(\" \");\r\n    if (/[^\\s]/.test(_types)) {\r\n      _this.addType(_types, params.data);\r\n    }\r\n    return _this;\r\n  }\r\n  _createClass(Connection, [{\r\n    key: \"getIdPrefix\",\r\n    value: function getIdPrefix() {\r\n      return \"_jsPlumb_c\";\r\n    }\r\n  }, {\r\n    key: \"getDefaultOverlayKey\",\r\n    value: function getDefaultOverlayKey() {\r\n      return KEY_CONNECTION_OVERLAYS;\r\n    }\r\n  }, {\r\n    key: \"getXY\",\r\n    value: function getXY() {\r\n      return {\r\n        x: this.connector.x,\r\n        y: this.connector.y\r\n      };\r\n    }\r\n  }, {\r\n    key: \"makeEndpoint\",\r\n    value: function makeEndpoint(isSource, el, elId, anchor, ep) {\r\n      elId = elId || this.instance.getId(el);\r\n      return prepareEndpoint(this, ep, isSource ? 0 : 1, anchor, el);\r\n    }\r\n  }, {\r\n    key: \"getTypeDescriptor\",\r\n    value: function getTypeDescriptor() {\r\n      return Connection.type;\r\n    }\r\n  }, {\r\n    key: \"isDetachable\",\r\n    value: function isDetachable(ep) {\r\n      return this.detachable === false ? false : ep != null ? ep.connectionsDetachable === true : this.detachable === true;\r\n    }\r\n  }, {\r\n    key: \"setDetachable\",\r\n    value: function setDetachable(detachable) {\r\n      this.detachable = detachable === true;\r\n    }\r\n  }, {\r\n    key: \"isReattach\",\r\n    value: function isReattach() {\r\n      return this.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\r\n    }\r\n  }, {\r\n    key: \"setReattach\",\r\n    value: function setReattach(reattach) {\r\n      this.reattach = reattach === true;\r\n    }\r\n  }, {\r\n    key: \"applyType\",\r\n    value: function applyType(t, typeMap) {\r\n      var _connector = null;\r\n      if (t.connector != null) {\r\n        _connector = this.getCachedTypeItem(TYPE_ITEM_CONNECTOR, typeMap.connector);\r\n        if (_connector == null) {\r\n          _connector = this.prepareConnector(t.connector, typeMap.connector);\r\n          this.cacheTypeItem(TYPE_ITEM_CONNECTOR, _connector, typeMap.connector);\r\n        }\r\n        this.setPreparedConnector(_connector);\r\n      }\r\n      _get(_getPrototypeOf(Connection.prototype), \"applyType\", this).call(this, t, typeMap);\r\n      if (t.detachable != null) {\r\n        this.setDetachable(t.detachable);\r\n      }\r\n      if (t.reattach != null) {\r\n        this.setReattach(t.reattach);\r\n      }\r\n      if (t.scope) {\r\n        this.scope = t.scope;\r\n      }\r\n      var _anchors = null;\r\n      if (t.anchor) {\r\n        _anchors = this.getCachedTypeItem(TYPE_ITEM_ANCHORS, typeMap.anchor);\r\n        if (_anchors == null) {\r\n          _anchors = [makeLightweightAnchorFromSpec(t.anchor), makeLightweightAnchorFromSpec(t.anchor)];\r\n          this.cacheTypeItem(TYPE_ITEM_ANCHORS, _anchors, typeMap.anchor);\r\n        }\r\n      } else if (t.anchors) {\r\n        _anchors = this.getCachedTypeItem(TYPE_ITEM_ANCHORS, typeMap.anchors);\r\n        if (_anchors == null) {\r\n          _anchors = [makeLightweightAnchorFromSpec(t.anchors[0]), makeLightweightAnchorFromSpec(t.anchors[1])];\r\n          this.cacheTypeItem(TYPE_ITEM_ANCHORS, _anchors, typeMap.anchors);\r\n        }\r\n      }\r\n      if (_anchors != null) {\r\n        this.instance.router.setConnectionAnchors(this, _anchors);\r\n        if (this.instance.router.isDynamicAnchor(this.endpoints[1])) {\r\n          this.instance.repaint(this.endpoints[1].element);\r\n        }\r\n      }\r\n      this.instance.applyConnectorType(this.connector, t);\r\n    }\r\n  }, {\r\n    key: \"addClass\",\r\n    value: function addClass(c, cascade) {\r\n      _get(_getPrototypeOf(Connection.prototype), \"addClass\", this).call(this, c);\r\n      if (cascade) {\r\n        this.endpoints[0].addClass(c);\r\n        this.endpoints[1].addClass(c);\r\n        if (this.suspendedEndpoint) {\r\n          this.suspendedEndpoint.addClass(c);\r\n        }\r\n      }\r\n      if (this.connector) {\r\n        this.instance.addConnectorClass(this.connector, c);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeClass\",\r\n    value: function removeClass(c, cascade) {\r\n      _get(_getPrototypeOf(Connection.prototype), \"removeClass\", this).call(this, c);\r\n      if (cascade) {\r\n        this.endpoints[0].removeClass(c);\r\n        this.endpoints[1].removeClass(c);\r\n        if (this.suspendedEndpoint) {\r\n          this.suspendedEndpoint.removeClass(c);\r\n        }\r\n      }\r\n      if (this.connector) {\r\n        this.instance.removeConnectorClass(this.connector, c);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setVisible\",\r\n    value: function setVisible(v) {\r\n      _get(_getPrototypeOf(Connection.prototype), \"setVisible\", this).call(this, v);\r\n      if (this.connector) {\r\n        this.instance.setConnectorVisible(this.connector, v);\r\n      }\r\n      this.instance._paintConnection(this);\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      _get(_getPrototypeOf(Connection.prototype), \"destroy\", this).call(this);\r\n      this.endpoints = null;\r\n      this.endpointStyles = null;\r\n      this.source = null;\r\n      this.target = null;\r\n      this.instance.destroyConnector(this);\r\n      this.connector = null;\r\n      this.deleted = true;\r\n    }\r\n  }, {\r\n    key: \"getUuids\",\r\n    value: function getUuids() {\r\n      return [this.endpoints[0].getUuid(), this.endpoints[1].getUuid()];\r\n    }\r\n  }, {\r\n    key: \"prepareConnector\",\r\n    value: function prepareConnector(connectorSpec, typeId) {\r\n      var connectorArgs = {\r\n        cssClass: this.params.cssClass,\r\n        hoverClass: this.params.hoverClass,\r\n        \"pointer-events\": this.params[\"pointer-events\"]\r\n      },\r\n          connector;\r\n      if (isString(connectorSpec)) {\r\n        connector = this.instance._makeConnector(this, connectorSpec, connectorArgs);\r\n      } else {\r\n        var co = connectorSpec;\r\n        connector = this.instance._makeConnector(this, co.type, merge(co.options || {}, connectorArgs));\r\n      }\r\n      if (typeId != null) {\r\n        connector.typeId = typeId;\r\n      }\r\n      return connector;\r\n    }\r\n  }, {\r\n    key: \"setPreparedConnector\",\r\n    value: function setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\r\n      if (this.connector !== connector) {\r\n        var previous,\r\n            previousClasses = \"\";\r\n        if (this.connector != null) {\r\n          previous = this.connector;\r\n          previousClasses = this.instance.getConnectorClass(this.connector);\r\n          this.instance.destroyConnector(this);\r\n        }\r\n        this.connector = connector;\r\n        if (typeId) {\r\n          this.cacheTypeItem(TYPE_ITEM_CONNECTOR, connector, typeId);\r\n        }\r\n        this.addClass(previousClasses);\r\n        if (previous != null) {\r\n          var o = this.getOverlays();\r\n          for (var i in o) {\r\n            this.instance.reattachOverlay(o[i], this);\r\n          }\r\n        }\r\n        if (!doNotRepaint) {\r\n          this.instance._paintConnection(this);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_setConnector\",\r\n    value: function _setConnector(connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\r\n      var connector = this.prepareConnector(connectorSpec, typeId);\r\n      this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\r\n    }\r\n  }, {\r\n    key: \"replaceEndpoint\",\r\n    value: function replaceEndpoint(idx, endpointDef) {\r\n      var current = this.endpoints[idx],\r\n          elId = current.elementId,\r\n          ebe = this.instance.getEndpoints(current.element),\r\n          _idx = ebe.indexOf(current),\r\n          _new = prepareEndpoint(this, null, idx, null, current.element, elId, endpointDef);\r\n      this.endpoints[idx] = _new;\r\n      ebe.splice(_idx, 1, _new);\r\n      current.detachFromConnection(this);\r\n      this.instance.deleteEndpoint(current);\r\n      this.instance.fire(EVENT_ENDPOINT_REPLACED, {\r\n        previous: current,\r\n        current: _new\r\n      });\r\n    }\r\n  }]);\r\n  return Connection;\r\n}(Component);\r\n_defineProperty(Connection, \"type\", \"connection\");\r\n\r\nfunction ensureSVGOverlayPath(o) {\r\n  if (o.path == null) {\r\n    var atts = extend({\r\n      \"jtk-overlay-id\": o.id\r\n    }, o.attributes);\r\n    o.path = _node(ELEMENT_PATH, atts);\r\n    var cls = o.instance.overlayClass + \" \" + (o.cssClass ? o.cssClass : \"\");\r\n    o.instance.addClass(o.path, cls);\r\n    o.path.jtk = {\r\n      overlay: o\r\n    };\r\n  }\r\n  var parent = o.path.parentNode;\r\n  if (parent == null) {\r\n    if (o.component instanceof Connection) {\r\n      var connector = o.component.connector;\r\n      parent = connector != null ? connector.canvas : null;\r\n    } else if (o.component instanceof Endpoint) {\r\n      var endpoint = o.component.endpoint;\r\n      parent = endpoint != null ? endpoint.canvas : endpoint;\r\n    }\r\n    if (parent != null) {\r\n      _appendAtIndex(parent, o.path, 1);\r\n    }\r\n  }\r\n  return o.path;\r\n}\r\nfunction paintSVGOverlay(o, path, params, extents) {\r\n  ensureSVGOverlayPath(o);\r\n  var offset = [0, 0];\r\n  if (extents.xmin < 0) {\r\n    offset[0] = -extents.xmin;\r\n  }\r\n  if (extents.ymin < 0) {\r\n    offset[1] = -extents.ymin;\r\n  }\r\n  var a = {\r\n    \"d\": path,\r\n    stroke: params.stroke ? params.stroke : null,\r\n    fill: params.fill ? params.fill : null,\r\n    transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\r\n    \"pointer-events\": \"visibleStroke\"\r\n  };\r\n  _attr(o.path, a);\r\n}\r\nfunction destroySVGOverlay(o, force) {\r\n  var _o = o;\r\n  if (_o.path != null && _o.path.parentNode != null) {\r\n    _o.path.parentNode.removeChild(_o.path);\r\n  }\r\n  if (_o.bgPath != null && _o.bgPath.parentNode != null) {\r\n    _o.bgPath.parentNode.removeChild(_o.bgPath);\r\n  }\r\n  delete _o.path;\r\n  delete _o.bgPath;\r\n}\r\n(function (_Overlay) {\r\n  _inherits(SVGElementOverlay, _Overlay);\r\n  var _super = _createSuper(SVGElementOverlay);\r\n  function SVGElementOverlay() {\r\n    var _this;\r\n    _classCallCheck(this, SVGElementOverlay);\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n    _this = _super.call.apply(_super, [this].concat(args));\r\n    _defineProperty(_assertThisInitialized(_this), \"path\", void 0);\r\n    return _this;\r\n  }\r\n  return SVGElementOverlay;\r\n})(Overlay);\r\n\r\nvar SvgComponent = function () {\r\n  function SvgComponent() {\r\n    _classCallCheck(this, SvgComponent);\r\n  }\r\n  _createClass(SvgComponent, null, [{\r\n    key: \"paint\",\r\n    value: function paint(connector, instance, paintStyle, extents) {\r\n      if (paintStyle != null) {\r\n        var xy = [connector.x, connector.y],\r\n            wh = [connector.w, connector.h];\r\n        if (extents != null) {\r\n          if (extents.xmin < 0) {\r\n            xy[0] += extents.xmin;\r\n          }\r\n          if (extents.ymin < 0) {\r\n            xy[1] += extents.ymin;\r\n          }\r\n          wh[0] = extents.xmax + (extents.xmin < 0 ? -extents.xmin : 0);\r\n          wh[1] = extents.ymax + (extents.ymin < 0 ? -extents.ymin : 0);\r\n        }\r\n        if (isFinite(wh[0]) && isFinite(wh[1])) {\r\n          var attrs = {\r\n            \"width\": \"\" + (wh[0] || 0),\r\n            \"height\": \"\" + (wh[1] || 0)\r\n          };\r\n          if (instance.containerType === ElementTypes.HTML) {\r\n            _attr(connector.canvas, extend(attrs, {\r\n              style: _pos([xy[0], xy[1]])\r\n            }));\r\n          } else {\r\n            _attr(connector.canvas, extend(attrs, {\r\n              x: xy[0],\r\n              y: xy[1]\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n  return SvgComponent;\r\n}();\r\n\r\nfunction paintSvgConnector(instance, connector, paintStyle, extents) {\r\n  getConnectorElement(instance, connector);\r\n  SvgComponent.paint(connector, instance, paintStyle, extents);\r\n  var p = \"\",\r\n      offset = [0, 0];\r\n  if (extents.xmin < 0) {\r\n    offset[0] = -extents.xmin;\r\n  }\r\n  if (extents.ymin < 0) {\r\n    offset[1] = -extents.ymin;\r\n  }\r\n  if (connector.segments.length > 0) {\r\n    p = instance.getPathData(connector);\r\n    var a = {\r\n      d: p,\r\n      transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\r\n      \"pointer-events\": \"visibleStroke\"\r\n    },\r\n        outlineStyle = null;\r\n    if (paintStyle.outlineStroke) {\r\n      var outlineWidth = paintStyle.outlineWidth || 1,\r\n          outlineStrokeWidth = paintStyle.strokeWidth + 2 * outlineWidth;\r\n      outlineStyle = extend({}, paintStyle);\r\n      outlineStyle.stroke = paintStyle.outlineStroke;\r\n      outlineStyle.strokeWidth = outlineStrokeWidth;\r\n      if (connector.bgPath == null) {\r\n        connector.bgPath = _node(ELEMENT_PATH, a);\r\n        instance.addClass(connector.bgPath, instance.connectorOutlineClass);\r\n        _appendAtIndex(connector.canvas, connector.bgPath, 0);\r\n      } else {\r\n        _attr(connector.bgPath, a);\r\n      }\r\n      _applyStyles(connector.canvas, connector.bgPath, outlineStyle);\r\n    }\r\n    var cany = connector;\r\n    if (cany.path == null) {\r\n      cany.path = _node(ELEMENT_PATH, a);\r\n      _appendAtIndex(cany.canvas, cany.path, paintStyle.outlineStroke ? 1 : 0);\r\n    } else {\r\n      if (cany.path.parentNode !== cany.canvas) {\r\n        _appendAtIndex(cany.canvas, cany.path, paintStyle.outlineStroke ? 1 : 0);\r\n      }\r\n      _attr(connector.path, a);\r\n    }\r\n    _applyStyles(connector.canvas, connector.path, paintStyle);\r\n  }\r\n}\r\nfunction getConnectorElement(instance, c) {\r\n  if (c.canvas != null) {\r\n    return c.canvas;\r\n  } else {\r\n    var svg = _node(ELEMENT_SVG, {\r\n      \"style\": \"\",\r\n      \"width\": \"0\",\r\n      \"height\": \"0\",\r\n      \"pointer-events\": NONE,\r\n      \"position\": ABSOLUTE\r\n    });\r\n    c.canvas = svg;\r\n    instance._appendElement(c.canvas, instance.getContainer());\r\n    if (c.cssClass != null) {\r\n      instance.addClass(svg, c.cssClass);\r\n    }\r\n    instance.addClass(svg, instance.connectorClass);\r\n    svg.jtk = svg.jtk || {};\r\n    svg.jtk.connector = c;\r\n    return svg;\r\n  }\r\n}\r\n\r\nvar SvgEndpoint = function () {\r\n  function SvgEndpoint() {\r\n    _classCallCheck(this, SvgEndpoint);\r\n  }\r\n  _createClass(SvgEndpoint, null, [{\r\n    key: \"getEndpointElement\",\r\n    value: function getEndpointElement(ep) {\r\n      if (ep.canvas != null) {\r\n        return ep.canvas;\r\n      } else {\r\n        var canvas = _node(ELEMENT_SVG, {\r\n          \"style\": \"\",\r\n          \"width\": \"0\",\r\n          \"height\": \"0\",\r\n          \"pointer-events\": \"all\",\r\n          \"position\": ABSOLUTE\r\n        });\r\n        ep.canvas = canvas;\r\n        var classes = ep.classes.join(\" \");\r\n        ep.instance.addClass(canvas, classes);\r\n        var scopes = ep.endpoint.scope.split(/\\s/);\r\n        for (var i = 0; i < scopes.length; i++) {\r\n          ep.instance.setAttribute(canvas, ATTRIBUTE_SCOPE_PREFIX + scopes[i], TRUE$1);\r\n        }\r\n        ep.instance._appendElementToContainer(canvas);\r\n        if (ep.cssClass != null) {\r\n          ep.instance.addClass(canvas, ep.cssClass);\r\n        }\r\n        ep.instance.addClass(canvas, ep.instance.endpointClass);\r\n        canvas.jtk = canvas.jtk || {};\r\n        canvas.jtk.endpoint = ep.endpoint;\r\n        canvas.style.display = ep.endpoint.visible !== false ? BLOCK : NONE;\r\n        return canvas;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"paint\",\r\n    value: function paint(ep, handlers, paintStyle) {\r\n      if (ep.endpoint.deleted !== true) {\r\n        this.getEndpointElement(ep);\r\n        SvgComponent.paint(ep, ep.instance, paintStyle);\r\n        var s = extend({}, paintStyle);\r\n        if (s.outlineStroke) {\r\n          s.stroke = s.outlineStroke;\r\n        }\r\n        if (ep.node == null) {\r\n          ep.node = handlers.makeNode(ep, s);\r\n          ep.canvas.appendChild(ep.node);\r\n        } else if (handlers.updateNode != null) {\r\n          handlers.updateNode(ep, ep.node);\r\n        }\r\n        _applyStyles(ep.canvas, ep.node, s);\r\n      }\r\n    }\r\n  }]);\r\n  return SvgEndpoint;\r\n}();\r\n\r\nvar AbstractConnector = function () {\r\n  function AbstractConnector(connection, params) {\r\n    _classCallCheck(this, AbstractConnector);\r\n    this.connection = connection;\r\n    _defineProperty(this, \"type\", void 0);\r\n    _defineProperty(this, \"edited\", false);\r\n    _defineProperty(this, \"stub\", void 0);\r\n    _defineProperty(this, \"sourceStub\", void 0);\r\n    _defineProperty(this, \"targetStub\", void 0);\r\n    _defineProperty(this, \"maxStub\", void 0);\r\n    _defineProperty(this, \"typeId\", void 0);\r\n    _defineProperty(this, \"gap\", void 0);\r\n    _defineProperty(this, \"sourceGap\", void 0);\r\n    _defineProperty(this, \"targetGap\", void 0);\r\n    _defineProperty(this, \"segments\", []);\r\n    _defineProperty(this, \"totalLength\", 0);\r\n    _defineProperty(this, \"segmentProportions\", []);\r\n    _defineProperty(this, \"segmentProportionalLengths\", []);\r\n    _defineProperty(this, \"paintInfo\", null);\r\n    _defineProperty(this, \"strokeWidth\", void 0);\r\n    _defineProperty(this, \"x\", void 0);\r\n    _defineProperty(this, \"y\", void 0);\r\n    _defineProperty(this, \"w\", void 0);\r\n    _defineProperty(this, \"h\", void 0);\r\n    _defineProperty(this, \"segment\", void 0);\r\n    _defineProperty(this, \"bounds\", EMPTY_BOUNDS());\r\n    _defineProperty(this, \"cssClass\", void 0);\r\n    _defineProperty(this, \"hoverClass\", void 0);\r\n    _defineProperty(this, \"geometry\", void 0);\r\n    this.stub = params.stub || this.getDefaultStubs();\r\n    this.sourceStub = Array.isArray(this.stub) ? this.stub[0] : this.stub;\r\n    this.targetStub = Array.isArray(this.stub) ? this.stub[1] : this.stub;\r\n    this.gap = params.gap || 0;\r\n    this.sourceGap = Array.isArray(this.gap) ? this.gap[0] : this.gap;\r\n    this.targetGap = Array.isArray(this.gap) ? this.gap[1] : this.gap;\r\n    this.maxStub = Math.max(this.sourceStub, this.targetStub);\r\n    this.cssClass = params.cssClass || \"\";\r\n    this.hoverClass = params.hoverClass || \"\";\r\n  }\r\n  _createClass(AbstractConnector, [{\r\n    key: \"getTypeDescriptor\",\r\n    value: function getTypeDescriptor() {\r\n      return \"connector\";\r\n    }\r\n  }, {\r\n    key: \"getIdPrefix\",\r\n    value: function getIdPrefix() {\r\n      return \"_jsplumb_connector\";\r\n    }\r\n  }, {\r\n    key: \"setGeometry\",\r\n    value: function setGeometry(g, internal) {\r\n      this.geometry = g;\r\n      this.edited = g != null && !internal;\r\n    }\r\n  }, {\r\n    key: \"exportGeometry\",\r\n    value: function exportGeometry() {\r\n      return this.geometry;\r\n    }\r\n  }, {\r\n    key: \"importGeometry\",\r\n    value: function importGeometry(g) {\r\n      this.geometry = g;\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"resetGeometry\",\r\n    value: function resetGeometry() {\r\n      this.geometry = null;\r\n      this.edited = false;\r\n    }\r\n  }, {\r\n    key: \"transformAnchorPlacement\",\r\n    value:\r\n    function transformAnchorPlacement(a, dx, dy) {\r\n      return {\r\n        x: a.x,\r\n        y: a.y,\r\n        ox: a.ox,\r\n        oy: a.oy,\r\n        curX: a.curX + dx,\r\n        curY: a.curY + dy\r\n      };\r\n    }\r\n  }, {\r\n    key: \"resetBounds\",\r\n    value: function resetBounds() {\r\n      this.bounds = EMPTY_BOUNDS();\r\n    }\r\n  }, {\r\n    key: \"findSegmentForPoint\",\r\n    value: function findSegmentForPoint(x, y) {\r\n      var out = {\r\n        d: Infinity,\r\n        s: null,\r\n        x: null,\r\n        y: null,\r\n        l: null,\r\n        x1: null,\r\n        y1: null,\r\n        x2: null,\r\n        y2: null,\r\n        index: null,\r\n        connectorLocation: null\r\n      };\r\n      for (var i = 0; i < this.segments.length; i++) {\r\n        var _s = this.segments[i].findClosestPointOnPath(x, y);\r\n        if (_s.d < out.d) {\r\n          out.d = _s.d;\r\n          out.l = _s.l;\r\n          out.x = _s.x;\r\n          out.y = _s.y;\r\n          out.s = this.segments[i];\r\n          out.x1 = _s.x1;\r\n          out.x2 = _s.x2;\r\n          out.y1 = _s.y1;\r\n          out.y2 = _s.y2;\r\n          out.index = i;\r\n          out.connectorLocation = this.segmentProportions[i][0] + _s.l * (this.segmentProportions[i][1] - this.segmentProportions[i][0]);\r\n        }\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"lineIntersection\",\r\n    value: function lineIntersection(x1, y1, x2, y2) {\r\n      var out = [];\r\n      for (var i = 0; i < this.segments.length; i++) {\r\n        out.push.apply(out, this.segments[i].lineIntersection(x1, y1, x2, y2));\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"boxIntersection\",\r\n    value: function boxIntersection(x, y, w, h) {\r\n      var out = [];\r\n      for (var i = 0; i < this.segments.length; i++) {\r\n        out.push.apply(out, this.segments[i].boxIntersection(x, y, w, h));\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"boundingBoxIntersection\",\r\n    value: function boundingBoxIntersection(box) {\r\n      var out = [];\r\n      for (var i = 0; i < this.segments.length; i++) {\r\n        out.push.apply(out, this.segments[i].boundingBoxIntersection(box));\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"_updateSegmentProportions\",\r\n    value: function _updateSegmentProportions() {\r\n      var curLoc = 0;\r\n      for (var i = 0; i < this.segments.length; i++) {\r\n        var sl = this.segments[i].getLength();\r\n        this.segmentProportionalLengths[i] = sl / this.totalLength;\r\n        this.segmentProportions[i] = [curLoc, curLoc += sl / this.totalLength];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_findSegmentForLocation\",\r\n    value: function _findSegmentForLocation(location, absolute) {\r\n      var idx, i, inSegmentProportion;\r\n      if (absolute) {\r\n        location = location > 0 ? location / this.totalLength : (this.totalLength + location) / this.totalLength;\r\n      }\r\n      if (location === 1) {\r\n        idx = this.segments.length - 1;\r\n        inSegmentProportion = 1;\r\n      } else if (location === 0) {\r\n        inSegmentProportion = 0;\r\n        idx = 0;\r\n      } else {\r\n        if (location >= 0.5) {\r\n          idx = 0;\r\n          inSegmentProportion = 0;\r\n          for (i = this.segmentProportions.length - 1; i > -1; i--) {\r\n            if (this.segmentProportions[i][1] >= location && this.segmentProportions[i][0] <= location) {\r\n              idx = i;\r\n              inSegmentProportion = (location - this.segmentProportions[i][0]) / this.segmentProportionalLengths[i];\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          idx = this.segmentProportions.length - 1;\r\n          inSegmentProportion = 1;\r\n          for (i = 0; i < this.segmentProportions.length; i++) {\r\n            if (this.segmentProportions[i][1] >= location) {\r\n              idx = i;\r\n              inSegmentProportion = (location - this.segmentProportions[i][0]) / this.segmentProportionalLengths[i];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        segment: this.segments[idx],\r\n        proportion: inSegmentProportion,\r\n        index: idx\r\n      };\r\n    }\r\n  }, {\r\n    key: \"_addSegment\",\r\n    value: function _addSegment(clazz, params) {\r\n      if (params.x1 === params.x2 && params.y1 === params.y2) {\r\n        return;\r\n      }\r\n      var s = new clazz(params);\r\n      this.segments.push(s);\r\n      this.totalLength += s.getLength();\r\n      this.updateBounds(s);\r\n    }\r\n  }, {\r\n    key: \"_clearSegments\",\r\n    value: function _clearSegments() {\r\n      this.totalLength = 0;\r\n      this.segments.length = 0;\r\n      this.segmentProportions.length = 0;\r\n      this.segmentProportionalLengths.length = 0;\r\n    }\r\n  }, {\r\n    key: \"getLength\",\r\n    value: function getLength() {\r\n      return this.totalLength;\r\n    }\r\n  }, {\r\n    key: \"_prepareCompute\",\r\n    value: function _prepareCompute(params) {\r\n      this.strokeWidth = params.strokeWidth;\r\n      var x1 = params.sourcePos.curX,\r\n          x2 = params.targetPos.curX,\r\n          y1 = params.sourcePos.curY,\r\n          y2 = params.targetPos.curY,\r\n          segment = quadrant({\r\n        x: x1,\r\n        y: y1\r\n      }, {\r\n        x: x2,\r\n        y: y2\r\n      }),\r\n          swapX = x2 < x1,\r\n          swapY = y2 < y1,\r\n          so = [params.sourcePos.ox, params.sourcePos.oy],\r\n          to = [params.targetPos.ox, params.targetPos.oy],\r\n          x = swapX ? x2 : x1,\r\n          y = swapY ? y2 : y1,\r\n          w = Math.abs(x2 - x1),\r\n          h = Math.abs(y2 - y1);\r\n      var noSourceOrientation = so[0] === 0 && so[1] === 0;\r\n      var noTargetOrientation = to[0] === 0 && to[1] === 0;\r\n      if (noSourceOrientation || noTargetOrientation) {\r\n        var index = w > h ? 0 : 1,\r\n            oIndex = [1, 0][index],\r\n            v1 = index === 0 ? x1 : y1,\r\n            v2 = index === 0 ? x2 : y2;\r\n        if (noSourceOrientation) {\r\n          so[index] = v1 > v2 ? -1 : 1;\r\n          so[oIndex] = 0;\r\n        }\r\n        if (noTargetOrientation) {\r\n          to[index] = v1 > v2 ? 1 : -1;\r\n          to[oIndex] = 0;\r\n        }\r\n      }\r\n      var sx = swapX ? w + this.sourceGap * so[0] : this.sourceGap * so[0],\r\n          sy = swapY ? h + this.sourceGap * so[1] : this.sourceGap * so[1],\r\n          tx = swapX ? this.targetGap * to[0] : w + this.targetGap * to[0],\r\n          ty = swapY ? this.targetGap * to[1] : h + this.targetGap * to[1],\r\n          oProduct = so[0] * to[0] + so[1] * to[1];\r\n      var result = {\r\n        sx: sx,\r\n        sy: sy,\r\n        tx: tx,\r\n        ty: ty,\r\n        xSpan: Math.abs(tx - sx),\r\n        ySpan: Math.abs(ty - sy),\r\n        mx: (sx + tx) / 2,\r\n        my: (sy + ty) / 2,\r\n        so: so,\r\n        to: to,\r\n        x: x,\r\n        y: y,\r\n        w: w,\r\n        h: h,\r\n        segment: segment,\r\n        startStubX: sx + so[0] * this.sourceStub,\r\n        startStubY: sy + so[1] * this.sourceStub,\r\n        endStubX: tx + to[0] * this.targetStub,\r\n        endStubY: ty + to[1] * this.targetStub,\r\n        isXGreaterThanStubTimes2: Math.abs(sx - tx) > this.sourceStub + this.targetStub,\r\n        isYGreaterThanStubTimes2: Math.abs(sy - ty) > this.sourceStub + this.targetStub,\r\n        opposite: oProduct === -1,\r\n        perpendicular: oProduct === 0,\r\n        orthogonal: oProduct === 1,\r\n        sourceAxis: so[0] === 0 ? \"y\" : \"x\",\r\n        points: [x, y, w, h, sx, sy, tx, ty],\r\n        stubs: [this.sourceStub, this.targetStub]\r\n      };\r\n      result.anchorOrientation = result.opposite ? \"opposite\" : result.orthogonal ? \"orthogonal\" : \"perpendicular\";\r\n      return result;\r\n    }\r\n  }, {\r\n    key: \"updateBounds\",\r\n    value: function updateBounds(segment) {\r\n      var segBounds = segment.extents;\r\n      this.bounds.xmin = Math.min(this.bounds.xmin, segBounds.xmin);\r\n      this.bounds.xmax = Math.max(this.bounds.xmax, segBounds.xmax);\r\n      this.bounds.ymin = Math.min(this.bounds.ymin, segBounds.ymin);\r\n      this.bounds.ymax = Math.max(this.bounds.ymax, segBounds.ymax);\r\n    }\r\n  }, {\r\n    key: \"dumpSegmentsToConsole\",\r\n    value: function dumpSegmentsToConsole() {\r\n      log(\"SEGMENTS:\");\r\n      for (var i = 0; i < this.segments.length; i++) {\r\n        log(this.segments[i].type, \"\" + this.segments[i].getLength(), \"\" + this.segmentProportions[i]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"pointOnPath\",\r\n    value: function pointOnPath(location, absolute) {\r\n      var seg = this._findSegmentForLocation(location, absolute);\r\n      return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n    }\r\n  }, {\r\n    key: \"gradientAtPoint\",\r\n    value: function gradientAtPoint(location, absolute) {\r\n      var seg = this._findSegmentForLocation(location, absolute);\r\n      return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\r\n    }\r\n  }, {\r\n    key: \"pointAlongPathFrom\",\r\n    value: function pointAlongPathFrom(location, distance, absolute) {\r\n      var seg = this._findSegmentForLocation(location, absolute);\r\n      return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n    }\r\n  }, {\r\n    key: \"compute\",\r\n    value: function compute(params) {\r\n      this.paintInfo = this._prepareCompute(params);\r\n      this._clearSegments();\r\n      this._compute(this.paintInfo, params);\r\n      this.x = this.paintInfo.points[0];\r\n      this.y = this.paintInfo.points[1];\r\n      this.w = this.paintInfo.points[2];\r\n      this.h = this.paintInfo.points[3];\r\n      this.segment = this.paintInfo.segment;\r\n      this._updateSegmentProportions();\r\n    }\r\n  }, {\r\n    key: \"setAnchorOrientation\",\r\n    value: function setAnchorOrientation(idx, orientation) {}\r\n  }]);\r\n  return AbstractConnector;\r\n}();\r\n\r\nvar DEFAULT_WIDTH = 20;\r\nvar DEFAULT_LENGTH = 20;\r\nvar ArrowOverlay = function (_Overlay) {\r\n  _inherits(ArrowOverlay, _Overlay);\r\n  var _super = _createSuper(ArrowOverlay);\r\n  function ArrowOverlay(instance, component, p) {\r\n    var _this;\r\n    _classCallCheck(this, ArrowOverlay);\r\n    _this = _super.call(this, instance, component, p);\r\n    _this.instance = instance;\r\n    _this.component = component;\r\n    _defineProperty(_assertThisInitialized(_this), \"width\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"foldback\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"direction\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"location\", 0.5);\r\n    _defineProperty(_assertThisInitialized(_this), \"paintStyle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", ArrowOverlay.type);\r\n    _defineProperty(_assertThisInitialized(_this), \"cachedDimensions\", void 0);\r\n    p = p || {};\r\n    _this.width = p.width || DEFAULT_WIDTH;\r\n    _this.length = p.length || DEFAULT_LENGTH;\r\n    _this.direction = (p.direction || 1) < 0 ? -1 : 1;\r\n    _this.foldback = p.foldback || 0.623;\r\n    _this.paintStyle = p.paintStyle || {\r\n      \"strokeWidth\": 1\r\n    };\r\n    _this.location = p.location == null ? _this.location : Array.isArray(p.location) ? p.location[0] : p.location;\r\n    return _this;\r\n  }\r\n  _createClass(ArrowOverlay, [{\r\n    key: \"draw\",\r\n    value: function draw(component, currentConnectionPaintStyle, absolutePosition) {\r\n      if (component instanceof AbstractConnector) {\r\n        var connector = component;\r\n        var hxy, mid, txy, tail, cxy;\r\n        if (this.location > 1 || this.location < 0) {\r\n          var fromLoc = this.location < 0 ? 1 : 0;\r\n          hxy = connector.pointAlongPathFrom(fromLoc, this.location, false);\r\n          mid = connector.pointAlongPathFrom(fromLoc, this.location - this.direction * this.length / 2, false);\r\n          txy = pointOnLine(hxy, mid, this.length);\r\n        } else if (this.location === 1) {\r\n          hxy = connector.pointOnPath(this.location);\r\n          mid = connector.pointAlongPathFrom(this.location, -this.length);\r\n          txy = pointOnLine(hxy, mid, this.length);\r\n          if (this.direction === -1) {\r\n            var _ = txy;\r\n            txy = hxy;\r\n            hxy = _;\r\n          }\r\n        } else if (this.location === 0) {\r\n          txy = connector.pointOnPath(this.location);\r\n          mid = connector.pointAlongPathFrom(this.location, this.length);\r\n          hxy = pointOnLine(txy, mid, this.length);\r\n          if (this.direction === -1) {\r\n            var __ = txy;\r\n            txy = hxy;\r\n            hxy = __;\r\n          }\r\n        } else {\r\n          hxy = connector.pointAlongPathFrom(this.location, this.direction * this.length / 2);\r\n          mid = connector.pointOnPath(this.location);\r\n          txy = pointOnLine(hxy, mid, this.length);\r\n        }\r\n        tail = perpendicularLineTo(hxy, txy, this.width);\r\n        cxy = pointOnLine(hxy, txy, this.foldback * this.length);\r\n        var d = {\r\n          hxy: hxy,\r\n          tail: tail,\r\n          cxy: cxy\r\n        },\r\n            stroke = this.paintStyle.stroke || currentConnectionPaintStyle.stroke,\r\n            fill = this.paintStyle.fill || currentConnectionPaintStyle.stroke,\r\n            lineWidth = this.paintStyle.strokeWidth || currentConnectionPaintStyle.strokeWidth;\r\n        return {\r\n          component: component,\r\n          d: d,\r\n          \"stroke-width\": lineWidth,\r\n          stroke: stroke,\r\n          fill: fill,\r\n          xmin: Math.min(hxy.x, tail[0].x, tail[1].x),\r\n          xmax: Math.max(hxy.x, tail[0].x, tail[1].x),\r\n          ymin: Math.min(hxy.y, tail[0].y, tail[1].y),\r\n          ymax: Math.max(hxy.y, tail[0].y, tail[1].y)\r\n        };\r\n      }\r\n    }\r\n  }, {\r\n    key: \"updateFrom\",\r\n    value: function updateFrom(d) {}\r\n  }]);\r\n  return ArrowOverlay;\r\n}(Overlay);\r\n_defineProperty(ArrowOverlay, \"type\", \"Arrow\");\r\nfunction isArrowOverlay(o) {\r\n  return o.type === ArrowOverlay.type;\r\n}\r\nOverlayFactory.register(ArrowOverlay.type, ArrowOverlay);\r\n\r\nvar DiamondOverlay = function (_ArrowOverlay) {\r\n  _inherits(DiamondOverlay, _ArrowOverlay);\r\n  var _super = _createSuper(DiamondOverlay);\r\n  function DiamondOverlay(instance, component, p) {\r\n    var _this;\r\n    _classCallCheck(this, DiamondOverlay);\r\n    _this = _super.call(this, instance, component, p);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", DiamondOverlay.type);\r\n    _this.length = _this.length / 2;\r\n    _this.foldback = 2;\r\n    return _this;\r\n  }\r\n  return DiamondOverlay;\r\n}(ArrowOverlay);\r\n_defineProperty(DiamondOverlay, \"type\", \"Diamond\");\r\nfunction isDiamondOverlay(o) {\r\n  return o.type === DiamondOverlay.type;\r\n}\r\nOverlayFactory.register(DiamondOverlay.type, DiamondOverlay);\r\n\r\nvar PlainArrowOverlay = function (_ArrowOverlay) {\r\n  _inherits(PlainArrowOverlay, _ArrowOverlay);\r\n  var _super = _createSuper(PlainArrowOverlay);\r\n  function PlainArrowOverlay(instance, component, p) {\r\n    var _this;\r\n    _classCallCheck(this, PlainArrowOverlay);\r\n    _this = _super.call(this, instance, component, p);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", PlainArrowOverlay.type);\r\n    _this.foldback = 1;\r\n    return _this;\r\n  }\r\n  return PlainArrowOverlay;\r\n}(ArrowOverlay);\r\n_defineProperty(PlainArrowOverlay, \"type\", \"PlainArrow\");\r\nfunction isPlainArrowOverlay(o) {\r\n  return o.type === PlainArrowOverlay.type;\r\n}\r\nOverlayFactory.register(\"PlainArrow\", PlainArrowOverlay);\r\n\r\nvar CustomOverlay = function (_Overlay) {\r\n  _inherits(CustomOverlay, _Overlay);\r\n  var _super = _createSuper(CustomOverlay);\r\n  function CustomOverlay(instance, component, p) {\r\n    var _this;\r\n    _classCallCheck(this, CustomOverlay);\r\n    _this = _super.call(this, instance, component, p);\r\n    _this.instance = instance;\r\n    _this.component = component;\r\n    _defineProperty(_assertThisInitialized(_this), \"create\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", CustomOverlay.type);\r\n    _this.create = p.create;\r\n    return _this;\r\n  }\r\n  _createClass(CustomOverlay, [{\r\n    key: \"updateFrom\",\r\n    value: function updateFrom(d) {}\r\n  }]);\r\n  return CustomOverlay;\r\n}(Overlay);\r\n_defineProperty(CustomOverlay, \"type\", \"Custom\");\r\nfunction isCustomOverlay(o) {\r\n  return o.type === CustomOverlay.type;\r\n}\r\nOverlayFactory.register(CustomOverlay.type, CustomOverlay);\r\n\r\nvar DEFAULT_KEY_ALLOW_NESTED_GROUPS = \"allowNestedGroups\";\r\nvar DEFAULT_KEY_ANCHOR = \"anchor\";\r\nvar DEFAULT_KEY_ANCHORS = \"anchors\";\r\nvar DEFAULT_KEY_CONNECTION_OVERLAYS = \"connectionOverlays\";\r\nvar DEFAULT_KEY_CONNECTIONS_DETACHABLE = \"connectionsDetachable\";\r\nvar DEFAULT_KEY_CONNECTOR = \"connector\";\r\nvar DEFAULT_KEY_CONTAINER = \"container\";\r\nvar DEFAULT_KEY_ENDPOINT = \"endpoint\";\r\nvar DEFAULT_KEY_ENDPOINT_OVERLAYS = \"endpointOverlays\";\r\nvar DEFAULT_KEY_ENDPOINTS = \"endpoints\";\r\nvar DEFAULT_KEY_ENDPOINT_STYLE = \"endpointStyle\";\r\nvar DEFAULT_KEY_ENDPOINT_STYLES = \"endpointStyles\";\r\nvar DEFAULT_KEY_ENDPOINT_HOVER_STYLE = \"endpointHoverStyle\";\r\nvar DEFAULT_KEY_ENDPOINT_HOVER_STYLES = \"endpointHoverStyles\";\r\nvar DEFAULT_KEY_HOVER_CLASS = \"hoverClass\";\r\nvar DEFAULT_KEY_HOVER_PAINT_STYLE = \"hoverPaintStyle\";\r\nvar DEFAULT_KEY_LIST_STYLE = \"listStyle\";\r\nvar DEFAULT_KEY_MAX_CONNECTIONS = \"maxConnections\";\r\nvar DEFAULT_KEY_PAINT_STYLE = \"paintStyle\";\r\nvar DEFAULT_KEY_REATTACH_CONNECTIONS = \"reattachConnections\";\r\nvar DEFAULT_KEY_SCOPE = \"scope\";\r\n\r\nvar DotEndpoint = function (_EndpointRepresentati) {\r\n  _inherits(DotEndpoint, _EndpointRepresentati);\r\n  var _super = _createSuper(DotEndpoint);\r\n  function DotEndpoint(endpoint, params) {\r\n    var _this;\r\n    _classCallCheck(this, DotEndpoint);\r\n    _this = _super.call(this, endpoint, params);\r\n    _defineProperty(_assertThisInitialized(_this), \"radius\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"defaultOffset\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"defaultInnerRadius\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", DotEndpoint.type);\r\n    params = params || {};\r\n    _this.radius = params.radius || 5;\r\n    _this.defaultOffset = 0.5 * _this.radius;\r\n    _this.defaultInnerRadius = _this.radius / 3;\r\n    return _this;\r\n  }\r\n  return DotEndpoint;\r\n}(EndpointRepresentation);\r\n_defineProperty(DotEndpoint, \"type\", \"Dot\");\r\nvar DotEndpointHandler = {\r\n  type: DotEndpoint.type,\r\n  cls: DotEndpoint,\r\n  compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\r\n    var x = anchorPoint.curX - ep.radius,\r\n        y = anchorPoint.curY - ep.radius,\r\n        w = ep.radius * 2,\r\n        h = ep.radius * 2;\r\n    if (endpointStyle && endpointStyle.stroke) {\r\n      var lw = endpointStyle.strokeWidth || 1;\r\n      x -= lw;\r\n      y -= lw;\r\n      w += lw * 2;\r\n      h += lw * 2;\r\n    }\r\n    ep.x = x;\r\n    ep.y = y;\r\n    ep.w = w;\r\n    ep.h = h;\r\n    return [x, y, w, h, ep.radius];\r\n  },\r\n  getParams: function getParams(ep) {\r\n    return {\r\n      radius: ep.radius\r\n    };\r\n  }\r\n};\r\n\r\nvar UINode = function UINode(instance, el) {\r\n  _classCallCheck(this, UINode);\r\n  this.instance = instance;\r\n  this.el = el;\r\n  _defineProperty(this, \"group\", void 0);\r\n};\r\nvar UIGroup = function (_UINode) {\r\n  _inherits(UIGroup, _UINode);\r\n  var _super = _createSuper(UIGroup);\r\n  function UIGroup(instance, el, options) {\r\n    var _this;\r\n    _classCallCheck(this, UIGroup);\r\n    _this = _super.call(this, instance, el);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"children\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"collapsed\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"droppable\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"orphan\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"constrain\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"proxied\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"ghost\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"revert\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"prune\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"dropOverride\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"anchor\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpoint\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"connections\", {\r\n      source: [],\r\n      target: [],\r\n      internal: []\r\n    });\r\n    _defineProperty(_assertThisInitialized(_this), \"manager\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"elId\", void 0);\r\n    var jel = _this.el;\r\n    jel._isJsPlumbGroup = true;\r\n    jel._jsPlumbGroup = _assertThisInitialized(_this);\r\n    _this.elId = instance.getId(el);\r\n    _this.orphan = options.orphan === true;\r\n    _this.revert = _this.orphan === true ? false : options.revert !== false;\r\n    _this.droppable = options.droppable !== false;\r\n    _this.ghost = options.ghost === true;\r\n    _this.enabled = options.enabled !== false;\r\n    _this.prune = _this.orphan !== true && options.prune === true;\r\n    _this.constrain = _this.ghost || options.constrain === true;\r\n    _this.proxied = options.proxied !== false;\r\n    _this.id = options.id || uuid();\r\n    _this.dropOverride = options.dropOverride === true;\r\n    _this.anchor = options.anchor;\r\n    _this.endpoint = options.endpoint;\r\n    _this.anchor = options.anchor;\r\n    instance.setAttribute(el, ATTRIBUTE_GROUP, \"\");\r\n    return _this;\r\n  }\r\n  _createClass(UIGroup, [{\r\n    key: \"contentArea\",\r\n    get: function get() {\r\n      return this.instance.getGroupContentArea(this);\r\n    }\r\n  }, {\r\n    key: \"overrideDrop\",\r\n    value: function overrideDrop(el, targetGroup) {\r\n      return this.dropOverride && (this.revert || this.prune || this.orphan);\r\n    }\r\n  }, {\r\n    key: \"getAnchor\",\r\n    value: function getAnchor(conn, endpointIndex) {\r\n      return this.anchor || \"Continuous\";\r\n    }\r\n  }, {\r\n    key: \"getEndpoint\",\r\n    value: function getEndpoint(conn, endpointIndex) {\r\n      return this.endpoint || {\r\n        type: DotEndpoint.type,\r\n        options: {\r\n          radius: 10\r\n        }\r\n      };\r\n    }\r\n  }, {\r\n    key: \"add\",\r\n    value: function add(_el, doNotFireEvent) {\r\n      var dragArea = this.instance.getGroupContentArea(this);\r\n      var __el = _el;\r\n      if (__el._jsPlumbParentGroup != null) {\r\n        if (__el._jsPlumbParentGroup === this) {\r\n          return;\r\n        } else {\r\n          __el._jsPlumbParentGroup.remove(_el, true, doNotFireEvent, false);\r\n        }\r\n      }\r\n      __el._jsPlumbParentGroup = this;\r\n      this.children.push(new UINode(this.instance, _el));\r\n      this.instance._appendElement(__el, dragArea);\r\n      this.manager._updateConnectionsForGroup(this);\r\n    }\r\n  }, {\r\n    key: \"resolveNode\",\r\n    value: function resolveNode(el) {\r\n      return el == null ? null : getWithFunction(this.children, function (u) {\r\n        return u.el === el;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"remove\",\r\n    value: function remove(el, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\r\n      var uiNode = this.resolveNode(el);\r\n      if (uiNode != null) {\r\n        this._doRemove(uiNode, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_doRemove\",\r\n    value: function _doRemove(child, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\r\n      var __el = child.el;\r\n      delete __el._jsPlumbParentGroup;\r\n      removeWithFunction(this.children, function (e) {\r\n        return e === child;\r\n      });\r\n      if (manipulateDOM) {\r\n        try {\r\n          this.instance.getGroupContentArea(this).removeChild(__el);\r\n        } catch (e) {\r\n          log(\"Could not remove element from Group \" + e);\r\n        }\r\n      }\r\n      if (!doNotFireEvent) {\r\n        var p = {\r\n          group: this,\r\n          el: __el\r\n        };\r\n        if (targetGroup) {\r\n          p.targetGroup = targetGroup;\r\n        }\r\n        this.instance.fire(EVENT_GROUP_MEMBER_REMOVED, p);\r\n      }\r\n      if (!doNotUpdateConnections) {\r\n        this.manager._updateConnectionsForGroup(this);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeAll\",\r\n    value: function removeAll(manipulateDOM, doNotFireEvent) {\r\n      for (var i = 0, l = this.children.length; i < l; i++) {\r\n        var child = this.children[0];\r\n        this._doRemove(child, manipulateDOM, doNotFireEvent, true);\r\n        this.instance.unmanage(child.el, true);\r\n      }\r\n      this.children.length = 0;\r\n      this.manager._updateConnectionsForGroup(this);\r\n    }\r\n  }, {\r\n    key: \"orphanAll\",\r\n    value: function orphanAll() {\r\n      var orphanedPositions = {};\r\n      for (var i = 0; i < this.children.length; i++) {\r\n        var newPosition = this.manager.orphan(this.children[i].el, false);\r\n        orphanedPositions[newPosition.id] = newPosition.pos;\r\n      }\r\n      this.children.length = 0;\r\n      return orphanedPositions;\r\n    }\r\n  }, {\r\n    key: \"addGroup\",\r\n    value: function addGroup(group) {\r\n      if (this.instance.allowNestedGroups && group !== this) {\r\n        if (this.instance.groupManager.isAncestor(this, group)) {\r\n          return false;\r\n        }\r\n        if (group.group != null) {\r\n          group.group.removeGroup(group);\r\n        }\r\n        var groupElId = this.instance.getId(group.el);\r\n        var entry = this.instance.getManagedElements()[groupElId];\r\n        entry.group = this.elId;\r\n        var elpos = this.instance.getOffsetRelativeToRoot(group.el);\r\n        var cpos = this.collapsed ? this.instance.getOffsetRelativeToRoot(this.el) : this.instance.getOffsetRelativeToRoot(this.instance.getGroupContentArea(this));\r\n        group.el._jsPlumbParentGroup = this;\r\n        this.children.push(group);\r\n        this.instance._appendElementToGroup(this, group.el);\r\n        group.group = this;\r\n        var newPosition = {\r\n          x: elpos.x - cpos.x,\r\n          y: elpos.y - cpos.y\r\n        };\r\n        this.instance.setPosition(group.el, newPosition);\r\n        this.instance.fire(EVENT_NESTED_GROUP_ADDED, {\r\n          parent: this,\r\n          child: group\r\n        });\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeGroup\",\r\n    value: function removeGroup(group) {\r\n      if (group.group === this) {\r\n        var jel = group.el;\r\n        var d = this.instance.getGroupContentArea(this);\r\n        if (d === jel.parentNode) {\r\n          d.removeChild(group.el);\r\n        }\r\n        var groupElId = this.instance.getId(group.el);\r\n        var entry = this.instance.getManagedElements()[groupElId];\r\n        if (entry) {\r\n          delete entry.group;\r\n        }\r\n        this.children = this.children.filter(function (cg) {\r\n          return cg.id !== group.id;\r\n        });\r\n        delete group.group;\r\n        delete jel._jsPlumbParentGroup;\r\n        this.instance.fire(EVENT_NESTED_GROUP_REMOVED, {\r\n          parent: this,\r\n          child: group\r\n        });\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getGroups\",\r\n    value: function getGroups() {\r\n      return this.children.filter(function (cg) {\r\n        return cg.constructor === UIGroup;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"getNodes\",\r\n    value: function getNodes() {\r\n      return this.children.filter(function (cg) {\r\n        return cg.constructor === UINode;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"collapseParent\",\r\n    get: function get() {\r\n      var cg = null;\r\n      if (this.group == null) {\r\n        return null;\r\n      } else {\r\n        var g = this.group;\r\n        while (g != null) {\r\n          if (g.collapsed) {\r\n            cg = g;\r\n          }\r\n          g = g.group;\r\n        }\r\n        return cg;\r\n      }\r\n    }\r\n  }]);\r\n  return UIGroup;\r\n}(UINode);\r\n\r\nvar GroupManager = function () {\r\n  function GroupManager(instance) {\r\n    var _this = this;\r\n    _classCallCheck(this, GroupManager);\r\n    this.instance = instance;\r\n    _defineProperty(this, \"groupMap\", {});\r\n    _defineProperty(this, \"_connectionSourceMap\", {});\r\n    _defineProperty(this, \"_connectionTargetMap\", {});\r\n    instance.bind(EVENT_INTERNAL_CONNECTION, function (p) {\r\n      var sourceGroup = _this.getGroupFor(p.source);\r\n      var targetGroup = _this.getGroupFor(p.target);\r\n      if (sourceGroup != null && targetGroup != null && sourceGroup === targetGroup) {\r\n        _this._connectionSourceMap[p.connection.id] = sourceGroup;\r\n        _this._connectionTargetMap[p.connection.id] = sourceGroup;\r\n        suggest(sourceGroup.connections.internal, p.connection);\r\n      } else {\r\n        if (sourceGroup != null) {\r\n          if (p.target._jsPlumbGroup === sourceGroup) {\r\n            suggest(sourceGroup.connections.internal, p.connection);\r\n          } else {\r\n            suggest(sourceGroup.connections.source, p.connection);\r\n          }\r\n          _this._connectionSourceMap[p.connection.id] = sourceGroup;\r\n        }\r\n        if (targetGroup != null) {\r\n          if (p.source._jsPlumbGroup === targetGroup) {\r\n            suggest(targetGroup.connections.internal, p.connection);\r\n          } else {\r\n            suggest(targetGroup.connections.target, p.connection);\r\n          }\r\n          _this._connectionTargetMap[p.connection.id] = targetGroup;\r\n        }\r\n      }\r\n    });\r\n    instance.bind(EVENT_INTERNAL_CONNECTION_DETACHED, function (p) {\r\n      _this._cleanupDetachedConnection(p.connection);\r\n    });\r\n    instance.bind(EVENT_CONNECTION_MOVED, function (p) {\r\n      var originalElement = p.originalEndpoint.element,\r\n          originalGroup = _this.getGroupFor(originalElement),\r\n          newEndpoint = p.connection.endpoints[p.index],\r\n          newElement = newEndpoint.element,\r\n          newGroup = _this.getGroupFor(newElement),\r\n          connMap = p.index === 0 ? _this._connectionSourceMap : _this._connectionTargetMap,\r\n          otherConnMap = p.index === 0 ? _this._connectionTargetMap : _this._connectionSourceMap;\r\n      if (newGroup != null) {\r\n        connMap[p.connection.id] = newGroup;\r\n        if (p.connection.source === p.connection.target) {\r\n          otherConnMap[p.connection.id] = newGroup;\r\n        }\r\n      } else {\r\n        delete connMap[p.connection.id];\r\n        if (p.connection.source === p.connection.target) {\r\n          delete otherConnMap[p.connection.id];\r\n        }\r\n      }\r\n      if (originalGroup != null) {\r\n        _this._updateConnectionsForGroup(originalGroup);\r\n      }\r\n      if (newGroup != null) {\r\n        _this._updateConnectionsForGroup(newGroup);\r\n      }\r\n    });\r\n  }\r\n  _createClass(GroupManager, [{\r\n    key: \"_cleanupDetachedConnection\",\r\n    value: function _cleanupDetachedConnection(conn) {\r\n      conn.proxies.length = 0;\r\n      var group = this._connectionSourceMap[conn.id],\r\n          f;\r\n      if (group != null) {\r\n        f = function f(c) {\r\n          return c.id === conn.id;\r\n        };\r\n        removeWithFunction(group.connections.source, f);\r\n        removeWithFunction(group.connections.target, f);\r\n        removeWithFunction(group.connections.internal, f);\r\n        delete this._connectionSourceMap[conn.id];\r\n      }\r\n      group = this._connectionTargetMap[conn.id];\r\n      if (group != null) {\r\n        f = function f(c) {\r\n          return c.id === conn.id;\r\n        };\r\n        removeWithFunction(group.connections.source, f);\r\n        removeWithFunction(group.connections.target, f);\r\n        removeWithFunction(group.connections.internal, f);\r\n        delete this._connectionTargetMap[conn.id];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"addGroup\",\r\n    value: function addGroup(params) {\r\n      var jel = params.el;\r\n      if (this.groupMap[params.id] != null) {\r\n        throw new Error(\"cannot create Group [\" + params.id + \"]; a Group with that ID exists\");\r\n      }\r\n      if (jel._isJsPlumbGroup != null) {\r\n        throw new Error(\"cannot create Group [\" + params.id + \"]; the given element is already a Group\");\r\n      }\r\n      var group = new UIGroup(this.instance, params.el, params);\r\n      this.groupMap[group.id] = group;\r\n      if (params.collapsed) {\r\n        this.collapseGroup(group);\r\n      }\r\n      this.instance.manage(group.el);\r\n      this.instance.addClass(group.el, CLASS_GROUP_EXPANDED);\r\n      group.manager = this;\r\n      this._updateConnectionsForGroup(group);\r\n      this.instance.fire(EVENT_GROUP_ADDED, {\r\n        group: group\r\n      });\r\n      return group;\r\n    }\r\n  }, {\r\n    key: \"getGroup\",\r\n    value: function getGroup(groupId) {\r\n      var group = groupId;\r\n      if (isString(groupId)) {\r\n        group = this.groupMap[groupId];\r\n        if (group == null) {\r\n          throw new Error(\"No such group [\" + groupId + \"]\");\r\n        }\r\n      }\r\n      return group;\r\n    }\r\n  }, {\r\n    key: \"getGroupFor\",\r\n    value: function getGroupFor(el) {\r\n      var jel = el;\r\n      var c = this.instance.getContainer();\r\n      var abort = false,\r\n          g = null;\r\n      while (!abort) {\r\n        if (jel == null || jel === c) {\r\n          abort = true;\r\n        } else {\r\n          if (jel._jsPlumbParentGroup) {\r\n            g = jel._jsPlumbParentGroup;\r\n            abort = true;\r\n          } else {\r\n            jel = jel.parentNode;\r\n          }\r\n        }\r\n      }\r\n      return g;\r\n    }\r\n  }, {\r\n    key: \"getGroups\",\r\n    value: function getGroups() {\r\n      var g = [];\r\n      for (var key in this.groupMap) {\r\n        g.push(this.groupMap[key]);\r\n      }\r\n      return g;\r\n    }\r\n  }, {\r\n    key: \"removeGroup\",\r\n    value: function removeGroup(group, deleteMembers, manipulateView, doNotFireEvent) {\r\n      var _this2 = this;\r\n      var actualGroup = this.getGroup(group);\r\n      this.expandGroup(actualGroup, true);\r\n      var newPositions = {};\r\n      forEach(actualGroup.children, function (uiNode) {\r\n        var entry = _this2.instance.getManagedElements()[_this2.instance.getId(uiNode.el)];\r\n        if (entry) {\r\n          delete entry.group;\r\n        }\r\n      });\r\n      if (deleteMembers) {\r\n        forEach(actualGroup.getGroups(), function (cg) {\r\n          return _this2.removeGroup(cg, deleteMembers, manipulateView);\r\n        });\r\n        actualGroup.removeAll(manipulateView, doNotFireEvent);\r\n      } else {\r\n        if (actualGroup.group) {\r\n          forEach(actualGroup.children, function (c) {\r\n            return actualGroup.group.add(c.el);\r\n          });\r\n        }\r\n        newPositions = actualGroup.orphanAll();\r\n      }\r\n      if (actualGroup.group) {\r\n        actualGroup.group.removeGroup(actualGroup);\r\n      }\r\n      this.instance.unmanage(actualGroup.el, true);\r\n      delete this.groupMap[actualGroup.id];\r\n      this.instance.fire(EVENT_GROUP_REMOVED, {\r\n        group: actualGroup\r\n      });\r\n      return newPositions;\r\n    }\r\n  }, {\r\n    key: \"removeAllGroups\",\r\n    value: function removeAllGroups(deleteMembers, manipulateView, doNotFireEvent) {\r\n      for (var _g in this.groupMap) {\r\n        this.removeGroup(this.groupMap[_g], deleteMembers, manipulateView, doNotFireEvent);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"forEach\",\r\n    value: function forEach(f) {\r\n      for (var key in this.groupMap) {\r\n        f(this.groupMap[key]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"orphan\",\r\n    value: function orphan(el, doNotTransferToAncestor) {\r\n      var jel = el;\r\n      if (jel._jsPlumbParentGroup) {\r\n        var currentParent = jel._jsPlumbParentGroup;\r\n        var id = this.instance.getId(jel);\r\n        var pos = this.instance.getOffset(el);\r\n        if (doNotTransferToAncestor !== true && currentParent.group) {\r\n          this.instance._appendElementToGroup(currentParent.group, el);\r\n        } else {\r\n          this.instance._appendElementToContainer(el);\r\n        }\r\n        this.instance.setPosition(el, pos);\r\n        delete jel._jsPlumbParentGroup;\r\n        return {\r\n          id: id,\r\n          pos: pos\r\n        };\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_updateConnectionsForGroup\",\r\n    value: function _updateConnectionsForGroup(group) {\r\n      var _this3 = this;\r\n      group.connections.source.length = 0;\r\n      group.connections.target.length = 0;\r\n      group.connections.internal.length = 0;\r\n      var members = group.children.slice().map(function (cn) {\r\n        return cn.el;\r\n      });\r\n      var childMembers = [];\r\n      forEach(members, function (member) {\r\n        Array.prototype.push.apply(childMembers, _this3.instance.getSelector(member, SELECTOR_MANAGED_ELEMENT));\r\n      });\r\n      Array.prototype.push.apply(members, childMembers);\r\n      if (members.length > 0) {\r\n        var c1 = this.instance.getConnections({\r\n          source: members,\r\n          scope: WILDCARD\r\n        }, true);\r\n        var c2 = this.instance.getConnections({\r\n          target: members,\r\n          scope: WILDCARD\r\n        }, true);\r\n        var processed = {};\r\n        var gs, gt;\r\n        var oneSet = function oneSet(c) {\r\n          for (var i = 0; i < c.length; i++) {\r\n            if (processed[c[i].id]) {\r\n              continue;\r\n            }\r\n            processed[c[i].id] = true;\r\n            gs = _this3.getGroupFor(c[i].source);\r\n            gt = _this3.getGroupFor(c[i].target);\r\n            if (c[i].source === group.el && gt === group || c[i].target === group.el && gs === group) {\r\n              group.connections.internal.push(c[i]);\r\n            } else if (gs === group) {\r\n              if (gt !== group) {\r\n                group.connections.source.push(c[i]);\r\n              } else {\r\n                group.connections.internal.push(c[i]);\r\n              }\r\n              _this3._connectionSourceMap[c[i].id] = group;\r\n            } else if (gt === group) {\r\n              group.connections.target.push(c[i]);\r\n              _this3._connectionTargetMap[c[i].id] = group;\r\n            }\r\n          }\r\n        };\r\n        oneSet(c1);\r\n        oneSet(c2);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_collapseConnection\",\r\n    value: function _collapseConnection(conn, index, group) {\r\n      var otherEl = conn.endpoints[index === 0 ? 1 : 0].element;\r\n      if (otherEl._jsPlumbParentGroup && !otherEl._jsPlumbParentGroup.proxied && otherEl._jsPlumbParentGroup.collapsed) {\r\n        return false;\r\n      }\r\n      var es = conn.endpoints[0].element,\r\n          esg = es._jsPlumbParentGroup,\r\n          esgcp = esg != null ? esg.collapseParent || esg : null,\r\n          et = conn.endpoints[1].element,\r\n          etg = et._jsPlumbParentGroup,\r\n          etgcp = etg != null ? etg.collapseParent || etg : null;\r\n      if (esgcp == null || etgcp == null || esgcp.id !== etgcp.id) {\r\n        var groupEl = group.el;\r\n            this.instance.getId(groupEl);\r\n        this.instance.proxyConnection(conn, index, groupEl,\r\n        function (conn, index) {\r\n          return group.getEndpoint(conn, index);\r\n        }, function (conn, index) {\r\n          return group.getAnchor(conn, index);\r\n        });\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_expandConnection\",\r\n    value: function _expandConnection(c, index, group) {\r\n      this.instance.unproxyConnection(c, index);\r\n    }\r\n  }, {\r\n    key: \"isElementDescendant\",\r\n    value: function isElementDescendant(el, parentEl) {\r\n      var c = this.instance.getContainer();\r\n      var abort = false;\r\n      while (!abort) {\r\n        if (el == null || el === c) {\r\n          return false;\r\n        } else {\r\n          if (el === parentEl) {\r\n            return true;\r\n          } else {\r\n            el = el.parentNode;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"collapseGroup\",\r\n    value: function collapseGroup(group) {\r\n      var _this4 = this;\r\n      var actualGroup = this.getGroup(group);\r\n      if (actualGroup == null || actualGroup.collapsed) {\r\n        return;\r\n      }\r\n      var groupEl = actualGroup.el;\r\n      if (actualGroup.collapseParent == null) {\r\n        this.instance.setGroupVisible(actualGroup, false);\r\n        actualGroup.collapsed = true;\r\n        this.instance.removeClass(groupEl, CLASS_GROUP_EXPANDED);\r\n        this.instance.addClass(groupEl, CLASS_GROUP_COLLAPSED);\r\n        if (actualGroup.proxied) {\r\n          var collapsedConnectionIds = new Set();\r\n          var _collapseSet = function _collapseSet(conns, index) {\r\n            for (var i = 0; i < conns.length; i++) {\r\n              var c = conns[i];\r\n              if (_this4._collapseConnection(c, index, actualGroup) === true) {\r\n                collapsedConnectionIds.add(c.id);\r\n              }\r\n            }\r\n          };\r\n          _collapseSet(actualGroup.connections.source, 0);\r\n          _collapseSet(actualGroup.connections.target, 1);\r\n          forEach(actualGroup.getGroups(), function (cg) {\r\n            _this4.cascadeCollapse(actualGroup, cg, collapsedConnectionIds);\r\n          });\r\n        }\r\n        this.instance.revalidate(groupEl);\r\n        this.repaintGroup(actualGroup);\r\n        this.instance.fire(EVENT_GROUP_COLLAPSE, {\r\n          group: actualGroup\r\n        });\r\n      } else {\r\n        actualGroup.collapsed = true;\r\n        this.instance.removeClass(groupEl, CLASS_GROUP_EXPANDED);\r\n        this.instance.addClass(groupEl, CLASS_GROUP_COLLAPSED);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"cascadeCollapse\",\r\n    value: function cascadeCollapse(collapsedGroup, targetGroup, collapsedIds) {\r\n      var _this5 = this;\r\n      if (collapsedGroup.proxied) {\r\n        var _collapseSet = function _collapseSet(conns, index) {\r\n          for (var i = 0; i < conns.length; i++) {\r\n            var c = conns[i];\r\n            if (!collapsedIds.has(c.id)) {\r\n              if (_this5._collapseConnection(c, index, collapsedGroup) === true) {\r\n                collapsedIds.add(c.id);\r\n              }\r\n            }\r\n          }\r\n        };\r\n        _collapseSet(targetGroup.connections.source, 0);\r\n        _collapseSet(targetGroup.connections.target, 1);\r\n      }\r\n      forEach(targetGroup.getGroups(), function (cg) {\r\n        _this5.cascadeCollapse(collapsedGroup, cg, collapsedIds);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"expandGroup\",\r\n    value: function expandGroup(group, doNotFireEvent) {\r\n      var _this6 = this;\r\n      var actualGroup = this.getGroup(group);\r\n      if (actualGroup == null) {\r\n        return;\r\n      }\r\n      var groupEl = actualGroup.el;\r\n      if (actualGroup.collapseParent == null) {\r\n        this.instance.setGroupVisible(actualGroup, true);\r\n        actualGroup.collapsed = false;\r\n        this.instance.addClass(groupEl, CLASS_GROUP_EXPANDED);\r\n        this.instance.removeClass(groupEl, CLASS_GROUP_COLLAPSED);\r\n        if (actualGroup.proxied) {\r\n          var _expandSet = function _expandSet(conns, index) {\r\n            for (var i = 0; i < conns.length; i++) {\r\n              var c = conns[i];\r\n              _this6._expandConnection(c, index, actualGroup);\r\n            }\r\n          };\r\n          _expandSet(actualGroup.connections.source, 0);\r\n          _expandSet(actualGroup.connections.target, 1);\r\n          var _expandNestedGroup = function _expandNestedGroup(group, ignoreCollapsedStateForNested) {\r\n            if (ignoreCollapsedStateForNested || group.collapsed) {\r\n              var _collapseSet = function _collapseSet(conns, index) {\r\n                for (var i = 0; i < conns.length; i++) {\r\n                  var c = conns[i];\r\n                  _this6._collapseConnection(c, index, group.collapseParent || group);\r\n                }\r\n              };\r\n              _collapseSet(group.connections.source, 0);\r\n              _collapseSet(group.connections.target, 1);\r\n              forEach(group.connections.internal, function (c) {\r\n                return c.setVisible(false);\r\n              });\r\n              forEach(group.getGroups(), function (g) {\r\n                return _expandNestedGroup(g, true);\r\n              });\r\n            } else {\r\n              _this6.expandGroup(group, true);\r\n            }\r\n          };\r\n          forEach(actualGroup.getGroups(), _expandNestedGroup);\r\n        }\r\n        this.instance.revalidate(groupEl);\r\n        this.repaintGroup(actualGroup);\r\n        if (!doNotFireEvent) {\r\n          this.instance.fire(EVENT_GROUP_EXPAND, {\r\n            group: actualGroup\r\n          });\r\n        }\r\n      } else {\r\n        actualGroup.collapsed = false;\r\n        this.instance.addClass(groupEl, CLASS_GROUP_EXPANDED);\r\n        this.instance.removeClass(groupEl, CLASS_GROUP_COLLAPSED);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"toggleGroup\",\r\n    value: function toggleGroup(group) {\r\n      group = this.getGroup(group);\r\n      if (group != null) {\r\n        if (group.collapsed) {\r\n          this.expandGroup(group);\r\n        } else {\r\n          this.collapseGroup(group);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"repaintGroup\",\r\n    value: function repaintGroup(group) {\r\n      var actualGroup = this.getGroup(group);\r\n      var m = actualGroup.children;\r\n      for (var i = 0; i < m.length; i++) {\r\n        this.instance.revalidate(m[i].el);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"addToGroup\",\r\n    value: function addToGroup(group, doNotFireEvent) {\r\n      var _this7 = this;\r\n      var actualGroup = this.getGroup(group);\r\n      if (actualGroup) {\r\n        var groupEl = actualGroup.el;\r\n        var _one = function _one(el) {\r\n          var jel = el;\r\n          var isGroup = jel._isJsPlumbGroup != null,\r\n              droppingGroup = jel._jsPlumbGroup;\r\n          var currentGroup = jel._jsPlumbParentGroup;\r\n          if (currentGroup !== actualGroup) {\r\n            var entry = _this7.instance.manage(el);\r\n            var elpos = _this7.instance.getOffset(el);\r\n            var cpos = actualGroup.collapsed ? _this7.instance.getOffsetRelativeToRoot(groupEl) : _this7.instance.getOffset(_this7.instance.getGroupContentArea(actualGroup));\r\n            entry.group = actualGroup.elId;\r\n            if (currentGroup != null) {\r\n              currentGroup.remove(el, false, doNotFireEvent, false, actualGroup);\r\n              _this7._updateConnectionsForGroup(currentGroup);\r\n            }\r\n            if (isGroup) {\r\n              actualGroup.addGroup(droppingGroup);\r\n            } else {\r\n              actualGroup.add(el, doNotFireEvent);\r\n            }\r\n            var handleDroppedConnections = function handleDroppedConnections(list, index) {\r\n              var oidx = index === 0 ? 1 : 0;\r\n              list.each(function (c) {\r\n                c.setVisible(false);\r\n                if (c.endpoints[oidx].element._jsPlumbGroup === actualGroup) {\r\n                  c.endpoints[oidx].setVisible(false);\r\n                  _this7._expandConnection(c, oidx, actualGroup);\r\n                } else {\r\n                  c.endpoints[index].setVisible(false);\r\n                  _this7._collapseConnection(c, index, actualGroup);\r\n                }\r\n              });\r\n            };\r\n            if (actualGroup.collapsed) {\r\n              handleDroppedConnections(_this7.instance.select({\r\n                source: el\r\n              }), 0);\r\n              handleDroppedConnections(_this7.instance.select({\r\n                target: el\r\n              }), 1);\r\n            }\r\n            _this7.instance.getId(el);\r\n            var newPosition = {\r\n              x: elpos.x - cpos.x,\r\n              y: elpos.y - cpos.y\r\n            };\r\n            _this7.instance.setPosition(el, newPosition);\r\n            _this7._updateConnectionsForGroup(actualGroup);\r\n            _this7.instance.revalidate(el);\r\n            if (!doNotFireEvent) {\r\n              var p = {\r\n                group: actualGroup,\r\n                el: el,\r\n                pos: newPosition\r\n              };\r\n              if (currentGroup) {\r\n                p.sourceGroup = currentGroup;\r\n              }\r\n              _this7.instance.fire(EVENT_GROUP_MEMBER_ADDED, p);\r\n            }\r\n          }\r\n        };\r\n        for (var _len = arguments.length, el = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n          el[_key - 2] = arguments[_key];\r\n        }\r\n        forEach(el, _one);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeFromGroup\",\r\n    value: function removeFromGroup(group, doNotFireEvent) {\r\n      var _this8 = this;\r\n      var actualGroup = this.getGroup(group);\r\n      if (actualGroup) {\r\n        var _one = function _one(_el) {\r\n          if (actualGroup.collapsed) {\r\n            var _expandSet = function _expandSet(conns, index) {\r\n              for (var i = 0; i < conns.length; i++) {\r\n                var c = conns[i];\r\n                if (c.proxies) {\r\n                  for (var j = 0; j < c.proxies.length; j++) {\r\n                    if (c.proxies[j] != null) {\r\n                      var proxiedElement = c.proxies[j].originalEp.element;\r\n                      if (proxiedElement === _el || _this8.isElementDescendant(proxiedElement, _el)) {\r\n                        _this8._expandConnection(c, index, actualGroup);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            _expandSet(actualGroup.connections.source.slice(), 0);\r\n            _expandSet(actualGroup.connections.target.slice(), 1);\r\n          }\r\n          actualGroup.remove(_el, null, doNotFireEvent);\r\n          var entry = _this8.instance.getManagedElements()[_this8.instance.getId(_el)];\r\n          if (entry) {\r\n            delete entry.group;\r\n          }\r\n        };\r\n        for (var _len2 = arguments.length, el = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\r\n          el[_key2 - 2] = arguments[_key2];\r\n        }\r\n        forEach(el, _one);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getAncestors\",\r\n    value: function getAncestors(group) {\r\n      var ancestors = [];\r\n      var p = group.group;\r\n      while (p != null) {\r\n        ancestors.push(p);\r\n        p = p.group;\r\n      }\r\n      return ancestors;\r\n    }\r\n  }, {\r\n    key: \"isAncestor\",\r\n    value: function isAncestor(group, possibleAncestor) {\r\n      if (group == null || possibleAncestor == null) {\r\n        return false;\r\n      }\r\n      return this.getAncestors(group).indexOf(possibleAncestor) !== -1;\r\n    }\r\n  }, {\r\n    key: \"getDescendants\",\r\n    value: function getDescendants(group) {\r\n      var d = [];\r\n      var _one = function _one(g) {\r\n        var childGroups = g.getGroups();\r\n        d.push.apply(d, _toConsumableArray(childGroups));\r\n        forEach(childGroups, _one);\r\n      };\r\n      _one(group);\r\n      return d;\r\n    }\r\n  }, {\r\n    key: \"isDescendant\",\r\n    value: function isDescendant(possibleDescendant, ancestor) {\r\n      if (possibleDescendant == null || ancestor == null) {\r\n        return false;\r\n      }\r\n      return this.getDescendants(ancestor).indexOf(possibleDescendant) !== -1;\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      this._connectionSourceMap = {};\r\n      this._connectionTargetMap = {};\r\n      this.groupMap = {};\r\n    }\r\n  }]);\r\n  return GroupManager;\r\n}();\r\n\r\nvar SelectionBase = function () {\r\n  function SelectionBase(instance, entries) {\r\n    _classCallCheck(this, SelectionBase);\r\n    this.instance = instance;\r\n    this.entries = entries;\r\n  }\r\n  _createClass(SelectionBase, [{\r\n    key: \"length\",\r\n    get: function get() {\r\n      return this.entries.length;\r\n    }\r\n  }, {\r\n    key: \"each\",\r\n    value: function each(handler) {\r\n      forEach(this.entries, function (e) {\r\n        return handler(e);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"get\",\r\n    value: function get(index) {\r\n      return this.entries[index];\r\n    }\r\n  }, {\r\n    key: \"addClass\",\r\n    value: function addClass(clazz, cascade) {\r\n      this.each(function (c) {\r\n        return c.addClass(clazz, cascade);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"removeClass\",\r\n    value: function removeClass(clazz, cascade) {\r\n      this.each(function (c) {\r\n        return c.removeClass(clazz, cascade);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"removeAllOverlays\",\r\n    value: function removeAllOverlays() {\r\n      this.each(function (c) {\r\n        return c.removeAllOverlays();\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setLabel\",\r\n    value: function setLabel(label) {\r\n      this.each(function (c) {\r\n        return c.setLabel(label);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"clear\",\r\n    value: function clear() {\r\n      this.entries.length = 0;\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"map\",\r\n    value: function map(fn) {\r\n      var a = [];\r\n      this.each(function (e) {\r\n        return a.push(fn(e));\r\n      });\r\n      return a;\r\n    }\r\n  }, {\r\n    key: \"addOverlay\",\r\n    value: function addOverlay(spec) {\r\n      this.each(function (c) {\r\n        return c.addOverlay(spec);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"removeOverlay\",\r\n    value: function removeOverlay(id) {\r\n      this.each(function (c) {\r\n        return c.removeOverlay(id);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"removeOverlays\",\r\n    value: function removeOverlays() {\r\n      this.each(function (c) {\r\n        return c.removeOverlays();\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"showOverlay\",\r\n    value: function showOverlay(id) {\r\n      this.each(function (c) {\r\n        return c.showOverlay(id);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"hideOverlay\",\r\n    value: function hideOverlay(id) {\r\n      this.each(function (c) {\r\n        return c.hideOverlay(id);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setPaintStyle\",\r\n    value: function setPaintStyle(style) {\r\n      this.each(function (c) {\r\n        return c.setPaintStyle(style);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setHoverPaintStyle\",\r\n    value: function setHoverPaintStyle(style) {\r\n      this.each(function (c) {\r\n        return c.setHoverPaintStyle(style);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setSuspendEvents\",\r\n    value: function setSuspendEvents(suspend) {\r\n      this.each(function (c) {\r\n        return c.setSuspendEvents(suspend);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setParameter\",\r\n    value: function setParameter(name, value) {\r\n      this.each(function (c) {\r\n        return c.parameters[name] = value;\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setParameters\",\r\n    value: function setParameters(p) {\r\n      this.each(function (c) {\r\n        return c.parameters = p;\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setVisible\",\r\n    value: function setVisible(v) {\r\n      this.each(function (c) {\r\n        return c.setVisible(v);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"addType\",\r\n    value: function addType(name) {\r\n      this.each(function (c) {\r\n        return c.addType(name);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"toggleType\",\r\n    value: function toggleType(name) {\r\n      this.each(function (c) {\r\n        return c.toggleType(name);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"removeType\",\r\n    value: function removeType(name) {\r\n      this.each(function (c) {\r\n        return c.removeType(name);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"bind\",\r\n    value: function bind(evt, handler) {\r\n      this.each(function (c) {\r\n        return c.bind(evt, handler);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"unbind\",\r\n    value: function unbind(evt, handler) {\r\n      this.each(function (c) {\r\n        return c.unbind(evt, handler);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setHover\",\r\n    value: function setHover(h) {\r\n      var _this = this;\r\n      this.each(function (c) {\r\n        return _this.instance.setHover(c, h);\r\n      });\r\n      return this;\r\n    }\r\n  }]);\r\n  return SelectionBase;\r\n}();\r\n\r\nvar EndpointSelection = function (_SelectionBase) {\r\n  _inherits(EndpointSelection, _SelectionBase);\r\n  var _super = _createSuper(EndpointSelection);\r\n  function EndpointSelection() {\r\n    _classCallCheck(this, EndpointSelection);\r\n    return _super.apply(this, arguments);\r\n  }\r\n  _createClass(EndpointSelection, [{\r\n    key: \"setEnabled\",\r\n    value: function setEnabled(e) {\r\n      this.each(function (ep) {\r\n        return ep.enabled = e;\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setAnchor\",\r\n    value: function setAnchor(a) {\r\n      this.each(function (ep) {\r\n        return ep.setAnchor(a);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"deleteEveryConnection\",\r\n    value: function deleteEveryConnection() {\r\n      this.each(function (ep) {\r\n        return ep.deleteEveryConnection();\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"deleteAll\",\r\n    value: function deleteAll() {\r\n      var _this = this;\r\n      this.each(function (ep) {\r\n        return _this.instance.deleteEndpoint(ep);\r\n      });\r\n      this.clear();\r\n      return this;\r\n    }\r\n  }]);\r\n  return EndpointSelection;\r\n}(SelectionBase);\r\n\r\nvar ConnectionSelection = function (_SelectionBase) {\r\n  _inherits(ConnectionSelection, _SelectionBase);\r\n  var _super = _createSuper(ConnectionSelection);\r\n  function ConnectionSelection() {\r\n    _classCallCheck(this, ConnectionSelection);\r\n    return _super.apply(this, arguments);\r\n  }\r\n  _createClass(ConnectionSelection, [{\r\n    key: \"setDetachable\",\r\n    value: function setDetachable(d) {\r\n      this.each(function (c) {\r\n        return c.setDetachable(d);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setReattach\",\r\n    value: function setReattach(d) {\r\n      this.each(function (c) {\r\n        return c.setReattach(d);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setConnector\",\r\n    value: function setConnector(spec) {\r\n      this.each(function (c) {\r\n        return c._setConnector(spec);\r\n      });\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"deleteAll\",\r\n    value: function deleteAll() {\r\n      var _this = this;\r\n      this.each(function (c) {\r\n        return _this.instance.deleteConnection(c);\r\n      });\r\n      this.clear();\r\n    }\r\n  }, {\r\n    key: \"repaint\",\r\n    value: function repaint() {\r\n      var _this2 = this;\r\n      this.each(function (c) {\r\n        return _this2.instance._paintConnection(c);\r\n      });\r\n      return this;\r\n    }\r\n  }]);\r\n  return ConnectionSelection;\r\n}(SelectionBase);\r\n\r\nvar Transaction = function Transaction() {\r\n  _classCallCheck(this, Transaction);\r\n  _defineProperty(this, \"affectedElements\", new Set());\r\n};\r\nfunction EMPTY_POSITION() {\r\n  return {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n    r: 0,\r\n    c: {\r\n      x: 0,\r\n      y: 0\r\n    },\r\n    x2: 0,\r\n    y2: 0,\r\n    t: {\r\n      x: 0,\r\n      y: 0,\r\n      c: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      w: 0,\r\n      h: 0,\r\n      r: 0,\r\n      x2: 0,\r\n      y2: 0,\r\n      cr: 0,\r\n      sr: 0\r\n    },\r\n    dirty: true\r\n  };\r\n}\r\nfunction rotate(x, y, w, h, r) {\r\n  var center = {\r\n    x: x + w / 2,\r\n    y: y + h / 2\r\n  },\r\n      cr = Math.cos(r / 360 * Math.PI * 2),\r\n      sr = Math.sin(r / 360 * Math.PI * 2),\r\n      _point = function _point(x, y) {\r\n    return {\r\n      x: center.x + Math.round((x - center.x) * cr - (y - center.y) * sr),\r\n      y: center.y + Math.round((y - center.y) * cr - (x - center.x) * sr)\r\n    };\r\n  };\r\n  var p1 = _point(x, y),\r\n      p2 = _point(x + w, y),\r\n      p3 = _point(x + w, y + h),\r\n      p4 = _point(x, y + h),\r\n      c = _point(x + w / 2, y + h / 2);\r\n  var xmin = Math.min(p1.x, p2.x, p3.x, p4.x),\r\n      xmax = Math.max(p1.x, p2.x, p3.x, p4.x),\r\n      ymin = Math.min(p1.y, p2.y, p3.y, p4.y),\r\n      ymax = Math.max(p1.y, p2.y, p3.y, p4.y);\r\n  return {\r\n    x: xmin,\r\n    y: ymin,\r\n    w: xmax - xmin,\r\n    h: ymax - ymin,\r\n    c: c,\r\n    r: r,\r\n    x2: xmax,\r\n    y2: ymax,\r\n    cr: cr,\r\n    sr: sr\r\n  };\r\n}\r\nvar entryComparator = function entryComparator(value, arrayEntry) {\r\n  var c = 0;\r\n  if (arrayEntry[1] > value[1]) {\r\n    c = -1;\r\n  } else if (arrayEntry[1] < value[1]) {\r\n    c = 1;\r\n  }\r\n  return c;\r\n};\r\nvar reverseEntryComparator = function reverseEntryComparator(value, arrayEntry) {\r\n  return entryComparator(value, arrayEntry) * -1;\r\n};\r\nfunction _updateElementIndex(id, value, array, sortDescending) {\r\n  insertSorted([id, value], array, entryComparator, sortDescending);\r\n}\r\nfunction _clearElementIndex(id, array) {\r\n  var idx = findWithFunction(array, function (entry) {\r\n    return entry[0] === id;\r\n  });\r\n  if (idx > -1) {\r\n    array.splice(idx, 1);\r\n  }\r\n}\r\nvar Viewport = function (_EventGenerator) {\r\n  _inherits(Viewport, _EventGenerator);\r\n  var _super = _createSuper(Viewport);\r\n  function Viewport(instance) {\r\n    var _this;\r\n    _classCallCheck(this, Viewport);\r\n    _this = _super.call(this);\r\n    _this.instance = instance;\r\n    _defineProperty(_assertThisInitialized(_this), \"_currentTransaction\", null);\r\n    _defineProperty(_assertThisInitialized(_this), \"_sortedElements\", {\r\n      xmin: [],\r\n      xmax: [],\r\n      ymin: [],\r\n      ymax: []\r\n    });\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementMap\", new Map());\r\n    _defineProperty(_assertThisInitialized(_this), \"_transformedElementMap\", new Map());\r\n    _defineProperty(_assertThisInitialized(_this), \"_bounds\", {\r\n      minx: 0,\r\n      maxx: 0,\r\n      miny: 0,\r\n      maxy: 0\r\n    });\r\n    return _this;\r\n  }\r\n  _createClass(Viewport, [{\r\n    key: \"_updateBounds\",\r\n    value: function _updateBounds(id, updatedElement, doNotRecalculateBounds) {\r\n      if (updatedElement != null) {\r\n        _clearElementIndex(id, this._sortedElements.xmin);\r\n        _clearElementIndex(id, this._sortedElements.xmax);\r\n        _clearElementIndex(id, this._sortedElements.ymin);\r\n        _clearElementIndex(id, this._sortedElements.ymax);\r\n        _updateElementIndex(id, updatedElement.t.x, this._sortedElements.xmin, false);\r\n        _updateElementIndex(id, updatedElement.t.x + updatedElement.t.w, this._sortedElements.xmax, true);\r\n        _updateElementIndex(id, updatedElement.t.y, this._sortedElements.ymin, false);\r\n        _updateElementIndex(id, updatedElement.t.y + updatedElement.t.h, this._sortedElements.ymax, true);\r\n        if (doNotRecalculateBounds !== true) {\r\n          this._recalculateBounds();\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_recalculateBounds\",\r\n    value: function _recalculateBounds() {\r\n      this._bounds.minx = this._sortedElements.xmin.length > 0 ? this._sortedElements.xmin[0][1] : 0;\r\n      this._bounds.maxx = this._sortedElements.xmax.length > 0 ? this._sortedElements.xmax[0][1] : 0;\r\n      this._bounds.miny = this._sortedElements.ymin.length > 0 ? this._sortedElements.ymin[0][1] : 0;\r\n      this._bounds.maxy = this._sortedElements.ymax.length > 0 ? this._sortedElements.ymax[0][1] : 0;\r\n    }\r\n  }, {\r\n    key: \"recomputeBounds\",\r\n    value: function recomputeBounds() {\r\n      var _this2 = this;\r\n      this._sortedElements.xmin.length = 0;\r\n      this._sortedElements.xmax.length = 0;\r\n      this._sortedElements.ymin.length = 0;\r\n      this._sortedElements.ymax.length = 0;\r\n      this._elementMap.forEach(function (vp, id) {\r\n        _this2._sortedElements.xmin.push([id, vp.t.x]);\r\n        _this2._sortedElements.xmax.push([id, vp.t.x + vp.t.w]);\r\n        _this2._sortedElements.ymin.push([id, vp.t.y]);\r\n        _this2._sortedElements.ymax.push([id, vp.t.y + vp.t.h]);\r\n      });\r\n      this._sortedElements.xmin.sort(entryComparator);\r\n      this._sortedElements.ymin.sort(entryComparator);\r\n      this._sortedElements.xmax.sort(reverseEntryComparator);\r\n      this._sortedElements.ymax.sort(reverseEntryComparator);\r\n      this._recalculateBounds();\r\n    }\r\n  }, {\r\n    key: \"_finaliseUpdate\",\r\n    value: function _finaliseUpdate(id, e, doNotRecalculateBounds) {\r\n      e.t = rotate(e.x, e.y, e.w, e.h, e.r);\r\n      this._transformedElementMap.set(id, e.t);\r\n      if (doNotRecalculateBounds !== true) {\r\n        this._updateBounds(id, e, doNotRecalculateBounds);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"shouldFireEvent\",\r\n    value: function shouldFireEvent(event, value, originalEvent) {\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"startTransaction\",\r\n    value: function startTransaction() {\r\n      if (this._currentTransaction != null) {\r\n        throw new Error(\"Viewport: cannot start transaction; a transaction is currently active.\");\r\n      }\r\n      this._currentTransaction = new Transaction();\r\n    }\r\n  }, {\r\n    key: \"endTransaction\",\r\n    value: function endTransaction() {\r\n      var _this3 = this;\r\n      if (this._currentTransaction != null) {\r\n        this._currentTransaction.affectedElements.forEach(function (id) {\r\n          var entry = _this3.getPosition(id);\r\n          _this3._finaliseUpdate(id, entry, true);\r\n        });\r\n        this.recomputeBounds();\r\n        this._currentTransaction = null;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"updateElements\",\r\n    value: function updateElements(entries) {\r\n      var _this4 = this;\r\n      forEach(entries, function (e) {\r\n        return _this4.updateElement(e.id, e.x, e.y, e.width, e.height, e.rotation);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"updateElement\",\r\n    value: function updateElement(id, x, y, width, height, rotation, doNotRecalculateBounds) {\r\n      var e = getsert(this._elementMap, id, EMPTY_POSITION);\r\n      e.dirty = x == null && e.x == null || y == null && e.y == null || width == null && e.w == null || height == null && e.h == null;\r\n      if (x != null) {\r\n        e.x = x;\r\n      }\r\n      if (y != null) {\r\n        e.y = y;\r\n      }\r\n      if (width != null) {\r\n        e.w = width;\r\n      }\r\n      if (height != null) {\r\n        e.h = height;\r\n      }\r\n      if (rotation != null) {\r\n        e.r = rotation || 0;\r\n      }\r\n      e.c.x = e.x + e.w / 2;\r\n      e.c.y = e.y + e.h / 2;\r\n      e.x2 = e.x + e.w;\r\n      e.y2 = e.y + e.h;\r\n      if (this._currentTransaction == null) {\r\n        this._finaliseUpdate(id, e, doNotRecalculateBounds);\r\n      } else {\r\n        this._currentTransaction.affectedElements.add(id);\r\n      }\r\n      return e;\r\n    }\r\n  }, {\r\n    key: \"refreshElement\",\r\n    value: function refreshElement(elId, doNotRecalculateBounds) {\r\n      var me = this.instance.getManagedElements();\r\n      var s = me[elId] ? me[elId].el : null;\r\n      if (s != null) {\r\n        var size = this.getSize(s);\r\n        var offset = this.getOffset(s);\r\n        return this.updateElement(elId, offset.x, offset.y, size.w, size.h, null, doNotRecalculateBounds);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getSize\",\r\n    value: function getSize(el) {\r\n      return this.instance.getSize(el);\r\n    }\r\n  }, {\r\n    key: \"getOffset\",\r\n    value: function getOffset(el) {\r\n      return this.instance.getOffset(el);\r\n    }\r\n  }, {\r\n    key: \"registerElement\",\r\n    value: function registerElement(id, doNotRecalculateBounds) {\r\n      return this.updateElement(id, 0, 0, 0, 0, 0, doNotRecalculateBounds);\r\n    }\r\n  }, {\r\n    key: \"addElement\",\r\n    value: function addElement(id, x, y, width, height, rotation) {\r\n      return this.updateElement(id, x, y, width, height, rotation);\r\n    }\r\n  }, {\r\n    key: \"rotateElement\",\r\n    value: function rotateElement(id, rotation) {\r\n      var e = getsert(this._elementMap, id, EMPTY_POSITION);\r\n      e.r = rotation || 0;\r\n      this._finaliseUpdate(id, e);\r\n      return e;\r\n    }\r\n  }, {\r\n    key: \"getBoundsWidth\",\r\n    value: function getBoundsWidth() {\r\n      return this._bounds.maxx - this._bounds.minx;\r\n    }\r\n  }, {\r\n    key: \"getBoundsHeight\",\r\n    value: function getBoundsHeight() {\r\n      return this._bounds.maxy - this._bounds.miny;\r\n    }\r\n  }, {\r\n    key: \"getX\",\r\n    value: function getX() {\r\n      return this._bounds.minx;\r\n    }\r\n  }, {\r\n    key: \"getY\",\r\n    value: function getY() {\r\n      return this._bounds.miny;\r\n    }\r\n  }, {\r\n    key: \"setSize\",\r\n    value: function setSize(id, w, h) {\r\n      if (this._elementMap.has(id)) {\r\n        return this.updateElement(id, null, null, w, h, null);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setPosition\",\r\n    value: function setPosition(id, x, y) {\r\n      if (this._elementMap.has(id)) {\r\n        return this.updateElement(id, x, y, null, null, null);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      this._sortedElements.xmin.length = 0;\r\n      this._sortedElements.xmax.length = 0;\r\n      this._sortedElements.ymin.length = 0;\r\n      this._sortedElements.ymax.length = 0;\r\n      this._elementMap.clear();\r\n      this._transformedElementMap.clear();\r\n      this._recalculateBounds();\r\n    }\r\n  }, {\r\n    key: \"remove\",\r\n    value: function remove(id) {\r\n      _clearElementIndex(id, this._sortedElements.xmin);\r\n      _clearElementIndex(id, this._sortedElements.xmax);\r\n      _clearElementIndex(id, this._sortedElements.ymin);\r\n      _clearElementIndex(id, this._sortedElements.ymax);\r\n      this._elementMap[\"delete\"](id);\r\n      this._transformedElementMap[\"delete\"](id);\r\n      this._recalculateBounds();\r\n    }\r\n  }, {\r\n    key: \"getPosition\",\r\n    value: function getPosition(id) {\r\n      return this._elementMap.get(id);\r\n    }\r\n  }, {\r\n    key: \"getElements\",\r\n    value: function getElements() {\r\n      return this._elementMap;\r\n    }\r\n  }, {\r\n    key: \"isEmpty\",\r\n    value: function isEmpty() {\r\n      return this._elementMap.size === 0;\r\n    }\r\n  }]);\r\n  return Viewport;\r\n}(EventGenerator);\r\n\r\nvar _edgeSortFunctions;\r\nfunction _placeAnchorsOnLine(element, connections, horizontal, otherMultiplier, reverse) {\r\n  var sizeInAxis = horizontal ? element.w : element.h;\r\n  var sizeInOtherAxis = horizontal ? element.h : element.w;\r\n  var a = [],\r\n      step = sizeInAxis / (connections.length + 1);\r\n  for (var i = 0; i < connections.length; i++) {\r\n    var val = (i + 1) * step,\r\n        other = otherMultiplier * sizeInOtherAxis;\r\n    if (reverse) {\r\n      val = sizeInAxis - val;\r\n    }\r\n    var dx = horizontal ? val : other,\r\n        x = element.x + dx,\r\n        xp = dx / element.w;\r\n    var dy = horizontal ? other : val,\r\n        y = element.y + dy,\r\n        yp = dy / element.h;\r\n    if (element.r !== 0 && element.r != null) {\r\n      var rotated = rotatePoint({\r\n        x: x,\r\n        y: y\r\n      }, element.c, element.r);\r\n      x = rotated.x;\r\n      y = rotated.y;\r\n    }\r\n    a.push({\r\n      x: x,\r\n      y: y,\r\n      xLoc: xp,\r\n      yLoc: yp,\r\n      c: connections[i].c\r\n    });\r\n  }\r\n  return a;\r\n}\r\nfunction _rightAndBottomSort(a, b) {\r\n  return b.theta - a.theta;\r\n}\r\nfunction _leftAndTopSort(a, b) {\r\n  var p1 = a.theta < 0 ? -Math.PI - a.theta : Math.PI - a.theta,\r\n      p2 = b.theta < 0 ? -Math.PI - b.theta : Math.PI - b.theta;\r\n  return p1 - p2;\r\n}\r\nvar edgeSortFunctions = (_edgeSortFunctions = {}, _defineProperty(_edgeSortFunctions, TOP, _leftAndTopSort), _defineProperty(_edgeSortFunctions, RIGHT, _rightAndBottomSort), _defineProperty(_edgeSortFunctions, BOTTOM, _rightAndBottomSort), _defineProperty(_edgeSortFunctions, LEFT, _leftAndTopSort), _edgeSortFunctions);\r\nfunction isContinuous(a) {\r\n  return a.isContinuous === true;\r\n}\r\nfunction _isFloating(a) {\r\n  return a.isContinuous === true;\r\n}\r\nfunction isDynamic(a) {\r\n  return a.locations.length > 1;\r\n}\r\nfunction getCurrentLocation(anchor) {\r\n  return [anchor.currentLocation, anchor.locations[anchor.currentLocation]];\r\n}\r\nvar LightweightRouter = function () {\r\n  function LightweightRouter(instance) {\r\n    var _this = this;\r\n    _classCallCheck(this, LightweightRouter);\r\n    this.instance = instance;\r\n    _defineProperty(this, \"anchorLists\", new Map());\r\n    _defineProperty(this, \"anchorLocations\", new Map());\r\n    instance.bind(EVENT_INTERNAL_CONNECTION_DETACHED, function (p) {\r\n      if (p.sourceEndpoint._anchor.isContinuous) {\r\n        _this._removeEndpointFromAnchorLists(p.sourceEndpoint);\r\n      }\r\n      if (p.targetEndpoint._anchor.isContinuous) {\r\n        _this._removeEndpointFromAnchorLists(p.targetEndpoint);\r\n      }\r\n    });\r\n    instance.bind(EVENT_INTERNAL_ENDPOINT_UNREGISTERED, function (ep) {\r\n      _this._removeEndpointFromAnchorLists(ep);\r\n    });\r\n  }\r\n  _createClass(LightweightRouter, [{\r\n    key: \"getAnchorOrientation\",\r\n    value: function getAnchorOrientation(anchor) {\r\n      var loc = this.anchorLocations.get(anchor.id);\r\n      return loc ? [loc.ox, loc.oy] : [0, 0];\r\n    }\r\n  }, {\r\n    key: \"_distance\",\r\n    value: function _distance(anchor, cx, cy, xy, wh, rotation, targetRotation) {\r\n      var ax = xy.x + anchor.x * wh.w,\r\n          ay = xy.y + anchor.y * wh.h,\r\n          acx = xy.x + wh.w / 2,\r\n          acy = xy.y + wh.h / 2;\r\n      if (rotation != null && rotation.length > 0) {\r\n        var rotated = this.instance._applyRotations([ax, ay, 0, 0], rotation);\r\n        ax = rotated.x;\r\n        ay = rotated.y;\r\n      }\r\n      return Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) + Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2));\r\n    }\r\n  }, {\r\n    key: \"_anchorSelector\",\r\n    value: function _anchorSelector(xy, wh, txy, twh, rotation, targetRotation, locations) {\r\n      var cx = txy.x + twh.w / 2,\r\n          cy = txy.y + twh.h / 2;\r\n      var minIdx = -1,\r\n          minDist = Infinity;\r\n      for (var i = 0; i < locations.length; i++) {\r\n        var d = this._distance(locations[i], cx, cy, xy, wh, rotation, targetRotation);\r\n        if (d < minDist) {\r\n          minIdx = i + 0;\r\n          minDist = d;\r\n        }\r\n      }\r\n      return [minIdx, locations[minIdx]];\r\n    }\r\n  }, {\r\n    key: \"_floatingAnchorCompute\",\r\n    value: function _floatingAnchorCompute(anchor, params) {\r\n      var xy = params.xy;\r\n      var pos = {\r\n        curX: xy.x + anchor.size.w / 2,\r\n        curY: xy.y + anchor.size.h / 2,\r\n        x: 0,\r\n        y: 0,\r\n        ox: 0,\r\n        oy: 0\r\n      };\r\n      return this._setComputedPosition(anchor, pos);\r\n    }\r\n  }, {\r\n    key: \"_setComputedPosition\",\r\n    value: function _setComputedPosition(anchor, pos, timestamp) {\r\n      this.anchorLocations.set(anchor.id, pos);\r\n      anchor.computedPosition = pos;\r\n      if (timestamp) {\r\n        anchor.timestamp = timestamp;\r\n      }\r\n      return pos;\r\n    }\r\n  }, {\r\n    key: \"_computeSingleLocation\",\r\n    value: function _computeSingleLocation(loc, xy, wh, params) {\r\n      var pos;\r\n      var rotation = params.rotation;\r\n      var candidate = {\r\n        curX: xy.x + loc.x * wh.w + loc.offx,\r\n        curY: xy.y + loc.y * wh.h + loc.offy,\r\n        x: loc.x,\r\n        y: loc.y,\r\n        ox: 0,\r\n        oy: 0\r\n      };\r\n      if (rotation != null && rotation.length > 0) {\r\n        var o = [loc.iox, loc.ioy],\r\n            current = {\r\n          x: candidate.curX,\r\n          y: candidate.curY,\r\n          cr: 0,\r\n          sr: 0\r\n        };\r\n        forEach(rotation, function (r) {\r\n          current = rotatePoint(current, r.c, r.r);\r\n          var _o = [Math.round(o[0] * current.cr - o[1] * current.sr), Math.round(o[1] * current.cr + o[0] * current.sr)];\r\n          o = _o.slice();\r\n        });\r\n        loc.ox = o[0];\r\n        loc.oy = o[1];\r\n        pos = {\r\n          curX: current.x,\r\n          curY: current.y,\r\n          x: loc.x,\r\n          y: loc.y,\r\n          ox: o[0],\r\n          oy: o[1]\r\n        };\r\n      } else {\r\n        loc.ox = loc.iox;\r\n        loc.oy = loc.ioy;\r\n        pos = extend({\r\n          ox: loc.iox,\r\n          oy: loc.ioy\r\n        }, candidate);\r\n      }\r\n      return pos;\r\n    }\r\n  }, {\r\n    key: \"_singleAnchorCompute\",\r\n    value: function _singleAnchorCompute(anchor, params) {\r\n      var xy = params.xy,\r\n          wh = params.wh,\r\n          timestamp = params.timestamp,\r\n          pos = this.anchorLocations.get(anchor.id);\r\n      if (pos != null && timestamp && timestamp === anchor.timestamp) {\r\n        return pos;\r\n      }\r\n      var _getCurrentLocation = getCurrentLocation(anchor),\r\n          _getCurrentLocation2 = _slicedToArray(_getCurrentLocation, 2);\r\n          _getCurrentLocation2[0];\r\n          var currentLoc = _getCurrentLocation2[1];\r\n      pos = this._computeSingleLocation(currentLoc, xy, wh, params);\r\n      return this._setComputedPosition(anchor, pos, timestamp);\r\n    }\r\n  }, {\r\n    key: \"_defaultAnchorCompute\",\r\n    value: function _defaultAnchorCompute(anchor, params) {\r\n      var pos;\r\n      if (anchor.locations.length === 1) {\r\n        return this._singleAnchorCompute(anchor, params);\r\n      }\r\n      var xy = params.xy,\r\n          wh = params.wh,\r\n          txy = params.txy,\r\n          twh = params.twh;\r\n      var _getCurrentLocation3 = getCurrentLocation(anchor),\r\n          _getCurrentLocation4 = _slicedToArray(_getCurrentLocation3, 2),\r\n          currentIdx = _getCurrentLocation4[0],\r\n          currentLoc = _getCurrentLocation4[1];\r\n      if (anchor.locked || txy == null || twh == null) {\r\n        pos = this._computeSingleLocation(currentLoc, xy, wh, params);\r\n      } else {\r\n        var _this$_anchorSelector = this._anchorSelector(xy, wh, txy, twh, params.rotation, params.tRotation, anchor.locations),\r\n            _this$_anchorSelector2 = _slicedToArray(_this$_anchorSelector, 2),\r\n            newIdx = _this$_anchorSelector2[0],\r\n            newLoc = _this$_anchorSelector2[1];\r\n        anchor.currentLocation = newIdx;\r\n        if (newIdx !== currentIdx) {\r\n          anchor.cssClass = newLoc.cls || anchor.cssClass;\r\n          params.element._anchorLocationChanged(anchor);\r\n        }\r\n        pos = this._computeSingleLocation(newLoc, xy, wh, params);\r\n      }\r\n      return this._setComputedPosition(anchor, pos, params.timestamp);\r\n    }\r\n  }, {\r\n    key: \"_placeAnchors\",\r\n    value: function _placeAnchors(elementId, _anchorLists) {\r\n      var _this2 = this;\r\n      var cd = this.instance.viewport.getPosition(elementId),\r\n          placeSomeAnchors = function placeSomeAnchors(desc, element, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\r\n        if (unsortedConnections.length > 0) {\r\n          var sc = unsortedConnections.sort(edgeSortFunctions[desc]),\r\n          reverse = desc === RIGHT || desc === TOP,\r\n              anchors = _placeAnchorsOnLine(cd, sc, isHorizontal, otherMultiplier, reverse);\r\n          for (var i = 0; i < anchors.length; i++) {\r\n            var c = anchors[i].c,\r\n                weAreSource = c.endpoints[0].elementId === elementId,\r\n                ep = weAreSource ? c.endpoints[0] : c.endpoints[1];\r\n            _this2._setComputedPosition(ep._anchor, {\r\n              curX: anchors[i].x,\r\n              curY: anchors[i].y,\r\n              x: anchors[i].xLoc,\r\n              y: anchors[i].yLoc,\r\n              ox: orientation[0],\r\n              oy: orientation[1]\r\n            });\r\n          }\r\n        }\r\n      };\r\n      placeSomeAnchors(BOTTOM, cd, _anchorLists.bottom, true, 1, [0, 1]);\r\n      placeSomeAnchors(TOP, cd, _anchorLists.top, true, 0, [0, -1]);\r\n      placeSomeAnchors(LEFT, cd, _anchorLists.left, false, 0, [-1, 0]);\r\n      placeSomeAnchors(RIGHT, cd, _anchorLists.right, false, 1, [1, 0]);\r\n    }\r\n  }, {\r\n    key: \"_updateAnchorList\",\r\n    value: function _updateAnchorList(lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, connsToPaint, endpointsToPaint) {\r\n      var endpoint = conn.endpoints[idx],\r\n          endpointId = endpoint.id,\r\n          oIdx = [1, 0][idx],\r\n          values = {\r\n        theta: theta,\r\n        order: order,\r\n        c: conn,\r\n        b: aBoolean,\r\n        elId: otherElId,\r\n        epId: endpointId\r\n      },\r\n          listToAddTo = lists[edgeId],\r\n          listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null,\r\n          candidate;\r\n      if (listToRemoveFrom) {\r\n        var rIdx = findWithFunction(listToRemoveFrom, function (e) {\r\n          return e.epId === endpointId;\r\n        });\r\n        if (rIdx !== -1) {\r\n          listToRemoveFrom.splice(rIdx, 1);\r\n          for (var i = 0; i < listToRemoveFrom.length; i++) {\r\n            candidate = listToRemoveFrom[i].c;\r\n            if (candidate.placeholder !== true) {\r\n              connsToPaint.add(candidate);\r\n            }\r\n            endpointsToPaint.add(listToRemoveFrom[i].c.endpoints[idx]);\r\n            endpointsToPaint.add(listToRemoveFrom[i].c.endpoints[oIdx]);\r\n          }\r\n        }\r\n      }\r\n      for (var _i = 0; _i < listToAddTo.length; _i++) {\r\n        candidate = listToAddTo[_i].c;\r\n        if (candidate.placeholder !== true) {\r\n          connsToPaint.add(candidate);\r\n        }\r\n        endpointsToPaint.add(listToAddTo[_i].c.endpoints[idx]);\r\n        endpointsToPaint.add(listToAddTo[_i].c.endpoints[oIdx]);\r\n      }\r\n      {\r\n        var insertIdx = reverse ? 0 : listToAddTo.length;\r\n        listToAddTo.splice(insertIdx, 0, values);\r\n      }\r\n      endpoint._continuousAnchorEdge = edgeId;\r\n    }\r\n  }, {\r\n    key: \"_removeEndpointFromAnchorLists\",\r\n    value: function _removeEndpointFromAnchorLists(endpoint) {\r\n      var listsForElement = this.anchorLists.get(endpoint.elementId);\r\n      var total = 0;\r\n      (function (list, eId) {\r\n        if (list) {\r\n          var f = function f(e) {\r\n            return e.epId === eId;\r\n          };\r\n          removeWithFunction(list.top, f);\r\n          removeWithFunction(list.left, f);\r\n          removeWithFunction(list.bottom, f);\r\n          removeWithFunction(list.right, f);\r\n          total += list.top.length;\r\n          total += list.left.length;\r\n          total += list.bottom.length;\r\n          total += list.right.length;\r\n        }\r\n      })(listsForElement, endpoint.id);\r\n      if (total === 0) {\r\n        this.anchorLists[\"delete\"](endpoint.elementId);\r\n      }\r\n      this.anchorLocations[\"delete\"](endpoint._anchor.id);\r\n    }\r\n  }, {\r\n    key: \"computeAnchorLocation\",\r\n    value: function computeAnchorLocation(anchor, params) {\r\n      var pos;\r\n      if (isContinuous(anchor)) {\r\n        pos = this.anchorLocations.get(anchor.id) || {\r\n          curX: 0,\r\n          curY: 0,\r\n          x: 0,\r\n          y: 0,\r\n          ox: 0,\r\n          oy: 0\r\n        };\r\n      } else if (_isFloating(anchor)) {\r\n        pos = this._floatingAnchorCompute(anchor, params);\r\n      } else {\r\n        pos = this._defaultAnchorCompute(anchor, params);\r\n      }\r\n      anchor.timestamp = params.timestamp;\r\n      return pos;\r\n    }\r\n  }, {\r\n    key: \"computePath\",\r\n    value: function computePath(connection, timestamp) {\r\n      var sourceInfo = this.instance.viewport.getPosition(connection.sourceId),\r\n          targetInfo = this.instance.viewport.getPosition(connection.targetId),\r\n          sE = connection.endpoints[0],\r\n          tE = connection.endpoints[1];\r\n      var sAnchorP = this.getEndpointLocation(sE, {\r\n        xy: sourceInfo,\r\n        wh: sourceInfo,\r\n        element: sE,\r\n        timestamp: timestamp,\r\n        rotation: this.instance._getRotations(connection.sourceId)\r\n      }),\r\n          tAnchorP = this.getEndpointLocation(tE, {\r\n        xy: targetInfo,\r\n        wh: targetInfo,\r\n        element: tE,\r\n        timestamp: timestamp,\r\n        rotation: this.instance._getRotations(connection.targetId)\r\n      });\r\n      connection.connector.resetBounds();\r\n      connection.connector.compute({\r\n        sourcePos: sAnchorP,\r\n        targetPos: tAnchorP,\r\n        sourceEndpoint: connection.endpoints[0],\r\n        targetEndpoint: connection.endpoints[1],\r\n        strokeWidth: connection.paintStyleInUse.strokeWidth,\r\n        sourceInfo: sourceInfo,\r\n        targetInfo: targetInfo\r\n      });\r\n    }\r\n  }, {\r\n    key: \"getEndpointLocation\",\r\n    value: function getEndpointLocation(endpoint, params) {\r\n      params = params || {};\r\n      var anchor = endpoint._anchor;\r\n      var pos = this.anchorLocations.get(anchor.id);\r\n      if (pos == null || params.timestamp != null && anchor.timestamp !== params.timestamp) {\r\n        pos = this.computeAnchorLocation(anchor, params);\r\n        this._setComputedPosition(anchor, pos, params.timestamp);\r\n      }\r\n      return pos;\r\n    }\r\n  }, {\r\n    key: \"getEndpointOrientation\",\r\n    value: function getEndpointOrientation(ep) {\r\n      return ep._anchor ? this.getAnchorOrientation(ep._anchor) : [0, 0];\r\n    }\r\n  }, {\r\n    key: \"setAnchorOrientation\",\r\n    value: function setAnchorOrientation(anchor, orientation) {\r\n      var anchorLoc = this.anchorLocations.get(anchor.id);\r\n      if (anchorLoc != null) {\r\n        anchorLoc.ox = orientation[0];\r\n        anchorLoc.oy = orientation[1];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"isDynamicAnchor\",\r\n    value: function isDynamicAnchor(ep) {\r\n      return ep._anchor ? !isContinuous(ep._anchor) && ep._anchor.locations.length > 1 : false;\r\n    }\r\n  }, {\r\n    key: \"isFloating\",\r\n    value: function isFloating(ep) {\r\n      return ep._anchor ? _isFloating(ep._anchor) : false;\r\n    }\r\n  }, {\r\n    key: \"prepareAnchor\",\r\n    value: function prepareAnchor(params) {\r\n      return makeLightweightAnchorFromSpec(params);\r\n    }\r\n  }, {\r\n    key: \"redraw\",\r\n    value: function redraw(elementId, timestamp, offsetToUI) {\r\n      var _this3 = this;\r\n      var connectionsToPaint = new Set(),\r\n          endpointsToPaint = new Set(),\r\n          anchorsToUpdate = new Set();\r\n      if (!this.instance._suspendDrawing) {\r\n        var ep = this.instance.endpointsByElement[elementId] || [];\r\n        timestamp = timestamp || uuid();\r\n        var orientationCache = {},\r\n            a,\r\n            anEndpoint;\r\n        for (var i = 0; i < ep.length; i++) {\r\n          anEndpoint = ep[i];\r\n          if (anEndpoint.visible === false) {\r\n            continue;\r\n          }\r\n          endpointsToPaint.add(anEndpoint);\r\n          a = anEndpoint._anchor;\r\n          if (anEndpoint.connections.length === 0) {\r\n            if (isContinuous(a)) {\r\n              if (!this.anchorLists.has(elementId)) {\r\n                this.anchorLists.set(elementId, {\r\n                  top: [],\r\n                  right: [],\r\n                  bottom: [],\r\n                  left: []\r\n                });\r\n              }\r\n              this._updateAnchorList(this.anchorLists.get(elementId), -Math.PI / 2, 0, {\r\n                endpoints: [anEndpoint, anEndpoint],\r\n                placeholder: true\r\n              }, false, elementId, 0, false, getDefaultFace(a), connectionsToPaint, endpointsToPaint);\r\n              anchorsToUpdate.add(elementId);\r\n            }\r\n          } else {\r\n            for (var _i2 = 0; _i2 < anEndpoint.connections.length; _i2++) {\r\n              var conn = anEndpoint.connections[_i2],\r\n                  sourceId = conn.sourceId,\r\n                  targetId = conn.targetId,\r\n                  sourceContinuous = isContinuous(conn.endpoints[0]._anchor),\r\n                  targetContinuous = isContinuous(conn.endpoints[1]._anchor);\r\n              if (sourceContinuous || targetContinuous) {\r\n                var c1 = (conn.endpoints[0]._anchor.faces || []).join(\"-\"),\r\n                    c2 = (conn.endpoints[1]._anchor.faces || []).join(\"-\"),\r\n                    oKey = [sourceId, c1, targetId, c2].join(\"-\"),\r\n                    o = orientationCache[oKey],\r\n                    oIdx = conn.sourceId === elementId ? 1 : 0;\r\n                if (sourceContinuous && !this.anchorLists.has(sourceId)) {\r\n                  this.anchorLists.set(sourceId, {\r\n                    top: [],\r\n                    right: [],\r\n                    bottom: [],\r\n                    left: []\r\n                  });\r\n                }\r\n                if (targetContinuous && !this.anchorLists.has(targetId)) {\r\n                  this.anchorLists.set(targetId, {\r\n                    top: [],\r\n                    right: [],\r\n                    bottom: [],\r\n                    left: []\r\n                  });\r\n                }\r\n                var td = this.instance.viewport.getPosition(targetId),\r\n                    sd = this.instance.viewport.getPosition(sourceId);\r\n                if (targetId === sourceId && (sourceContinuous || targetContinuous)) {\r\n                  this._updateAnchorList(this.anchorLists.get(sourceId), -Math.PI / 2, 0, conn, false, targetId, 0, false, TOP, connectionsToPaint, endpointsToPaint);\r\n                  this._updateAnchorList(this.anchorLists.get(targetId), -Math.PI / 2, 0, conn, false, sourceId, 1, false, TOP, connectionsToPaint, endpointsToPaint);\r\n                } else {\r\n                  var sourceRotation = this.instance._getRotations(sourceId);\r\n                  var targetRotation = this.instance._getRotations(targetId);\r\n                  if (!o) {\r\n                    o = this._calculateOrientation(sourceId, targetId, sd, td, conn.endpoints[0]._anchor, conn.endpoints[1]._anchor, sourceRotation, targetRotation);\r\n                    orientationCache[oKey] = o;\r\n                  }\r\n                  if (sourceContinuous) {\r\n                    this._updateAnchorList(this.anchorLists.get(sourceId), o.theta, 0, conn, false, targetId, 0, false, o.a[0], connectionsToPaint, endpointsToPaint);\r\n                  }\r\n                  if (targetContinuous) {\r\n                    this._updateAnchorList(this.anchorLists.get(targetId), o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], connectionsToPaint, endpointsToPaint);\r\n                  }\r\n                }\r\n                if (sourceContinuous) {\r\n                  anchorsToUpdate.add(sourceId);\r\n                }\r\n                if (targetContinuous) {\r\n                  anchorsToUpdate.add(targetId);\r\n                }\r\n                connectionsToPaint.add(conn);\r\n                if (sourceContinuous && oIdx === 0 || targetContinuous && oIdx === 1) {\r\n                  endpointsToPaint.add(conn.endpoints[oIdx]);\r\n                }\r\n              } else {\r\n                var otherEndpoint = anEndpoint.connections[_i2].endpoints[conn.sourceId === elementId ? 1 : 0],\r\n                    otherAnchor = otherEndpoint._anchor;\r\n                if (isDynamic(otherAnchor)) {\r\n                  this.instance._paintEndpoint(otherEndpoint, {\r\n                    elementWithPrecedence: elementId,\r\n                    timestamp: timestamp\r\n                  });\r\n                  connectionsToPaint.add(anEndpoint.connections[_i2]);\r\n                  for (var k = 0; k < otherEndpoint.connections.length; k++) {\r\n                    if (otherEndpoint.connections[k] !== anEndpoint.connections[_i2]) {\r\n                      connectionsToPaint.add(otherEndpoint.connections[k]);\r\n                    }\r\n                  }\r\n                } else {\r\n                  connectionsToPaint.add(anEndpoint.connections[_i2]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        anchorsToUpdate.forEach(function (anchor) {\r\n          _this3._placeAnchors(anchor, _this3.anchorLists.get(anchor));\r\n        });\r\n        endpointsToPaint.forEach(function (ep) {\r\n          var cd = _this3.instance.viewport.getPosition(ep.elementId);\r\n          _this3.instance._paintEndpoint(ep, {\r\n            timestamp: timestamp,\r\n            offset: cd\r\n          });\r\n        });\r\n        connectionsToPaint.forEach(function (c) {\r\n          _this3.instance._paintConnection(c, {\r\n            timestamp: timestamp\r\n          });\r\n        });\r\n      }\r\n      return {\r\n        c: connectionsToPaint,\r\n        e: endpointsToPaint\r\n      };\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      this.anchorLocations.clear();\r\n      this.anchorLists.clear();\r\n    }\r\n  }, {\r\n    key: \"setAnchor\",\r\n    value: function setAnchor(endpoint, anchor) {\r\n      if (anchor != null) {\r\n        endpoint._anchor = anchor;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setConnectionAnchors\",\r\n    value: function setConnectionAnchors(conn, anchors) {\r\n      conn.endpoints[0]._anchor = anchors[0];\r\n      conn.endpoints[1]._anchor = anchors[1];\r\n    }\r\n  }, {\r\n    key: \"_calculateOrientation\",\r\n    value: function _calculateOrientation(sourceId, targetId, sd, td, sourceAnchor, targetAnchor, sourceRotation, targetRotation) {\r\n      var _this4 = this;\r\n      var Orientation = {\r\n        HORIZONTAL: \"horizontal\",\r\n        VERTICAL: \"vertical\",\r\n        DIAGONAL: \"diagonal\",\r\n        IDENTITY: \"identity\"\r\n      };\r\n      if (sourceId === targetId) {\r\n        return {\r\n          orientation: Orientation.IDENTITY,\r\n          a: [TOP, TOP]\r\n        };\r\n      }\r\n      var theta = Math.atan2(td.c.y - sd.c.y, td.c.x - sd.c.x),\r\n          theta2 = Math.atan2(sd.c.y - td.c.y, sd.c.x - td.c.x);\r\n      var candidates = [],\r\n          midpoints = {};\r\n      (function (types, dim) {\r\n        for (var i = 0; i < types.length; i++) {\r\n          var _midpoints$types$i;\r\n          midpoints[types[i]] = (_midpoints$types$i = {}, _defineProperty(_midpoints$types$i, LEFT, {\r\n            x: dim[i][0].x,\r\n            y: dim[i][0].c.y\r\n          }), _defineProperty(_midpoints$types$i, RIGHT, {\r\n            x: dim[i][0].x + dim[i][0].w,\r\n            y: dim[i][0].c.y\r\n          }), _defineProperty(_midpoints$types$i, TOP, {\r\n            x: dim[i][0].c.x,\r\n            y: dim[i][0].y\r\n          }), _defineProperty(_midpoints$types$i, BOTTOM, {\r\n            x: dim[i][0].c.x,\r\n            y: dim[i][0].y + dim[i][0].h\r\n          }), _midpoints$types$i);\r\n          if (dim[i][1] != null && dim[i][1].length > 0) {\r\n            for (var axis in midpoints[types[i]]) {\r\n              midpoints[types[i]][axis] = _this4.instance._applyRotationsXY(midpoints[types[i]][axis], dim[i][1]);\r\n            }\r\n          }\r\n        }\r\n      })([SOURCE, TARGET], [[sd, sourceRotation], [td, targetRotation]]);\r\n      var FACES = [TOP, LEFT, RIGHT, BOTTOM];\r\n      for (var sf = 0; sf < FACES.length; sf++) {\r\n        for (var tf = 0; tf < FACES.length; tf++) {\r\n          candidates.push({\r\n            source: FACES[sf],\r\n            target: FACES[tf],\r\n            dist: lineLength(midpoints.source[FACES[sf]], midpoints.target[FACES[tf]])\r\n          });\r\n        }\r\n      }\r\n      candidates.sort(function (a, b) {\r\n        if (a.dist < b.dist) {\r\n          return -1;\r\n        } else if (b.dist < a.dist) {\r\n          return 1;\r\n        } else {\r\n          var _axisIndices;\r\n          var axisIndices = (_axisIndices = {}, _defineProperty(_axisIndices, LEFT, 0), _defineProperty(_axisIndices, TOP, 1), _defineProperty(_axisIndices, RIGHT, 2), _defineProperty(_axisIndices, BOTTOM, 3), _axisIndices),\r\n              ais = axisIndices[a.source],\r\n              bis = axisIndices[b.source],\r\n              ait = axisIndices[a.target],\r\n              bit = axisIndices[b.target];\r\n          return ais < bis ? -1 : bis < ais ? 1 : ait < bit ? -1 : bit < ait ? 1 : 0;\r\n        }\r\n      });\r\n      var sourceEdge = candidates[0].source,\r\n          targetEdge = candidates[0].target;\r\n      for (var i = 0; i < candidates.length; i++) {\r\n        if (isContinuous(sourceAnchor) && sourceAnchor.locked) {\r\n          sourceEdge = sourceAnchor.currentFace;\r\n        } else if (!sourceAnchor.isContinuous || isEdgeSupported(sourceAnchor, candidates[i].source)) {\r\n          sourceEdge = candidates[i].source;\r\n        } else {\r\n          sourceEdge = null;\r\n        }\r\n        if (targetAnchor.isContinuous && targetAnchor.locked) {\r\n          targetEdge = targetAnchor.currentFace;\r\n        } else if (!targetAnchor.isContinuous || isEdgeSupported(targetAnchor, candidates[i].target)) {\r\n          targetEdge = candidates[i].target;\r\n        } else {\r\n          targetEdge = null;\r\n        }\r\n        if (sourceEdge != null && targetEdge != null) {\r\n          break;\r\n        }\r\n      }\r\n      if (sourceAnchor.isContinuous) {\r\n        this.setCurrentFace(sourceAnchor, sourceEdge);\r\n      }\r\n      if (targetAnchor.isContinuous) {\r\n        this.setCurrentFace(targetAnchor, targetEdge);\r\n      }\r\n      return {\r\n        a: [sourceEdge, targetEdge],\r\n        theta: theta,\r\n        theta2: theta2\r\n      };\r\n    }\r\n  }, {\r\n    key: \"setCurrentFace\",\r\n    value: function setCurrentFace(a, face, overrideLock) {\r\n      a.currentFace = face;\r\n      if (overrideLock && a.lockedFace != null) {\r\n        a.lockedFace = a.currentFace;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"lock\",\r\n    value: function lock(a) {\r\n      a.locked = true;\r\n      if (isContinuous(a)) {\r\n        a.lockedFace = a.currentFace;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"unlock\",\r\n    value: function unlock(a) {\r\n      a.locked = false;\r\n      if (isContinuous(a)) {\r\n        a.lockedFace = null;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"selectAnchorLocation\",\r\n    value: function selectAnchorLocation(a, coords) {\r\n      var idx = findWithFunction(a.locations, function (loc) {\r\n        return loc.x === coords.x && loc.y === coords.y;\r\n      });\r\n      if (idx !== -1) {\r\n        a.currentLocation = idx;\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"lockCurrentAxis\",\r\n    value: function lockCurrentAxis(a) {\r\n      if (a.currentFace != null) {\r\n        a.lockedAxis = a.currentFace === LEFT || a.currentFace === RIGHT ? X_AXIS_FACES : Y_AXIS_FACES;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"unlockCurrentAxis\",\r\n    value: function unlockCurrentAxis(a) {\r\n      a.lockedAxis = null;\r\n    }\r\n  }, {\r\n    key: \"anchorsEqual\",\r\n    value: function anchorsEqual(a1, a2) {\r\n      if (!a1 || !a2) {\r\n        return false;\r\n      }\r\n      var l1 = a1.locations[a1.currentLocation],\r\n          l2 = a2.locations[a2.currentLocation];\r\n      return l1.x === l2.x && l1.y === l2.y && l1.offx === l2.offx && l1.offy === l2.offy && l1.ox === l2.ox && l1.oy === l2.oy;\r\n    }\r\n  }]);\r\n  return LightweightRouter;\r\n}();\r\n\r\nvar connectorMap = {};\r\nvar Connectors = {\r\n  get: function get(connection, name, params) {\r\n    var c = connectorMap[name];\r\n    if (!c) {\r\n      throw {\r\n        message: \"jsPlumb: unknown connector type '\" + name + \"'\"\r\n      };\r\n    } else {\r\n      return new c(connection, params);\r\n    }\r\n  },\r\n  register: function register(name, conn) {\r\n    connectorMap[name] = conn;\r\n  }\r\n};\r\n\r\nvar StraightSegment = function (_AbstractSegment) {\r\n  _inherits(StraightSegment, _AbstractSegment);\r\n  var _super = _createSuper(StraightSegment);\r\n  function StraightSegment(params) {\r\n    var _this;\r\n    _classCallCheck(this, StraightSegment);\r\n    _this = _super.call(this, params);\r\n    _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"m\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"m2\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", StraightSegment.segmentType);\r\n    _this._setCoordinates({\r\n      x1: params.x1,\r\n      y1: params.y1,\r\n      x2: params.x2,\r\n      y2: params.y2\r\n    });\r\n    return _this;\r\n  }\r\n  _createClass(StraightSegment, [{\r\n    key: \"getPath\",\r\n    value: function getPath(isFirstSegment) {\r\n      return (isFirstSegment ? \"M \" + this.x1 + \" \" + this.y1 + \" \" : \"\") + \"L \" + this.x2 + \" \" + this.y2;\r\n    }\r\n  }, {\r\n    key: \"_recalc\",\r\n    value: function _recalc() {\r\n      this.length = Math.sqrt(Math.pow(this.x2 - this.x1, 2) + Math.pow(this.y2 - this.y1, 2));\r\n      this.m = gradient({\r\n        x: this.x1,\r\n        y: this.y1\r\n      }, {\r\n        x: this.x2,\r\n        y: this.y2\r\n      });\r\n      this.m2 = -1 / this.m;\r\n      this.extents = {\r\n        xmin: Math.min(this.x1, this.x2),\r\n        ymin: Math.min(this.y1, this.y2),\r\n        xmax: Math.max(this.x1, this.x2),\r\n        ymax: Math.max(this.y1, this.y2)\r\n      };\r\n    }\r\n  }, {\r\n    key: \"getLength\",\r\n    value: function getLength() {\r\n      return this.length;\r\n    }\r\n  }, {\r\n    key: \"getGradient\",\r\n    value: function getGradient() {\r\n      return this.m;\r\n    }\r\n  }, {\r\n    key: \"_setCoordinates\",\r\n    value: function _setCoordinates(coords) {\r\n      this.x1 = coords.x1;\r\n      this.y1 = coords.y1;\r\n      this.x2 = coords.x2;\r\n      this.y2 = coords.y2;\r\n      this._recalc();\r\n    }\r\n  }, {\r\n    key: \"pointOnPath\",\r\n    value: function pointOnPath(location, absolute) {\r\n      if (location === 0 && !absolute) {\r\n        return {\r\n          x: this.x1,\r\n          y: this.y1\r\n        };\r\n      } else if (location === 1 && !absolute) {\r\n        return {\r\n          x: this.x2,\r\n          y: this.y2\r\n        };\r\n      } else {\r\n        var l = absolute ? location > 0 ? location : this.length + location : location * this.length;\r\n        return pointOnLine({\r\n          x: this.x1,\r\n          y: this.y1\r\n        }, {\r\n          x: this.x2,\r\n          y: this.y2\r\n        }, l);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"gradientAtPoint\",\r\n    value: function gradientAtPoint(location, absolute) {\r\n      return this.m;\r\n    }\r\n  }, {\r\n    key: \"pointAlongPathFrom\",\r\n    value: function pointAlongPathFrom(location, distance, absolute) {\r\n      var p = this.pointOnPath(location, absolute),\r\n          farAwayPoint = distance <= 0 ? {\r\n        x: this.x1,\r\n        y: this.y1\r\n      } : {\r\n        x: this.x2,\r\n        y: this.y2\r\n      };\r\n      if (distance <= 0 && Math.abs(distance) > 1) {\r\n        distance *= -1;\r\n      }\r\n      return pointOnLine(p, farAwayPoint, distance);\r\n    }\r\n  }, {\r\n    key: \"within\",\r\n    value: function within(a, b, c) {\r\n      return c >= Math.min(a, b) && c <= Math.max(a, b);\r\n    }\r\n  }, {\r\n    key: \"closest\",\r\n    value: function closest(a, b, c) {\r\n      return Math.abs(c - a) < Math.abs(c - b) ? a : b;\r\n    }\r\n  }, {\r\n    key: \"findClosestPointOnPath\",\r\n    value: function findClosestPointOnPath(x, y) {\r\n      var out = {\r\n        d: Infinity,\r\n        x: null,\r\n        y: null,\r\n        l: null,\r\n        x1: this.x1,\r\n        x2: this.x2,\r\n        y1: this.y1,\r\n        y2: this.y2\r\n      };\r\n      if (this.m === 0) {\r\n        out.y = this.y1;\r\n        out.x = this.within(this.x1, this.x2, x) ? x : this.closest(this.x1, this.x2, x);\r\n      } else if (this.m === Infinity || this.m === -Infinity) {\r\n        out.x = this.x1;\r\n        out.y = this.within(this.y1, this.y2, y) ? y : this.closest(this.y1, this.y2, y);\r\n      } else {\r\n        var b = this.y1 - this.m * this.x1,\r\n            b2 = y - this.m2 * x,\r\n        _x1 = (b2 - b) / (this.m - this.m2),\r\n            _y1 = this.m * _x1 + b;\r\n        out.x = this.within(this.x1, this.x2, _x1) ? _x1 : this.closest(this.x1, this.x2, _x1);\r\n        out.y = this.within(this.y1, this.y2, _y1) ? _y1 : this.closest(this.y1, this.y2, _y1);\r\n      }\r\n      var fractionInSegment = lineLength({\r\n        x: out.x,\r\n        y: out.y\r\n      }, {\r\n        x: this.x1,\r\n        y: this.y1\r\n      });\r\n      out.d = lineLength({\r\n        x: x,\r\n        y: y\r\n      }, out);\r\n      out.l = fractionInSegment / length;\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"_pointLiesBetween\",\r\n    value: function _pointLiesBetween(q, p1, p2) {\r\n      return p2 > p1 ? p1 <= q && q <= p2 : p1 >= q && q >= p2;\r\n    }\r\n  }, {\r\n    key: \"lineIntersection\",\r\n    value: function lineIntersection(_x1, _y1, _x2, _y2) {\r\n      var m2 = Math.abs(gradient({\r\n        x: _x1,\r\n        y: _y1\r\n      }, {\r\n        x: _x2,\r\n        y: _y2\r\n      })),\r\n          m1 = Math.abs(this.m),\r\n          b = m1 === Infinity ? this.x1 : this.y1 - m1 * this.x1,\r\n          out = [],\r\n          b2 = m2 === Infinity ? _x1 : _y1 - m2 * _x1;\r\n      if (m2 !== m1) {\r\n        if (m2 === Infinity && m1 === 0) {\r\n          if (this._pointLiesBetween(_x1, this.x1, this.x2) && this._pointLiesBetween(this.y1, _y1, _y2)) {\r\n            out.push({\r\n              x: _x1,\r\n              y: this.y1\r\n            });\r\n          }\r\n        } else if (m2 === 0 && m1 === Infinity) {\r\n          if (this._pointLiesBetween(_y1, this.y1, this.y2) && this._pointLiesBetween(this.x1, _x1, _x2)) {\r\n            out.push({\r\n              x: this.x1,\r\n              y: _y1\r\n            });\r\n          }\r\n        } else {\r\n          var X, Y;\r\n          if (m2 === Infinity) {\r\n            X = _x1;\r\n            if (this._pointLiesBetween(X, this.x1, this.x2)) {\r\n              Y = m1 * _x1 + b;\r\n              if (this._pointLiesBetween(Y, _y1, _y2)) {\r\n                out.push({\r\n                  x: X,\r\n                  y: Y\r\n                });\r\n              }\r\n            }\r\n          } else if (m2 === 0) {\r\n            Y = _y1;\r\n            if (this._pointLiesBetween(Y, this.y1, this.y2)) {\r\n              X = (_y1 - b) / m1;\r\n              if (this._pointLiesBetween(X, _x1, _x2)) {\r\n                out.push({\r\n                  x: X,\r\n                  y: Y\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            X = (b2 - b) / (m1 - m2);\r\n            Y = m1 * X + b;\r\n            if (this._pointLiesBetween(X, this.x1, this.x2) && this._pointLiesBetween(Y, this.y1, this.y2)) {\r\n              out.push({\r\n                x: X,\r\n                y: Y\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"boxIntersection\",\r\n    value: function boxIntersection(x, y, w, h) {\r\n      var a = [];\r\n      a.push.apply(a, this.lineIntersection(x, y, x + w, y));\r\n      a.push.apply(a, this.lineIntersection(x + w, y, x + w, y + h));\r\n      a.push.apply(a, this.lineIntersection(x + w, y + h, x, y + h));\r\n      a.push.apply(a, this.lineIntersection(x, y + h, x, y));\r\n      return a;\r\n    }\r\n  }]);\r\n  return StraightSegment;\r\n}(AbstractSegment);\r\n_defineProperty(StraightSegment, \"segmentType\", \"Straight\");\r\n\r\nvar StraightConnector = function (_AbstractConnector) {\r\n  _inherits(StraightConnector, _AbstractConnector);\r\n  var _super = _createSuper(StraightConnector);\r\n  function StraightConnector() {\r\n    var _this;\r\n    _classCallCheck(this, StraightConnector);\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n    _this = _super.call.apply(_super, [this].concat(args));\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", StraightConnector.type);\r\n    return _this;\r\n  }\r\n  _createClass(StraightConnector, [{\r\n    key: \"getDefaultStubs\",\r\n    value: function getDefaultStubs() {\r\n      return [0, 0];\r\n    }\r\n  }, {\r\n    key: \"_compute\",\r\n    value: function _compute(paintInfo, p) {\r\n      this._addSegment(StraightSegment, {\r\n        x1: paintInfo.sx,\r\n        y1: paintInfo.sy,\r\n        x2: paintInfo.startStubX,\r\n        y2: paintInfo.startStubY\r\n      });\r\n      this._addSegment(StraightSegment, {\r\n        x1: paintInfo.startStubX,\r\n        y1: paintInfo.startStubY,\r\n        x2: paintInfo.endStubX,\r\n        y2: paintInfo.endStubY\r\n      });\r\n      this._addSegment(StraightSegment, {\r\n        x1: paintInfo.endStubX,\r\n        y1: paintInfo.endStubY,\r\n        x2: paintInfo.tx,\r\n        y2: paintInfo.ty\r\n      });\r\n      this.geometry = {\r\n        source: p.sourcePos,\r\n        target: p.targetPos\r\n      };\r\n    }\r\n  }, {\r\n    key: \"transformGeometry\",\r\n    value: function transformGeometry(g, dx, dy) {\r\n      return {\r\n        source: this.transformAnchorPlacement(g.source, dx, dy),\r\n        target: this.transformAnchorPlacement(g.target, dx, dy)\r\n      };\r\n    }\r\n  }]);\r\n  return StraightConnector;\r\n}(AbstractConnector);\r\n_defineProperty(StraightConnector, \"type\", \"Straight\");\r\n\r\nfunction _scopeMatch(e1, e2) {\r\n  var s1 = e1.scope.split(/\\s/),\r\n      s2 = e2.scope.split(/\\s/);\r\n  for (var i = 0; i < s1.length; i++) {\r\n    for (var j = 0; j < s2.length; j++) {\r\n      if (s2[j] === s1[i]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction prepareList(instance, input, doNotGetIds) {\r\n  var r = [];\r\n  var _resolveId = function _resolveId(i) {\r\n    if (isString(i)) {\r\n      return i;\r\n    } else {\r\n      return instance.getId(i);\r\n    }\r\n  };\r\n  if (input) {\r\n    if (typeof input === 'string') {\r\n      if (input === \"*\") {\r\n        return input;\r\n      }\r\n      r.push(input);\r\n    } else {\r\n      if (doNotGetIds) {\r\n        r = input;\r\n      } else {\r\n        if (input.length != null) {\r\n          var _r;\r\n          (_r = r).push.apply(_r, _toConsumableArray(_toConsumableArray(input).map(_resolveId)));\r\n        } else {\r\n          r.push(_resolveId(input));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return r;\r\n}\r\nfunction addManagedEndpoint(managedElement, ep) {\r\n  if (managedElement != null) {\r\n    managedElement.endpoints.push(ep);\r\n  }\r\n}\r\nfunction removeManagedEndpoint(managedElement, endpoint) {\r\n  if (managedElement != null) {\r\n    removeWithFunction(managedElement.endpoints, function (ep) {\r\n      return ep === endpoint;\r\n    });\r\n  }\r\n}\r\nfunction addManagedConnection(connection, sourceEl, targetEl) {\r\n  if (sourceEl != null) {\r\n    sourceEl.connections.push(connection);\r\n    if (sourceEl.connections.length === 1) {\r\n      connection.instance.addClass(connection.source, connection.instance.connectedClass);\r\n    }\r\n  }\r\n  if (targetEl != null) {\r\n    if (sourceEl == null || connection.sourceId !== connection.targetId) {\r\n      targetEl.connections.push(connection);\r\n      if (targetEl.connections.length === 1) {\r\n        connection.instance.addClass(connection.target, connection.instance.connectedClass);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction removeManagedConnection(connection, sourceEl, targetEl) {\r\n  if (sourceEl != null) {\r\n    var sourceCount = sourceEl.connections.length;\r\n    removeWithFunction(sourceEl.connections, function (_c) {\r\n      return connection.id === _c.id;\r\n    });\r\n    if (sourceCount > 0 && sourceEl.connections.length === 0) {\r\n      connection.instance.removeClass(connection.source, connection.instance.connectedClass);\r\n    }\r\n  }\r\n  if (targetEl != null) {\r\n    var targetCount = targetEl.connections.length;\r\n    if (sourceEl == null || connection.sourceId !== connection.targetId) {\r\n      removeWithFunction(targetEl.connections, function (_c) {\r\n        return connection.id === _c.id;\r\n      });\r\n    }\r\n    if (targetCount > 0 && targetEl.connections.length === 0) {\r\n      connection.instance.removeClass(connection.target, connection.instance.connectedClass);\r\n    }\r\n  }\r\n}\r\nvar JsPlumbInstance = function (_EventGenerator) {\r\n  _inherits(JsPlumbInstance, _EventGenerator);\r\n  var _super = _createSuper(JsPlumbInstance);\r\n  function JsPlumbInstance(_instanceIndex, defaults) {\r\n    var _this;\r\n    _classCallCheck(this, JsPlumbInstance);\r\n    _this = _super.call(this);\r\n    _this._instanceIndex = _instanceIndex;\r\n    _defineProperty(_assertThisInitialized(_this), \"defaults\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_initialDefaults\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"isConnectionBeingDragged\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"currentlyDragging\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"hoverSuspended\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"_suspendDrawing\", false);\r\n    _defineProperty(_assertThisInitialized(_this), \"_suspendedAt\", null);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorClass\", CLASS_CONNECTOR);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectorOutlineClass\", CLASS_CONNECTOR_OUTLINE);\r\n    _defineProperty(_assertThisInitialized(_this), \"connectedClass\", CLASS_CONNECTED);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointClass\", CLASS_ENDPOINT);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointConnectedClass\", CLASS_ENDPOINT_CONNECTED);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointFullClass\", CLASS_ENDPOINT_FULL);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointFloatingClass\", CLASS_ENDPOINT_FLOATING);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointDropAllowedClass\", CLASS_ENDPOINT_DROP_ALLOWED);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointDropForbiddenClass\", CLASS_ENDPOINT_DROP_FORBIDDEN);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointAnchorClassPrefix\", CLASS_ENDPOINT_ANCHOR_PREFIX);\r\n    _defineProperty(_assertThisInitialized(_this), \"overlayClass\", CLASS_OVERLAY);\r\n    _defineProperty(_assertThisInitialized(_this), \"connections\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointsByElement\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"endpointsByUUID\", new Map());\r\n    _defineProperty(_assertThisInitialized(_this), \"sourceSelectors\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"targetSelectors\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"allowNestedGroups\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_curIdStamp\", 1);\r\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", new Viewport(_assertThisInitialized(_this)));\r\n    _defineProperty(_assertThisInitialized(_this), \"router\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"groupManager\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectionTypes\", new Map());\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointTypes\", new Map());\r\n    _defineProperty(_assertThisInitialized(_this), \"_container\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_managedElements\", {});\r\n    _defineProperty(_assertThisInitialized(_this), \"DEFAULT_SCOPE\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_zoom\", 1);\r\n    _this.defaults = {\r\n      anchor: AnchorLocations.Bottom,\r\n      anchors: [null, null],\r\n      connectionsDetachable: true,\r\n      connectionOverlays: [],\r\n      connector: StraightConnector.type,\r\n      container: null,\r\n      endpoint: DotEndpoint.type,\r\n      endpointOverlays: [],\r\n      endpoints: [null, null],\r\n      endpointStyle: {\r\n        fill: \"#456\"\r\n      },\r\n      endpointStyles: [null, null],\r\n      endpointHoverStyle: null,\r\n      endpointHoverStyles: [null, null],\r\n      hoverPaintStyle: null,\r\n      listStyle: {},\r\n      maxConnections: 1,\r\n      paintStyle: {\r\n        strokeWidth: 2,\r\n        stroke: \"#456\"\r\n      },\r\n      reattachConnections: false,\r\n      scope: \"jsplumb_defaultscope\",\r\n      allowNestedGroups: true\r\n    };\r\n    if (defaults) {\r\n      extend(_this.defaults, defaults);\r\n    }\r\n    extend(_this._initialDefaults, _this.defaults);\r\n    if (_this._initialDefaults[DEFAULT_KEY_PAINT_STYLE] != null) {\r\n      _this._initialDefaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth = _this._initialDefaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth || 2;\r\n    }\r\n    _this.DEFAULT_SCOPE = _this.defaults[DEFAULT_KEY_SCOPE];\r\n    _this.allowNestedGroups = _this._initialDefaults[DEFAULT_KEY_ALLOW_NESTED_GROUPS] !== false;\r\n    _this.router = new LightweightRouter(_assertThisInitialized(_this));\r\n    _this.groupManager = new GroupManager(_assertThisInitialized(_this));\r\n    _this.setContainer(_this._initialDefaults.container);\r\n    return _this;\r\n  }\r\n  _createClass(JsPlumbInstance, [{\r\n    key: \"defaultScope\",\r\n    get: function get() {\r\n      return this.DEFAULT_SCOPE;\r\n    }\r\n  }, {\r\n    key: \"currentZoom\",\r\n    get: function get() {\r\n      return this._zoom;\r\n    }\r\n  }, {\r\n    key: \"areDefaultAnchorsSet\",\r\n    value: function areDefaultAnchorsSet() {\r\n      return this.validAnchorsSpec(this.defaults.anchors);\r\n    }\r\n  }, {\r\n    key: \"validAnchorsSpec\",\r\n    value: function validAnchorsSpec(anchors) {\r\n      return anchors != null && anchors[0] != null && anchors[1] != null;\r\n    }\r\n  }, {\r\n    key: \"getContainer\",\r\n    value: function getContainer() {\r\n      return this._container;\r\n    }\r\n  }, {\r\n    key: \"setZoom\",\r\n    value: function setZoom(z, repaintEverything) {\r\n      this._zoom = z;\r\n      this.fire(EVENT_ZOOM, this._zoom);\r\n      if (repaintEverything) {\r\n        this.repaintEverything();\r\n      }\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"_idstamp\",\r\n    value: function _idstamp() {\r\n      return \"\" + this._curIdStamp++;\r\n    }\r\n  }, {\r\n    key: \"checkCondition\",\r\n    value: function checkCondition(conditionName, args) {\r\n      var l = this.getListener(conditionName),\r\n          r = true;\r\n      if (l && l.length > 0) {\r\n        var values = Array.prototype.slice.call(arguments, 1);\r\n        try {\r\n          for (var i = 0, j = l.length; i < j; i++) {\r\n            r = r && l[i].apply(l[i], values);\r\n          }\r\n        } catch (e) {\r\n          log(\"cannot check condition [\" + conditionName + \"]\" + e);\r\n        }\r\n      }\r\n      return r;\r\n    }\r\n  }, {\r\n    key: \"getId\",\r\n    value: function getId(element, uuid) {\r\n      if (element == null) {\r\n        return null;\r\n      }\r\n      var id = this.getAttribute(element, ATTRIBUTE_MANAGED);\r\n      if (!id || id === \"undefined\") {\r\n        if (arguments.length === 2 && arguments[1] !== undefined) {\r\n          id = uuid;\r\n        } else if (arguments.length === 1 || arguments.length === 3 && !arguments[2]) {\r\n          id = \"jsplumb-\" + this._instanceIndex + \"-\" + this._idstamp();\r\n        }\r\n        this.setAttribute(element, ATTRIBUTE_MANAGED, id);\r\n      }\r\n      return id;\r\n    }\r\n  }, {\r\n    key: \"getConnections\",\r\n    value: function getConnections(options, flat) {\r\n      if (!options) {\r\n        options = {};\r\n      } else if (options.constructor === String) {\r\n        options = {\r\n          \"scope\": options\r\n        };\r\n      }\r\n      var scope = options.scope || this.defaultScope,\r\n          scopes = prepareList(this, scope, true),\r\n          sources = prepareList(this, options.source),\r\n          targets = prepareList(this, options.target),\r\n          results = !flat && scopes.length > 1 ? {} : [],\r\n          _addOne = function _addOne(scope, obj) {\r\n        if (!flat && scopes.length > 1) {\r\n          var ss = results[scope];\r\n          if (ss == null) {\r\n            ss = results[scope] = [];\r\n          }\r\n          ss.push(obj);\r\n        } else {\r\n          results.push(obj);\r\n        }\r\n      };\r\n      for (var j = 0, jj = this.connections.length; j < jj; j++) {\r\n        var _c2 = this.connections[j],\r\n            sourceId = _c2.proxies && _c2.proxies[0] ? _c2.proxies[0].originalEp.elementId : _c2.sourceId,\r\n            targetId = _c2.proxies && _c2.proxies[1] ? _c2.proxies[1].originalEp.elementId : _c2.targetId;\r\n        if (filterList(scopes, _c2.scope) && filterList(sources, sourceId) && filterList(targets, targetId)) {\r\n          _addOne(_c2.scope, _c2);\r\n        }\r\n      }\r\n      return results;\r\n    }\r\n  }, {\r\n    key: \"select\",\r\n    value: function select(params) {\r\n      params = params || {};\r\n      params.scope = params.scope || \"*\";\r\n      return new ConnectionSelection(this, params.connections || this.getConnections(params, true));\r\n    }\r\n  }, {\r\n    key: \"selectEndpoints\",\r\n    value: function selectEndpoints(params) {\r\n      params = params || {};\r\n      params.scope = params.scope || WILDCARD;\r\n      var noElementFilters = !params.element && !params.source && !params.target,\r\n          elements = noElementFilters ? WILDCARD : prepareList(this, params.element),\r\n          sources = noElementFilters ? WILDCARD : prepareList(this, params.source),\r\n          targets = noElementFilters ? WILDCARD : prepareList(this, params.target),\r\n          scopes = prepareList(this, params.scope, true);\r\n      var ep = [];\r\n      for (var _el2 in this.endpointsByElement) {\r\n        var either = filterList(elements, _el2, true),\r\n            source = filterList(sources, _el2, true),\r\n            sourceMatchExact = sources !== \"*\",\r\n            target = filterList(targets, _el2, true),\r\n            targetMatchExact = targets !== \"*\";\r\n        if (either || source || target) {\r\n          inner: for (var i = 0, ii = this.endpointsByElement[_el2].length; i < ii; i++) {\r\n            var _ep = this.endpointsByElement[_el2][i];\r\n            if (filterList(scopes, _ep.scope, true)) {\r\n              var noMatchSource = sourceMatchExact && sources.length > 0 && !_ep.isSource,\r\n                  noMatchTarget = targetMatchExact && targets.length > 0 && !_ep.isTarget;\r\n              if (noMatchSource || noMatchTarget) {\r\n                continue inner;\r\n              }\r\n              ep.push(_ep);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return new EndpointSelection(this, ep);\r\n    }\r\n  }, {\r\n    key: \"setContainer\",\r\n    value: function setContainer(c) {\r\n      this._container = c;\r\n      this.fire(EVENT_CONTAINER_CHANGE, this._container);\r\n    }\r\n  }, {\r\n    key: \"_set\",\r\n    value: function _set(c, el, idx) {\r\n      var stTypes = [{\r\n        el: \"source\",\r\n        elId: \"sourceId\"\r\n      }, {\r\n        el: \"target\",\r\n        elId: \"targetId\"\r\n      }];\r\n      var ep,\r\n          _st = stTypes[idx],\r\n          cId = c[_st.elId],\r\n          sid,\r\n          oldEndpoint = c.endpoints[idx];\r\n      var evtParams = {\r\n        index: idx,\r\n        originalEndpoint: oldEndpoint,\r\n        originalSourceId: idx === 0 ? cId : c.sourceId,\r\n        newSourceId: c.sourceId,\r\n        originalTargetId: idx === 1 ? cId : c.targetId,\r\n        newTargetId: c.targetId,\r\n        connection: c,\r\n        newEndpoint: oldEndpoint\r\n      };\r\n      if (el instanceof Endpoint) {\r\n        ep = el;\r\n        ep.addConnection(c);\r\n      } else {\r\n        sid = this.getId(el);\r\n        if (sid === c[_st.elId]) {\r\n          ep = null;\r\n        } else {\r\n          ep = c.makeEndpoint(idx === 0, el, sid);\r\n        }\r\n      }\r\n      if (ep != null) {\r\n        evtParams.newEndpoint = ep;\r\n        oldEndpoint.detachFromConnection(c);\r\n        c.endpoints[idx] = ep;\r\n        c[_st.el] = ep.element;\r\n        c[_st.elId] = ep.elementId;\r\n        evtParams[idx === 0 ? \"newSourceId\" : \"newTargetId\"] = ep.elementId;\r\n        this.fireMoveEvent(evtParams);\r\n        this._paintConnection(c);\r\n      }\r\n      return evtParams;\r\n    }\r\n  }, {\r\n    key: \"setSource\",\r\n    value: function setSource(connection, el) {\r\n      removeManagedConnection(connection, this._managedElements[connection.sourceId]);\r\n      var p = this._set(connection, el, 0);\r\n      addManagedConnection(connection, this._managedElements[p.newSourceId]);\r\n    }\r\n  }, {\r\n    key: \"setTarget\",\r\n    value: function setTarget(connection, el) {\r\n      removeManagedConnection(connection, this._managedElements[connection.targetId]);\r\n      var p = this._set(connection, el, 1);\r\n      addManagedConnection(connection, this._managedElements[p.newTargetId]);\r\n    }\r\n  }, {\r\n    key: \"setConnectionType\",\r\n    value: function setConnectionType(connection, type, params) {\r\n      connection.setType(type, params);\r\n      this._paintConnection(connection);\r\n    }\r\n  }, {\r\n    key: \"isHoverSuspended\",\r\n    value: function isHoverSuspended() {\r\n      return this.hoverSuspended;\r\n    }\r\n  }, {\r\n    key: \"setSuspendDrawing\",\r\n    value: function setSuspendDrawing(val, repaintAfterwards) {\r\n      var curVal = this._suspendDrawing;\r\n      this._suspendDrawing = val;\r\n      if (val) {\r\n        this._suspendedAt = \"\" + new Date().getTime();\r\n      } else {\r\n        this._suspendedAt = null;\r\n        this.viewport.recomputeBounds();\r\n      }\r\n      if (repaintAfterwards) {\r\n        this.repaintEverything();\r\n      }\r\n      return curVal;\r\n    }\r\n  }, {\r\n    key: \"getSuspendedAt\",\r\n    value: function getSuspendedAt() {\r\n      return this._suspendedAt;\r\n    }\r\n  }, {\r\n    key: \"batch\",\r\n    value: function batch(fn, doNotRepaintAfterwards) {\r\n      var _wasSuspended = this._suspendDrawing === true;\r\n      if (!_wasSuspended) {\r\n        this.setSuspendDrawing(true);\r\n      }\r\n      fn();\r\n      if (!_wasSuspended) {\r\n        this.setSuspendDrawing(false, !doNotRepaintAfterwards);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"each\",\r\n    value: function each(spec, fn) {\r\n      if (spec == null) {\r\n        return;\r\n      }\r\n      if (spec.length != null) {\r\n        for (var i = 0; i < spec.length; i++) {\r\n          fn(spec[i]);\r\n        }\r\n      } else {\r\n        fn(spec);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"updateOffset\",\r\n    value: function updateOffset(params) {\r\n      var elId = params.elId;\r\n      if (params.recalc) {\r\n        return this.viewport.refreshElement(elId);\r\n      } else {\r\n        return this.viewport.getPosition(elId);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"deleteConnection\",\r\n    value: function deleteConnection(connection, params) {\r\n      if (connection != null && connection.deleted !== true) {\r\n        params = params || {};\r\n        if (params.force || functionChain(true, false, [[connection.endpoints[0], IS_DETACH_ALLOWED, [connection]], [connection.endpoints[1], IS_DETACH_ALLOWED, [connection]], [connection, IS_DETACH_ALLOWED, [connection]], [this, CHECK_CONDITION, [INTERCEPT_BEFORE_DETACH, connection]]])) {\r\n          removeManagedConnection(connection, this._managedElements[connection.sourceId], this._managedElements[connection.targetId]);\r\n          this.fireDetachEvent(connection, !connection.pending && params.fireEvent !== false, params.originalEvent);\r\n          var _sourceEndpoint = connection.endpoints[0];\r\n          var targetEndpoint = connection.endpoints[1];\r\n          if (_sourceEndpoint !== params.endpointToIgnore) {\r\n            _sourceEndpoint.detachFromConnection(connection, null, true);\r\n          }\r\n          if (targetEndpoint !== params.endpointToIgnore) {\r\n            targetEndpoint.detachFromConnection(connection, null, true);\r\n          }\r\n          removeWithFunction(this.connections, function (_c) {\r\n            return connection.id === _c.id;\r\n          });\r\n          connection.destroy();\r\n          if (_sourceEndpoint !== params.endpointToIgnore && _sourceEndpoint.deleteOnEmpty && _sourceEndpoint.connections.length === 0) {\r\n            this.deleteEndpoint(_sourceEndpoint);\r\n          }\r\n          if (targetEndpoint !== params.endpointToIgnore && targetEndpoint.deleteOnEmpty && targetEndpoint.connections.length === 0) {\r\n            this.deleteEndpoint(targetEndpoint);\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  }, {\r\n    key: \"deleteEveryConnection\",\r\n    value: function deleteEveryConnection(params) {\r\n      var _this2 = this;\r\n      params = params || {};\r\n      var count = this.connections.length,\r\n          deletedCount = 0;\r\n      this.batch(function () {\r\n        for (var i = 0; i < count; i++) {\r\n          deletedCount += _this2.deleteConnection(_this2.connections[0], params) ? 1 : 0;\r\n        }\r\n      });\r\n      return deletedCount;\r\n    }\r\n  }, {\r\n    key: \"deleteConnectionsForElement\",\r\n    value: function deleteConnectionsForElement(el, params) {\r\n      var id = this.getId(el),\r\n          m = this._managedElements[id];\r\n      if (m) {\r\n        var l = m.connections.length;\r\n        for (var i = 0; i < l; i++) {\r\n          this.deleteConnection(m.connections[0], params);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"fireDetachEvent\",\r\n    value: function fireDetachEvent(jpc, doFireEvent, originalEvent) {\r\n      var argIsConnection = jpc.id != null,\r\n          params = argIsConnection ? {\r\n        connection: jpc,\r\n        source: jpc.source,\r\n        target: jpc.target,\r\n        sourceId: jpc.sourceId,\r\n        targetId: jpc.targetId,\r\n        sourceEndpoint: jpc.endpoints[0],\r\n        targetEndpoint: jpc.endpoints[1]\r\n      } : jpc;\r\n      if (doFireEvent) {\r\n        this.fire(EVENT_CONNECTION_DETACHED, params, originalEvent);\r\n      }\r\n      this.fire(EVENT_INTERNAL_CONNECTION_DETACHED, params, originalEvent);\r\n    }\r\n  }, {\r\n    key: \"fireMoveEvent\",\r\n    value: function fireMoveEvent(params, evt) {\r\n      this.fire(EVENT_CONNECTION_MOVED, params, evt);\r\n    }\r\n  }, {\r\n    key: \"manageAll\",\r\n    value: function manageAll(elements, recalc) {\r\n      var nl = isString(elements) ? this.getSelector(this.getContainer(), elements) : elements;\r\n      for (var i = 0; i < nl.length; i++) {\r\n        this.manage(nl[i], null, recalc);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"manage\",\r\n    value: function manage(element, internalId, _recalc) {\r\n      if (this.getAttribute(element, ATTRIBUTE_MANAGED) == null) {\r\n        internalId = internalId || this.getAttribute(element, \"id\") || uuid();\r\n        this.setAttribute(element, ATTRIBUTE_MANAGED, internalId);\r\n      }\r\n      var elId = this.getId(element);\r\n      if (!this._managedElements[elId]) {\r\n        var obj = {\r\n          el: element,\r\n          endpoints: [],\r\n          connections: [],\r\n          rotation: 0,\r\n          data: {}\r\n        };\r\n        this._managedElements[elId] = obj;\r\n        if (this._suspendDrawing) {\r\n          obj.viewportElement = this.viewport.registerElement(elId, true);\r\n        } else {\r\n          obj.viewportElement = this.updateOffset({\r\n            elId: elId,\r\n            recalc: true\r\n          });\r\n        }\r\n        this.fire(EVENT_MANAGE_ELEMENT, {\r\n          el: element\r\n        });\r\n      } else {\r\n        if (_recalc) {\r\n          this._managedElements[elId].viewportElement = this.updateOffset({\r\n            elId: elId,\r\n            timestamp: null,\r\n            recalc: true\r\n          });\r\n        }\r\n      }\r\n      return this._managedElements[elId];\r\n    }\r\n  }, {\r\n    key: \"getManagedData\",\r\n    value: function getManagedData(elementId, dataIdentifier, key) {\r\n      if (this._managedElements[elementId]) {\r\n        var data = this._managedElements[elementId].data[dataIdentifier];\r\n        return data != null ? data[key] : null;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setManagedData\",\r\n    value: function setManagedData(elementId, dataIdentifier, key, data) {\r\n      if (this._managedElements[elementId]) {\r\n        this._managedElements[elementId].data[dataIdentifier] = this._managedElements[elementId].data[dataIdentifier] || {};\r\n        this._managedElements[elementId].data[dataIdentifier][key] = data;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getManagedElement\",\r\n    value: function getManagedElement(id) {\r\n      return this._managedElements[id] ? this._managedElements[id].el : null;\r\n    }\r\n  }, {\r\n    key: \"unmanage\",\r\n    value: function unmanage(el, removeElement) {\r\n      var _this3 = this;\r\n      this.removeAllEndpoints(el, true);\r\n      var _one = function _one(_el) {\r\n        var id = _this3.getId(_el);\r\n        _this3.removeAttribute(_el, ATTRIBUTE_MANAGED);\r\n        delete _this3._managedElements[id];\r\n        _this3.viewport.remove(id);\r\n        _this3.fire(EVENT_UNMANAGE_ELEMENT, {\r\n          el: _el,\r\n          id: id\r\n        });\r\n        if (_el && removeElement) {\r\n          _this3._removeElement(_el);\r\n        }\r\n      };\r\n      this._getAssociatedElements(el).map(_one);\r\n      _one(el);\r\n    }\r\n  }, {\r\n    key: \"rotate\",\r\n    value: function rotate(element, rotation, _doNotRepaint) {\r\n      var elementId = this.getId(element);\r\n      if (this._managedElements[elementId]) {\r\n        this._managedElements[elementId].rotation = rotation;\r\n        this.viewport.rotateElement(elementId, rotation);\r\n        if (_doNotRepaint !== true) {\r\n          return this.revalidate(element);\r\n        }\r\n      }\r\n      return {\r\n        c: new Set(),\r\n        e: new Set()\r\n      };\r\n    }\r\n  }, {\r\n    key: \"_getRotation\",\r\n    value: function _getRotation(elementId) {\r\n      var entry = this._managedElements[elementId];\r\n      if (entry != null) {\r\n        return entry.rotation || 0;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_getRotations\",\r\n    value: function _getRotations(elementId) {\r\n      var _this4 = this;\r\n      var rotations = [];\r\n      var entry = this._managedElements[elementId];\r\n      var _oneLevel = function _oneLevel(e) {\r\n        if (e.group != null) {\r\n          var gEntry = _this4._managedElements[e.group];\r\n          if (gEntry != null) {\r\n            rotations.push({\r\n              r: gEntry.viewportElement.r,\r\n              c: gEntry.viewportElement.c\r\n            });\r\n            _oneLevel(gEntry);\r\n          }\r\n        }\r\n      };\r\n      if (entry != null) {\r\n        rotations.push({\r\n          r: entry.viewportElement.r || 0,\r\n          c: entry.viewportElement.c\r\n        });\r\n        _oneLevel(entry);\r\n      }\r\n      return rotations;\r\n    }\r\n  }, {\r\n    key: \"_applyRotations\",\r\n    value: function _applyRotations(point, rotations) {\r\n      var sl = point.slice();\r\n      var current = {\r\n        x: sl[0],\r\n        y: sl[1],\r\n        cr: 0,\r\n        sr: 0\r\n      };\r\n      forEach(rotations, function (rotation) {\r\n        current = rotatePoint(current, rotation.c, rotation.r);\r\n      });\r\n      return current;\r\n    }\r\n  }, {\r\n    key: \"_applyRotationsXY\",\r\n    value: function _applyRotationsXY(point, rotations) {\r\n      forEach(rotations, function (rotation) {\r\n        point = rotatePoint(point, rotation.c, rotation.r);\r\n      });\r\n      return point;\r\n    }\r\n  }, {\r\n    key: \"_internal_newEndpoint\",\r\n    value: function _internal_newEndpoint(params) {\r\n      var _p = extend({}, params);\r\n      var managedElement = this.manage(_p.element);\r\n      _p.elementId = this.getId(_p.element);\r\n      _p.id = \"ep_\" + this._idstamp();\r\n      var ep = new Endpoint(this, _p);\r\n      addManagedEndpoint(managedElement, ep);\r\n      if (params.uuid) {\r\n        this.endpointsByUUID.set(params.uuid, ep);\r\n      }\r\n      addToDictionary(this.endpointsByElement, ep.elementId, ep);\r\n      if (!this._suspendDrawing) {\r\n        this._paintEndpoint(ep, {\r\n          timestamp: this._suspendedAt\r\n        });\r\n      }\r\n      return ep;\r\n    }\r\n  }, {\r\n    key: \"_deriveEndpointAndAnchorSpec\",\r\n    value: function _deriveEndpointAndAnchorSpec(type, dontPrependDefault) {\r\n      var bits = ((dontPrependDefault ? \"\" : \"default \") + type).split(/[\\s]/),\r\n          eps = null,\r\n          ep = null,\r\n          a = null,\r\n          as = null;\r\n      for (var i = 0; i < bits.length; i++) {\r\n        var _t = this.getConnectionType(bits[i]);\r\n        if (_t) {\r\n          if (_t.endpoints) {\r\n            eps = _t.endpoints;\r\n          }\r\n          if (_t.endpoint) {\r\n            ep = _t.endpoint;\r\n          }\r\n          if (_t.anchors) {\r\n            as = _t.anchors;\r\n          }\r\n          if (_t.anchor) {\r\n            a = _t.anchor;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        endpoints: eps ? eps : [ep, ep],\r\n        anchors: as ? as : [a, a]\r\n      };\r\n    }\r\n  }, {\r\n    key: \"revalidate\",\r\n    value: function revalidate(el, timestamp) {\r\n      var elId = this.getId(el);\r\n      this.updateOffset({\r\n        elId: elId,\r\n        recalc: true,\r\n        timestamp: timestamp\r\n      });\r\n      return this.repaint(el);\r\n    }\r\n  }, {\r\n    key: \"repaintEverything\",\r\n    value: function repaintEverything() {\r\n      var timestamp = uuid(),\r\n          elId;\r\n      for (elId in this._managedElements) {\r\n        this.viewport.refreshElement(elId, true);\r\n      }\r\n      this.viewport.recomputeBounds();\r\n      for (elId in this._managedElements) {\r\n        this.repaint(this._managedElements[elId].el, timestamp, true);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"setElementPosition\",\r\n    value: function setElementPosition(el, x, y) {\r\n      var id = this.getId(el);\r\n      this.viewport.setPosition(id, x, y);\r\n      return this.repaint(el);\r\n    }\r\n  }, {\r\n    key: \"repaint\",\r\n    value: function repaint(el, timestamp, offsetsWereJustCalculated) {\r\n      var r = {\r\n        c: new Set(),\r\n        e: new Set()\r\n      };\r\n      var _mergeRedraw = function _mergeRedraw(r2) {\r\n        r2.c.forEach(function (c) {\r\n          return r.c.add(c);\r\n        });\r\n        r2.e.forEach(function (e) {\r\n          return r.e.add(e);\r\n        });\r\n      };\r\n      if (!this._suspendDrawing) {\r\n        var id = this.getId(el);\r\n        if (el != null) {\r\n          var repaintEls = this._getAssociatedElements(el);\r\n          if (timestamp == null) {\r\n            timestamp = uuid();\r\n          }\r\n          if (!offsetsWereJustCalculated) {\r\n            for (var i = 0; i < repaintEls.length; i++) {\r\n              this.updateOffset({\r\n                elId: this.getId(repaintEls[i]),\r\n                recalc: true,\r\n                timestamp: timestamp\r\n              });\r\n            }\r\n          }\r\n          _mergeRedraw(this.router.redraw(id, timestamp, null));\r\n          if (repaintEls.length > 0) {\r\n            for (var j = 0; j < repaintEls.length; j++) {\r\n              _mergeRedraw(this.router.redraw(this.getId(repaintEls[j]), timestamp, null));\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return r;\r\n    }\r\n  }, {\r\n    key: \"unregisterEndpoint\",\r\n    value: function unregisterEndpoint(endpoint) {\r\n      var uuid = endpoint.getUuid();\r\n      if (uuid) {\r\n        this.endpointsByUUID[\"delete\"](uuid);\r\n      }\r\n      removeManagedEndpoint(this._managedElements[endpoint.elementId], endpoint);\r\n      var ebe = this.endpointsByElement[endpoint.elementId];\r\n      if (ebe != null) {\r\n        this.endpointsByElement[endpoint.elementId] = ebe.filter(function (e) {\r\n          return e !== endpoint;\r\n        });\r\n      }\r\n      this.fire(EVENT_INTERNAL_ENDPOINT_UNREGISTERED, endpoint);\r\n    }\r\n  }, {\r\n    key: \"_maybePruneEndpoint\",\r\n    value: function _maybePruneEndpoint(endpoint) {\r\n      if (endpoint.deleteOnEmpty && endpoint.connections.length === 0) {\r\n        this.deleteEndpoint(endpoint);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"deleteEndpoint\",\r\n    value: function deleteEndpoint(object) {\r\n      var _this5 = this;\r\n      var endpoint = typeof object === \"string\" ? this.endpointsByUUID.get(object) : object;\r\n      if (endpoint) {\r\n        var proxy = endpoint.proxiedBy;\r\n        var connectionsToDelete = endpoint.connections.slice();\r\n        forEach(connectionsToDelete, function (connection) {\r\n          endpoint.detachFromConnection(connection, null, true);\r\n        });\r\n        this.unregisterEndpoint(endpoint);\r\n        endpoint.destroy();\r\n        forEach(connectionsToDelete, function (connection) {\r\n          _this5.deleteConnection(connection, {\r\n            force: true,\r\n            endpointToIgnore: endpoint\r\n          });\r\n        });\r\n        if (proxy != null) {\r\n          this.deleteEndpoint(proxy);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"addEndpoint\",\r\n    value: function addEndpoint(el, params, referenceParams) {\r\n      referenceParams = referenceParams || {};\r\n      var p = extend({}, referenceParams);\r\n      extend(p, params || {});\r\n      var _p = extend({\r\n        element: el\r\n      }, p);\r\n      return this._internal_newEndpoint(_p);\r\n    }\r\n  }, {\r\n    key: \"addEndpoints\",\r\n    value: function addEndpoints(el, endpoints, referenceParams) {\r\n      var results = [];\r\n      for (var i = 0, j = endpoints.length; i < j; i++) {\r\n        results.push(this.addEndpoint(el, endpoints[i], referenceParams));\r\n      }\r\n      return results;\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      var _this6 = this;\r\n      this.silently(function () {\r\n        _this6.endpointsByElement = {};\r\n        _this6._managedElements = {};\r\n        _this6.endpointsByUUID.clear();\r\n        _this6.viewport.reset();\r\n        _this6.router.reset();\r\n        _this6.groupManager.reset();\r\n        _this6.connections.length = 0;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.reset();\r\n      this.unbind();\r\n      this.sourceSelectors.length = 0;\r\n      this.targetSelectors.length = 0;\r\n      this._connectionTypes.clear();\r\n      this._endpointTypes.clear();\r\n    }\r\n  }, {\r\n    key: \"getEndpoints\",\r\n    value: function getEndpoints(el) {\r\n      return this.endpointsByElement[this.getId(el)] || [];\r\n    }\r\n  }, {\r\n    key: \"getEndpoint\",\r\n    value: function getEndpoint(uuid) {\r\n      return this.endpointsByUUID.get(uuid);\r\n    }\r\n  }, {\r\n    key: \"setEndpointUuid\",\r\n    value: function setEndpointUuid(endpoint, uuid) {\r\n      if (endpoint.uuid) {\r\n        this.endpointsByUUID[\"delete\"](endpoint.uuid);\r\n      }\r\n      endpoint.uuid = uuid;\r\n      this.endpointsByUUID.set(uuid, endpoint);\r\n    }\r\n  }, {\r\n    key: \"connect\",\r\n    value: function connect(params, referenceParams) {\r\n      try {\r\n        var _p = this._prepareConnectionParams(params, referenceParams),\r\n            jpc = this._newConnection(_p);\r\n        this._finaliseConnection(jpc, _p);\r\n        return jpc;\r\n      } catch (errorMessage) {\r\n        log(errorMessage);\r\n        return;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_prepareConnectionParams\",\r\n    value: function _prepareConnectionParams(params, referenceParams) {\r\n      var temp = extend({}, params);\r\n      if (referenceParams) {\r\n        extend(temp, referenceParams);\r\n      }\r\n      var _p = temp;\r\n      if (_p.source) {\r\n        if (_p.source.endpoint) {\r\n          _p.sourceEndpoint = _p.source;\r\n        }\r\n      }\r\n      if (_p.target) {\r\n        if (_p.target.endpoint) {\r\n          _p.targetEndpoint = _p.target;\r\n        }\r\n      }\r\n      if (params.uuids) {\r\n        _p.sourceEndpoint = this.getEndpoint(params.uuids[0]);\r\n        _p.targetEndpoint = this.getEndpoint(params.uuids[1]);\r\n      }\r\n      if (_p.sourceEndpoint != null) {\r\n        if (_p.sourceEndpoint.isFull()) {\r\n          throw ERROR_SOURCE_ENDPOINT_FULL;\r\n        }\r\n        if (!_p.type) {\r\n          _p.type = _p.sourceEndpoint.edgeType;\r\n        }\r\n        if (_p.sourceEndpoint.connectorOverlays) {\r\n          _p.overlays = _p.overlays || [];\r\n          for (var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++) {\r\n            _p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\r\n          }\r\n        }\r\n        if (_p.sourceEndpoint.scope) {\r\n          _p.scope = _p.sourceEndpoint.scope;\r\n        }\r\n      } else {\r\n        if (_p.source == null) {\r\n          throw ERROR_SOURCE_DOES_NOT_EXIST;\r\n        }\r\n      }\r\n      if (_p.targetEndpoint != null) {\r\n        if (_p.targetEndpoint.isFull()) {\r\n          throw ERROR_TARGET_ENDPOINT_FULL;\r\n        }\r\n      } else {\r\n        if (_p.target == null) {\r\n          throw ERROR_TARGET_DOES_NOT_EXIST;\r\n        }\r\n      }\r\n      if (_p.sourceEndpoint && _p.targetEndpoint) {\r\n        if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) {\r\n          throw \"Cannot establish connection: scopes do not match\";\r\n        }\r\n      }\r\n      return _p;\r\n    }\r\n  }, {\r\n    key: \"_newConnection\",\r\n    value: function _newConnection(params) {\r\n      params.id = \"con_\" + this._idstamp();\r\n      var c = new Connection(this, params);\r\n      addManagedConnection(c, this._managedElements[c.sourceId], this._managedElements[c.targetId]);\r\n      this._paintConnection(c);\r\n      return c;\r\n    }\r\n  }, {\r\n    key: \"_finaliseConnection\",\r\n    value: function _finaliseConnection(jpc, params, originalEvent) {\r\n      params = params || {};\r\n      if (!jpc.suspendedEndpoint) {\r\n        this.connections.push(jpc);\r\n      }\r\n      jpc.pending = null;\r\n      jpc.endpoints[0].isTemporarySource = false;\r\n      this.repaint(jpc.source);\r\n      var payload = {\r\n        connection: jpc,\r\n        source: jpc.source,\r\n        target: jpc.target,\r\n        sourceId: jpc.sourceId,\r\n        targetId: jpc.targetId,\r\n        sourceEndpoint: jpc.endpoints[0],\r\n        targetEndpoint: jpc.endpoints[1]\r\n      };\r\n      this.fire(EVENT_INTERNAL_CONNECTION, payload, originalEvent);\r\n      if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {\r\n        this.fire(EVENT_CONNECTION, payload, originalEvent);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeAllEndpoints\",\r\n    value: function removeAllEndpoints(el, recurse) {\r\n      var _this7 = this;\r\n      var _one = function _one(_el) {\r\n        var id = _this7.getId(_el),\r\n            ebe = _this7.endpointsByElement[id],\r\n            i,\r\n            ii;\r\n        if (ebe) {\r\n          for (i = 0, ii = ebe.length; i < ii; i++) {\r\n            _this7.deleteEndpoint(ebe[i]);\r\n          }\r\n        }\r\n        delete _this7.endpointsByElement[id];\r\n      };\r\n      if (recurse) {\r\n        this._getAssociatedElements(el).map(_one);\r\n      }\r\n      _one(el);\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"_createSourceDefinition\",\r\n    value: function _createSourceDefinition(params, referenceParams) {\r\n      var p = extend({}, referenceParams);\r\n      extend(p, params);\r\n      p.edgeType = p.edgeType || DEFAULT;\r\n      var aae = this._deriveEndpointAndAnchorSpec(p.edgeType);\r\n      p.endpoint = p.endpoint || aae.endpoints[0];\r\n      p.anchor = p.anchor || aae.anchors[0];\r\n      var maxConnections = p.maxConnections || -1;\r\n      var _def = {\r\n        def: extend({}, p),\r\n        uniqueEndpoint: p.uniqueEndpoint,\r\n        maxConnections: maxConnections,\r\n        enabled: true,\r\n        endpoint: null\r\n      };\r\n      return _def;\r\n    }\r\n  }, {\r\n    key: \"addSourceSelector\",\r\n    value: function addSourceSelector(selector, params) {\r\n      var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n      var _def = this._createSourceDefinition(params);\r\n      var sel = new ConnectionDragSelector(selector, _def, exclude);\r\n      this.sourceSelectors.push(sel);\r\n      return sel;\r\n    }\r\n  }, {\r\n    key: \"removeSourceSelector\",\r\n    value: function removeSourceSelector(selector) {\r\n      removeWithFunction(this.sourceSelectors, function (s) {\r\n        return s === selector;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"removeTargetSelector\",\r\n    value: function removeTargetSelector(selector) {\r\n      removeWithFunction(this.targetSelectors, function (s) {\r\n        return s === selector;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"addTargetSelector\",\r\n    value: function addTargetSelector(selector, params) {\r\n      var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n      var _def = this._createTargetDefinition(params);\r\n      var sel = new ConnectionDragSelector(selector, _def, exclude);\r\n      this.targetSelectors.push(sel);\r\n      return sel;\r\n    }\r\n  }, {\r\n    key: \"_createTargetDefinition\",\r\n    value: function _createTargetDefinition(params, referenceParams) {\r\n      var p = extend({}, referenceParams);\r\n      extend(p, params);\r\n      p.edgeType = p.edgeType || DEFAULT;\r\n      var maxConnections = p.maxConnections || -1;\r\n      var _def = {\r\n        def: extend({}, p),\r\n        uniqueEndpoint: p.uniqueEndpoint,\r\n        maxConnections: maxConnections,\r\n        enabled: true,\r\n        endpoint: null\r\n      };\r\n      return _def;\r\n    }\r\n  }, {\r\n    key: \"show\",\r\n    value: function show(el, changeEndpoints) {\r\n      return this._setVisible(el, BLOCK, changeEndpoints);\r\n    }\r\n  }, {\r\n    key: \"hide\",\r\n    value: function hide(el, changeEndpoints) {\r\n      return this._setVisible(el, NONE, changeEndpoints);\r\n    }\r\n  }, {\r\n    key: \"_setVisible\",\r\n    value: function _setVisible(el, state, alsoChangeEndpoints) {\r\n      var visible = state === BLOCK;\r\n      var endpointFunc = null;\r\n      if (alsoChangeEndpoints) {\r\n        endpointFunc = function endpointFunc(ep) {\r\n          ep.setVisible(visible, true, true);\r\n        };\r\n      }\r\n      var id = this.getId(el);\r\n      this._operation(el, function (jpc) {\r\n        if (visible && alsoChangeEndpoints) {\r\n          var oidx = jpc.sourceId === id ? 1 : 0;\r\n          if (jpc.endpoints[oidx].isVisible()) {\r\n            jpc.setVisible(true);\r\n          }\r\n        } else {\r\n          jpc.setVisible(visible);\r\n        }\r\n      }, endpointFunc);\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"toggleVisible\",\r\n    value: function toggleVisible(el, changeEndpoints) {\r\n      var endpointFunc = null;\r\n      if (changeEndpoints) {\r\n        endpointFunc = function endpointFunc(ep) {\r\n          var state = ep.isVisible();\r\n          ep.setVisible(!state);\r\n        };\r\n      }\r\n      this._operation(el, function (jpc) {\r\n        var state = jpc.isVisible();\r\n        jpc.setVisible(!state);\r\n      }, endpointFunc);\r\n    }\r\n  }, {\r\n    key: \"_operation\",\r\n    value: function _operation(el, func, endpointFunc) {\r\n      var elId = this.getId(el);\r\n      var endpoints = this.endpointsByElement[elId];\r\n      if (endpoints && endpoints.length) {\r\n        for (var i = 0, ii = endpoints.length; i < ii; i++) {\r\n          for (var j = 0, jj = endpoints[i].connections.length; j < jj; j++) {\r\n            var retVal = func(endpoints[i].connections[j]);\r\n            if (retVal) {\r\n              return;\r\n            }\r\n          }\r\n          if (endpointFunc) {\r\n            endpointFunc(endpoints[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"registerConnectionType\",\r\n    value: function registerConnectionType(id, type) {\r\n      this._connectionTypes.set(id, extend({}, type));\r\n      if (type.overlays) {\r\n        var to = {};\r\n        for (var i = 0; i < type.overlays.length; i++) {\r\n          var fo = convertToFullOverlaySpec(type.overlays[i]);\r\n          to[fo.options.id] = fo;\r\n        }\r\n        this._connectionTypes.get(id).overlays = to;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"registerConnectionTypes\",\r\n    value: function registerConnectionTypes(types) {\r\n      for (var i in types) {\r\n        this.registerConnectionType(i, types[i]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"registerEndpointType\",\r\n    value: function registerEndpointType(id, type) {\r\n      this._endpointTypes.set(id, extend({}, type));\r\n      if (type.overlays) {\r\n        var to = {};\r\n        for (var i = 0; i < type.overlays.length; i++) {\r\n          var fo = convertToFullOverlaySpec(type.overlays[i]);\r\n          to[fo.options.id] = fo;\r\n        }\r\n        this._endpointTypes.get(id).overlays = to;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"registerEndpointTypes\",\r\n    value: function registerEndpointTypes(types) {\r\n      for (var i in types) {\r\n        this.registerEndpointType(i, types[i]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getType\",\r\n    value: function getType(id, typeDescriptor) {\r\n      return typeDescriptor === \"connection\" ? this.getConnectionType(id) : this.getEndpointType(id);\r\n    }\r\n  }, {\r\n    key: \"getConnectionType\",\r\n    value: function getConnectionType(id) {\r\n      return this._connectionTypes.get(id);\r\n    }\r\n  }, {\r\n    key: \"getEndpointType\",\r\n    value: function getEndpointType(id) {\r\n      return this._endpointTypes.get(id);\r\n    }\r\n  }, {\r\n    key: \"importDefaults\",\r\n    value: function importDefaults(d) {\r\n      for (var i in d) {\r\n        this.defaults[i] = d[i];\r\n      }\r\n      if (this.defaults[DEFAULT_KEY_PAINT_STYLE] != null) {\r\n        this.defaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth = this.defaults[DEFAULT_KEY_PAINT_STYLE].strokeWidth || 2;\r\n      }\r\n      if (d.container) {\r\n        this.setContainer(d.container);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"restoreDefaults\",\r\n    value: function restoreDefaults() {\r\n      this.defaults = extend({}, this._initialDefaults);\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"getManagedElements\",\r\n    value: function getManagedElements() {\r\n      return this._managedElements;\r\n    }\r\n  }, {\r\n    key: \"proxyConnection\",\r\n    value: function proxyConnection(connection, index, proxyEl, endpointGenerator, anchorGenerator) {\r\n      var alreadyProxied = connection.proxies[index] != null,\r\n          proxyEp,\r\n          originalElementId = alreadyProxied ? connection.proxies[index].originalEp.elementId : connection.endpoints[index].elementId,\r\n          originalEndpoint = alreadyProxied ? connection.proxies[index].originalEp : connection.endpoints[index],\r\n          proxyElId = this.getId(proxyEl);\r\n      if (connection.proxies[index]) {\r\n        if (connection.proxies[index].ep.elementId === proxyElId) {\r\n          proxyEp = connection.proxies[index].ep;\r\n        } else {\r\n          connection.proxies[index].ep.detachFromConnection(connection, index);\r\n          proxyEp = this._internal_newEndpoint({\r\n            element: proxyEl,\r\n            endpoint: endpointGenerator(connection, index),\r\n            anchor: anchorGenerator(connection, index),\r\n            parameters: {\r\n              isProxyEndpoint: true\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        proxyEp = this._internal_newEndpoint({\r\n          element: proxyEl,\r\n          endpoint: endpointGenerator(connection, index),\r\n          anchor: anchorGenerator(connection, index),\r\n          parameters: {\r\n            isProxyEndpoint: true\r\n          }\r\n        });\r\n      }\r\n      proxyEp.deleteOnEmpty = true;\r\n      connection.proxies[index] = {\r\n        ep: proxyEp,\r\n        originalEp: originalEndpoint\r\n      };\r\n      this.sourceOrTargetChanged(originalElementId, proxyElId, connection, proxyEl, index);\r\n      originalEndpoint.detachFromConnection(connection, null, true);\r\n      proxyEp.connections = [connection];\r\n      connection.endpoints[index] = proxyEp;\r\n      originalEndpoint.proxiedBy = proxyEp;\r\n      originalEndpoint.setVisible(false);\r\n      connection.setVisible(true);\r\n      this.revalidate(proxyEl);\r\n    }\r\n  }, {\r\n    key: \"unproxyConnection\",\r\n    value: function unproxyConnection(connection, index) {\r\n      if (connection.proxies == null || connection.proxies[index] == null) {\r\n        return;\r\n      }\r\n      var originalElement = connection.proxies[index].originalEp.element,\r\n          originalElementId = connection.proxies[index].originalEp.elementId,\r\n          proxyElId = connection.proxies[index].ep.elementId;\r\n      connection.endpoints[index] = connection.proxies[index].originalEp;\r\n      delete connection.proxies[index].originalEp.proxiedBy;\r\n      this.sourceOrTargetChanged(proxyElId, originalElementId, connection, originalElement, index);\r\n      connection.proxies[index].ep.detachFromConnection(connection, null);\r\n      connection.proxies[index].originalEp.addConnection(connection);\r\n      if (connection.isVisible()) {\r\n        connection.proxies[index].originalEp.setVisible(true);\r\n      }\r\n      connection.proxies[index] = null;\r\n      if (findWithFunction(connection.proxies, function (p) {\r\n        return p != null;\r\n      }) === -1) {\r\n        connection.proxies.length = 0;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"sourceOrTargetChanged\",\r\n    value: function sourceOrTargetChanged(originalId, newId, connection, newElement, index) {\r\n      if (originalId !== newId) {\r\n        if (index === 0) {\r\n          connection.sourceId = newId;\r\n          connection.source = newElement;\r\n        } else if (index === 1) {\r\n          connection.targetId = newId;\r\n          connection.target = newElement;\r\n        }\r\n        removeManagedConnection(connection, this._managedElements[originalId]);\r\n        addManagedConnection(connection, this._managedElements[newId]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getGroup\",\r\n    value:\r\n    function getGroup(groupId) {\r\n      return this.groupManager.getGroup(groupId);\r\n    }\r\n  }, {\r\n    key: \"getGroupFor\",\r\n    value: function getGroupFor(el) {\r\n      return this.groupManager.getGroupFor(el);\r\n    }\r\n  }, {\r\n    key: \"addGroup\",\r\n    value: function addGroup(params) {\r\n      return this.groupManager.addGroup(params);\r\n    }\r\n  }, {\r\n    key: \"addToGroup\",\r\n    value: function addToGroup(group) {\r\n      var _this$groupManager;\r\n      for (var _len = arguments.length, el = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        el[_key - 1] = arguments[_key];\r\n      }\r\n      return (_this$groupManager = this.groupManager).addToGroup.apply(_this$groupManager, [group, false].concat(el));\r\n    }\r\n  }, {\r\n    key: \"collapseGroup\",\r\n    value: function collapseGroup(group) {\r\n      this.groupManager.collapseGroup(group);\r\n    }\r\n  }, {\r\n    key: \"expandGroup\",\r\n    value: function expandGroup(group) {\r\n      this.groupManager.expandGroup(group);\r\n    }\r\n  }, {\r\n    key: \"toggleGroup\",\r\n    value: function toggleGroup(group) {\r\n      this.groupManager.toggleGroup(group);\r\n    }\r\n  }, {\r\n    key: \"removeGroup\",\r\n    value: function removeGroup(group, deleteMembers, _manipulateView, _doNotFireEvent) {\r\n      return this.groupManager.removeGroup(group, deleteMembers, _manipulateView, _doNotFireEvent);\r\n    }\r\n  }, {\r\n    key: \"removeAllGroups\",\r\n    value: function removeAllGroups(deleteMembers, _manipulateView) {\r\n      this.groupManager.removeAllGroups(deleteMembers, _manipulateView, false);\r\n    }\r\n  }, {\r\n    key: \"removeFromGroup\",\r\n    value: function removeFromGroup(group, el, _doNotFireEvent) {\r\n      this.groupManager.removeFromGroup(group, _doNotFireEvent, el);\r\n      this._appendElement(el, this.getContainer());\r\n      this.updateOffset({\r\n        recalc: true,\r\n        elId: this.getId(el)\r\n      });\r\n    }\r\n  }, {\r\n    key: \"_paintEndpoint\",\r\n    value: function _paintEndpoint(endpoint, params) {\r\n      function findConnectionToUseForDynamicAnchor(ep) {\r\n        var idx = 0;\r\n        if (params.elementWithPrecedence != null) {\r\n          for (var i = 0; i < ep.connections.length; i++) {\r\n            if (ep.connections[i].sourceId === params.elementWithPrecedence || ep.connections[i].targetId === params.elementWithPrecedence) {\r\n              idx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return ep.connections[idx];\r\n      }\r\n      params = params || {};\r\n      var timestamp = params.timestamp,\r\n          recalc = !(params.recalc === false);\r\n      if (!timestamp || endpoint.timestamp !== timestamp) {\r\n        var info = this.viewport.getPosition(endpoint.elementId);\r\n        var xy = params.offset ? {\r\n          x: params.offset.x,\r\n          y: params.offset.y\r\n        } : {\r\n          x: info.x,\r\n          y: info.y\r\n        };\r\n        if (xy != null) {\r\n          var ap = params.anchorLoc;\r\n          if (ap == null) {\r\n            var anchorParams = {\r\n              xy: xy,\r\n              wh: info,\r\n              element: endpoint,\r\n              timestamp: timestamp\r\n            };\r\n            if (recalc && this.router.isDynamicAnchor(endpoint) && endpoint.connections.length > 0) {\r\n              var _c3 = findConnectionToUseForDynamicAnchor(endpoint),\r\n                  oIdx = _c3.endpoints[0] === endpoint ? 1 : 0,\r\n                  oId = oIdx === 0 ? _c3.sourceId : _c3.targetId,\r\n                  oInfo = this.viewport.getPosition(oId);\r\n              anchorParams.index = oIdx === 0 ? 1 : 0;\r\n              anchorParams.connection = _c3;\r\n              anchorParams.txy = oInfo;\r\n              anchorParams.twh = oInfo;\r\n              anchorParams.tElement = _c3.endpoints[oIdx];\r\n              anchorParams.tRotation = this._getRotations(oId);\r\n            } else if (endpoint.connections.length > 0) {\r\n              anchorParams.connection = endpoint.connections[0];\r\n            }\r\n            anchorParams.rotation = this._getRotations(endpoint.elementId);\r\n            ap = this.router.computeAnchorLocation(endpoint._anchor, anchorParams);\r\n          }\r\n          endpoint.endpoint.compute(ap, this.router.getEndpointOrientation(endpoint), endpoint.paintStyleInUse);\r\n          this.renderEndpoint(endpoint, endpoint.paintStyleInUse);\r\n          endpoint.timestamp = timestamp;\r\n          for (var i in endpoint.overlays) {\r\n            if (endpoint.overlays.hasOwnProperty(i)) {\r\n              var _o = endpoint.overlays[i];\r\n              if (_o.isVisible()) {\r\n                endpoint.overlayPlacements[i] = this.drawOverlay(_o, endpoint.endpoint, endpoint.paintStyleInUse, endpoint.getAbsoluteOverlayPosition(_o));\r\n                this._paintOverlay(_o, endpoint.overlayPlacements[i], {\r\n                  xmin: 0,\r\n                  ymin: 0\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_paintConnection\",\r\n    value: function _paintConnection(connection, params) {\r\n      if (!this._suspendDrawing && connection.visible !== false) {\r\n        params = params || {};\r\n        var timestamp = params.timestamp;\r\n        if (timestamp != null && timestamp === connection.lastPaintedAt) {\r\n          return;\r\n        }\r\n        if (timestamp == null || timestamp !== connection.lastPaintedAt) {\r\n          this.router.computePath(connection, timestamp);\r\n          var overlayExtents = {\r\n            xmin: Infinity,\r\n            ymin: Infinity,\r\n            xmax: -Infinity,\r\n            ymax: -Infinity\r\n          };\r\n          for (var i in connection.overlays) {\r\n            if (connection.overlays.hasOwnProperty(i)) {\r\n              var _o2 = connection.overlays[i];\r\n              if (_o2.isVisible()) {\r\n                connection.overlayPlacements[i] = this.drawOverlay(_o2, connection.connector, connection.paintStyleInUse, connection.getAbsoluteOverlayPosition(_o2));\r\n                overlayExtents.xmin = Math.min(overlayExtents.xmin, connection.overlayPlacements[i].xmin);\r\n                overlayExtents.xmax = Math.max(overlayExtents.xmax, connection.overlayPlacements[i].xmax);\r\n                overlayExtents.ymin = Math.min(overlayExtents.ymin, connection.overlayPlacements[i].ymin);\r\n                overlayExtents.ymax = Math.max(overlayExtents.ymax, connection.overlayPlacements[i].ymax);\r\n              }\r\n            }\r\n          }\r\n          var lineWidth = parseFloat(\"\" + connection.paintStyleInUse.strokeWidth || \"1\") / 2,\r\n              outlineWidth = parseFloat(\"\" + connection.paintStyleInUse.strokeWidth || \"0\"),\r\n              _extents = {\r\n            xmin: Math.min(connection.connector.bounds.xmin - (lineWidth + outlineWidth), overlayExtents.xmin),\r\n            ymin: Math.min(connection.connector.bounds.ymin - (lineWidth + outlineWidth), overlayExtents.ymin),\r\n            xmax: Math.max(connection.connector.bounds.xmax + (lineWidth + outlineWidth), overlayExtents.xmax),\r\n            ymax: Math.max(connection.connector.bounds.ymax + (lineWidth + outlineWidth), overlayExtents.ymax)\r\n          };\r\n          this.paintConnector(connection.connector, connection.paintStyleInUse, _extents);\r\n          for (var j in connection.overlays) {\r\n            if (connection.overlays.hasOwnProperty(j)) {\r\n              var _p2 = connection.overlays[j];\r\n              if (_p2.isVisible()) {\r\n                this._paintOverlay(_p2, connection.overlayPlacements[j], _extents);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        connection.lastPaintedAt = timestamp;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_refreshEndpoint\",\r\n    value: function _refreshEndpoint(endpoint) {\r\n      if (!endpoint._anchor.isFloating) {\r\n        if (endpoint.connections.length > 0) {\r\n          this.addEndpointClass(endpoint, this.endpointConnectedClass);\r\n        } else {\r\n          this.removeEndpointClass(endpoint, this.endpointConnectedClass);\r\n        }\r\n        if (endpoint.isFull()) {\r\n          this.addEndpointClass(endpoint, this.endpointFullClass);\r\n        } else {\r\n          this.removeEndpointClass(endpoint, this.endpointFullClass);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_makeConnector\",\r\n    value: function _makeConnector(connection, name, args) {\r\n      return Connectors.get(connection, name, args);\r\n    }\r\n  }, {\r\n    key: \"addOverlay\",\r\n    value: function addOverlay(component, overlay, doNotRevalidate) {\r\n      component.addOverlay(overlay);\r\n      if (!doNotRevalidate) {\r\n        var relatedElement = component instanceof Endpoint ? component.element : component.source;\r\n        this.revalidate(relatedElement);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeOverlay\",\r\n    value: function removeOverlay(component, overlayId) {\r\n      component.removeOverlay(overlayId);\r\n      var relatedElement = component instanceof Endpoint ? component.element : component.source;\r\n      this.revalidate(relatedElement);\r\n    }\r\n  }, {\r\n    key: \"setOutlineColor\",\r\n    value: function setOutlineColor(conn, color) {\r\n      conn.paintStyleInUse.outlineStroke = color;\r\n      this._paintConnection(conn);\r\n    }\r\n  }, {\r\n    key: \"setOutlineWidth\",\r\n    value: function setOutlineWidth(conn, width) {\r\n      conn.paintStyleInUse.outlineWidth = width;\r\n      this._paintConnection(conn);\r\n    }\r\n  }, {\r\n    key: \"setColor\",\r\n    value: function setColor(conn, color) {\r\n      conn.paintStyleInUse.stroke = color;\r\n      this._paintConnection(conn);\r\n    }\r\n  }, {\r\n    key: \"setLineWidth\",\r\n    value: function setLineWidth(conn, width) {\r\n      conn.paintStyleInUse.strokeWidth = width;\r\n      this._paintConnection(conn);\r\n    }\r\n  }, {\r\n    key: \"setLineStyle\",\r\n    value: function setLineStyle(conn, style) {\r\n      if (style.lineWidth != null) {\r\n        conn.paintStyleInUse.strokeWidth = style.lineWidth;\r\n      }\r\n      if (style.outlineWidth != null) {\r\n        conn.paintStyleInUse.outlineWidth = style.outlineWidth;\r\n      }\r\n      if (style.color != null) {\r\n        conn.paintStyleInUse.stroke = style.color;\r\n      }\r\n      if (style.outlineColor != null) {\r\n        conn.paintStyleInUse.outlineStroke = style.outlineColor;\r\n      }\r\n      this._paintConnection(conn);\r\n    }\r\n  }, {\r\n    key: \"getPathData\",\r\n    value:\r\n    function getPathData(connector) {\r\n      var p = \"\";\r\n      for (var i = 0; i < connector.segments.length; i++) {\r\n        p += connector.segments[i].getPath(i === 0);\r\n        p += \" \";\r\n      }\r\n      return p;\r\n    }\r\n  }]);\r\n  return JsPlumbInstance;\r\n}(EventGenerator);\r\n\r\nvar endpointMap = {};\r\nfunction registerEndpointRenderer(name, fns) {\r\n  endpointMap[name] = fns;\r\n}\r\nfunction getPositionOnElement(evt, el, zoom) {\r\n  var jel = el;\r\n  var box = _typeof(el.getBoundingClientRect) !== UNDEFINED ? el.getBoundingClientRect() : {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0\r\n  },\r\n      body = document.body,\r\n      docElem = document.documentElement,\r\n      scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\r\n      scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\r\n      clientTop = docElem.clientTop || body.clientTop || 0,\r\n      clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n      pst = 0,\r\n      psl = 0,\r\n      top = box.top + scrollTop - clientTop + pst * zoom,\r\n      left = box.left + scrollLeft - clientLeft + psl * zoom,\r\n      cl = pageLocation(evt),\r\n      w = box.width || jel.offsetWidth * zoom,\r\n      h = box.height || jel.offsetHeight * zoom,\r\n      x = (cl.x - left) / w,\r\n      y = (cl.y - top) / h;\r\n  return {\r\n    x: x,\r\n    y: y\r\n  };\r\n}\r\nfunction isSVGElementOverlay(o) {\r\n  return isArrowOverlay(o) || isDiamondOverlay(o) || isPlainArrowOverlay(o);\r\n}\r\nfunction setVisible(component, v) {\r\n  if (component.canvas) {\r\n    component.canvas.style.display = v ? \"block\" : \"none\";\r\n  }\r\n}\r\nfunction cleanup(component) {\r\n  if (component.canvas) {\r\n    component.canvas.parentNode.removeChild(component.canvas);\r\n  }\r\n  delete component.canvas;\r\n}\r\nfunction getEndpointCanvas(ep) {\r\n  return ep.canvas;\r\n}\r\nfunction getLabelElement(o) {\r\n  return HTMLElementOverlay.getElement(o);\r\n}\r\nfunction getCustomElement(o) {\r\n  return HTMLElementOverlay.getElement(o, o.component, function (c) {\r\n    var el = o.create(c);\r\n    o.instance.addClass(el, o.instance.overlayClass);\r\n    return el;\r\n  });\r\n}\r\nfunction groupDragConstrain(desiredLoc, dragEl, constrainRect, size) {\r\n  var x = desiredLoc.x,\r\n      y = desiredLoc.y;\r\n  if (dragEl._jsPlumbParentGroup && dragEl._jsPlumbParentGroup.constrain) {\r\n    x = Math.max(desiredLoc.x, 0);\r\n    y = Math.max(desiredLoc.y, 0);\r\n    x = Math.min(x, constrainRect.w - size.w);\r\n    y = Math.min(y, constrainRect.h - size.h);\r\n  }\r\n  return {\r\n    x: x,\r\n    y: y\r\n  };\r\n}\r\nvar BrowserJsPlumbInstance = function (_JsPlumbInstance) {\r\n  _inherits(BrowserJsPlumbInstance, _JsPlumbInstance);\r\n  var _super = _createSuper(BrowserJsPlumbInstance);\r\n  function BrowserJsPlumbInstance(_instanceIndex, defaults) {\r\n    var _this;\r\n    _classCallCheck(this, BrowserJsPlumbInstance);\r\n    _this = _super.call(this, _instanceIndex, defaults);\r\n    _this._instanceIndex = _instanceIndex;\r\n    _defineProperty(_assertThisInitialized(_this), \"containerType\", null);\r\n    _defineProperty(_assertThisInitialized(_this), \"dragSelection\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"dragManager\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorDblClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorTap\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorDblTap\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointDblClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_overlayClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_overlayDblClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_overlayTap\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_overlayDblTap\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorMouseover\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorMouseout\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointMouseover\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointMouseout\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorContextmenu\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorMousedown\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_connectorMouseup\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointMousedown\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_endpointMouseup\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_overlayMouseover\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_overlayMouseout\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementClick\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementTap\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementDblTap\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementMouseenter\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementMouseexit\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementMousemove\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementMouseup\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementMousedown\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_elementContextmenu\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"_resizeObserver\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"eventManager\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"draggingClass\", \"jtk-dragging\");\r\n    _defineProperty(_assertThisInitialized(_this), \"elementDraggingClass\", \"jtk-element-dragging\");\r\n    _defineProperty(_assertThisInitialized(_this), \"hoverClass\", \"jtk-hover\");\r\n    _defineProperty(_assertThisInitialized(_this), \"sourceElementDraggingClass\", \"jtk-source-element-dragging\");\r\n    _defineProperty(_assertThisInitialized(_this), \"targetElementDraggingClass\", \"jtk-target-element-dragging\");\r\n    _defineProperty(_assertThisInitialized(_this), \"hoverSourceClass\", \"jtk-source-hover\");\r\n    _defineProperty(_assertThisInitialized(_this), \"hoverTargetClass\", \"jtk-target-hover\");\r\n    _defineProperty(_assertThisInitialized(_this), \"dragSelectClass\", \"jtk-drag-select\");\r\n    _defineProperty(_assertThisInitialized(_this), \"managedElementsSelector\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"elementsDraggable\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"elementDragHandler\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"groupDragOptions\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"elementDragOptions\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"svg\", {\r\n      node: function node(name, attributes) {\r\n        return _node(name, attributes);\r\n      },\r\n      attr: function attr(node, attributes) {\r\n        return _attr(node, attributes);\r\n      },\r\n      pos: function pos(d) {\r\n        return _pos(d);\r\n      }\r\n    });\r\n    defaults = defaults || {};\r\n    _this.containerType = getElementType(_this.getContainer());\r\n    _this.elementsDraggable = defaults && defaults.elementsDraggable !== false;\r\n    _this.managedElementsSelector = defaults ? defaults.managedElementsSelector || SELECTOR_MANAGED_ELEMENT : SELECTOR_MANAGED_ELEMENT;\r\n    _this.eventManager = new EventManager();\r\n    _this.dragSelection = new DragSelection(_assertThisInitialized(_this));\r\n    _this.dragManager = new DragManager(_assertThisInitialized(_this), _this.dragSelection);\r\n    _this.dragManager.addHandler(new EndpointDragHandler(_assertThisInitialized(_this)));\r\n    _this.groupDragOptions = {\r\n      constrainFunction: groupDragConstrain\r\n    };\r\n    _this.dragManager.addHandler(new GroupDragHandler(_assertThisInitialized(_this), _this.dragSelection), _this.groupDragOptions);\r\n    _this.elementDragHandler = new ElementDragHandler(_assertThisInitialized(_this), _this.dragSelection);\r\n    _this.elementDragOptions = defaults && defaults.dragOptions || {};\r\n    _this.dragManager.addHandler(_this.elementDragHandler, _this.elementDragOptions);\r\n    if (defaults && defaults.dragOptions && defaults.dragOptions.filter) {\r\n      _this.dragManager.addFilter(defaults.dragOptions.filter);\r\n    }\r\n    _this._createEventListeners();\r\n    _this._attachEventDelegates();\r\n    if (defaults.resizeObserver !== false) {\r\n      try {\r\n        _this._resizeObserver = new ResizeObserver(function (entries) {\r\n          var updates = entries.filter(function (e) {\r\n            var a = _this.getAttribute(e.target, ATTRIBUTE_MANAGED);\r\n            if (a != null) {\r\n              var v = _this.viewport._elementMap.get(a);\r\n              return v ? v.w !== e.contentRect.width || v.h !== e.contentRect.height : false;\r\n            } else {\r\n              return false;\r\n            }\r\n          });\r\n          updates.forEach(function (el) {\r\n            return _this.revalidate(el.target);\r\n          });\r\n        });\r\n      } catch (e) {\r\n        log(\"WARN: ResizeObserver could not be attached.\");\r\n      }\r\n    }\r\n    return _this;\r\n  }\r\n  _createClass(BrowserJsPlumbInstance, [{\r\n    key: \"fireOverlayMethod\",\r\n    value: function fireOverlayMethod(overlay, event, e) {\r\n      var stem = overlay.component instanceof Connection ? CONNECTION : ENDPOINT;\r\n      var mappedEvent = compoundEvent(stem, event)\r\n      ;\r\n      e._jsPlumbOverlay = overlay;\r\n      overlay.fire(event, {\r\n        e: e,\r\n        overlay: overlay\r\n      });\r\n      this.fire(mappedEvent, overlay.component, e);\r\n    }\r\n  }, {\r\n    key: \"addDragFilter\",\r\n    value: function addDragFilter(filter, exclude) {\r\n      this.dragManager.addFilter(filter, exclude);\r\n    }\r\n  }, {\r\n    key: \"removeDragFilter\",\r\n    value: function removeDragFilter(filter) {\r\n      this.dragManager.removeFilter(filter);\r\n    }\r\n  }, {\r\n    key: \"setDragGrid\",\r\n    value: function setDragGrid(grid) {\r\n      this.dragManager.setOption(this.elementDragHandler, {\r\n        grid: grid\r\n      });\r\n    }\r\n  }, {\r\n    key: \"setDragConstrainFunction\",\r\n    value: function setDragConstrainFunction(constrainFunction) {\r\n      this.dragManager.setOption(this.elementDragHandler, {\r\n        constrainFunction: constrainFunction\r\n      });\r\n    }\r\n  }, {\r\n    key: \"_removeElement\",\r\n    value: function _removeElement(element) {\r\n      element.parentNode && element.parentNode.removeChild(element);\r\n    }\r\n  }, {\r\n    key: \"_appendElement\",\r\n    value: function _appendElement(el, parent) {\r\n      if (parent) {\r\n        parent.appendChild(el);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_appendElementToGroup\",\r\n    value: function _appendElementToGroup(group, el) {\r\n      this.getGroupContentArea(group).appendChild(el);\r\n    }\r\n  }, {\r\n    key: \"_appendElementToContainer\",\r\n    value: function _appendElementToContainer(el) {\r\n      this._appendElement(el, this.getContainer());\r\n    }\r\n  }, {\r\n    key: \"_getAssociatedElements\",\r\n    value: function _getAssociatedElements(el) {\r\n      var a = [];\r\n      if (el.nodeType !== 3 && el.nodeType !== 8) {\r\n        var els = el.querySelectorAll(SELECTOR_MANAGED_ELEMENT);\r\n        Array.prototype.push.apply(a, els);\r\n      }\r\n      return a.filter(function (_a) {\r\n        return _a.nodeType !== 3 && _a.nodeType !== 8;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"shouldFireEvent\",\r\n    value: function shouldFireEvent(event, value, originalEvent) {\r\n      return true;\r\n    }\r\n  }, {\r\n    key: \"getClass\",\r\n    value: function getClass$1(el) {\r\n      return getClass(el);\r\n    }\r\n  }, {\r\n    key: \"addClass\",\r\n    value: function addClass$1(el, clazz) {\r\n      addClass(el, clazz);\r\n    }\r\n  }, {\r\n    key: \"hasClass\",\r\n    value: function hasClass$1(el, clazz) {\r\n      return hasClass(el, clazz);\r\n    }\r\n  }, {\r\n    key: \"removeClass\",\r\n    value: function removeClass$1(el, clazz) {\r\n      removeClass(el, clazz);\r\n    }\r\n  }, {\r\n    key: \"toggleClass\",\r\n    value: function toggleClass$1(el, clazz) {\r\n      toggleClass(el, clazz);\r\n    }\r\n  }, {\r\n    key: \"setAttribute\",\r\n    value: function setAttribute(el, name, value) {\r\n      el.setAttribute(name, value);\r\n    }\r\n  }, {\r\n    key: \"getAttribute\",\r\n    value: function getAttribute(el, name) {\r\n      return el.getAttribute(name);\r\n    }\r\n  }, {\r\n    key: \"setAttributes\",\r\n    value: function setAttributes(el, atts) {\r\n      for (var i in atts) {\r\n        el.setAttribute(i, atts[i]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeAttribute\",\r\n    value: function removeAttribute(el, attName) {\r\n      el.removeAttribute && el.removeAttribute(attName);\r\n    }\r\n  }, {\r\n    key: \"on\",\r\n    value: function on(el, event, callbackOrSelector, callback) {\r\n      var _this2 = this;\r\n      var _one = function _one(_el) {\r\n        if (callback == null) {\r\n          _this2.eventManager.on(_el, event, callbackOrSelector);\r\n        } else {\r\n          _this2.eventManager.on(_el, event, callbackOrSelector, callback);\r\n        }\r\n      };\r\n      if (isNodeList(el)) {\r\n        forEach(el, function (el) {\r\n          return _one(el);\r\n        });\r\n      } else {\r\n        _one(el);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"off\",\r\n    value: function off(el, event, callback) {\r\n      var _this3 = this;\r\n      if (isNodeList(el)) {\r\n        forEach(el, function (_el) {\r\n          return _this3.eventManager.off(_el, event, callback);\r\n        });\r\n      } else {\r\n        this.eventManager.off(el, event, callback);\r\n      }\r\n      return this;\r\n    }\r\n  }, {\r\n    key: \"trigger\",\r\n    value: function trigger(el, event, originalEvent, payload, detail) {\r\n      this.eventManager.trigger(el, event, originalEvent, payload, detail);\r\n    }\r\n  }, {\r\n    key: \"getOffsetRelativeToRoot\",\r\n    value: function getOffsetRelativeToRoot(el) {\r\n      return offsetRelativeToRoot(el);\r\n    }\r\n  }, {\r\n    key: \"getOffset\",\r\n    value: function getOffset(el) {\r\n      var jel = el;\r\n      var container = this.getContainer();\r\n      var out = this.getPosition(jel),\r\n          op = el !== container && jel.offsetParent !== container ? jel.offsetParent : null,\r\n          _maybeAdjustScroll = function _maybeAdjustScroll(offsetParent) {\r\n        if (offsetParent != null && offsetParent !== document.body && (offsetParent.scrollTop > 0 || offsetParent.scrollLeft > 0)) {\r\n          out.x -= offsetParent.scrollLeft;\r\n          out.y -= offsetParent.scrollTop;\r\n        }\r\n      };\r\n      while (op != null) {\r\n        out.x += op.offsetLeft;\r\n        out.y += op.offsetTop;\r\n        _maybeAdjustScroll(op);\r\n        op = op.offsetParent === container ? null : op.offsetParent;\r\n      }\r\n      if (container != null && (container.scrollTop > 0 || container.scrollLeft > 0)) {\r\n        var pp = jel.offsetParent != null ? this.getStyle(jel.offsetParent, PROPERTY_POSITION) : STATIC,\r\n        p = this.getStyle(jel, PROPERTY_POSITION);\r\n        if (p !== ABSOLUTE && p !== FIXED && pp !== ABSOLUTE && pp !== FIXED) {\r\n          out.x -= container.scrollLeft;\r\n          out.y -= container.scrollTop;\r\n        }\r\n      }\r\n      return out;\r\n    }\r\n  }, {\r\n    key: \"getSize\",\r\n    value: function getSize(el) {\r\n      var _el = el;\r\n      if (_el.offsetWidth != null) {\r\n        return offsetSize(el);\r\n      } else if (_el.width && _el.width.baseVal) {\r\n        return svgWidthHeightSize(_el);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getPosition\",\r\n    value: function getPosition(el) {\r\n      var _el = el;\r\n      if (_el.offsetLeft != null) {\r\n        return {\r\n          x: parseFloat(_el.offsetLeft),\r\n          y: parseFloat(_el.offsetTop)\r\n        };\r\n      } else if (_el.x && _el.x.baseVal) {\r\n        return svgXYPosition(_el);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getStyle\",\r\n    value: function getStyle(el, prop) {\r\n      if (_typeof(window.getComputedStyle) !== UNDEFINED) {\r\n        return getComputedStyle(el, null).getPropertyValue(prop);\r\n      } else {\r\n        return el.currentStyle[prop];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getGroupContentArea\",\r\n    value: function getGroupContentArea(group) {\r\n      var da = this.getSelector(group.el, SELECTOR_GROUP_CONTAINER);\r\n      return da && da.length > 0 ? da[0] : group.el;\r\n    }\r\n  }, {\r\n    key: \"getSelector\",\r\n    value: function getSelector(ctx, spec) {\r\n      var sel = null;\r\n      if (arguments.length === 1) {\r\n        if (!isString(ctx)) {\r\n          var nodeList = document.createDocumentFragment();\r\n          nodeList.appendChild(ctx);\r\n          return fromArray(nodeList.childNodes);\r\n        }\r\n        sel = fromArray(document.querySelectorAll(ctx));\r\n      } else {\r\n        sel = fromArray(ctx.querySelectorAll(spec));\r\n      }\r\n      return sel;\r\n    }\r\n  }, {\r\n    key: \"setPosition\",\r\n    value: function setPosition(el, p) {\r\n      var jel = el;\r\n      jel.style.left = p.x + \"px\";\r\n      jel.style.top = p.y + \"px\";\r\n    }\r\n  }, {\r\n    key: \"setDraggable\",\r\n    value: function setDraggable(element, draggable) {\r\n      if (draggable) {\r\n        this.removeAttribute(element, ATTRIBUTE_NOT_DRAGGABLE);\r\n      } else {\r\n        this.setAttribute(element, ATTRIBUTE_NOT_DRAGGABLE, TRUE$1);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"isDraggable\",\r\n    value: function isDraggable(el) {\r\n      var d = this.getAttribute(el, ATTRIBUTE_NOT_DRAGGABLE);\r\n      return d == null || d === FALSE$1;\r\n    }\r\n  }, {\r\n    key: \"toggleDraggable\",\r\n    value: function toggleDraggable(el) {\r\n      var state = this.isDraggable(el);\r\n      this.setDraggable(el, !state);\r\n      return !state;\r\n    }\r\n  }, {\r\n    key: \"_createEventListeners\",\r\n    value: function _createEventListeners() {\r\n      var _connClick = function _connClick(event, e) {\r\n        if (!e.defaultPrevented && e._jsPlumbOverlay == null) {\r\n          var connectorElement = findParent(getEventSource(e), SELECTOR_CONNECTOR, this.getContainer(), true);\r\n          this.fire(event, connectorElement.jtk.connector.connection, e);\r\n        }\r\n      };\r\n      this._connectorClick = _connClick.bind(this, EVENT_CONNECTION_CLICK);\r\n      this._connectorDblClick = _connClick.bind(this, EVENT_CONNECTION_DBL_CLICK);\r\n      this._connectorTap = _connClick.bind(this, EVENT_CONNECTION_TAP);\r\n      this._connectorDblTap = _connClick.bind(this, EVENT_CONNECTION_DBL_TAP);\r\n      var _connectorHover = function _connectorHover(state, e) {\r\n        var el = getEventSource(e).parentNode;\r\n        if (el.jtk && el.jtk.connector) {\r\n          var connector = el.jtk.connector;\r\n          var connection = connector.connection;\r\n          this.setConnectorHover(connector, state);\r\n          if (state) {\r\n            this.addClass(connection.source, this.hoverSourceClass);\r\n            this.addClass(connection.target, this.hoverTargetClass);\r\n          } else {\r\n            this.removeClass(connection.source, this.hoverSourceClass);\r\n            this.removeClass(connection.target, this.hoverTargetClass);\r\n          }\r\n          this.fire(state ? EVENT_CONNECTION_MOUSEOVER : EVENT_CONNECTION_MOUSEOUT, el.jtk.connector.connection, e);\r\n        }\r\n      };\r\n      this._connectorMouseover = _connectorHover.bind(this, true);\r\n      this._connectorMouseout = _connectorHover.bind(this, false);\r\n      var _connectorMouseupdown = function _connectorMouseupdown(state, e) {\r\n        var el = getEventSource(e).parentNode;\r\n        if (el.jtk && el.jtk.connector) {\r\n          this.fire(state ? EVENT_CONNECTION_MOUSEUP : EVENT_CONNECTION_MOUSEDOWN, el.jtk.connector.connection, e);\r\n        }\r\n      };\r\n      this._connectorMouseup = _connectorMouseupdown.bind(this, true);\r\n      this._connectorMousedown = _connectorMouseupdown.bind(this, false);\r\n      this._connectorContextmenu = function (e) {\r\n        var el = getEventSource(e).parentNode;\r\n        if (el.jtk && el.jtk.connector) {\r\n          this.fire(EVENT_CONNECTION_CONTEXTMENU, el.jtk.connector.connection, e);\r\n        }\r\n      }.bind(this);\r\n      var _epClick = function _epClick(event, e, endpointElement) {\r\n        if (!e.defaultPrevented && e._jsPlumbOverlay == null) {\r\n          this.fire(event, endpointElement.jtk.endpoint, e);\r\n        }\r\n      };\r\n      this._endpointClick = _epClick.bind(this, EVENT_ENDPOINT_CLICK);\r\n      this._endpointDblClick = _epClick.bind(this, EVENT_ENDPOINT_DBL_CLICK);\r\n      var _endpointHover = function _endpointHover(state, e) {\r\n        var el = getEventSource(e);\r\n        if (el.jtk && el.jtk.endpoint) {\r\n          this.setEndpointHover(el.jtk.endpoint, state);\r\n          this.fire(state ? EVENT_ENDPOINT_MOUSEOVER : EVENT_ENDPOINT_MOUSEOUT, el.jtk.endpoint, e);\r\n        }\r\n      };\r\n      this._endpointMouseover = _endpointHover.bind(this, true);\r\n      this._endpointMouseout = _endpointHover.bind(this, false);\r\n      var _endpointMouseupdown = function _endpointMouseupdown(state, e) {\r\n        var el = getEventSource(e);\r\n        if (el.jtk && el.jtk.endpoint) {\r\n          this.fire(state ? EVENT_ENDPOINT_MOUSEUP : EVENT_ENDPOINT_MOUSEDOWN, el.jtk.endpoint, e);\r\n        }\r\n      };\r\n      this._endpointMouseup = _endpointMouseupdown.bind(this, true);\r\n      this._endpointMousedown = _endpointMouseupdown.bind(this, false);\r\n      var _oClick = function (method, e) {\r\n        var overlayElement = findParent(getEventSource(e), SELECTOR_OVERLAY, this.getContainer(), true);\r\n        var overlay = overlayElement.jtk.overlay;\r\n        if (overlay) {\r\n          this.fireOverlayMethod(overlay, method, e);\r\n        }\r\n      }.bind(this);\r\n      this._overlayClick = _oClick.bind(this, EVENT_CLICK);\r\n      this._overlayDblClick = _oClick.bind(this, EVENT_DBL_CLICK);\r\n      this._overlayTap = _oClick.bind(this, EVENT_TAP);\r\n      this._overlayDblTap = _oClick.bind(this, EVENT_DBL_TAP);\r\n      var _overlayHover = function _overlayHover(state, e) {\r\n        var overlayElement = findParent(getEventSource(e), SELECTOR_OVERLAY, this.getContainer(), true);\r\n        var overlay = overlayElement.jtk.overlay;\r\n        if (overlay) {\r\n          this.setOverlayHover(overlay, state);\r\n        }\r\n      };\r\n      this._overlayMouseover = _overlayHover.bind(this, true);\r\n      this._overlayMouseout = _overlayHover.bind(this, false);\r\n      var _elementClick = function _elementClick(event, e, target) {\r\n        if (!e.defaultPrevented) {\r\n          this.fire(e.detail === 1 ? EVENT_ELEMENT_CLICK : EVENT_ELEMENT_DBL_CLICK, target, e);\r\n        }\r\n      };\r\n      this._elementClick = _elementClick.bind(this, EVENT_ELEMENT_CLICK);\r\n      var _elementTap = function _elementTap(event, e, target) {\r\n        if (!e.defaultPrevented) {\r\n          this.fire(EVENT_ELEMENT_TAP, target, e);\r\n        }\r\n      };\r\n      this._elementTap = _elementTap.bind(this, EVENT_ELEMENT_TAP);\r\n      var _elementDblTap = function _elementDblTap(event, e, target) {\r\n        if (!e.defaultPrevented) {\r\n          this.fire(EVENT_ELEMENT_DBL_TAP, target, e);\r\n        }\r\n      };\r\n      this._elementDblTap = _elementDblTap.bind(this, EVENT_ELEMENT_DBL_TAP);\r\n      var _elementHover = function _elementHover(state, e) {\r\n        this.fire(state ? EVENT_ELEMENT_MOUSE_OVER : EVENT_ELEMENT_MOUSE_OUT, getEventSource(e), e);\r\n      };\r\n      this._elementMouseenter = _elementHover.bind(this, true);\r\n      this._elementMouseexit = _elementHover.bind(this, false);\r\n      this._elementMousemove = function (e) {\r\n        this.fire(EVENT_ELEMENT_MOUSE_MOVE, getEventSource(e), e);\r\n      }.bind(this);\r\n      this._elementMouseup = function (e) {\r\n        this.fire(EVENT_ELEMENT_MOUSE_UP, getEventSource(e), e);\r\n      }.bind(this);\r\n      this._elementMousedown = function (e) {\r\n        this.fire(EVENT_ELEMENT_MOUSE_DOWN, getEventSource(e), e);\r\n      }.bind(this);\r\n      this._elementContextmenu = function (e) {\r\n        this.fire(EVENT_ELEMENT_CONTEXTMENU, getEventSource(e), e);\r\n      }.bind(this);\r\n    }\r\n  }, {\r\n    key: \"_attachEventDelegates\",\r\n    value: function _attachEventDelegates() {\r\n      var currentContainer = this.getContainer();\r\n      this.eventManager.on(currentContainer, EVENT_CLICK, SELECTOR_OVERLAY, this._overlayClick);\r\n      this.eventManager.on(currentContainer, EVENT_DBL_CLICK, SELECTOR_OVERLAY, this._overlayDblClick);\r\n      this.eventManager.on(currentContainer, EVENT_TAP, SELECTOR_OVERLAY, this._overlayTap);\r\n      this.eventManager.on(currentContainer, EVENT_DBL_TAP, SELECTOR_OVERLAY, this._overlayDblTap);\r\n      this.eventManager.on(currentContainer, EVENT_CLICK, SELECTOR_CONNECTOR, this._connectorClick);\r\n      this.eventManager.on(currentContainer, EVENT_DBL_CLICK, SELECTOR_CONNECTOR, this._connectorDblClick);\r\n      this.eventManager.on(currentContainer, EVENT_TAP, SELECTOR_CONNECTOR, this._connectorTap);\r\n      this.eventManager.on(currentContainer, EVENT_DBL_TAP, SELECTOR_CONNECTOR, this._connectorDblTap);\r\n      this.eventManager.on(currentContainer, EVENT_CLICK, SELECTOR_ENDPOINT, this._endpointClick);\r\n      this.eventManager.on(currentContainer, EVENT_DBL_CLICK, SELECTOR_ENDPOINT, this._endpointDblClick);\r\n      this.eventManager.on(currentContainer, EVENT_CLICK, this.managedElementsSelector, this._elementClick);\r\n      this.eventManager.on(currentContainer, EVENT_TAP, this.managedElementsSelector, this._elementTap);\r\n      this.eventManager.on(currentContainer, EVENT_DBL_TAP, this.managedElementsSelector, this._elementDblTap);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_CONNECTOR, this._connectorMouseover);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_CONNECTOR, this._connectorMouseout);\r\n      this.eventManager.on(currentContainer, EVENT_CONTEXTMENU, SELECTOR_CONNECTOR, this._connectorContextmenu);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEUP, SELECTOR_CONNECTOR, this._connectorMouseup);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEDOWN, SELECTOR_CONNECTOR, this._connectorMousedown);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_ENDPOINT, this._endpointMouseover);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_ENDPOINT, this._endpointMouseout);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEUP, SELECTOR_ENDPOINT, this._endpointMouseup);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEDOWN, SELECTOR_ENDPOINT, this._endpointMousedown);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_OVERLAY, this._overlayMouseover);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_OVERLAY, this._overlayMouseout);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOVER, SELECTOR_MANAGED_ELEMENT, this._elementMouseenter);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEOUT, SELECTOR_MANAGED_ELEMENT, this._elementMouseexit);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEMOVE, SELECTOR_MANAGED_ELEMENT, this._elementMousemove);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEUP, SELECTOR_MANAGED_ELEMENT, this._elementMouseup);\r\n      this.eventManager.on(currentContainer, EVENT_MOUSEDOWN, SELECTOR_MANAGED_ELEMENT, this._elementMousedown);\r\n      this.eventManager.on(currentContainer, EVENT_CONTEXTMENU, SELECTOR_MANAGED_ELEMENT, this._elementContextmenu);\r\n    }\r\n  }, {\r\n    key: \"_detachEventDelegates\",\r\n    value: function _detachEventDelegates() {\r\n      var currentContainer = this.getContainer();\r\n      if (currentContainer) {\r\n        this.eventManager.off(currentContainer, EVENT_CLICK, this._connectorClick);\r\n        this.eventManager.off(currentContainer, EVENT_DBL_CLICK, this._connectorDblClick);\r\n        this.eventManager.off(currentContainer, EVENT_TAP, this._connectorTap);\r\n        this.eventManager.off(currentContainer, EVENT_DBL_TAP, this._connectorDblTap);\r\n        this.eventManager.off(currentContainer, EVENT_CLICK, this._endpointClick);\r\n        this.eventManager.off(currentContainer, EVENT_DBL_CLICK, this._endpointDblClick);\r\n        this.eventManager.off(currentContainer, EVENT_CLICK, this._overlayClick);\r\n        this.eventManager.off(currentContainer, EVENT_DBL_CLICK, this._overlayDblClick);\r\n        this.eventManager.off(currentContainer, EVENT_TAP, this._overlayTap);\r\n        this.eventManager.off(currentContainer, EVENT_DBL_TAP, this._overlayDblTap);\r\n        this.eventManager.off(currentContainer, EVENT_CLICK, this._elementClick);\r\n        this.eventManager.off(currentContainer, EVENT_TAP, this._elementTap);\r\n        this.eventManager.off(currentContainer, EVENT_DBL_TAP, this._elementDblTap);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEOVER, this._connectorMouseover);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEOUT, this._connectorMouseout);\r\n        this.eventManager.off(currentContainer, EVENT_CONTEXTMENU, this._connectorContextmenu);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEUP, this._connectorMouseup);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEDOWN, this._connectorMousedown);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEOVER, this._endpointMouseover);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEOUT, this._endpointMouseout);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEUP, this._endpointMouseup);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEDOWN, this._endpointMousedown);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEOVER, this._overlayMouseover);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEOUT, this._overlayMouseout);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEENTER, this._elementMouseenter);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEEXIT, this._elementMouseexit);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEMOVE, this._elementMousemove);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEUP, this._elementMouseup);\r\n        this.eventManager.off(currentContainer, EVENT_MOUSEDOWN, this._elementMousedown);\r\n        this.eventManager.off(currentContainer, EVENT_CONTEXTMENU, this._elementContextmenu);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setContainer\",\r\n    value: function setContainer(newContainer) {\r\n      var _this4 = this;\r\n      if (newContainer === document || newContainer === document.body) {\r\n        throw new Error(\"Cannot set document or document.body as container element\");\r\n      }\r\n      this._detachEventDelegates();\r\n      var dragFilters;\r\n      if (this.dragManager != null) {\r\n        dragFilters = this.dragManager.reset();\r\n      }\r\n      this.setAttribute(newContainer, ATTRIBUTE_CONTAINER, uuid().replace(\"-\", \"\"));\r\n      var currentContainer = this.getContainer();\r\n      if (currentContainer != null) {\r\n        currentContainer.removeAttribute(ATTRIBUTE_CONTAINER);\r\n        var children = fromArray(currentContainer.childNodes).filter(function (cn) {\r\n          return cn != null && (_this4.hasClass(cn, CLASS_CONNECTOR) || _this4.hasClass(cn, CLASS_ENDPOINT) || _this4.hasClass(cn, CLASS_OVERLAY) || cn.getAttribute && cn.getAttribute(ATTRIBUTE_MANAGED) != null);\r\n        });\r\n        forEach(children, function (el) {\r\n          newContainer.appendChild(el);\r\n        });\r\n      }\r\n      _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"setContainer\", this).call(this, newContainer);\r\n      this.containerType = getElementType(newContainer);\r\n      if (this.eventManager != null) {\r\n        this._attachEventDelegates();\r\n      }\r\n      if (this.dragManager != null) {\r\n        this.dragManager.addHandler(new EndpointDragHandler(this));\r\n        this.dragManager.addHandler(new GroupDragHandler(this, this.dragSelection), this.groupDragOptions);\r\n        this.elementDragHandler = new ElementDragHandler(this, this.dragSelection);\r\n        this.dragManager.addHandler(this.elementDragHandler, this.elementDragOptions);\r\n        if (dragFilters != null) {\r\n          this.dragManager.setFilters(dragFilters);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"reset\", this).call(this);\r\n      if (this._resizeObserver) {\r\n        this._resizeObserver.disconnect();\r\n      }\r\n      var container = this.getContainer();\r\n      var els = container.querySelectorAll([SELECTOR_MANAGED_ELEMENT, SELECTOR_ENDPOINT, SELECTOR_CONNECTOR, SELECTOR_OVERLAY].join(\",\"));\r\n      forEach(els, function (el) {\r\n        return el.parentNode && el.parentNode.removeChild(el);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this._detachEventDelegates();\r\n      if (this.dragManager != null) {\r\n        this.dragManager.reset();\r\n      }\r\n      this.clearDragSelection();\r\n      _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"destroy\", this).call(this);\r\n    }\r\n  }, {\r\n    key: \"unmanage\",\r\n    value: function unmanage(el, removeElement) {\r\n      if (this._resizeObserver != null) {\r\n        this._resizeObserver.unobserve(el);\r\n      }\r\n      this.removeFromDragSelection(el);\r\n      _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"unmanage\", this).call(this, el, removeElement);\r\n    }\r\n  }, {\r\n    key: \"addToDragSelection\",\r\n    value: function addToDragSelection() {\r\n      var _this5 = this;\r\n      for (var _len = arguments.length, el = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        el[_key] = arguments[_key];\r\n      }\r\n      forEach(el, function (_el) {\r\n        return _this5.dragSelection.add(_el);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"clearDragSelection\",\r\n    value: function clearDragSelection() {\r\n      this.dragSelection.clear();\r\n    }\r\n  }, {\r\n    key: \"removeFromDragSelection\",\r\n    value: function removeFromDragSelection() {\r\n      var _this6 = this;\r\n      for (var _len2 = arguments.length, el = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        el[_key2] = arguments[_key2];\r\n      }\r\n      forEach(el, function (_el) {\r\n        return _this6.dragSelection.remove(_el);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"toggleDragSelection\",\r\n    value: function toggleDragSelection() {\r\n      var _this7 = this;\r\n      for (var _len3 = arguments.length, el = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n        el[_key3] = arguments[_key3];\r\n      }\r\n      forEach(el, function (_el) {\r\n        return _this7.dragSelection.toggle(_el);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"addToDragGroup\",\r\n    value: function addToDragGroup(spec) {\r\n      var _this$elementDragHand;\r\n      for (var _len4 = arguments.length, els = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\r\n        els[_key4 - 1] = arguments[_key4];\r\n      }\r\n      (_this$elementDragHand = this.elementDragHandler).addToDragGroup.apply(_this$elementDragHand, [spec].concat(els));\r\n    }\r\n  }, {\r\n    key: \"removeFromDragGroup\",\r\n    value: function removeFromDragGroup() {\r\n      var _this$elementDragHand2;\r\n      (_this$elementDragHand2 = this.elementDragHandler).removeFromDragGroup.apply(_this$elementDragHand2, arguments);\r\n    }\r\n  }, {\r\n    key: \"setDragGroupState\",\r\n    value: function setDragGroupState(state) {\r\n      var _this$elementDragHand3;\r\n      for (var _len5 = arguments.length, els = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\r\n        els[_key5 - 1] = arguments[_key5];\r\n      }\r\n      (_this$elementDragHand3 = this.elementDragHandler).setDragGroupState.apply(_this$elementDragHand3, [state].concat(els));\r\n    }\r\n  }, {\r\n    key: \"clearDragGroup\",\r\n    value: function clearDragGroup(name) {\r\n      this.elementDragHandler.clearDragGroup(name);\r\n    }\r\n  }, {\r\n    key: \"consume\",\r\n    value: function consume$1(e, doNotPreventDefault) {\r\n      consume(e, doNotPreventDefault);\r\n    }\r\n  }, {\r\n    key: \"rotate\",\r\n    value: function rotate(element, rotation, doNotRepaint) {\r\n      var elementId = this.getId(element);\r\n      if (this._managedElements[elementId]) {\r\n        this._managedElements[elementId].el.style.transform = \"rotate(\" + rotation + \"deg)\";\r\n        this._managedElements[elementId].el.style.transformOrigin = \"center center\";\r\n        return _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"rotate\", this).call(this, element, rotation, doNotRepaint);\r\n      }\r\n      return {\r\n        c: new Set(),\r\n        e: new Set()\r\n      };\r\n    }\r\n  }, {\r\n    key: \"addOverlayClass\",\r\n    value:\r\n    function addOverlayClass(o, clazz) {\r\n      if (isLabelOverlay(o)) {\r\n        o.instance.addClass(getLabelElement(o), clazz);\r\n      } else if (isSVGElementOverlay(o)) {\r\n        o.instance.addClass(ensureSVGOverlayPath(o), clazz);\r\n      } else if (isCustomOverlay(o)) {\r\n        o.instance.addClass(getCustomElement(o), clazz);\r\n      } else {\r\n        throw \"Could not add class to overlay of type [\" + o.type + \"]\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeOverlayClass\",\r\n    value: function removeOverlayClass(o, clazz) {\r\n      if (isLabelOverlay(o)) {\r\n        o.instance.removeClass(getLabelElement(o), clazz);\r\n      } else if (isSVGElementOverlay(o)) {\r\n        o.instance.removeClass(ensureSVGOverlayPath(o), clazz);\r\n      } else if (isCustomOverlay(o)) {\r\n        o.instance.removeClass(getCustomElement(o), clazz);\r\n      } else {\r\n        throw \"Could not remove class from overlay of type [\" + o.type + \"]\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_paintOverlay\",\r\n    value: function _paintOverlay(o, params, extents) {\r\n      if (isLabelOverlay(o)) {\r\n        getLabelElement(o);\r\n        var XY = o.component.getXY();\r\n        o.canvas.style.left = XY.x + params.d.minx + \"px\";\r\n        o.canvas.style.top = XY.y + params.d.miny + \"px\";\r\n      } else if (isSVGElementOverlay(o)) {\r\n        var path = isNaN(params.d.cxy.x) || isNaN(params.d.cxy.y) ? \"M 0 0\" : \"M\" + params.d.hxy.x + \",\" + params.d.hxy.y + \" L\" + params.d.tail[0].x + \",\" + params.d.tail[0].y + \" L\" + params.d.cxy.x + \",\" + params.d.cxy.y + \" L\" + params.d.tail[1].x + \",\" + params.d.tail[1].y + \" Z\";\r\n        paintSVGOverlay(o, path, params, extents);\r\n      } else if (isCustomOverlay(o)) {\r\n        getCustomElement(o);\r\n        var _XY = o.component.getXY();\r\n        o.canvas.style.left = _XY.x + params.d.minx + \"px\";\r\n        o.canvas.style.top = _XY.y + params.d.miny + \"px\";\r\n      } else {\r\n        throw \"Could not paint overlay of type [\" + o.type + \"]\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setOverlayVisible\",\r\n    value: function setOverlayVisible(o, visible) {\r\n      var d = visible ? \"block\" : \"none\";\r\n      function s(el) {\r\n        if (el != null) {\r\n          el.style.display = d;\r\n        }\r\n      }\r\n      if (isLabelOverlay(o)) {\r\n        s(getLabelElement(o));\r\n      } else if (isCustomOverlay(o)) {\r\n        s(getCustomElement(o));\r\n      } else if (isSVGElementOverlay(o)) {\r\n        s(o.path);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"reattachOverlay\",\r\n    value: function reattachOverlay(o, c) {\r\n      if (isLabelOverlay(o)) {\r\n        o.instance._appendElement(getLabelElement(o), this.getContainer());\r\n      } else if (isCustomOverlay(o)) {\r\n        o.instance._appendElement(getCustomElement(o), this.getContainer());\r\n      } else if (isSVGElementOverlay(o)) {\r\n        this._appendElement(ensureSVGOverlayPath(o), c.connector.canvas);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setOverlayHover\",\r\n    value: function setOverlayHover(o, hover) {\r\n      var canvas;\r\n      if (isLabelOverlay(o)) {\r\n        canvas = getLabelElement(o);\r\n      } else if (isCustomOverlay(o)) {\r\n        canvas = getCustomElement(o);\r\n      } else if (isSVGElementOverlay(o)) {\r\n        canvas = ensureSVGOverlayPath(o);\r\n      }\r\n      if (canvas != null) {\r\n        if (this.hoverClass != null) {\r\n          if (hover) {\r\n            this.addClass(canvas, this.hoverClass);\r\n          } else {\r\n            this.removeClass(canvas, this.hoverClass);\r\n          }\r\n        }\r\n        this.setHover(o.component, hover);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"destroyOverlay\",\r\n    value: function destroyOverlay(o) {\r\n      if (isLabelOverlay(o)) {\r\n        var _el2 = getLabelElement(o);\r\n        _el2.parentNode.removeChild(_el2);\r\n        delete o.canvas;\r\n        delete o.cachedDimensions;\r\n      } else if (isArrowOverlay(o) || isDiamondOverlay(o) || isPlainArrowOverlay(o)) {\r\n        destroySVGOverlay(o);\r\n      } else if (isCustomOverlay(o)) {\r\n        var _el3 = getCustomElement(o);\r\n        _el3.parentNode.removeChild(_el3);\r\n        delete o.canvas;\r\n        delete o.cachedDimensions;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"drawOverlay\",\r\n    value: function drawOverlay(o, component, paintStyle, absolutePosition) {\r\n      if (isLabelOverlay(o) || isCustomOverlay(o)) {\r\n        var td = HTMLElementOverlay._getDimensions(o);\r\n        if (td != null && td.w != null && td.h != null) {\r\n          var cxy = {\r\n            x: 0,\r\n            y: 0\r\n          };\r\n          if (absolutePosition) {\r\n            cxy = {\r\n              x: absolutePosition.x,\r\n              y: absolutePosition.y\r\n            };\r\n          } else if (component instanceof EndpointRepresentation) {\r\n            var locToUse = Array.isArray(o.location) ? o.location : [o.location, o.location];\r\n            cxy = {\r\n              x: locToUse[0] * component.w,\r\n              y: locToUse[1] * component.h\r\n            };\r\n          } else {\r\n            var loc = o.location,\r\n                absolute = false;\r\n            if (isString(o.location) || o.location < 0 || o.location > 1) {\r\n              loc = parseInt(\"\" + o.location, 10);\r\n              absolute = true;\r\n            }\r\n            cxy = component.pointOnPath(loc, absolute);\r\n          }\r\n          var minx = cxy.x - td.w / 2,\r\n              miny = cxy.y - td.h / 2;\r\n          return {\r\n            component: o,\r\n            d: {\r\n              minx: minx,\r\n              miny: miny,\r\n              td: td,\r\n              cxy: cxy\r\n            },\r\n            xmin: minx,\r\n            xmax: minx + td.w,\r\n            ymin: miny,\r\n            ymax: miny + td.h\r\n          };\r\n        } else {\r\n          return {\r\n            xmin: 0,\r\n            xmax: 0,\r\n            ymin: 0,\r\n            ymax: 0\r\n          };\r\n        }\r\n      } else if (isArrowOverlay(o) || isDiamondOverlay(o) || isPlainArrowOverlay(o)) {\r\n        return o.draw(component, paintStyle, absolutePosition);\r\n      } else {\r\n        throw \"Could not draw overlay of type [\" + o.type + \"]\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"updateLabel\",\r\n    value: function updateLabel(o) {\r\n      if (isFunction(o.label)) {\r\n        var lt = o.label(this);\r\n        if (lt != null) {\r\n          getLabelElement(o).innerText = lt;\r\n        } else {\r\n          getLabelElement(o).innerText = \"\";\r\n        }\r\n      } else {\r\n        if (o.labelText == null) {\r\n          o.labelText = o.label;\r\n          if (o.labelText != null) {\r\n            getLabelElement(o).innerText = o.labelText;\r\n          } else {\r\n            getLabelElement(o).innerText = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setHover\",\r\n    value: function setHover(component, hover) {\r\n      component._hover = hover;\r\n      if (component instanceof Endpoint && component.endpoint != null) {\r\n        this.setEndpointHover(component, hover, -1);\r\n      } else if (component instanceof Connection && component.connector != null) {\r\n        this.setConnectorHover(component.connector, hover);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"paintConnector\",\r\n    value: function paintConnector(connector, paintStyle, extents) {\r\n      paintSvgConnector(this, connector, paintStyle, extents);\r\n    }\r\n  }, {\r\n    key: \"setConnectorHover\",\r\n    value: function setConnectorHover(connector, hover, sourceEndpoint) {\r\n      if (hover === false || !this.currentlyDragging && !this.isHoverSuspended()) {\r\n        var canvas = connector.canvas;\r\n        if (canvas != null) {\r\n          if (connector.hoverClass != null) {\r\n            if (hover) {\r\n              this.addClass(canvas, connector.hoverClass);\r\n            } else {\r\n              this.removeClass(canvas, connector.hoverClass);\r\n            }\r\n          }\r\n          if (hover) {\r\n            this.addClass(canvas, this.hoverClass);\r\n          } else {\r\n            this.removeClass(canvas, this.hoverClass);\r\n          }\r\n        }\r\n        if (connector.connection.hoverPaintStyle != null) {\r\n          connector.connection.paintStyleInUse = hover ? connector.connection.hoverPaintStyle : connector.connection.paintStyle;\r\n          if (!this._suspendDrawing) {\r\n            this._paintConnection(connector.connection);\r\n          }\r\n        }\r\n        if (connector.connection.endpoints[0] !== sourceEndpoint) {\r\n          this.setEndpointHover(connector.connection.endpoints[0], hover, 0, true);\r\n        }\r\n        if (connector.connection.endpoints[1] !== sourceEndpoint) {\r\n          this.setEndpointHover(connector.connection.endpoints[1], hover, 1, true);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"destroyConnector\",\r\n    value: function destroyConnector(connection) {\r\n      if (connection.connector != null) {\r\n        cleanup(connection.connector);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"addConnectorClass\",\r\n    value: function addConnectorClass(connector, clazz) {\r\n      if (connector.canvas) {\r\n        this.addClass(connector.canvas, clazz);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeConnectorClass\",\r\n    value: function removeConnectorClass(connector, clazz) {\r\n      if (connector.canvas) {\r\n        this.removeClass(connector.canvas, clazz);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getConnectorClass\",\r\n    value: function getConnectorClass(connector) {\r\n      if (connector.canvas) {\r\n        return connector.canvas.className.baseVal;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setConnectorVisible\",\r\n    value: function setConnectorVisible(connector, v) {\r\n      setVisible(connector, v);\r\n    }\r\n  }, {\r\n    key: \"applyConnectorType\",\r\n    value: function applyConnectorType(connector, t) {\r\n      if (connector.canvas && t.cssClass) {\r\n        var classes = Array.isArray(t.cssClass) ? t.cssClass : [t.cssClass];\r\n        this.addClass(connector.canvas, classes.join(\" \"));\r\n      }\r\n    }\r\n  }, {\r\n    key: \"addEndpointClass\",\r\n    value: function addEndpointClass(ep, c) {\r\n      var canvas = getEndpointCanvas(ep.endpoint);\r\n      if (canvas != null) {\r\n        this.addClass(canvas, c);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"applyEndpointType\",\r\n    value: function applyEndpointType(ep, t) {\r\n      if (t.cssClass) {\r\n        var canvas = getEndpointCanvas(ep.endpoint);\r\n        if (canvas) {\r\n          var classes = Array.isArray(t.cssClass) ? t.cssClass : [t.cssClass];\r\n          this.addClass(canvas, classes.join(\" \"));\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"destroyEndpoint\",\r\n    value: function destroyEndpoint(ep) {\r\n      var anchorClass = this.endpointAnchorClassPrefix + (ep.currentAnchorClass ? \"-\" + ep.currentAnchorClass : \"\");\r\n      this.removeClass(ep.element, anchorClass);\r\n      cleanup(ep.endpoint);\r\n    }\r\n  }, {\r\n    key: \"renderEndpoint\",\r\n    value: function renderEndpoint(ep, paintStyle) {\r\n      var renderer = endpointMap[ep.endpoint.type];\r\n      if (renderer != null) {\r\n        SvgEndpoint.paint(ep.endpoint, renderer, paintStyle);\r\n      } else {\r\n        log(\"jsPlumb: no endpoint renderer found for type [\" + ep.endpoint.type + \"]\");\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeEndpointClass\",\r\n    value: function removeEndpointClass(ep, c) {\r\n      var canvas = getEndpointCanvas(ep.endpoint);\r\n      if (canvas != null) {\r\n        this.removeClass(canvas, c);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getEndpointClass\",\r\n    value: function getEndpointClass(ep) {\r\n      var canvas = getEndpointCanvas(ep.endpoint);\r\n      if (canvas != null) {\r\n        return canvas.className;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setEndpointHover\",\r\n    value: function setEndpointHover(endpoint, hover, endpointIndex, doNotCascade) {\r\n      if (endpoint != null && (hover === false || !this.currentlyDragging && !this.isHoverSuspended())) {\r\n        var canvas = getEndpointCanvas(endpoint.endpoint);\r\n        if (canvas != null) {\r\n          if (endpoint.hoverClass != null) {\r\n            if (hover) {\r\n              this.addClass(canvas, endpoint.hoverClass);\r\n            } else {\r\n              this.removeClass(canvas, endpoint.hoverClass);\r\n            }\r\n          }\r\n          if (endpointIndex === 0 || endpointIndex === 1) {\r\n            var genericHoverClass = endpointIndex === 0 ? this.hoverSourceClass : this.hoverTargetClass;\r\n            if (hover) {\r\n              this.addClass(canvas, genericHoverClass);\r\n            } else {\r\n              this.removeClass(canvas, genericHoverClass);\r\n            }\r\n          }\r\n        }\r\n        if (endpoint.hoverPaintStyle != null) {\r\n          endpoint.paintStyleInUse = hover ? endpoint.hoverPaintStyle : endpoint.paintStyle;\r\n          if (!this._suspendDrawing) {\r\n            this.renderEndpoint(endpoint, endpoint.paintStyleInUse);\r\n          }\r\n        }\r\n        if (!doNotCascade) {\r\n          for (var i = 0; i < endpoint.connections.length; i++) {\r\n            this.setConnectorHover(endpoint.connections[i].connector, hover, endpoint);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"setEndpointVisible\",\r\n    value: function setEndpointVisible(ep, v) {\r\n      setVisible(ep.endpoint, v);\r\n    }\r\n  }, {\r\n    key: \"setGroupVisible\",\r\n    value: function setGroupVisible(group, state) {\r\n      var m = group.el.querySelectorAll(SELECTOR_MANAGED_ELEMENT);\r\n      for (var i = 0; i < m.length; i++) {\r\n        if (state) {\r\n          this.show(m[i], true);\r\n        } else {\r\n          this.hide(m[i], true);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"deleteConnection\",\r\n    value: function deleteConnection(connection, params) {\r\n      if (connection != null && connection.deleted !== true) {\r\n        if (connection.endpoints[0].deleted !== true) {\r\n          this.setEndpointHover(connection.endpoints[0], false, 0, true);\r\n        }\r\n        if (connection.endpoints[1].deleted !== true) {\r\n          this.setEndpointHover(connection.endpoints[1], false, 1, true);\r\n        }\r\n        return _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"deleteConnection\", this).call(this, connection, params);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"addSourceSelector\",\r\n    value: function addSourceSelector(selector, params, exclude) {\r\n      this.addDragFilter(selector);\r\n      return _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"addSourceSelector\", this).call(this, selector, params, exclude);\r\n    }\r\n  }, {\r\n    key: \"removeSourceSelector\",\r\n    value: function removeSourceSelector(selector) {\r\n      this.removeDragFilter(selector.selector);\r\n      _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"removeSourceSelector\", this).call(this, selector);\r\n    }\r\n  }, {\r\n    key: \"manage\",\r\n    value: function manage(element, internalId, _recalc) {\r\n      if (this.containerType === ElementTypes.SVG && !isSVGElement(element)) {\r\n        throw new Error(\"ERROR: cannot manage non-svg element when container is an SVG element.\");\r\n      }\r\n      var managedElement = _get(_getPrototypeOf(BrowserJsPlumbInstance.prototype), \"manage\", this).call(this, element, internalId, _recalc);\r\n      if (managedElement != null) {\r\n        if (this._resizeObserver != null) {\r\n          this._resizeObserver.observe(managedElement.el);\r\n        }\r\n      }\r\n      return managedElement;\r\n    }\r\n  }]);\r\n  return BrowserJsPlumbInstance;\r\n}(JsPlumbInstance);\r\n\r\nvar CIRCLE = \"circle\";\r\nvar register$2 = function register() {\r\n  registerEndpointRenderer(DotEndpoint.type, {\r\n    makeNode: function makeNode(ep, style) {\r\n      return _node(CIRCLE, {\r\n        \"cx\": ep.w / 2,\r\n        \"cy\": ep.h / 2,\r\n        \"r\": ep.radius\r\n      });\r\n    },\r\n    updateNode: function updateNode(ep, node) {\r\n      _attr(node, {\r\n        \"cx\": \"\" + ep.w / 2,\r\n        \"cy\": \"\" + ep.h / 2,\r\n        \"r\": \"\" + ep.radius\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nvar RectangleEndpoint = function (_EndpointRepresentati) {\r\n  _inherits(RectangleEndpoint, _EndpointRepresentati);\r\n  var _super = _createSuper(RectangleEndpoint);\r\n  function RectangleEndpoint(endpoint, params) {\r\n    var _this;\r\n    _classCallCheck(this, RectangleEndpoint);\r\n    _this = _super.call(this, endpoint, params);\r\n    _defineProperty(_assertThisInitialized(_this), \"width\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"height\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", RectangleEndpoint.type);\r\n    params = params || {};\r\n    _this.width = params.width || 10;\r\n    _this.height = params.height || 10;\r\n    return _this;\r\n  }\r\n  _createClass(RectangleEndpoint, null, [{\r\n    key: \"_getParams\",\r\n    value: function _getParams(ep) {\r\n      return {\r\n        width: ep.width,\r\n        height: ep.height\r\n      };\r\n    }\r\n  }]);\r\n  return RectangleEndpoint;\r\n}(EndpointRepresentation);\r\n_defineProperty(RectangleEndpoint, \"type\", \"Rectangle\");\r\nvar RectangleEndpointHandler = {\r\n  type: RectangleEndpoint.type,\r\n  cls: RectangleEndpoint,\r\n  compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\r\n    var width = endpointStyle.width || ep.width,\r\n        height = endpointStyle.height || ep.height,\r\n        x = anchorPoint.curX - width / 2,\r\n        y = anchorPoint.curY - height / 2;\r\n    ep.x = x;\r\n    ep.y = y;\r\n    ep.w = width;\r\n    ep.h = height;\r\n    return [x, y, width, height];\r\n  },\r\n  getParams: function getParams(ep) {\r\n    return {\r\n      width: ep.width,\r\n      height: ep.height\r\n    };\r\n  }\r\n};\r\n\r\nvar RECT = \"rect\";\r\nvar register$1 = function register() {\r\n  registerEndpointRenderer(RectangleEndpoint.type, {\r\n    makeNode: function makeNode(ep, style) {\r\n      return _node(RECT, {\r\n        \"width\": ep.w,\r\n        \"height\": ep.h\r\n      });\r\n    },\r\n    updateNode: function updateNode(ep, node) {\r\n      _attr(node, {\r\n        \"width\": ep.w,\r\n        \"height\": ep.h\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nvar BlankEndpoint = function (_EndpointRepresentati) {\r\n  _inherits(BlankEndpoint, _EndpointRepresentati);\r\n  var _super = _createSuper(BlankEndpoint);\r\n  function BlankEndpoint(endpoint, params) {\r\n    var _this;\r\n    _classCallCheck(this, BlankEndpoint);\r\n    _this = _super.call(this, endpoint, params);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", BlankEndpoint.type);\r\n    return _this;\r\n  }\r\n  return BlankEndpoint;\r\n}(EndpointRepresentation);\r\n_defineProperty(BlankEndpoint, \"type\", \"Blank\");\r\nvar BlankEndpointHandler = {\r\n  type: BlankEndpoint.type,\r\n  cls: BlankEndpoint,\r\n  compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\r\n    ep.x = anchorPoint.curX;\r\n    ep.y = anchorPoint.curY;\r\n    ep.w = 10;\r\n    ep.h = 0;\r\n    return [anchorPoint.curX, anchorPoint.curY, 10, 0];\r\n  },\r\n  getParams: function getParams(ep) {\r\n    return {};\r\n  }\r\n};\r\n\r\nvar BLANK_ATTRIBUTES = {\r\n  \"width\": 10,\r\n  \"height\": 0,\r\n  \"fill\": \"transparent\",\r\n  \"stroke\": \"transparent\"\r\n};\r\nvar register = function register() {\r\n  registerEndpointRenderer(BlankEndpoint.type, {\r\n    makeNode: function makeNode(ep, style) {\r\n      return _node(\"rect\", BLANK_ATTRIBUTES);\r\n    },\r\n    updateNode: function updateNode(ep, node) {\r\n      _attr(node, BLANK_ATTRIBUTES);\r\n    }\r\n  });\r\n};\r\n\r\nregister$2();\r\nregister();\r\nregister$1();\r\n\r\nvar SupportedEdge;\r\n(function (SupportedEdge) {\r\n  SupportedEdge[SupportedEdge[\"top\"] = 0] = \"top\";\r\n  SupportedEdge[SupportedEdge[\"bottom\"] = 1] = \"bottom\";\r\n})(SupportedEdge || (SupportedEdge = {}));\r\nvar DEFAULT_ANCHOR_LOCATIONS = new Map();\r\nDEFAULT_ANCHOR_LOCATIONS.set(SupportedEdge.top, [AnchorLocations.TopRight, AnchorLocations.TopLeft]);\r\nDEFAULT_ANCHOR_LOCATIONS.set(SupportedEdge.bottom, [AnchorLocations.BottomRight, AnchorLocations.BottomLeft]);\r\nvar DEFAULT_LIST_OPTIONS = {\r\n  deriveAnchor: function deriveAnchor(edge, index, ep, conn) {\r\n    return DEFAULT_ANCHOR_LOCATIONS.get(edge)[index];\r\n  }\r\n};\r\nvar ATTR_SCROLLABLE_LIST = \"jtk-scrollable-list\";\r\nvar SELECTOR_SCROLLABLE_LIST = att(ATTR_SCROLLABLE_LIST);\r\nvar EVENT_SCROLL = \"scroll\";\r\n\r\nvar JsPlumbListManager = function () {\r\n  function JsPlumbListManager(instance, params) {\r\n    var _this = this;\r\n    _classCallCheck(this, JsPlumbListManager);\r\n    this.instance = instance;\r\n    _defineProperty(this, \"options\", void 0);\r\n    _defineProperty(this, \"count\", void 0);\r\n    _defineProperty(this, \"lists\", void 0);\r\n    this.count = 0;\r\n    this.lists = {};\r\n    this.options = params || {};\r\n    this.instance.bind(EVENT_MANAGE_ELEMENT, function (p) {\r\n      var scrollableLists = _this.instance.getSelector(p.el, SELECTOR_SCROLLABLE_LIST);\r\n      for (var i = 0; i < scrollableLists.length; i++) {\r\n        _this.addList(scrollableLists[i]);\r\n      }\r\n    });\r\n    this.instance.bind(EVENT_UNMANAGE_ELEMENT, function (p) {\r\n      _this.removeList(p.el);\r\n    });\r\n    this.instance.bind(EVENT_CONNECTION, function (params, evt) {\r\n      if (evt == null) {\r\n        var targetParent = _this.findParentList(params.target);\r\n        if (targetParent != null) {\r\n          targetParent.newConnection(params.connection, params.target, 1);\r\n        }\r\n        var sourceParent = _this.findParentList(params.source);\r\n        if (sourceParent != null) {\r\n          sourceParent.newConnection(params.connection, params.source, 0);\r\n        }\r\n      }\r\n    });\r\n    this.instance.bind(INTERCEPT_BEFORE_DROP, function (p) {\r\n      var el = p.dropEndpoint.element;\r\n      var dropList = _this.findParentList(el);\r\n      return dropList == null || el.offsetTop >= dropList.domElement.scrollTop && el.offsetTop + el.offsetHeight <= dropList.domElement.scrollTop + dropList.domElement.offsetHeight;\r\n    });\r\n  }\r\n  _createClass(JsPlumbListManager, [{\r\n    key: \"addList\",\r\n    value: function addList(el, options) {\r\n      var dp = extend({}, DEFAULT_LIST_OPTIONS);\r\n      extend(dp, this.options);\r\n      options = extend(dp, options || {});\r\n      var id = [this.instance._instanceIndex, this.count++].join(\"_\");\r\n      this.lists[id] = new JsPlumbList(this.instance, el, options, id);\r\n      return this.lists[id];\r\n    }\r\n  }, {\r\n    key: \"getList\",\r\n    value: function getList(el) {\r\n      var listId = this.instance.getAttribute(el, ATTR_SCROLLABLE_LIST);\r\n      if (listId != null) {\r\n        return this.lists[listId];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"removeList\",\r\n    value: function removeList(el) {\r\n      var list = this.getList(el);\r\n      if (list) {\r\n        list.destroy();\r\n        delete this.lists[list.id];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"findParentList\",\r\n    value: function findParentList(el) {\r\n      var parent = el.parentNode,\r\n          container = this.instance.getContainer(),\r\n          parentList;\r\n      while (parent != null && parent !== container && parent !== document) {\r\n        parentList = this.getList(parent);\r\n        if (parentList != null) {\r\n          return parentList;\r\n        }\r\n        parent = parent.parentNode;\r\n      }\r\n    }\r\n  }]);\r\n  return JsPlumbListManager;\r\n}();\r\nvar JsPlumbList = function () {\r\n  function JsPlumbList(instance, el, options, id) {\r\n    _classCallCheck(this, JsPlumbList);\r\n    this.instance = instance;\r\n    this.el = el;\r\n    this.options = options;\r\n    this.id = id;\r\n    _defineProperty(this, \"_scrollHandler\", void 0);\r\n    _defineProperty(this, \"domElement\", void 0);\r\n    _defineProperty(this, \"elId\", void 0);\r\n    this.domElement = el;\r\n    this.elId = this.instance.getId(el);\r\n    instance.setAttribute(el, ATTR_SCROLLABLE_LIST, id);\r\n    this._scrollHandler = this.scrollHandler.bind(this);\r\n    this.domElement._jsPlumbScrollHandler = this._scrollHandler;\r\n    instance.on(el, EVENT_SCROLL, this._scrollHandler);\r\n    this._scrollHandler();\r\n  }\r\n  _createClass(JsPlumbList, [{\r\n    key: \"deriveAnchor\",\r\n    value: function deriveAnchor(edge, index, ep, conn) {\r\n      return this.options.anchor ? this.options.anchor : this.options.deriveAnchor(edge, index, ep, conn);\r\n    }\r\n  }, {\r\n    key: \"deriveEndpoint\",\r\n    value: function deriveEndpoint(edge, index, ep, conn) {\r\n      return this.options.deriveEndpoint ? this.options.deriveEndpoint(edge, index, ep, conn) : this.options.endpoint ? this.options.endpoint : ep.endpoint.type;\r\n    }\r\n  }, {\r\n    key: \"newConnection\",\r\n    value: function newConnection(c, el, index) {\r\n      if (el.offsetTop < this.el.scrollTop) {\r\n        this._proxyConnection(el, c, index, SupportedEdge.top);\r\n      } else if (el.offsetTop + el.offsetHeight > this.el.scrollTop + this.domElement.offsetHeight) {\r\n        this._proxyConnection(el, c, index, SupportedEdge.bottom);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"scrollHandler\",\r\n    value: function scrollHandler() {\r\n      var _this2 = this;\r\n      var children = this.instance.getSelector(this.el, SELECTOR_MANAGED_ELEMENT);\r\n      var _loop = function _loop(i) {\r\n        if (children[i].offsetTop < _this2.el.scrollTop) {\r\n          children[i]._jsPlumbProxies = children[i]._jsPlumbProxies || [];\r\n          _this2.instance.select({\r\n            source: children[i]\r\n          }).each(function (c) {\r\n            _this2._proxyConnection(children[i], c, 0, SupportedEdge.top);\r\n          });\r\n          _this2.instance.select({\r\n            target: children[i]\r\n          }).each(function (c) {\r\n            _this2._proxyConnection(children[i], c, 1, SupportedEdge.top);\r\n          });\r\n        }\r\n        else if (children[i].offsetTop + children[i].offsetHeight > _this2.el.scrollTop + _this2.domElement.offsetHeight) {\r\n          children[i]._jsPlumbProxies = children[i]._jsPlumbProxies || [];\r\n          _this2.instance.select({\r\n            source: children[i]\r\n          }).each(function (c) {\r\n            _this2._proxyConnection(children[i], c, 0, SupportedEdge.bottom);\r\n          });\r\n          _this2.instance.select({\r\n            target: children[i]\r\n          }).each(function (c) {\r\n            _this2._proxyConnection(children[i], c, 1, SupportedEdge.bottom);\r\n          });\r\n        } else if (children[i]._jsPlumbProxies) {\r\n          for (var j = 0; j < children[i]._jsPlumbProxies.length; j++) {\r\n            _this2.instance.unproxyConnection(children[i]._jsPlumbProxies[j][0], children[i]._jsPlumbProxies[j][1]);\r\n          }\r\n          delete children[i]._jsPlumbProxies;\r\n        }\r\n        _this2.instance.revalidate(children[i]);\r\n      };\r\n      for (var i = 0; i < children.length; i++) {\r\n        _loop(i);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_proxyConnection\",\r\n    value: function _proxyConnection(el, conn, index, edge) {\r\n      var _this3 = this;\r\n      this.instance.proxyConnection(conn, index, this.domElement, function (c, index) {\r\n        return _this3.deriveEndpoint(edge, index, conn.endpoints[index], conn);\r\n      }, function (c, index) {\r\n        return _this3.deriveAnchor(edge, index, conn.endpoints[index], conn);\r\n      });\r\n      el._jsPlumbProxies = el._jsPlumbProxies || [];\r\n      el._jsPlumbProxies.push([conn, index]);\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.instance.off(this.el, EVENT_SCROLL, this._scrollHandler);\r\n      delete this.domElement._jsPlumbScrollHandler;\r\n      var children = this.instance.getSelector(this.el, SELECTOR_MANAGED_ELEMENT);\r\n      for (var i = 0; i < children.length; i++) {\r\n        if (children[i]._jsPlumbProxies) {\r\n          for (var j = 0; j < children[i]._jsPlumbProxies.length; j++) {\r\n            this.instance.unproxyConnection(children[i]._jsPlumbProxies[j][0], children[i]._jsPlumbProxies[j][1]);\r\n          }\r\n          delete children[i]._jsPlumbProxies;\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n  return JsPlumbList;\r\n}();\r\n\r\nvar VERY_SMALL_VALUE = 0.0000000001;\r\nfunction gentleRound(n) {\r\n  var f = Math.floor(n),\r\n      r = Math.ceil(n);\r\n  if (n - f < VERY_SMALL_VALUE) {\r\n    return f;\r\n  } else if (r - n < VERY_SMALL_VALUE) {\r\n    return r;\r\n  }\r\n  return n;\r\n}\r\nvar ArcSegment = function (_AbstractSegment) {\r\n  _inherits(ArcSegment, _AbstractSegment);\r\n  var _super = _createSuper(ArcSegment);\r\n  function ArcSegment(params) {\r\n    var _this;\r\n    _classCallCheck(this, ArcSegment);\r\n    _this = _super.call(this, params);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", ArcSegment.segmentType);\r\n    _defineProperty(_assertThisInitialized(_this), \"cx\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cy\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"radius\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"anticlockwise\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"startAngle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"endAngle\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"sweep\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"circumference\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"frac\", void 0);\r\n    _this.cx = params.cx;\r\n    _this.cy = params.cy;\r\n    _this.radius = params.r;\r\n    _this.anticlockwise = params.ac;\r\n    if (params.startAngle && params.endAngle) {\r\n      _this.startAngle = params.startAngle;\r\n      _this.endAngle = params.endAngle;\r\n      _this.x1 = _this.cx + _this.radius * Math.cos(_this.startAngle);\r\n      _this.y1 = _this.cy + _this.radius * Math.sin(_this.startAngle);\r\n      _this.x2 = _this.cx + _this.radius * Math.cos(_this.endAngle);\r\n      _this.y2 = _this.cy + _this.radius * Math.sin(_this.endAngle);\r\n    } else {\r\n      _this.startAngle = _this._calcAngle(_this.x1, _this.y1);\r\n      _this.endAngle = _this._calcAngle(_this.x2, _this.y2);\r\n    }\r\n    if (_this.endAngle < 0) {\r\n      _this.endAngle += TWO_PI;\r\n    }\r\n    if (_this.startAngle < 0) {\r\n      _this.startAngle += TWO_PI;\r\n    }\r\n    var ea = _this.endAngle < _this.startAngle ? _this.endAngle + TWO_PI : _this.endAngle;\r\n    _this.sweep = Math.abs(ea - _this.startAngle);\r\n    if (_this.anticlockwise) {\r\n      _this.sweep = TWO_PI - _this.sweep;\r\n    }\r\n    _this.circumference = 2 * Math.PI * _this.radius;\r\n    _this.frac = _this.sweep / TWO_PI;\r\n    _this.length = _this.circumference * _this.frac;\r\n    _this.extents = {\r\n      xmin: _this.cx - _this.radius,\r\n      xmax: _this.cx + _this.radius,\r\n      ymin: _this.cy - _this.radius,\r\n      ymax: _this.cy + _this.radius\r\n    };\r\n    return _this;\r\n  }\r\n  _createClass(ArcSegment, [{\r\n    key: \"_calcAngle\",\r\n    value: function _calcAngle(_x, _y) {\r\n      return theta({\r\n        x: this.cx,\r\n        y: this.cy\r\n      }, {\r\n        x: _x,\r\n        y: _y\r\n      });\r\n    }\r\n  }, {\r\n    key: \"_calcAngleForLocation\",\r\n    value: function _calcAngleForLocation(segment, location) {\r\n      if (segment.anticlockwise) {\r\n        var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle,\r\n            s = Math.abs(sa - segment.endAngle);\r\n        return sa - s * location;\r\n      } else {\r\n        var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle,\r\n            ss = Math.abs(ea - segment.startAngle);\r\n        return segment.startAngle + ss * location;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getPath\",\r\n    value: function getPath(isFirstSegment) {\r\n      var laf = this.sweep > Math.PI ? 1 : 0,\r\n          sf = this.anticlockwise ? 0 : 1;\r\n      return (isFirstSegment ? \"M\" + this.x1 + \" \" + this.y1 + \" \" : \"\") + \"A \" + this.radius + \" \" + this.radius + \" 0 \" + laf + \",\" + sf + \" \" + this.x2 + \" \" + this.y2;\r\n    }\r\n  }, {\r\n    key: \"getLength\",\r\n    value: function getLength() {\r\n      return this.length;\r\n    }\r\n  }, {\r\n    key: \"pointOnPath\",\r\n    value: function pointOnPath(location, absolute) {\r\n      if (location === 0) {\r\n        return {\r\n          x: this.x1,\r\n          y: this.y1,\r\n          theta: this.startAngle\r\n        };\r\n      } else if (location === 1) {\r\n        return {\r\n          x: this.x2,\r\n          y: this.y2,\r\n          theta: this.endAngle\r\n        };\r\n      }\r\n      if (absolute) {\r\n        location = location / length;\r\n      }\r\n      var angle = this._calcAngleForLocation(this, location),\r\n          _x = this.cx + this.radius * Math.cos(angle),\r\n          _y = this.cy + this.radius * Math.sin(angle);\r\n      return {\r\n        x: gentleRound(_x),\r\n        y: gentleRound(_y),\r\n        theta: angle\r\n      };\r\n    }\r\n  }, {\r\n    key: \"gradientAtPoint\",\r\n    value: function gradientAtPoint(location, absolute) {\r\n      var p = this.pointOnPath(location, absolute);\r\n      var m = normal({\r\n        x: this.cx,\r\n        y: this.cy\r\n      }, p);\r\n      if (!this.anticlockwise && (m === Infinity || m === -Infinity)) {\r\n        m *= -1;\r\n      }\r\n      return m;\r\n    }\r\n  }, {\r\n    key: \"pointAlongPathFrom\",\r\n    value: function pointAlongPathFrom(location, distance, absolute) {\r\n      var p = this.pointOnPath(location, absolute),\r\n          arcSpan = distance / this.circumference * 2 * Math.PI,\r\n          dir = this.anticlockwise ? -1 : 1,\r\n          startAngle = p.theta + dir * arcSpan,\r\n          startX = this.cx + this.radius * Math.cos(startAngle),\r\n          startY = this.cy + this.radius * Math.sin(startAngle);\r\n      return {\r\n        x: startX,\r\n        y: startY\r\n      };\r\n    }\r\n  }]);\r\n  return ArcSegment;\r\n}(AbstractSegment);\r\n_defineProperty(ArcSegment, \"segmentType\", \"Arc\");\r\n\r\nvar AbstractBezierConnector = function (_AbstractConnector) {\r\n  _inherits(AbstractBezierConnector, _AbstractConnector);\r\n  var _super = _createSuper(AbstractBezierConnector);\r\n  function AbstractBezierConnector(connection, params) {\r\n    var _this;\r\n    _classCallCheck(this, AbstractBezierConnector);\r\n    _this = _super.call(this, connection, params);\r\n    _this.connection = connection;\r\n    _defineProperty(_assertThisInitialized(_this), \"showLoopback\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"curviness\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"margin\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"proximityLimit\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"orientation\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"loopbackRadius\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"clockwise\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"isLoopbackCurrently\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"geometry\", null);\r\n    params = params || {};\r\n    _this.showLoopback = params.showLoopback !== false;\r\n    _this.curviness = params.curviness || 10;\r\n    _this.margin = params.margin || 5;\r\n    _this.proximityLimit = params.proximityLimit || 80;\r\n    _this.clockwise = params.orientation && params.orientation === \"clockwise\";\r\n    _this.loopbackRadius = params.loopbackRadius || 25;\r\n    _this.isLoopbackCurrently = false;\r\n    return _this;\r\n  }\r\n  _createClass(AbstractBezierConnector, [{\r\n    key: \"getDefaultStubs\",\r\n    value: function getDefaultStubs() {\r\n      return [0, 0];\r\n    }\r\n  }, {\r\n    key: \"_compute\",\r\n    value: function _compute(paintInfo, p) {\r\n      var sp = p.sourcePos,\r\n          tp = p.targetPos,\r\n          _w = Math.abs(sp.curX - tp.curX),\r\n          _h = Math.abs(sp.curY - tp.curY);\r\n      if (!this.showLoopback || p.sourceEndpoint.elementId !== p.targetEndpoint.elementId) {\r\n        this.isLoopbackCurrently = false;\r\n        this._computeBezier(paintInfo, p, sp, tp, _w, _h);\r\n      } else {\r\n        this.isLoopbackCurrently = true;\r\n        var x1 = p.sourcePos.curX,\r\n            y1 = p.sourcePos.curY - this.margin,\r\n            cx = x1,\r\n            cy = y1 - this.loopbackRadius,\r\n        _x = cx - this.loopbackRadius,\r\n            _y = cy - this.loopbackRadius;\r\n        _w = 2 * this.loopbackRadius;\r\n        _h = 2 * this.loopbackRadius;\r\n        paintInfo.points[0] = _x;\r\n        paintInfo.points[1] = _y;\r\n        paintInfo.points[2] = _w;\r\n        paintInfo.points[3] = _h;\r\n        this._addSegment(ArcSegment, {\r\n          loopback: true,\r\n          x1: x1 - _x + 4,\r\n          y1: y1 - _y,\r\n          startAngle: 0,\r\n          endAngle: 2 * Math.PI,\r\n          r: this.loopbackRadius,\r\n          ac: !this.clockwise,\r\n          x2: x1 - _x - 4,\r\n          y2: y1 - _y,\r\n          cx: cx - _x,\r\n          cy: cy - _y\r\n        });\r\n      }\r\n    }\r\n  }, {\r\n    key: \"exportGeometry\",\r\n    value: function exportGeometry() {\r\n      if (this.geometry == null) {\r\n        return null;\r\n      } else {\r\n        return {\r\n          controlPoints: [extend({}, this.geometry.controlPoints[0]), extend({}, this.geometry.controlPoints[1])],\r\n          source: extend({}, this.geometry.source),\r\n          target: extend({}, this.geometry.target)\r\n        };\r\n      }\r\n    }\r\n  }, {\r\n    key: \"transformGeometry\",\r\n    value: function transformGeometry(g, dx, dy) {\r\n      return {\r\n        controlPoints: [{\r\n          x: g.controlPoints[0].x + dx,\r\n          y: g.controlPoints[0].y + dy\r\n        }, {\r\n          x: g.controlPoints[1].x + dx,\r\n          y: g.controlPoints[1].y + dy\r\n        }],\r\n        source: this.transformAnchorPlacement(g.source, dx, dy),\r\n        target: this.transformAnchorPlacement(g.target, dx, dy)\r\n      };\r\n    }\r\n  }, {\r\n    key: \"importGeometry\",\r\n    value: function importGeometry(geometry) {\r\n      if (geometry != null) {\r\n        if (geometry.controlPoints == null || geometry.controlPoints.length != 2) {\r\n          log(\"jsPlumb Bezier: cannot import geometry; controlPoints missing or does not have length 2\");\r\n          this.setGeometry(null, true);\r\n          return false;\r\n        }\r\n        if (geometry.controlPoints[0].x == null || geometry.controlPoints[0].y == null || geometry.controlPoints[1].x == null || geometry.controlPoints[1].y == null) {\r\n          log(\"jsPlumb Bezier: cannot import geometry; controlPoints malformed\");\r\n          this.setGeometry(null, true);\r\n          return false;\r\n        }\r\n        if (geometry.source == null || geometry.source.curX == null || geometry.source.curY == null) {\r\n          log(\"jsPlumb Bezier: cannot import geometry; source missing or malformed\");\r\n          this.setGeometry(null, true);\r\n          return false;\r\n        }\r\n        if (geometry.target == null || geometry.target.curX == null || geometry.target.curY == null) {\r\n          log(\"jsPlumb Bezier: cannot import geometry; target missing or malformed\");\r\n          this.setGeometry(null, true);\r\n          return false;\r\n        }\r\n        this.setGeometry(geometry, false);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }]);\r\n  return AbstractBezierConnector;\r\n}(AbstractConnector);\r\n\r\nvar Vectors = {\r\n  subtract: function subtract(v1, v2) {\r\n    return {\r\n      x: v1.x - v2.x,\r\n      y: v1.y - v2.y\r\n    };\r\n  },\r\n  dotProduct: function dotProduct(v1, v2) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n  },\r\n  square: function square(v) {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y);\r\n  },\r\n  scale: function scale(v, s) {\r\n    return {\r\n      x: v.x * s,\r\n      y: v.y * s\r\n    };\r\n  }\r\n};\r\nvar maxRecursion = 64;\r\nvar flatnessTolerance = Math.pow(2.0, -maxRecursion - 1);\r\nfunction distanceFromCurve(point, curve) {\r\n  var candidates = [],\r\n      w = _convertToBezier(point, curve),\r\n      degree = curve.length - 1,\r\n      higherDegree = 2 * degree - 1,\r\n      numSolutions = _findRoots(w, higherDegree, candidates, 0),\r\n      v = Vectors.subtract(point, curve[0]),\r\n      dist = Vectors.square(v),\r\n      t = 0.0,\r\n      newDist;\r\n  for (var i = 0; i < numSolutions; i++) {\r\n    v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\r\n    newDist = Vectors.square(v);\r\n    if (newDist < dist) {\r\n      dist = newDist;\r\n      t = candidates[i];\r\n    }\r\n  }\r\n  v = Vectors.subtract(point, curve[degree]);\r\n  newDist = Vectors.square(v);\r\n  if (newDist < dist) {\r\n    dist = newDist;\r\n    t = 1.0;\r\n  }\r\n  return {\r\n    location: t,\r\n    distance: dist\r\n  };\r\n}\r\nfunction nearestPointOnCurve(point, curve) {\r\n  var td = distanceFromCurve(point, curve);\r\n  return {\r\n    point: _bezier(curve, curve.length - 1, td.location, null, null),\r\n    location: td.location\r\n  };\r\n}\r\nfunction _convertToBezier(point, curve) {\r\n  var degree = curve.length - 1,\r\n      higherDegree = 2 * degree - 1,\r\n      c = [],\r\n      d = [],\r\n      cdTable = [],\r\n      w = [],\r\n      z = [[1.0, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1.0]];\r\n  for (var i = 0; i <= degree; i++) {\r\n    c[i] = Vectors.subtract(curve[i], point);\r\n  }\r\n  for (var _i = 0; _i <= degree - 1; _i++) {\r\n    d[_i] = Vectors.subtract(curve[_i + 1], curve[_i]);\r\n    d[_i] = Vectors.scale(d[_i], 3.0);\r\n  }\r\n  for (var row = 0; row <= degree - 1; row++) {\r\n    for (var column = 0; column <= degree; column++) {\r\n      if (!cdTable[row]) cdTable[row] = [];\r\n      cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\r\n    }\r\n  }\r\n  for (var _i2 = 0; _i2 <= higherDegree; _i2++) {\r\n    if (!w[_i2]) {\r\n      w[_i2] = [];\r\n    }\r\n    w[_i2].y = 0.0;\r\n    w[_i2].x = parseFloat(\"\" + _i2) / higherDegree;\r\n  }\r\n  var n = degree,\r\n      m = degree - 1;\r\n  for (var k = 0; k <= n + m; k++) {\r\n    var lb = Math.max(0, k - m),\r\n        ub = Math.min(k, n);\r\n    for (var _i3 = lb; _i3 <= ub; _i3++) {\r\n      var j = k - _i3;\r\n      w[_i3 + j].y += cdTable[j][_i3] * z[j][_i3];\r\n    }\r\n  }\r\n  return w;\r\n}\r\nfunction _findRoots(w, degree, t, depth) {\r\n  var left = [],\r\n      right = [],\r\n      left_count,\r\n      right_count,\r\n      left_t = [],\r\n      right_t = [];\r\n  switch (_getCrossingCount(w, degree)) {\r\n    case 0:\r\n      {\r\n        return 0;\r\n      }\r\n    case 1:\r\n      {\r\n        if (depth >= maxRecursion) {\r\n          t[0] = (w[0].x + w[degree].x) / 2.0;\r\n          return 1;\r\n        }\r\n        if (_isFlatEnough(w, degree)) {\r\n          t[0] = _computeXIntercept(w, degree);\r\n          return 1;\r\n        }\r\n        break;\r\n      }\r\n  }\r\n  _bezier(w, degree, 0.5, left, right);\r\n  left_count = _findRoots(left, degree, left_t, depth + 1);\r\n  right_count = _findRoots(right, degree, right_t, depth + 1);\r\n  for (var i = 0; i < left_count; i++) {\r\n    t[i] = left_t[i];\r\n  }\r\n  for (var _i4 = 0; _i4 < right_count; _i4++) {\r\n    t[_i4 + left_count] = right_t[_i4];\r\n  }\r\n  return left_count + right_count;\r\n}\r\nfunction _getCrossingCount(curve, degree) {\r\n  var n_crossings = 0,\r\n      sign,\r\n      old_sign;\r\n  sign = old_sign = sgn$1(curve[0].y);\r\n  for (var i = 1; i <= degree; i++) {\r\n    sign = sgn$1(curve[i].y);\r\n    if (sign != old_sign) n_crossings++;\r\n    old_sign = sign;\r\n  }\r\n  return n_crossings;\r\n}\r\nfunction _isFlatEnough(curve, degree) {\r\n  var error, intercept_1, intercept_2, left_intercept, right_intercept, a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\r\n  a = curve[0].y - curve[degree].y;\r\n  b = curve[degree].x - curve[0].x;\r\n  c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\r\n  var max_distance_above, max_distance_below;\r\n  max_distance_above = max_distance_below = 0.0;\r\n  for (var i = 1; i < degree; i++) {\r\n    var value = a * curve[i].x + b * curve[i].y + c;\r\n    if (value > max_distance_above) {\r\n      max_distance_above = value;\r\n    } else if (value < max_distance_below) {\r\n      max_distance_below = value;\r\n    }\r\n  }\r\n  a1 = 0.0;\r\n  b1 = 1.0;\r\n  c1 = 0.0;\r\n  a2 = a;\r\n  b2 = b;\r\n  c2 = c - max_distance_above;\r\n  det = a1 * b2 - a2 * b1;\r\n  dInv = 1.0 / det;\r\n  intercept_1 = (b1 * c2 - b2 * c1) * dInv;\r\n  a2 = a;\r\n  b2 = b;\r\n  c2 = c - max_distance_below;\r\n  det = a1 * b2 - a2 * b1;\r\n  dInv = 1.0 / det;\r\n  intercept_2 = (b1 * c2 - b2 * c1) * dInv;\r\n  left_intercept = Math.min(intercept_1, intercept_2);\r\n  right_intercept = Math.max(intercept_1, intercept_2);\r\n  error = right_intercept - left_intercept;\r\n  return error < flatnessTolerance ? 1 : 0;\r\n}\r\nfunction _computeXIntercept(curve, degree) {\r\n  var XLK = 1.0,\r\n      YLK = 0.0,\r\n      XNM = curve[degree].x - curve[0].x,\r\n      YNM = curve[degree].y - curve[0].y,\r\n      XMK = curve[0].x - 0.0,\r\n      YMK = curve[0].y - 0.0,\r\n      det = XNM * YLK - YNM * XLK,\r\n      detInv = 1.0 / det,\r\n      S = (XNM * YMK - YNM * XMK) * detInv;\r\n  return 0.0 + XLK * S;\r\n}\r\nfunction _bezier(curve, degree, t, left, right) {\r\n  var temp = [[]];\r\n  for (var j = 0; j <= degree; j++) {\r\n    temp[0][j] = curve[j];\r\n  }\r\n  for (var i = 1; i <= degree; i++) {\r\n    for (var _j = 0; _j <= degree - i; _j++) {\r\n      if (!temp[i]) temp[i] = [];\r\n      if (!temp[i][_j]) temp[i][_j] = {};\r\n      temp[i][_j].x = (1.0 - t) * temp[i - 1][_j].x + t * temp[i - 1][_j + 1].x;\r\n      temp[i][_j].y = (1.0 - t) * temp[i - 1][_j].y + t * temp[i - 1][_j + 1].y;\r\n    }\r\n  }\r\n  if (left != null) {\r\n    for (var _j2 = 0; _j2 <= degree; _j2++) {\r\n      left[_j2] = temp[_j2][0];\r\n    }\r\n  }\r\n  if (right != null) {\r\n    for (var _j3 = 0; _j3 <= degree; _j3++) {\r\n      right[_j3] = temp[degree - _j3][_j3];\r\n    }\r\n  }\r\n  return temp[degree][0];\r\n}\r\nfunction _getLUT(steps, curve) {\r\n  var out = [];\r\n  steps--;\r\n  for (var n = 0; n <= steps; n++) {\r\n    out.push(_computeLookup(n / steps, curve));\r\n  }\r\n  return out;\r\n}\r\nfunction _computeLookup(e, curve) {\r\n  var EMPTY_POINT = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  if (e === 0) {\r\n    return curve[0];\r\n  }\r\n  var degree = curve.length - 1;\r\n  if (e === 1) {\r\n    return curve[degree];\r\n  }\r\n  var o = curve;\r\n  var s = 1 - e;\r\n  if (degree === 0) {\r\n    return curve[0];\r\n  }\r\n  if (degree === 1) {\r\n    return {\r\n      x: s * o[0].x + e * o[1].x,\r\n      y: s * o[0].y + e * o[1].y\r\n    };\r\n  }\r\n  if (4 > degree) {\r\n    var l = s * s,\r\n        h = e * e,\r\n        u = 0,\r\n        m,\r\n        g,\r\n        f;\r\n    if (degree === 2) {\r\n      o = [o[0], o[1], o[2], EMPTY_POINT];\r\n      m = l;\r\n      g = 2 * (s * e);\r\n      f = h;\r\n    } else if (degree === 3) {\r\n      m = l * s;\r\n      g = 3 * (l * e);\r\n      f = 3 * (s * h);\r\n      u = e * h;\r\n    }\r\n    return {\r\n      x: m * o[0].x + g * o[1].x + f * o[2].x + u * o[3].x,\r\n      y: m * o[0].y + g * o[1].y + f * o[2].y + u * o[3].y\r\n    };\r\n  } else {\r\n    return EMPTY_POINT;\r\n  }\r\n}\r\nfunction computeBezierLength(curve) {\r\n  var length = 0;\r\n  if (!isPoint(curve)) {\r\n    var steps = 16;\r\n    var lut = _getLUT(steps, curve);\r\n    for (var i = 0; i < steps - 1; i++) {\r\n      var a = lut[i],\r\n          b = lut[i + 1];\r\n      length += dist(a, b);\r\n    }\r\n  }\r\n  return length;\r\n}\r\nvar _curveFunctionCache = new Map();\r\nfunction _getCurveFunctions(order) {\r\n  var fns = _curveFunctionCache.get(order);\r\n  if (!fns) {\r\n    fns = [];\r\n    var f_term = function f_term() {\r\n      return function (t) {\r\n        return Math.pow(t, order);\r\n      };\r\n    },\r\n        l_term = function l_term() {\r\n      return function (t) {\r\n        return Math.pow(1 - t, order);\r\n      };\r\n    },\r\n        c_term = function c_term(c) {\r\n      return function (t) {\r\n        return c;\r\n      };\r\n    },\r\n        t_term = function t_term() {\r\n      return function (t) {\r\n        return t;\r\n      };\r\n    },\r\n        one_minus_t_term = function one_minus_t_term() {\r\n      return function (t) {\r\n        return 1 - t;\r\n      };\r\n    },\r\n        _termFunc = function _termFunc(terms) {\r\n      return function (t) {\r\n        var p = 1;\r\n        for (var i = 0; i < terms.length; i++) {\r\n          p = p * terms[i](t);\r\n        }\r\n        return p;\r\n      };\r\n    };\r\n    fns.push(f_term());\r\n    for (var i = 1; i < order; i++) {\r\n      var terms = [c_term(order)];\r\n      for (var j = 0; j < order - i; j++) {\r\n        terms.push(t_term());\r\n      }\r\n      for (var _j4 = 0; _j4 < i; _j4++) {\r\n        terms.push(one_minus_t_term());\r\n      }\r\n      fns.push(_termFunc(terms));\r\n    }\r\n    fns.push(l_term());\r\n    _curveFunctionCache.set(order, fns);\r\n  }\r\n  return fns;\r\n}\r\nfunction pointOnCurve(curve, location) {\r\n  var cc = _getCurveFunctions(curve.length - 1),\r\n      _x = 0,\r\n      _y = 0;\r\n  for (var i = 0; i < curve.length; i++) {\r\n    _x = _x + curve[i].x * cc[i](location);\r\n    _y = _y + curve[i].y * cc[i](location);\r\n  }\r\n  return {\r\n    x: _x,\r\n    y: _y\r\n  };\r\n}\r\nfunction dist(p1, p2) {\r\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n}\r\nfunction isPoint(curve) {\r\n  return curve[0].x === curve[1].x && curve[0].y === curve[1].y;\r\n}\r\nfunction pointAlongPath(curve, location, distance) {\r\n  if (isPoint(curve)) {\r\n    return {\r\n      point: curve[0],\r\n      location: location\r\n    };\r\n  }\r\n  var prev = pointOnCurve(curve, location),\r\n      tally = 0,\r\n      curLoc = location,\r\n      direction = distance > 0 ? 1 : -1,\r\n      cur = null;\r\n  while (tally < Math.abs(distance)) {\r\n    curLoc += 0.005 * direction;\r\n    cur = pointOnCurve(curve, curLoc);\r\n    tally += dist(cur, prev);\r\n    prev = cur;\r\n  }\r\n  return {\r\n    point: cur,\r\n    location: curLoc\r\n  };\r\n}\r\nfunction pointAlongCurveFrom(curve, location, distance) {\r\n  return pointAlongPath(curve, location, distance).point;\r\n}\r\nfunction locationAlongCurveFrom(curve, location, distance) {\r\n  return pointAlongPath(curve, location, distance).location;\r\n}\r\nfunction gradientAtPoint(curve, location) {\r\n  var p1 = pointOnCurve(curve, location),\r\n      p2 = pointOnCurve(curve.slice(0, curve.length - 1), location),\r\n      dy = p2.y - p1.y,\r\n      dx = p2.x - p1.x;\r\n  return dy === 0 ? Infinity : Math.atan(dy / dx);\r\n}\r\nfunction gradientAtPointAlongPathFrom(curve, location, distance) {\r\n  var p = pointAlongPath(curve, location, distance);\r\n  if (p.location > 1) p.location = 1;\r\n  if (p.location < 0) p.location = 0;\r\n  return gradientAtPoint(curve, p.location);\r\n}\r\nfunction perpendicularToPathAt(curve, location, length, distance) {\r\n  distance = distance == null ? 0 : distance;\r\n  var p = pointAlongPath(curve, location, distance),\r\n      m = gradientAtPoint(curve, p.location),\r\n      _theta2 = Math.atan(-1 / m),\r\n      y = length / 2 * Math.sin(_theta2),\r\n      x = length / 2 * Math.cos(_theta2);\r\n  return [{\r\n    x: p.point.x + x,\r\n    y: p.point.y + y\r\n  }, {\r\n    x: p.point.x - x,\r\n    y: p.point.y - y\r\n  }];\r\n}\r\nfunction bezierLineIntersection(x1, y1, x2, y2, curve) {\r\n  var a = y2 - y1,\r\n      b = x1 - x2,\r\n      c = x1 * (y1 - y2) + y1 * (x2 - x1),\r\n      coeffs = _computeCoefficients(curve),\r\n      p = [a * coeffs[0][0] + b * coeffs[1][0], a * coeffs[0][1] + b * coeffs[1][1], a * coeffs[0][2] + b * coeffs[1][2], a * coeffs[0][3] + b * coeffs[1][3] + c],\r\n      r = _cubicRoots.apply(null, p),\r\n      intersections = [];\r\n  if (r != null) {\r\n    for (var i = 0; i < 3; i++) {\r\n      var _t = r[i],\r\n          t2 = Math.pow(_t, 2),\r\n          t3 = Math.pow(_t, 3),\r\n          x = {\r\n        x: coeffs[0][0] * t3 + coeffs[0][1] * t2 + coeffs[0][2] * _t + coeffs[0][3],\r\n        y: coeffs[1][0] * t3 + coeffs[1][1] * t2 + coeffs[1][2] * _t + coeffs[1][3]\r\n      };\r\n      var s = void 0;\r\n      if (x2 - x1 !== 0) {\r\n        s = (x[0] - x1) / (x2 - x1);\r\n      } else {\r\n        s = (x[1] - y1) / (y2 - y1);\r\n      }\r\n      if (_t >= 0 && _t <= 1.0 && s >= 0 && s <= 1.0) {\r\n        intersections.push(x);\r\n      }\r\n    }\r\n  }\r\n  return intersections;\r\n}\r\nfunction boxIntersection(x, y, w, h, curve) {\r\n  var i = [];\r\n  i.push.apply(i, bezierLineIntersection(x, y, x + w, y, curve));\r\n  i.push.apply(i, bezierLineIntersection(x + w, y, x + w, y + h, curve));\r\n  i.push.apply(i, bezierLineIntersection(x + w, y + h, x, y + h, curve));\r\n  i.push.apply(i, bezierLineIntersection(x, y + h, x, y, curve));\r\n  return i;\r\n}\r\nfunction boundingBoxIntersection(boundingBox, curve) {\r\n  var i = [];\r\n  i.push.apply(i, bezierLineIntersection(boundingBox.x, boundingBox.y, boundingBox.x + boundingBox.w, boundingBox.y, curve));\r\n  i.push.apply(i, bezierLineIntersection(boundingBox.x + boundingBox.w, boundingBox.y, boundingBox.x + boundingBox.w, boundingBox.y + boundingBox.h, curve));\r\n  i.push.apply(i, bezierLineIntersection(boundingBox.x + boundingBox.w, boundingBox.y + boundingBox.h, boundingBox.x, boundingBox.y + boundingBox.h, curve));\r\n  i.push.apply(i, bezierLineIntersection(boundingBox.x, boundingBox.y + boundingBox.h, boundingBox.x, boundingBox.y, curve));\r\n  return i;\r\n}\r\nfunction _computeCoefficientsForAxis(curve, axis) {\r\n  return [-curve[0][axis] + 3 * curve[1][axis] + -3 * curve[2][axis] + curve[3][axis], 3 * curve[0][axis] - 6 * curve[1][axis] + 3 * curve[2][axis], -3 * curve[0][axis] + 3 * curve[1][axis], curve[0][axis]];\r\n}\r\nfunction _computeCoefficients(curve) {\r\n  return [_computeCoefficientsForAxis(curve, \"x\"), _computeCoefficientsForAxis(curve, \"y\")];\r\n}\r\nfunction _cubicRoots(a, b, c, d) {\r\n  var A = b / a,\r\n      B = c / a,\r\n      C = d / a,\r\n      Q = (3 * B - Math.pow(A, 2)) / 9,\r\n      R = (9 * A * B - 27 * C - 2 * Math.pow(A, 3)) / 54,\r\n      D = Math.pow(Q, 3) + Math.pow(R, 2),\r\n      S,\r\n      T,\r\n      t = [0, 0, 0];\r\n  if (D >= 0)\r\n    {\r\n      S = sgn$1(R + Math.sqrt(D)) * Math.pow(Math.abs(R + Math.sqrt(D)), 1 / 3);\r\n      T = sgn$1(R - Math.sqrt(D)) * Math.pow(Math.abs(R - Math.sqrt(D)), 1 / 3);\r\n      t[0] = -A / 3 + (S + T);\r\n      t[1] = -A / 3 - (S + T) / 2;\r\n      t[2] = -A / 3 - (S + T) / 2;\r\n      if (Math.abs(Math.sqrt(3) * (S - T) / 2) !== 0) {\r\n        t[1] = -1;\r\n        t[2] = -1;\r\n      }\r\n    } else\r\n    {\r\n      var th = Math.acos(R / Math.sqrt(-Math.pow(Q, 3)));\r\n      t[0] = 2 * Math.sqrt(-Q) * Math.cos(th / 3) - A / 3;\r\n      t[1] = 2 * Math.sqrt(-Q) * Math.cos((th + 2 * Math.PI) / 3) - A / 3;\r\n      t[2] = 2 * Math.sqrt(-Q) * Math.cos((th + 4 * Math.PI) / 3) - A / 3;\r\n    }\r\n  for (var i = 0; i < 3; i++) {\r\n    if (t[i] < 0 || t[i] > 1.0) {\r\n      t[i] = -1;\r\n    }\r\n  }\r\n  return t;\r\n}\r\n\r\nvar BezierSegment = function (_AbstractSegment) {\r\n  _inherits(BezierSegment, _AbstractSegment);\r\n  var _super = _createSuper(BezierSegment);\r\n  function BezierSegment(params) {\r\n    var _this;\r\n    _classCallCheck(this, BezierSegment);\r\n    _this = _super.call(this, params);\r\n    _defineProperty(_assertThisInitialized(_this), \"curve\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cp1x\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cp1y\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cp2x\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cp2y\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"length\", 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", BezierSegment.segmentType);\r\n    _this.cp1x = params.cp1x;\r\n    _this.cp1y = params.cp1y;\r\n    _this.cp2x = params.cp2x;\r\n    _this.cp2y = params.cp2y;\r\n    _this.x1 = params.x1;\r\n    _this.x2 = params.x2;\r\n    _this.y1 = params.y1;\r\n    _this.y2 = params.y2;\r\n    _this.curve = [{\r\n      x: _this.x1,\r\n      y: _this.y1\r\n    }, {\r\n      x: _this.cp1x,\r\n      y: _this.cp1y\r\n    }, {\r\n      x: _this.cp2x,\r\n      y: _this.cp2y\r\n    }, {\r\n      x: _this.x2,\r\n      y: _this.y2\r\n    }];\r\n    _this.extents = {\r\n      xmin: Math.min(_this.x1, _this.x2, _this.cp1x, _this.cp2x),\r\n      ymin: Math.min(_this.y1, _this.y2, _this.cp1y, _this.cp2y),\r\n      xmax: Math.max(_this.x1, _this.x2, _this.cp1x, _this.cp2x),\r\n      ymax: Math.max(_this.y1, _this.y2, _this.cp1y, _this.cp2y)\r\n    };\r\n    return _this;\r\n  }\r\n  _createClass(BezierSegment, [{\r\n    key: \"getPath\",\r\n    value: function getPath(isFirstSegment) {\r\n      return (isFirstSegment ? \"M \" + this.x2 + \" \" + this.y2 + \" \" : \"\") + \"C \" + this.cp2x + \" \" + this.cp2y + \" \" + this.cp1x + \" \" + this.cp1y + \" \" + this.x1 + \" \" + this.y1;\r\n    }\r\n  }, {\r\n    key: \"pointOnPath\",\r\n    value: function pointOnPath(location, absolute) {\r\n      location = BezierSegment._translateLocation(this.curve, location, absolute);\r\n      return pointOnCurve(this.curve, location);\r\n    }\r\n  }, {\r\n    key: \"gradientAtPoint\",\r\n    value: function gradientAtPoint$1(location, absolute) {\r\n      location = BezierSegment._translateLocation(this.curve, location, absolute);\r\n      return gradientAtPoint(this.curve, location);\r\n    }\r\n  }, {\r\n    key: \"pointAlongPathFrom\",\r\n    value: function pointAlongPathFrom(location, distance, absolute) {\r\n      location = BezierSegment._translateLocation(this.curve, location, absolute);\r\n      return pointAlongCurveFrom(this.curve, location, distance);\r\n    }\r\n  }, {\r\n    key: \"getLength\",\r\n    value: function getLength() {\r\n      if (this.length == null || this.length === 0) {\r\n        this.length = computeBezierLength(this.curve);\r\n      }\r\n      return this.length;\r\n    }\r\n  }, {\r\n    key: \"findClosestPointOnPath\",\r\n    value: function findClosestPointOnPath(x, y) {\r\n      var p = nearestPointOnCurve({\r\n        x: x,\r\n        y: y\r\n      }, this.curve);\r\n      return {\r\n        d: Math.sqrt(Math.pow(p.point.x - x, 2) + Math.pow(p.point.y - y, 2)),\r\n        x: p.point.x,\r\n        y: p.point.y,\r\n        l: 1 - p.location,\r\n        s: this,\r\n        x1: null,\r\n        y1: null,\r\n        x2: null,\r\n        y2: null\r\n      };\r\n    }\r\n  }, {\r\n    key: \"lineIntersection\",\r\n    value: function lineIntersection(x1, y1, x2, y2) {\r\n      return bezierLineIntersection(x1, y1, x2, y2, this.curve);\r\n    }\r\n  }], [{\r\n    key: \"_translateLocation\",\r\n    value: function _translateLocation(_curve, location, absolute) {\r\n      if (absolute) {\r\n        location = locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\r\n      }\r\n      return location;\r\n    }\r\n  }]);\r\n  return BezierSegment;\r\n}(AbstractSegment);\r\n_defineProperty(BezierSegment, \"segmentType\", \"Bezier\");\r\n\r\nvar BezierConnector = function (_AbstractBezierConnec) {\r\n  _inherits(BezierConnector, _AbstractBezierConnec);\r\n  var _super = _createSuper(BezierConnector);\r\n  function BezierConnector(connection, params) {\r\n    var _this;\r\n    _classCallCheck(this, BezierConnector);\r\n    _this = _super.call(this, connection, params);\r\n    _this.connection = connection;\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", BezierConnector.type);\r\n    _defineProperty(_assertThisInitialized(_this), \"majorAnchor\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"minorAnchor\", void 0);\r\n    params = params || {};\r\n    _this.majorAnchor = params.curviness || 150;\r\n    _this.minorAnchor = 10;\r\n    return _this;\r\n  }\r\n  _createClass(BezierConnector, [{\r\n    key: \"getCurviness\",\r\n    value: function getCurviness() {\r\n      return this.majorAnchor;\r\n    }\r\n  }, {\r\n    key: \"_findControlPoint\",\r\n    value: function _findControlPoint(point, sourceAnchorPosition, targetAnchorPosition, soo, too) {\r\n      var perpendicular = soo[0] !== too[0] || soo[1] === too[1],\r\n          p = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      if (!perpendicular) {\r\n        if (soo[0] === 0) {\r\n          p.x = sourceAnchorPosition.curX < targetAnchorPosition.curX ? point.x + this.minorAnchor : point.x - this.minorAnchor;\r\n        } else {\r\n          p.x = point.x - this.majorAnchor * soo[0];\r\n        }\r\n        if (soo[1] === 0) {\r\n          p.y = sourceAnchorPosition.curY < targetAnchorPosition.curY ? point.y + this.minorAnchor : point.y - this.minorAnchor;\r\n        } else {\r\n          p.y = point.y + this.majorAnchor * too[1];\r\n        }\r\n      } else {\r\n        if (too[0] === 0) {\r\n          p.x = targetAnchorPosition.curX < sourceAnchorPosition.curX ? point.x + this.minorAnchor : point.x - this.minorAnchor;\r\n        } else {\r\n          p.x = point.x + this.majorAnchor * too[0];\r\n        }\r\n        if (too[1] === 0) {\r\n          p.y = targetAnchorPosition.curY < sourceAnchorPosition.curY ? point.y + this.minorAnchor : point.y - this.minorAnchor;\r\n        } else {\r\n          p.y = point.y + this.majorAnchor * soo[1];\r\n        }\r\n      }\r\n      return p;\r\n    }\r\n  }, {\r\n    key: \"_computeBezier\",\r\n    value: function _computeBezier(paintInfo, p, sp, tp, _w, _h) {\r\n      var _CP,\r\n          _CP2,\r\n          _sx = sp.curX < tp.curX ? _w : 0,\r\n          _sy = sp.curY < tp.curY ? _h : 0,\r\n          _tx = sp.curX < tp.curX ? 0 : _w,\r\n          _ty = sp.curY < tp.curY ? 0 : _h;\r\n      if (this.edited !== true) {\r\n        _CP = this._findControlPoint({\r\n          x: _sx,\r\n          y: _sy\r\n        }, sp, tp, paintInfo.so, paintInfo.to);\r\n        _CP2 = this._findControlPoint({\r\n          x: _tx,\r\n          y: _ty\r\n        }, tp, sp, paintInfo.to, paintInfo.so);\r\n      } else {\r\n        _CP = this.geometry.controlPoints[0];\r\n        _CP2 = this.geometry.controlPoints[1];\r\n      }\r\n      this.geometry = {\r\n        controlPoints: [_CP, _CP2],\r\n        source: p.sourcePos,\r\n        target: p.targetPos\r\n      };\r\n      this._addSegment(BezierSegment, {\r\n        x1: _sx,\r\n        y1: _sy,\r\n        x2: _tx,\r\n        y2: _ty,\r\n        cp1x: _CP.x,\r\n        cp1y: _CP.y,\r\n        cp2x: _CP2.x,\r\n        cp2y: _CP2.y\r\n      });\r\n    }\r\n  }]);\r\n  return BezierConnector;\r\n}(AbstractBezierConnector);\r\n_defineProperty(BezierConnector, \"type\", \"Bezier\");\r\n\r\nfunction _segment(x1, y1, x2, y2) {\r\n  if (x1 <= x2 && y2 <= y1) {\r\n    return 1;\r\n  } else if (x1 <= x2 && y1 <= y2) {\r\n    return 2;\r\n  } else if (x2 <= x1 && y2 >= y1) {\r\n    return 3;\r\n  }\r\n  return 4;\r\n}\r\nfunction _findControlPoint(midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\r\n  if (distance <= proximityLimit) {\r\n    return {\r\n      x: midx,\r\n      y: midy\r\n    };\r\n  }\r\n  if (segment === 1) {\r\n    if (sourceEdge.curY <= 0 && targetEdge.curY >= 1) {\r\n      return {\r\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\r\n        y: midy\r\n      };\r\n    } else if (sourceEdge.curX >= 1 && targetEdge.curX <= 0) {\r\n      return {\r\n        x: midx,\r\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\r\n      };\r\n    } else {\r\n      return {\r\n        x: midx + -1 * dx,\r\n        y: midy + -1 * dy\r\n      };\r\n    }\r\n  } else if (segment === 2) {\r\n    if (sourceEdge.curY >= 1 && targetEdge.curY <= 0) {\r\n      return {\r\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\r\n        y: midy\r\n      };\r\n    } else if (sourceEdge.curX >= 1 && targetEdge.curX <= 0) {\r\n      return {\r\n        x: midx,\r\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\r\n      };\r\n    } else {\r\n      return {\r\n        x: midx + dx,\r\n        y: midy + -1 * dy\r\n      };\r\n    }\r\n  } else if (segment === 3) {\r\n    if (sourceEdge.curY >= 1 && targetEdge.curY <= 0) {\r\n      return {\r\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\r\n        y: midy\r\n      };\r\n    } else if (sourceEdge.curX <= 0 && targetEdge.curX >= 1) {\r\n      return {\r\n        x: midx,\r\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\r\n      };\r\n    } else {\r\n      return {\r\n        x: midx + -1 * dx,\r\n        y: midy + -1 * dy\r\n      };\r\n    }\r\n  } else if (segment === 4) {\r\n    if (sourceEdge.curY <= 0 && targetEdge.curY >= 1) {\r\n      return {\r\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\r\n        y: midy\r\n      };\r\n    } else if (sourceEdge.curX <= 0 && targetEdge.curX >= 1) {\r\n      return {\r\n        x: midx,\r\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\r\n      };\r\n    } else {\r\n      return {\r\n        x: midx + dx,\r\n        y: midy + -1 * dy\r\n      };\r\n    }\r\n  }\r\n}\r\nvar StateMachineConnector = function (_AbstractBezierConnec) {\r\n  _inherits(StateMachineConnector, _AbstractBezierConnec);\r\n  var _super = _createSuper(StateMachineConnector);\r\n  function StateMachineConnector(connection, params) {\r\n    var _this;\r\n    _classCallCheck(this, StateMachineConnector);\r\n    _this = _super.call(this, connection, params);\r\n    _this.connection = connection;\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", StateMachineConnector.type);\r\n    _defineProperty(_assertThisInitialized(_this), \"_controlPoint\", void 0);\r\n    _this.curviness = params.curviness || 10;\r\n    _this.margin = params.margin || 5;\r\n    _this.proximityLimit = params.proximityLimit || 80;\r\n    _this.clockwise = params.orientation && params.orientation === \"clockwise\";\r\n    return _this;\r\n  }\r\n  _createClass(StateMachineConnector, [{\r\n    key: \"_computeBezier\",\r\n    value: function _computeBezier(paintInfo, params, sp, tp, w, h) {\r\n      var _sx = sp.curX < tp.curX ? 0 : w,\r\n          _sy = sp.curY < tp.curY ? 0 : h,\r\n          _tx = sp.curX < tp.curX ? w : 0,\r\n          _ty = sp.curY < tp.curY ? h : 0;\r\n      if (sp.x === 0) {\r\n        _sx -= this.margin;\r\n      }\r\n      if (sp.x === 1) {\r\n        _sx += this.margin;\r\n      }\r\n      if (sp.y === 0) {\r\n        _sy -= this.margin;\r\n      }\r\n      if (sp.y === 1) {\r\n        _sy += this.margin;\r\n      }\r\n      if (tp.x === 0) {\r\n        _tx -= this.margin;\r\n      }\r\n      if (tp.x === 1) {\r\n        _tx += this.margin;\r\n      }\r\n      if (tp.y === 0) {\r\n        _ty -= this.margin;\r\n      }\r\n      if (tp.y === 1) {\r\n        _ty += this.margin;\r\n      }\r\n      if (this.edited !== true) {\r\n        var _midx = (_sx + _tx) / 2,\r\n            _midy = (_sy + _ty) / 2,\r\n            segment = _segment(_sx, _sy, _tx, _ty),\r\n            distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2));\r\n        this._controlPoint = _findControlPoint(_midx, _midy, segment, params.sourcePos, params.targetPos, this.curviness, this.curviness, distance, this.proximityLimit);\r\n      } else {\r\n        this._controlPoint = this.geometry.controlPoints[0];\r\n      }\r\n      var cp1x, cp2x, cp1y, cp2y;\r\n      cp1x = this._controlPoint.x;\r\n      cp2x = this._controlPoint.x;\r\n      cp1y = this._controlPoint.y;\r\n      cp2y = this._controlPoint.y;\r\n      this.geometry = {\r\n        controlPoints: [this._controlPoint, this._controlPoint],\r\n        source: params.sourcePos,\r\n        target: params.targetPos\r\n      };\r\n      this._addSegment(BezierSegment, {\r\n        x1: _tx,\r\n        y1: _ty,\r\n        x2: _sx,\r\n        y2: _sy,\r\n        cp1x: cp1x,\r\n        cp1y: cp1y,\r\n        cp2x: cp2x,\r\n        cp2y: cp2y\r\n      });\r\n    }\r\n  }]);\r\n  return StateMachineConnector;\r\n}(AbstractBezierConnector);\r\n_defineProperty(StateMachineConnector, \"type\", \"StateMachine\");\r\n\r\nConnectors.register(BezierConnector.type, BezierConnector);\r\nConnectors.register(StateMachineConnector.type, StateMachineConnector);\r\n\r\nfunction sgn(n) {\r\n  return n < 0 ? -1 : n === 0 ? 0 : 1;\r\n}\r\nfunction segmentDirections(segment) {\r\n  return [sgn(segment[2] - segment[0]), sgn(segment[3] - segment[1])];\r\n}\r\nfunction segLength(s) {\r\n  return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2));\r\n}\r\nfunction _cloneArray(a) {\r\n  var _a = [];\r\n  _a.push.apply(_a, a);\r\n  return _a;\r\n}\r\nvar FlowchartConnector = function (_AbstractConnector) {\r\n  _inherits(FlowchartConnector, _AbstractConnector);\r\n  var _super = _createSuper(FlowchartConnector);\r\n  function FlowchartConnector(connection, params) {\r\n    var _this;\r\n    _classCallCheck(this, FlowchartConnector);\r\n    _this = _super.call(this, connection, params);\r\n    _this.connection = connection;\r\n    _defineProperty(_assertThisInitialized(_this), \"type\", FlowchartConnector.type);\r\n    _defineProperty(_assertThisInitialized(_this), \"internalSegments\", []);\r\n    _defineProperty(_assertThisInitialized(_this), \"midpoint\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"alwaysRespectStubs\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"cornerRadius\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"lastx\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"lasty\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"lastOrientation\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"loopbackRadius\", void 0);\r\n    _defineProperty(_assertThisInitialized(_this), \"isLoopbackCurrently\", void 0);\r\n    _this.midpoint = params.midpoint == null || isNaN(params.midpoint) ? 0.5 : params.midpoint;\r\n    _this.cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0;\r\n    _this.alwaysRespectStubs = params.alwaysRespectStubs === true;\r\n    _this.lastx = null;\r\n    _this.lasty = null;\r\n    _this.lastOrientation = null;\r\n    _this.loopbackRadius = params.loopbackRadius || 25;\r\n    _this.isLoopbackCurrently = false;\r\n    return _this;\r\n  }\r\n  _createClass(FlowchartConnector, [{\r\n    key: \"getDefaultStubs\",\r\n    value: function getDefaultStubs() {\r\n      return [30, 30];\r\n    }\r\n  }, {\r\n    key: \"addASegment\",\r\n    value: function addASegment(x, y, paintInfo) {\r\n      if (this.lastx === x && this.lasty === y) {\r\n        return;\r\n      }\r\n      var lx = this.lastx == null ? paintInfo.sx : this.lastx,\r\n          ly = this.lasty == null ? paintInfo.sy : this.lasty,\r\n          o = lx === x ? \"v\" : \"h\";\r\n      this.lastx = x;\r\n      this.lasty = y;\r\n      this.internalSegments.push([lx, ly, x, y, o]);\r\n    }\r\n  }, {\r\n    key: \"writeSegments\",\r\n    value: function writeSegments(paintInfo) {\r\n      var current = null,\r\n          next,\r\n          currentDirection,\r\n          nextDirection;\r\n      for (var i = 0; i < this.internalSegments.length - 1; i++) {\r\n        current = current || _cloneArray(this.internalSegments[i]);\r\n        next = _cloneArray(this.internalSegments[i + 1]);\r\n        currentDirection = segmentDirections(current);\r\n        nextDirection = segmentDirections(next);\r\n        if (this.cornerRadius > 0 && current[4] !== next[4]) {\r\n          var minSegLength = Math.min(segLength(current), segLength(next));\r\n          var radiusToUse = Math.min(this.cornerRadius, minSegLength / 2);\r\n          current[2] -= currentDirection[0] * radiusToUse;\r\n          current[3] -= currentDirection[1] * radiusToUse;\r\n          next[0] += nextDirection[0] * radiusToUse;\r\n          next[1] += nextDirection[1] * radiusToUse;\r\n          var ac = currentDirection[1] === nextDirection[0] && nextDirection[0] === 1 || currentDirection[1] === nextDirection[0] && nextDirection[0] === 0 && currentDirection[0] !== nextDirection[1] || currentDirection[1] === nextDirection[0] && nextDirection[0] === -1,\r\n              sgny = next[1] > current[3] ? 1 : -1,\r\n              sgnx = next[0] > current[2] ? 1 : -1,\r\n              sgnEqual = sgny === sgnx,\r\n              cx = sgnEqual && ac || !sgnEqual && !ac ? next[0] : current[2],\r\n              cy = sgnEqual && ac || !sgnEqual && !ac ? current[3] : next[1];\r\n          this._addSegment(StraightSegment, {\r\n            x1: current[0],\r\n            y1: current[1],\r\n            x2: current[2],\r\n            y2: current[3]\r\n          });\r\n          this._addSegment(ArcSegment, {\r\n            r: radiusToUse,\r\n            x1: current[2],\r\n            y1: current[3],\r\n            x2: next[0],\r\n            y2: next[1],\r\n            cx: cx,\r\n            cy: cy,\r\n            ac: ac\r\n          });\r\n        } else {\r\n          this._addSegment(StraightSegment, {\r\n            x1: current[0],\r\n            y1: current[1],\r\n            x2: current[2],\r\n            y2: current[3]\r\n          });\r\n        }\r\n        current = next;\r\n      }\r\n      if (next != null) {\r\n        this._addSegment(StraightSegment, {\r\n          x1: next[0],\r\n          y1: next[1],\r\n          x2: next[2],\r\n          y2: next[3]\r\n        });\r\n      }\r\n    }\r\n  }, {\r\n    key: \"_compute\",\r\n    value: function _compute(paintInfo, params) {\r\n      var _this2 = this;\r\n      this.internalSegments.length = 0;\r\n      this.lastx = null;\r\n      this.lasty = null;\r\n      this.lastOrientation = null;\r\n      var commonStubCalculator = function commonStubCalculator(axis) {\r\n        return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY];\r\n      },\r\n          stubCalculators = {\r\n        perpendicular: commonStubCalculator,\r\n        orthogonal: commonStubCalculator,\r\n        opposite: function opposite(axis) {\r\n          var pi = paintInfo,\r\n              idx = axis === \"x\" ? 0 : 1,\r\n              areInProximity = {\r\n            \"x\": function x() {\r\n              return pi.so[idx] === 1 && (pi.startStubX > pi.endStubX && pi.tx > pi.startStubX || pi.sx > pi.endStubX && pi.tx > pi.sx) || pi.so[idx] === -1 && (pi.startStubX < pi.endStubX && pi.tx < pi.startStubX || pi.sx < pi.endStubX && pi.tx < pi.sx);\r\n            },\r\n            \"y\": function y() {\r\n              return pi.so[idx] === 1 && (pi.startStubY > pi.endStubY && pi.ty > pi.startStubY || pi.sy > pi.endStubY && pi.ty > pi.sy) || pi.so[idx] === -1 && (pi.startStubY < pi.endStubY && pi.ty < pi.startStubY || pi.sy < pi.endStubY && pi.ty < pi.sy);\r\n            }\r\n          };\r\n          if (!_this2.alwaysRespectStubs && areInProximity[axis]()) {\r\n            return {\r\n              \"x\": [(paintInfo.sx + paintInfo.tx) / 2, paintInfo.startStubY, (paintInfo.sx + paintInfo.tx) / 2, paintInfo.endStubY],\r\n              \"y\": [paintInfo.startStubX, (paintInfo.sy + paintInfo.ty) / 2, paintInfo.endStubX, (paintInfo.sy + paintInfo.ty) / 2]\r\n            }[axis];\r\n          } else {\r\n            return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY];\r\n          }\r\n        }\r\n      };\r\n      var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis),\r\n          idx = paintInfo.sourceAxis === \"x\" ? 0 : 1,\r\n          oidx = paintInfo.sourceAxis === \"x\" ? 1 : 0,\r\n          ss = stubs[idx],\r\n          oss = stubs[oidx],\r\n          es = stubs[idx + 2],\r\n          oes = stubs[oidx + 2];\r\n      this.addASegment(stubs[0], stubs[1], paintInfo);\r\n      var midx = paintInfo.startStubX + (paintInfo.endStubX - paintInfo.startStubX) * this.midpoint,\r\n          midy = paintInfo.startStubY + (paintInfo.endStubY - paintInfo.startStubY) * this.midpoint;\r\n      var orientations = {\r\n        x: [0, 1],\r\n        y: [1, 0]\r\n      },\r\n          lineCalculators = {\r\n        perpendicular: function perpendicular(axis, ss, oss, es, oes) {\r\n          var pi = paintInfo,\r\n              sis = {\r\n            x: [[[1, 2, 3, 4], null, [2, 1, 4, 3]], null, [[4, 3, 2, 1], null, [3, 4, 1, 2]]],\r\n            y: [[[3, 2, 1, 4], null, [2, 3, 4, 1]], null, [[4, 1, 2, 3], null, [1, 4, 3, 2]]]\r\n          },\r\n              stubs = {\r\n            x: [[pi.startStubX, pi.endStubX], null, [pi.endStubX, pi.startStubX]],\r\n            y: [[pi.startStubY, pi.endStubY], null, [pi.endStubY, pi.startStubY]]\r\n          },\r\n              midLines = {\r\n            x: [[midx, pi.startStubY], [midx, pi.endStubY]],\r\n            y: [[pi.startStubX, midy], [pi.endStubX, midy]]\r\n          },\r\n              linesToEnd = {\r\n            x: [[pi.endStubX, pi.startStubY]],\r\n            y: [[pi.startStubX, pi.endStubY]]\r\n          },\r\n              startToEnd = {\r\n            x: [[pi.startStubX, pi.endStubY], [pi.endStubX, pi.endStubY]],\r\n            y: [[pi.endStubX, pi.startStubY], [pi.endStubX, pi.endStubY]]\r\n          },\r\n              startToMidToEnd = {\r\n            x: [[pi.startStubX, midy], [pi.endStubX, midy], [pi.endStubX, pi.endStubY]],\r\n            y: [[midx, pi.startStubY], [midx, pi.endStubY], [pi.endStubX, pi.endStubY]]\r\n          },\r\n              otherStubs = {\r\n            x: [pi.startStubY, pi.endStubY],\r\n            y: [pi.startStubX, pi.endStubX]\r\n          },\r\n              soIdx = orientations[axis][0],\r\n              toIdx = orientations[axis][1],\r\n              _so = pi.so[soIdx] + 1,\r\n              _to = pi.to[toIdx] + 1,\r\n              otherFlipped = pi.to[toIdx] === -1 && otherStubs[axis][1] < otherStubs[axis][0] || pi.to[toIdx] === 1 && otherStubs[axis][1] > otherStubs[axis][0],\r\n              stub1 = stubs[axis][_so][0],\r\n              stub2 = stubs[axis][_so][1],\r\n              segmentIndexes = sis[axis][_so][_to];\r\n          if (pi.segment === segmentIndexes[3] || pi.segment === segmentIndexes[2] && otherFlipped) {\r\n            return midLines[axis];\r\n          } else if (pi.segment === segmentIndexes[2] && stub2 < stub1) {\r\n            return linesToEnd[axis];\r\n          } else if (pi.segment === segmentIndexes[2] && stub2 >= stub1 || pi.segment === segmentIndexes[1] && !otherFlipped) {\r\n            return startToMidToEnd[axis];\r\n          } else if (pi.segment === segmentIndexes[0] || pi.segment === segmentIndexes[1] && otherFlipped) {\r\n            return startToEnd[axis];\r\n          }\r\n        },\r\n        orthogonal: function orthogonal(axis, startStub, otherStartStub, endStub, otherEndStub) {\r\n          var pi = paintInfo,\r\n              extent = {\r\n            \"x\": pi.so[0] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),\r\n            \"y\": pi.so[1] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)\r\n          }[axis];\r\n          return {\r\n            \"x\": [[extent, otherStartStub], [extent, otherEndStub], [endStub, otherEndStub]],\r\n            \"y\": [[otherStartStub, extent], [otherEndStub, extent], [otherEndStub, endStub]]\r\n          }[axis];\r\n        },\r\n        opposite: function opposite(axis, ss, oss, es, oes) {\r\n          var pi = paintInfo,\r\n              otherAxis = {\r\n            \"x\": \"y\",\r\n            \"y\": \"x\"\r\n          }[axis],\r\n              dim = {\r\n            \"x\": \"h\",\r\n            \"y\": \"w\"\r\n          }[axis],\r\n              comparator = pi[\"is\" + axis.toUpperCase() + \"GreaterThanStubTimes2\"];\r\n          if (params.sourceEndpoint.elementId === params.targetEndpoint.elementId) {\r\n            var _val = oss + (1 - params.sourceEndpoint._anchor.computedPosition[otherAxis]) * params.sourceInfo[dim] + _this2.maxStub;\r\n            return {\r\n              \"x\": [[ss, _val], [es, _val]],\r\n              \"y\": [[_val, ss], [_val, es]]\r\n            }[axis];\r\n          } else if (!comparator || pi.so[idx] === 1 && ss > es || pi.so[idx] === -1 && ss < es) {\r\n            return {\r\n              \"x\": [[ss, midy], [es, midy]],\r\n              \"y\": [[midx, ss], [midx, es]]\r\n            }[axis];\r\n          } else if (pi.so[idx] === 1 && ss < es || pi.so[idx] === -1 && ss > es) {\r\n            return {\r\n              \"x\": [[midx, pi.sy], [midx, pi.ty]],\r\n              \"y\": [[pi.sx, midy], [pi.tx, midy]]\r\n            }[axis];\r\n          }\r\n        }\r\n      };\r\n      var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);\r\n      if (p) {\r\n        for (var i = 0; i < p.length; i++) {\r\n          this.addASegment(p[i][0], p[i][1], paintInfo);\r\n        }\r\n      }\r\n      this.addASegment(stubs[2], stubs[3], paintInfo);\r\n      this.addASegment(paintInfo.tx, paintInfo.ty, paintInfo);\r\n      this.writeSegments(paintInfo);\r\n    }\r\n  }, {\r\n    key: \"transformGeometry\",\r\n    value: function transformGeometry(g, dx, dy) {\r\n      return g;\r\n    }\r\n  }]);\r\n  return FlowchartConnector;\r\n}(AbstractConnector);\r\n_defineProperty(FlowchartConnector, \"type\", \"Flowchart\");\r\n\r\nConnectors.register(FlowchartConnector.type, FlowchartConnector);\r\n\r\nEndpointFactory.registerHandler(DotEndpointHandler);\r\nEndpointFactory.registerHandler(RectangleEndpointHandler);\r\nEndpointFactory.registerHandler(BlankEndpointHandler);\r\nConnectors.register(StraightConnector.type, StraightConnector);\r\n\r\nfunction _randomEvent() {\r\n  var x = Math.floor(Math.random() * 2000),\r\n      y = Math.floor(Math.random() * 2000);\r\n  return {\r\n    clientX: x,\r\n    clientY: y,\r\n    screenX: x,\r\n    screenY: y,\r\n    pageX: x,\r\n    pageY: y\r\n  };\r\n}\r\nvar _distantPointEvent = {\r\n  clientX: 50000,\r\n  clientY: 50000,\r\n  screenX: 50000,\r\n  screenY: 50000,\r\n  pageX: 50000,\r\n  pageY: 50000\r\n};\r\nvar lut = [];\r\nfor (var i = 0; i < 256; i++) {\r\n  lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n}\r\nvar VERY_SMALL_NUMBER = 0.00000000001;\r\nvar BrowserUITestSupport = function () {\r\n  function BrowserUITestSupport(_jsPlumb, ok, equal) {\r\n    _classCallCheck(this, BrowserUITestSupport);\r\n    this._jsPlumb = _jsPlumb;\r\n    this.ok = ok;\r\n    this.equal = equal;\r\n    _defineProperty(this, \"_divs\", []);\r\n    _defineProperty(this, \"mottle\", void 0);\r\n    this.mottle = new EventManager();\r\n  }\r\n  _createClass(BrowserUITestSupport, [{\r\n    key: \"_t\",\r\n    value: function _t(el, evt, x, y) {\r\n      this.mottle.trigger(el, evt, {\r\n        pageX: x,\r\n        pageY: y,\r\n        screenX: x,\r\n        screenY: y,\r\n        clientX: x,\r\n        clientY: y\r\n      });\r\n    }\r\n  }, {\r\n    key: \"addDiv\",\r\n    value: function addDiv(id, parent, className, x, y, w, h) {\r\n      var d1 = document.createElement(\"div\");\r\n      d1.style.position = \"absolute\";\r\n      d1.innerHTML = id;\r\n      if (parent) parent.appendChild(d1);else this._jsPlumb.getContainer().appendChild(d1);\r\n      d1.setAttribute(\"id\", id);\r\n      d1.style.left = (x != null ? x : Math.floor(Math.random() * 1000)) + \"px\";\r\n      d1.style.top = (y != null ? y : Math.floor(Math.random() * 1000)) + \"px\";\r\n      if (className) d1.className = className;\r\n      if (w) d1.style.width = w + \"px\";\r\n      if (h) d1.style.height = h + \"px\";\r\n      this._divs.push(id);\r\n      return d1;\r\n    }\r\n  }, {\r\n    key: \"addDivs\",\r\n    value: function addDivs(ids, parent) {\r\n      for (var _i = 0; _i < ids.length; _i++) {\r\n        this.addDiv(ids[_i], parent);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"assertEndpointCount\",\r\n    value: function assertEndpointCount(el, count) {\r\n      var ep = this._jsPlumb.getEndpoints(el),\r\n          epl = ep ? ep.length : 0;\r\n      this.equal(epl, count, el.getAttribute(\"data-jtk-managed\") + \" has \" + count + (count > 1 || count == 0 ? \" endpoints\" : \" endpoint\"));\r\n    }\r\n  }, {\r\n    key: \"_assertManagedEndpointCount\",\r\n    value: function _assertManagedEndpointCount(el, count) {\r\n      var id = this._jsPlumb.getId(el),\r\n          _mel = this._jsPlumb._managedElements[id];\r\n      this.equal(_mel.endpoints.length, count, id + \" has \" + count + \" endpoints in managed record\");\r\n    }\r\n  }, {\r\n    key: \"_assertManagedConnectionCount\",\r\n    value: function _assertManagedConnectionCount(el, count) {\r\n      var id = this._jsPlumb.getId(el),\r\n          _mel = this._jsPlumb._managedElements[id];\r\n      this.equal(_mel.connections.length, count, id + \" has \" + count + \" connections in managed record\");\r\n    }\r\n  }, {\r\n    key: \"_registerDiv\",\r\n    value: function _registerDiv(div) {\r\n      this._divs.push(div);\r\n    }\r\n  }, {\r\n    key: \"makeDragStartEvt\",\r\n    value: function makeDragStartEvt(el) {\r\n      var e = this.makeEvent(el),\r\n          c = this._jsPlumb.getContainer();\r\n      e.clientX += c.offsetLeft;\r\n      e.screenX += c.offsetLeft;\r\n      e.pageX += c.offsetLeft;\r\n      e.clientY += c.offsetTop;\r\n      e.screenY += c.offsetTop;\r\n      e.pageY += c.offsetTop;\r\n      return e;\r\n    }\r\n  }, {\r\n    key: \"getAttribute\",\r\n    value: function getAttribute(el, att) {\r\n      return el.getAttribute(att);\r\n    }\r\n  }, {\r\n    key: \"dragNodeBy\",\r\n    value: function dragNodeBy(el, x, y, events) {\r\n      events = events || {};\r\n      if (events.before) events.before();\r\n      var downEvent = this.makeEvent(el);\r\n      this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, downEvent);\r\n      if (events.beforeMouseMove) {\r\n        events.beforeMouseMove();\r\n      }\r\n      this._t(document, EVENT_MOUSEMOVE, downEvent.pageX + x, downEvent.pageY + y);\r\n      if (events.beforeMouseUp) {\r\n        events.beforeMouseUp();\r\n      }\r\n      this.mottle.trigger(document, EVENT_MOUSEUP, null);\r\n      if (events.after) events.after();\r\n    }\r\n  }, {\r\n    key: \"dragNodeTo\",\r\n    value: function dragNodeTo(el, x, y, events) {\r\n      events = events || {};\r\n      var size = this._jsPlumb.viewport.getPosition(this._jsPlumb.getId(el));\r\n      if (events.before) events.before();\r\n      var downEvent = this.makeEvent(el);\r\n      this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, downEvent);\r\n      var cb = this._jsPlumb.getContainer().getBoundingClientRect();\r\n      if (events.beforeMouseMove) {\r\n        events.beforeMouseMove();\r\n      }\r\n      this._t(document, EVENT_MOUSEMOVE, cb.x + x + size.w / 2, cb.y + y + size.h / 2);\r\n      if (events.beforeMouseUp) {\r\n        events.beforeMouseUp();\r\n      }\r\n      this.mottle.trigger(document, EVENT_MOUSEUP, null);\r\n      if (events.after) events.after();\r\n    }\r\n  }, {\r\n    key: \"dragToGroup\",\r\n    value: function dragToGroup(el, targetGroupId, events) {\r\n      var targetGroup = this._jsPlumb.getGroup(targetGroupId);\r\n      var tgo = this._jsPlumb.viewport.getPosition(targetGroup.elId),\r\n          tx = tgo.x + tgo.w / 2,\r\n          ty = tgo.y + tgo.h / 2;\r\n      this.dragNodeTo(el, tx, ty, events);\r\n    }\r\n  }, {\r\n    key: \"aSyncDragNodeBy\",\r\n    value: function aSyncDragNodeBy(el, x, y, events) {\r\n      var _this = this;\r\n      events = events || {};\r\n      if (events.before) {\r\n        events.before();\r\n      }\r\n      var downEvent = this.makeEvent(el);\r\n      this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, downEvent);\r\n      if (events.beforeMouseMove) {\r\n        events.beforeMouseMove();\r\n      }\r\n      setTimeout(function () {\r\n        _this._t(document, EVENT_MOUSEMOVE, downEvent.pageX + x, downEvent.pageY + y);\r\n        if (events.beforeMouseUp) {\r\n          events.beforeMouseUp();\r\n        }\r\n        setTimeout(function () {\r\n          _this.mottle.trigger(document, EVENT_MOUSEUP, null);\r\n          if (events.after) {\r\n            events.after();\r\n          }\r\n        }, 45);\r\n      }, 45);\r\n    }\r\n  }, {\r\n    key: \"dragANodeAround\",\r\n    value: function dragANodeAround(el, functionToAssertWhileDragging, assertMessage) {\r\n      this._jsPlumb.trigger(el, EVENT_MOUSEDOWN, this.makeEvent(el));\r\n      var steps = Math.random() * 50;\r\n      for (var _i2 = 0; _i2 < steps; _i2++) {\r\n        var evt = _randomEvent();\r\n        el.style.left = evt.screenX + \"px\";\r\n        el.style.top = evt.screenY + \"px\";\r\n        this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, evt);\r\n      }\r\n      if (functionToAssertWhileDragging) {\r\n        this.ok(functionToAssertWhileDragging(), assertMessage || \"while dragging assert\");\r\n      }\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEUP, _distantPointEvent);\r\n    }\r\n  }, {\r\n    key: \"dragConnection\",\r\n    value: function dragConnection(d1, d2, mouseUpOnTarget, events) {\r\n      var el1 = this.getCanvas(d1),\r\n          el2 = this.getCanvas(d2);\r\n      var e1 = this.makeEvent(el1),\r\n          e2 = this.makeEvent(el2);\r\n      events = events || {};\r\n      var conns = this._jsPlumb.select().length;\r\n      this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\r\n      if (events.beforeMouseMove) {\r\n        events.beforeMouseMove();\r\n      }\r\n      this._jsPlumb.trigger(mouseUpOnTarget ? el2 : document, EVENT_MOUSEMOVE, e2);\r\n      if (events.beforeMouseUp) {\r\n        events.beforeMouseUp();\r\n      }\r\n      this._jsPlumb.trigger(mouseUpOnTarget ? el2 : document, EVENT_MOUSEUP, e2);\r\n      return this._jsPlumb.select().get(conns);\r\n    }\r\n  }, {\r\n    key: \"aSyncDragConnection\",\r\n    value: function aSyncDragConnection(d1, d2, events) {\r\n      var _this2 = this;\r\n      events = events || {};\r\n      var el1 = this.getCanvas(d1),\r\n          el2 = this.getCanvas(d2);\r\n      var e1 = this.makeEvent(el1),\r\n          e2 = this.makeEvent(el2);\r\n      var conns = this._jsPlumb.select().length;\r\n      this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\r\n      setTimeout(function () {\r\n        if (events.beforeMouseMove) {\r\n          events.beforeMouseMove();\r\n        }\r\n        _this2._jsPlumb.trigger(document, EVENT_MOUSEMOVE, e2);\r\n        setTimeout(function () {\r\n          if (events.beforeMouseUp) {\r\n            events.beforeMouseUp();\r\n          }\r\n          _this2._jsPlumb.trigger(el2, EVENT_MOUSEUP, e2);\r\n          if (events.after) {\r\n            events.after(_this2._jsPlumb.select().get(conns));\r\n          }\r\n        }, 5);\r\n      }, 5);\r\n    }\r\n  }, {\r\n    key: \"dragAndAbortConnection\",\r\n    value: function dragAndAbortConnection(d1) {\r\n      var el1 = this.getCanvas(d1);\r\n      var e1 = this.makeEvent(el1);\r\n      this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, _distantPointEvent);\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEUP, _distantPointEvent);\r\n    }\r\n  }, {\r\n    key: \"detachConnection\",\r\n    value: function detachConnection(e, events) {\r\n      events = events || {};\r\n      var el1 = this.getEndpointCanvas(e);\r\n      var e1 = this.makeEvent(el1);\r\n      events.before && events.before();\r\n      this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\r\n      events.beforeMouseMove && events.beforeMouseMove();\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, _distantPointEvent);\r\n      events.beforeMouseUp && events.beforeMouseUp();\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEUP, _distantPointEvent);\r\n      events.after && events.after();\r\n    }\r\n  }, {\r\n    key: \"detachAndReattachConnection\",\r\n    value: function detachAndReattachConnection(e, events) {\r\n      events = events || {};\r\n      var el1 = this.getEndpointCanvas(e);\r\n      var e1 = this.makeEvent(el1);\r\n      events.before && events.before();\r\n      this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\r\n      events.beforeMouseMove && events.beforeMouseMove();\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, _distantPointEvent);\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, e1);\r\n      events.beforeMouseUp && events.beforeMouseUp();\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEUP, e1);\r\n      events.after && events.after();\r\n    }\r\n  }, {\r\n    key: \"detachConnectionByTarget\",\r\n    value: function detachConnectionByTarget(c, events) {\r\n      this.detachConnection(c.endpoints[1], events);\r\n    }\r\n  }, {\r\n    key: \"relocateTarget\",\r\n    value: function relocateTarget(conn, newEl, events) {\r\n      this.relocate(conn, 1, newEl, events);\r\n    }\r\n  }, {\r\n    key: \"relocate\",\r\n    value: function relocate(conn, idx, newEl, events) {\r\n      events = events || {};\r\n      newEl = this.getCanvas(newEl);\r\n      var el1 = this.getEndpointCanvas(conn.endpoints[idx]);\r\n      var e1 = this.makeEvent(el1);\r\n      var e2 = this.makeEvent(newEl);\r\n      events.before && events.before();\r\n      this._jsPlumb.trigger(el1, EVENT_MOUSEDOWN, e1);\r\n      events.beforeMouseMove && events.beforeMouseMove();\r\n      this._jsPlumb.trigger(document, EVENT_MOUSEMOVE, e2);\r\n      events.beforeMouseUp && events.beforeMouseUp();\r\n      this._jsPlumb.trigger(newEl, EVENT_MOUSEUP, e2);\r\n      events.after && events.after();\r\n    }\r\n  }, {\r\n    key: \"relocateSource\",\r\n    value: function relocateSource(conn, newEl, events) {\r\n      this.relocate(conn, 0, newEl, events);\r\n    }\r\n  }, {\r\n    key: \"makeEvent\",\r\n    value: function makeEvent(el) {\r\n      var b = el.getBoundingClientRect();\r\n      var l = b.x + b.width / 2,\r\n          t = b.y + b.height / 2;\r\n      return {\r\n        clientX: l,\r\n        clientY: t,\r\n        screenX: l,\r\n        screenY: t,\r\n        pageX: l,\r\n        pageY: t\r\n      };\r\n    }\r\n  }, {\r\n    key: \"getCanvas\",\r\n    value: function getCanvas(epOrEl) {\r\n      if (epOrEl.endpoint) {\r\n        return this.getEndpointCanvas(epOrEl);\r\n      } else {\r\n        return epOrEl;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"getEndpointCanvas\",\r\n    value: function getEndpointCanvas(ep) {\r\n      return ep.endpoint.canvas;\r\n    }\r\n  }, {\r\n    key: \"getConnectionCanvas\",\r\n    value: function getConnectionCanvas(c) {\r\n      return c.connector.canvas;\r\n    }\r\n  }, {\r\n    key: \"getEndpointCanvasPosition\",\r\n    value: function getEndpointCanvasPosition(ep) {\r\n      var c = this.getEndpointCanvas(ep);\r\n      return {\r\n        x: parseInt(c.style.left, 10),\r\n        y: parseInt(c.style.top, 10),\r\n        w: c.getAttribute(\"width\"),\r\n        h: c.getAttribute(\"height\")\r\n      };\r\n    }\r\n  }, {\r\n    key: \"within\",\r\n    value: function within(val, target, msg) {\r\n      this.ok(Math.abs(val - target) < VERY_SMALL_NUMBER, msg + \"[expected: \" + target + \" got \" + val + \"] [diff:\" + Math.abs(val - target) + \"]\");\r\n    }\r\n  }, {\r\n    key: \"assertManagedEndpointCount\",\r\n    value: function assertManagedEndpointCount(el, count) {\r\n      var id = this._jsPlumb.getId(el),\r\n          _mel = this._jsPlumb._managedElements[id];\r\n      this.equal(_mel.endpoints.length, count, id + \" has \" + count + \" endpoints in managed record\");\r\n    }\r\n  }, {\r\n    key: \"assertManagedConnectionCount\",\r\n    value: function assertManagedConnectionCount(el, count) {\r\n      var id = this._jsPlumb.getId(el),\r\n          _mel = this._jsPlumb._managedElements[id];\r\n      this.equal(_mel.connections.length, count, id + \" has \" + count + \" connections in managed record\");\r\n    }\r\n  }, {\r\n    key: \"fireEventOnEndpoint\",\r\n    value: function fireEventOnEndpoint(ep) {\r\n      var canvas = this.getEndpointCanvas(ep);\r\n      for (var _i3 = 0; _i3 < (arguments.length <= 1 ? 0 : arguments.length - 1); _i3++) {\r\n        this._jsPlumb.trigger(canvas, _i3 + 1 < 1 || arguments.length <= _i3 + 1 ? undefined : arguments[_i3 + 1]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"fireEventOnElement\",\r\n    value: function fireEventOnElement(e) {\r\n      for (var _i4 = 0; _i4 < (arguments.length <= 1 ? 0 : arguments.length - 1); _i4++) {\r\n        this._jsPlumb.trigger(e, _i4 + 1 < 1 || arguments.length <= _i4 + 1 ? undefined : arguments[_i4 + 1]);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"fireEventOnConnection\",\r\n    value: function fireEventOnConnection(connection) {\r\n      var canvas = this.getConnectionCanvas(connection);\r\n      for (var _len = arguments.length, events = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        events[_key - 1] = arguments[_key];\r\n      }\r\n      this.fireEventOnElement.apply(this, [canvas].concat(events));\r\n    }\r\n  }, {\r\n    key: \"clickOnConnection\",\r\n    value: function clickOnConnection(connection) {\r\n      this.fireEventOnConnection(connection, EVENT_CLICK);\r\n    }\r\n  }, {\r\n    key: \"dblClickOnConnection\",\r\n    value: function dblClickOnConnection(connection) {\r\n      this.fireEventOnConnection(connection, EVENT_DBL_CLICK);\r\n    }\r\n  }, {\r\n    key: \"tapOnConnection\",\r\n    value: function tapOnConnection(connection) {\r\n      this.fireEventOnConnection(connection, EVENT_MOUSEDOWN);\r\n      this.fireEventOnConnection(connection, EVENT_MOUSEUP);\r\n    }\r\n  }, {\r\n    key: \"dblTapOnConnection\",\r\n    value: function dblTapOnConnection(connection) {\r\n      this.fireEventOnConnection(connection, EVENT_MOUSEDOWN);\r\n      this.fireEventOnConnection(connection, EVENT_MOUSEUP);\r\n      this.fireEventOnConnection(connection, EVENT_MOUSEDOWN);\r\n      this.fireEventOnConnection(connection, EVENT_MOUSEUP);\r\n    }\r\n  }, {\r\n    key: \"clickOnElement\",\r\n    value: function clickOnElement(element, clickCount) {\r\n      this._jsPlumb.trigger(element, EVENT_CLICK, null, null, clickCount == null ? 1 : clickCount);\r\n    }\r\n  }, {\r\n    key: \"dblClickOnElement\",\r\n    value: function dblClickOnElement(element) {\r\n      this._jsPlumb.trigger(element, EVENT_DBL_CLICK);\r\n    }\r\n  }, {\r\n    key: \"tapOnElement\",\r\n    value: function tapOnElement(element) {\r\n      this._jsPlumb.trigger(element, EVENT_MOUSEDOWN);\r\n      this._jsPlumb.trigger(element, EVENT_MOUSEUP);\r\n    }\r\n  }, {\r\n    key: \"dblTapOnElement\",\r\n    value: function dblTapOnElement(element) {\r\n      this._jsPlumb.trigger(element, EVENT_MOUSEDOWN);\r\n      this._jsPlumb.trigger(element, EVENT_MOUSEUP);\r\n      this._jsPlumb.trigger(element, EVENT_MOUSEDOWN);\r\n      this._jsPlumb.trigger(element, EVENT_MOUSEUP);\r\n    }\r\n  }, {\r\n    key: \"getOverlayCanvas\",\r\n    value: function getOverlayCanvas(overlay) {\r\n      return overlay.canvas || overlay.path;\r\n    }\r\n  }, {\r\n    key: \"fireEventOnOverlay\",\r\n    value: function fireEventOnOverlay(connection, overlayId, event) {\r\n      var overlay = connection.getOverlay(overlayId);\r\n      var canvas = this.getOverlayCanvas(overlay);\r\n      this._jsPlumb.trigger(canvas, event);\r\n    }\r\n  }, {\r\n    key: \"clickOnOverlay\",\r\n    value: function clickOnOverlay(connection, overlayId) {\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_CLICK);\r\n    }\r\n  }, {\r\n    key: \"dblClickOnOverlay\",\r\n    value: function dblClickOnOverlay(connection, overlayId) {\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_DBL_CLICK);\r\n    }\r\n  }, {\r\n    key: \"tapOnOverlay\",\r\n    value: function tapOnOverlay(connection, overlayId) {\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEDOWN);\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEUP);\r\n    }\r\n  }, {\r\n    key: \"dblTapOnOverlay\",\r\n    value: function dblTapOnOverlay(connection, overlayId) {\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEDOWN);\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEUP);\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEDOWN);\r\n      this.fireEventOnOverlay(connection, overlayId, EVENT_MOUSEUP);\r\n    }\r\n  }, {\r\n    key: \"cleanup\",\r\n    value: function cleanup() {\r\n      var container = this._jsPlumb.getContainer();\r\n      this._jsPlumb.destroy();\r\n      for (var _i5 in this._divs) {\r\n        var d = document.getElementById(this._divs[_i5]);\r\n        d && d.parentNode.removeChild(d);\r\n      }\r\n      this._divs.length = 0;\r\n      var connCount = this._jsPlumb.select().length,\r\n          epCount = this._jsPlumb.selectEndpoints().length,\r\n          epElCount = container.querySelectorAll(\".jtk-endpoint\").length,\r\n          connElCount = container.querySelectorAll(\".jtk-connector\").length;\r\n      for (var k in container.__ta) {\r\n        for (var kk in container.__ta[k]) {\r\n          throw \"Container event bindings not empty for key \" + k;\r\n        }\r\n      }\r\n      if (connCount > 0) throw \"there are connections in the data model!\";\r\n      if (epCount > 0) throw \"there are endpoints in the data model!\";\r\n      if (epElCount > 0) {\r\n        throw \"there are \" + epElCount + \" endpoints left in the dom!\";\r\n      }\r\n      if (connElCount > 0) {\r\n        throw \"there are \" + connElCount + \" connections left in the dom!\";\r\n      }\r\n    }\r\n  }, {\r\n    key: \"makeContent\",\r\n    value: function makeContent(s) {\r\n      var d = document.createElement(\"div\");\r\n      d.innerHTML = s;\r\n      return d.firstChild;\r\n    }\r\n  }, {\r\n    key: \"length\",\r\n    value: function length(obj) {\r\n      var c = 0;\r\n      for (var _i6 in obj) {\r\n        if (obj.hasOwnProperty(_i6)) {\r\n          c++;\r\n        }\r\n      }\r\n      return c;\r\n    }\r\n  }, {\r\n    key: \"head\",\r\n    value: function head(obj) {\r\n      for (var _i7 in obj) {\r\n        return obj[_i7];\r\n      }\r\n    }\r\n  }, {\r\n    key: \"uuid\",\r\n    value: function uuid$1() {\r\n      return uuid();\r\n    }\r\n  }]);\r\n  return BrowserUITestSupport;\r\n}();\r\n\r\nfunction createTestSupportInstance(instance, ok, equal) {\r\n  return new BrowserUITestSupport(instance, ok, equal);\r\n}\r\nfunction createTestSupportInstanceQUnit(instance) {\r\n  return new BrowserUITestSupport(instance, QUnit.ok, QUnit.equal);\r\n}\r\n\r\nvar _jsPlumbInstanceIndex = 0;\r\nfunction getInstanceIndex() {\r\n  var i = _jsPlumbInstanceIndex + 1;\r\n  _jsPlumbInstanceIndex++;\r\n  return i;\r\n}\r\nfunction newInstance(defaults) {\r\n  return new BrowserJsPlumbInstance(getInstanceIndex(), defaults);\r\n}\r\nfunction ready(f) {\r\n  var _do = function _do() {\r\n    if (/complete|loaded|interactive/.test(document.readyState) && typeof document.body !== \"undefined\" && document.body != null) {\r\n      f();\r\n    } else {\r\n      setTimeout(_do, 9);\r\n    }\r\n  };\r\n  _do();\r\n}\r\n\r\nexport { ABSOLUTE, ADD_CLASS_ACTION, ATTRIBUTE_CONTAINER, ATTRIBUTE_GROUP, ATTRIBUTE_GROUP_CONTENT, ATTRIBUTE_JTK_ENABLED, ATTRIBUTE_JTK_SCOPE, ATTRIBUTE_MANAGED, ATTRIBUTE_NOT_DRAGGABLE, ATTRIBUTE_SCOPE, ATTRIBUTE_SCOPE_PREFIX, ATTRIBUTE_TABINDEX, ATTR_SCROLLABLE_LIST, AbstractBezierConnector, AbstractConnector, AbstractSegment, AnchorLocations, ArcSegment, ArrowOverlay, BLOCK, BOTTOM, BezierConnector, BezierSegment, BlankEndpoint, BlankEndpointHandler, BrowserJsPlumbInstance, BrowserUITestSupport, CHECK_CONDITION, CHECK_DROP_ALLOWED, CLASS_CONNECTED, CLASS_CONNECTOR, CLASS_CONNECTOR_OUTLINE, CLASS_DELEGATED_DRAGGABLE, CLASS_DRAGGABLE, CLASS_DRAGGED, CLASS_DRAG_ACTIVE, CLASS_DRAG_CONTAINER, CLASS_DRAG_HOVER, CLASS_ENDPOINT, CLASS_ENDPOINT_ANCHOR_PREFIX, CLASS_ENDPOINT_CONNECTED, CLASS_ENDPOINT_DROP_ALLOWED, CLASS_ENDPOINT_DROP_FORBIDDEN, CLASS_ENDPOINT_FLOATING, CLASS_ENDPOINT_FULL, CLASS_GHOST_PROXY, CLASS_GROUP_COLLAPSED, CLASS_GROUP_EXPANDED, CLASS_OVERLAY, CONNECTION, Collicat, Component, Connection, ConnectionDragSelector, ConnectionSelection, Connectors, ContainmentType, CustomOverlay, DEFAULT, DEFAULT_KEY_ALLOW_NESTED_GROUPS, DEFAULT_KEY_ANCHOR, DEFAULT_KEY_ANCHORS, DEFAULT_KEY_CONNECTIONS_DETACHABLE, DEFAULT_KEY_CONNECTION_OVERLAYS, DEFAULT_KEY_CONNECTOR, DEFAULT_KEY_CONTAINER, DEFAULT_KEY_ENDPOINT, DEFAULT_KEY_ENDPOINTS, DEFAULT_KEY_ENDPOINT_HOVER_STYLE, DEFAULT_KEY_ENDPOINT_HOVER_STYLES, DEFAULT_KEY_ENDPOINT_OVERLAYS, DEFAULT_KEY_ENDPOINT_STYLE, DEFAULT_KEY_ENDPOINT_STYLES, DEFAULT_KEY_HOVER_CLASS, DEFAULT_KEY_HOVER_PAINT_STYLE, DEFAULT_KEY_LIST_STYLE, DEFAULT_KEY_MAX_CONNECTIONS, DEFAULT_KEY_PAINT_STYLE, DEFAULT_KEY_REATTACH_CONNECTIONS, DEFAULT_KEY_SCOPE, DEFAULT_LIST_OPTIONS, DiamondOverlay, DotEndpoint, DotEndpointHandler, Drag, DragManager, ELEMENT, ELEMENT_DIV, EMPTY_BOUNDS, ENDPOINT, ERROR_SOURCE_DOES_NOT_EXIST, ERROR_SOURCE_ENDPOINT_FULL, ERROR_TARGET_DOES_NOT_EXIST, ERROR_TARGET_ENDPOINT_FULL, EVENT_ANCHOR_CHANGED, EVENT_BEFORE_START, EVENT_CLICK, EVENT_CONNECTION, EVENT_CONNECTION_ABORT, EVENT_CONNECTION_CLICK, EVENT_CONNECTION_CONTEXTMENU, EVENT_CONNECTION_DBL_CLICK, EVENT_CONNECTION_DBL_TAP, EVENT_CONNECTION_DETACHED, EVENT_CONNECTION_DRAG, EVENT_CONNECTION_MOUSEDOWN, EVENT_CONNECTION_MOUSEOUT, EVENT_CONNECTION_MOUSEOVER, EVENT_CONNECTION_MOUSEUP, EVENT_CONNECTION_MOVED, EVENT_CONNECTION_TAP, EVENT_CONTAINER_CHANGE, EVENT_CONTEXTMENU, EVENT_DBL_CLICK, EVENT_DBL_TAP, EVENT_DRAG, EVENT_DRAG_MOVE, EVENT_DRAG_START, EVENT_DRAG_STOP, EVENT_DROP, EVENT_ELEMENT_CLICK, EVENT_ELEMENT_CONTEXTMENU, EVENT_ELEMENT_DBL_CLICK, EVENT_ELEMENT_DBL_TAP, EVENT_ELEMENT_MOUSE_DOWN, EVENT_ELEMENT_MOUSE_MOVE, EVENT_ELEMENT_MOUSE_OUT, EVENT_ELEMENT_MOUSE_OVER, EVENT_ELEMENT_MOUSE_UP, EVENT_ELEMENT_TAP, EVENT_ENDPOINT_CLICK, EVENT_ENDPOINT_DBL_CLICK, EVENT_ENDPOINT_DBL_TAP, EVENT_ENDPOINT_MOUSEDOWN, EVENT_ENDPOINT_MOUSEOUT, EVENT_ENDPOINT_MOUSEOVER, EVENT_ENDPOINT_MOUSEUP, EVENT_ENDPOINT_REPLACED, EVENT_ENDPOINT_TAP, EVENT_FOCUS, EVENT_GROUP_ADDED, EVENT_GROUP_COLLAPSE, EVENT_GROUP_EXPAND, EVENT_GROUP_MEMBER_ADDED, EVENT_GROUP_MEMBER_REMOVED, EVENT_GROUP_REMOVED, EVENT_INTERNAL_CONNECTION, EVENT_INTERNAL_CONNECTION_DETACHED, EVENT_INTERNAL_ENDPOINT_UNREGISTERED, EVENT_MANAGE_ELEMENT, EVENT_MAX_CONNECTIONS, EVENT_MOUSEDOWN, EVENT_MOUSEENTER, EVENT_MOUSEEXIT, EVENT_MOUSEMOVE, EVENT_MOUSEOUT, EVENT_MOUSEOVER, EVENT_MOUSEUP, EVENT_NESTED_GROUP_ADDED, EVENT_NESTED_GROUP_REMOVED, EVENT_OUT, EVENT_OVER, EVENT_REVERT, EVENT_SCROLL, EVENT_START, EVENT_STOP, EVENT_TAP, EVENT_TOUCHEND, EVENT_TOUCHMOVE, EVENT_TOUCHSTART, EVENT_UNMANAGE_ELEMENT, EVENT_ZOOM, ElementDragHandler, ElementTypes, Endpoint, EndpointFactory, EndpointRepresentation, EndpointSelection, EventGenerator, EventManager, FALSE$1 as FALSE, FIXED, FlowchartConnector, GroupManager, INTERCEPT_BEFORE_DETACH, INTERCEPT_BEFORE_DRAG, INTERCEPT_BEFORE_DROP, INTERCEPT_BEFORE_START_DETACH, IS_DETACH_ALLOWED, JsPlumbInstance, JsPlumbList, JsPlumbListManager, KEY_CONNECTION_OVERLAYS, LEFT, LabelOverlay, LightweightFloatingAnchor, LightweightRouter, NONE, OptimisticEventGenerator, Overlay, OverlayFactory, PROPERTY_POSITION, PerimeterAnchorShapes, PlainArrowOverlay, PositioningStrategies, REDROP_POLICY_ANY, REDROP_POLICY_ANY_SOURCE, REDROP_POLICY_ANY_SOURCE_OR_TARGET, REDROP_POLICY_ANY_TARGET, REDROP_POLICY_STRICT, REMOVE_CLASS_ACTION, RIGHT, RectangleEndpoint, RectangleEndpointHandler, SELECTOR_CONNECTOR, SELECTOR_ENDPOINT, SELECTOR_GROUP, SELECTOR_GROUP_CONTAINER, SELECTOR_MANAGED_ELEMENT, SELECTOR_OVERLAY, SELECTOR_SCROLLABLE_LIST, SOURCE, SOURCE_INDEX, STATIC, StateMachineConnector, StraightConnector, StraightSegment, SupportedEdge, TARGET, TARGET_INDEX, TOP, TRUE$1 as TRUE, TWO_PI, UIGroup, UINode, UNDEFINED, Viewport, WILDCARD, X_AXIS_FACES, Y_AXIS_FACES, _createPerimeterAnchor, _removeTypeCssHelper, _updateHoverStyle, add, addClass, addToDictionary, addToList, addWithFunction, arraysEqual, att, bezierLineIntersection, boundingBoxIntersection, boxIntersection, classList, clone, cls, compoundEvent, computeBezierLength, consume, convertToFullOverlaySpec, createElement, createElementNS, createFloatingAnchor, createTestSupportInstance, createTestSupportInstanceQUnit, dist, distanceFromCurve, each, encloses, extend, fastTrim, filterList, filterNull, findAllWithFunction, findParent, findWithFunction, fixPrecision, forEach, fromArray, functionChain, getAllWithFunction, getClass, getDefaultFace, getElementPosition, getElementSize, getElementType, getEventSource, getFromSetWithFunction, getPageLocation, getPositionOnElement, getTouch, getWithFunction, getsert, gradient, gradientAtPoint, gradientAtPointAlongPathFrom, groupDragConstrain, hasClass, insertSorted, intersects, isArrayLike, isArrowOverlay, isAssignableFrom, isBoolean, isContinuous, isCustomOverlay, isDate, isDiamondOverlay, isDynamic, isEdgeSupported, isEmpty, _isFloating as isFloating, isFullOverlaySpec, isFunction, isInsideParent, isLabelOverlay, isMouseDevice, isNamedFunction, isNodeList, isNumber, isObject, isPlainArrowOverlay, isPoint, isSVGElement, isString, isTouchDevice, lineIntersection, lineLength, lineRectangleIntersection, locationAlongCurveFrom, log, logEnabled, makeLightweightAnchorFromSpec, map, matchesSelector$1 as matchesSelector, merge, nearestPointOnCurve, newInstance, normal, objectsEqual, offsetRelativeToRoot, offsetSize, onDocumentReady, pageLocation, perpendicularLineTo, perpendicularToPathAt, pointAlongCurveFrom, pointAlongPath, pointOnCurve, pointOnLine, populate, quadrant, ready, registerEndpointRenderer, remove, removeClass, removeWithFunction, replace, rotateAnchorOrientation, rotatePoint, setForceMouseEvents, setForceTouchEvents, setToArray, sgn$1 as sgn, snapToGrid, subtract, suggest, svg, svgWidthHeightSize, svgXYPosition, theta, toggleClass, touchCount, touches, uuid, wrap };\r\n","import { BezierConnector, FlowchartConnector, newInstance, ready } from \"@jsplumb/browser-ui\";\r\nimport { UserInputEqn } from \"./whiteboard-lib\";\r\n\r\nvar whiteboard = document.getElementById('whiteboard');\r\n  \r\n\r\n\r\nready(() => {\r\n    const instance = newInstance({\r\n        container: whiteboard,\r\n        connector: {\r\n            type: FlowchartConnector.type,\r\n            options: {\r\n            }\r\n        }\r\n    })\r\n    var nodes = [];\r\n    nodes.push(new UserInputEqn(whiteboard, instance));\r\n})","import { Endpoint, JsPlumbInstance } from \"@jsplumb/browser-ui\";\r\n// import {getInterfa}\r\ntype Pos = \"left\" | \"center\" | \"right\"\r\n\r\nclass Input {\r\n    minCount: number; // I can't think of any case where this would be more than one, but sure\r\n    maxCount: number; // set to null for infinite\r\n    pos: Pos;\r\n    endpoints: Endpoint[];\r\n    containers: HTMLElement[];\r\n}\r\n\r\ninterface Output {\r\n    pos: Pos;\r\n    endpoint: Endpoint;\r\n    container: HTMLElement[];\r\n    strTex: string;\r\n}\r\n\r\nclass eqnOutput implements Output {\r\n    pos: Pos;\r\n    endpoint: Endpoint;\r\n    container: HTMLElement[];\r\n    cssClass: string = \"\";\r\n    strTex: string = \"=\";\r\n    constructor(instance: JsPlumbInstance) {\r\n\r\n    }\r\n}\r\n\r\ninterface Node {\r\n    children: Node[];\r\n    frozen: boolean;\r\n\r\n    updateSelf(): void;\r\n    updateChildren(): void;\r\n}\r\n\r\ninterface UserInputNode extends Node {\r\n    outputs: Output[];\r\n}\r\n\r\n// class OutputsRow {\r\n//     outputs: Output[];\r\n//     left: HTMLElement[];\r\n//     middle: HTMLElement[];\r\n//     right: HTMLElement[];\r\n\r\n//     constructor(outputs: Output[]) {\r\n//         this.outputs = outputs;\r\n//         this.updateSelf();\r\n//     }\r\n\r\n//     function updateSelf(): void {\r\n//         for (i of this.outputs) {\r\n//             console.log(i.strTex)\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport class UserInputEqn implements UserInputNode {\r\n    outputs: Output[];\r\n    children: Node[];\r\n    frozen: boolean;\r\n\r\n    container: HTMLElement;\r\n    mainRowContainer: HTMLElement;\r\n    lhsSpan: HTMLSpanElement;\r\n    lhsMathField: any;\r\n\r\n    constructor(whiteboard: HTMLElement, instance:JsPlumbInstance, pos: number[] = [0, 0]) {\r\n        this.outputs = [];\r\n        this.children = [];\r\n        this.frozen = false;\r\n        this.container = document.createElement('span');\r\n        // this.container.classList.add('draggableNode');\r\n        this.container.classList.add('node-container');\r\n        whiteboard.appendChild(this.container);\r\n\r\n        // setup main row\r\n        this.mainRowContainer = document.createElement('main-row-container');\r\n        this.lhsSpan = document.createElement('span');\r\n        this.lhsSpan.id = 'lhsSpan';\r\n        // this.lhsMathField = MathField\r\n        this.mainRowContainer.appendChild(this.lhsSpan);\r\n\r\n        instance.manage(this.container);\r\n    }\r\n    updateSelf(): void {\r\n        console.log(\"Updating\");\r\n    }\r\n    updateChildren(): void {\r\n        console.log(\"Updating Children\");\r\n    }\r\n}\r\n\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","writable","key","_createClass","protoProps","staticProps","_defineProperty","value","_inherits","subClass","superClass","create","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_assertThisInitialized","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","result","Super","arguments","apply","_get","property","receiver","base","_superPropBase","object","hasOwnProperty","desc","getOwnPropertyDescriptor","_slicedToArray","arr","_arrayWithHoles","Array","isArray","_iterableToArrayLimit","_s","_e","_i","_arr","_n","_d","next","done","push","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_arrayLikeToArray","_iterableToArray","iter","from","_nonIterableSpread","minLen","toString","slice","name","test","len","arr2","filterList","list","missingIsFalse","indexOf","extend","o1","o2","keys","_o1","_o2","isNumber","isString","isBoolean","isObject","isFunction","clone","a","Date","getTime","_b","c","j","merge","b","collations","overwrites","ar","cMap","oMap","functionChain","successValue","failValue","fns","forEach","f","findWithFunction","getWithFunction","idx","getFromSetWithFunction","out","t","removeWithFunction","splice","fromArray","remove","l","addToDictionary","map","insertAtStart","suggest","item","insertAtHead","unshift","FlowchartConnector","newInstance","ready","ElementTypes","PerimeterAnchorShapes","AnchorLocations","PositioningStrategies","ContainmentType","FaceValues","SupportedEdge","_touchMap","_tapProfiles2","_opposites","_clockwiseOptions","_antiClockwiseOptions","_edgeSortFunctions","lut$1","i$1","uuid","d0","Math","random","d1","d2","d3","rotatePoint","point","center","rotation","radial","x","y","cr","cos","PI","sr","sin","fastTrim","str","replace","ws","charAt","fn","_i3","log","_len","args","_key","console","msg","sgn$1","wrap","wrappedFunction","newFunction","returnOnThisValue","r","getsert","valueGenerator","has","isAssignableFrom","cls","proto","matchesSelector$1","el","selector","ctx","possibles","parentNode","querySelectorAll","consume","doNotPreventDefault","stopPropagation","returnValue","preventDefault","findParent","container","matchOnElementAlso","getEventSource","srcElement","_getClassName","className","baseVal","_classManip","classesToAdd","classesToRemove","cta","split","ctr","curClasses","_oneSet","add","classes","_setClassName","cn","classList","cl","join","isNodeList","documentElement","nodeType","addClass","clazz","_one","part","removeClass","parts","createElementNS","ns","tag","style","atts","document","createElement","setAttribute","offsetRelativeToRoot","box","getBoundingClientRect","body","docElem","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","top","round","left","getElementPosition","pc","getContainer","ec","z","currentZoom","getElementSize","w","width","h","height","getElementType","SVGElement","SVG","HTML","att","_len3","attName","_key3","an","SOURCE","TARGET","BLOCK","NONE","ABSOLUTE","FIXED","ATTRIBUTE_GROUP","ATTRIBUTE_MANAGED","ATTRIBUTE_NOT_DRAGGABLE","ATTRIBUTE_TABINDEX","ATTRIBUTE_SCOPE_PREFIX","ATTRIBUTE_SCOPE","CHECK_CONDITION","CLASS_CONNECTOR","CLASS_ENDPOINT","CLASS_ENDPOINT_FLOATING","CLASS_GROUP_COLLAPSED","CLASS_GROUP_EXPANDED","CLASS_OVERLAY","EVENT_CONNECTION","EVENT_INTERNAL_CONNECTION","EVENT_CONNECTION_MOVED","EVENT_INTERNAL_ENDPOINT_UNREGISTERED","EVENT_INTERNAL_CONNECTION_DETACHED","EVENT_MANAGE_ELEMENT","EVENT_MAX_CONNECTIONS","EVENT_UNMANAGE_ELEMENT","EVENT_ZOOM","IS_DETACH_ALLOWED","INTERCEPT_BEFORE_DROP","INTERCEPT_BEFORE_DETACH","SELECTOR_MANAGED_ELEMENT","svgAttributeMap","STROKE_DASHARRAY","DASHSTYLE","ELEMENT_PATH","_attr","node","attributes","_node","version","xmlns","_pos","d","_applyStyles","parent","fill","stroke","strokeWidth","sep","styleToUse","floor","_appendAtIndex","svg","path","childNodes","insertBefore","appendChild","compoundEvent","stem","event","subevent","ATTRIBUTE_CONTAINER","ATTRIBUTE_JTK_ENABLED","ATTRIBUTE_JTK_SCOPE","ENDPOINT","ELEMENT","CONNECTION","EVENT_CLICK","EVENT_CONTEXTMENU","EVENT_DBL_CLICK","EVENT_DBL_TAP","EVENT_MOUSEDOWN","EVENT_MOUSEENTER","EVENT_MOUSEEXIT","EVENT_MOUSEMOVE","EVENT_MOUSEUP","EVENT_MOUSEOUT","EVENT_MOUSEOVER","EVENT_REVERT","EVENT_CONNECTION_DRAG","EVENT_ELEMENT_CLICK","EVENT_ELEMENT_DBL_CLICK","EVENT_ELEMENT_DBL_TAP","EVENT_ELEMENT_MOUSE_OUT","EVENT_ELEMENT_MOUSE_OVER","EVENT_ELEMENT_MOUSE_MOVE","EVENT_ELEMENT_MOUSE_UP","EVENT_ELEMENT_MOUSE_DOWN","EVENT_ELEMENT_CONTEXTMENU","EVENT_ELEMENT_TAP","EVENT_ENDPOINT_CLICK","EVENT_ENDPOINT_DBL_CLICK","EVENT_ENDPOINT_MOUSEOUT","EVENT_ENDPOINT_MOUSEOVER","EVENT_ENDPOINT_MOUSEUP","EVENT_ENDPOINT_MOUSEDOWN","EVENT_CONNECTION_CLICK","EVENT_CONNECTION_DBL_CLICK","EVENT_CONNECTION_DBL_TAP","EVENT_CONNECTION_MOUSEOUT","EVENT_CONNECTION_MOUSEOVER","EVENT_CONNECTION_MOUSEUP","EVENT_CONNECTION_MOUSEDOWN","EVENT_CONNECTION_CONTEXTMENU","EVENT_CONNECTION_TAP","PROPERTY_POSITION","SELECTOR_CONNECTOR","SELECTOR_ENDPOINT","SELECTOR_GROUP","SELECTOR_GROUP_CONTAINER","SELECTOR_OVERLAY","EMPTY_BOUNDS","xmin","Infinity","xmax","ymin","ymax","AbstractSegment","params","x1","y1","x2","y2","lineIntersection","boxIntersection","UNDEFINED","DEFAULT","TRUE$1","FALSE$1","matchesSelector","_t","_pi","doCompute","end","composedPath","guid","isTouchDevice","forceTouchEvents","navigator","maxTouchPoints","isMouseDevice","touchMap","_genLoc","prefix","touches","pageLocation","changedTouches","targetTouches","_bind","type","originalFn","options","_store","__tauid","addEventListener","attachEvent","_unbind","_this","_each$1","_el","_unstore","__ta","__taExtra","__taUnstore","removeEventListener","detachEvent","__taTouchProxy","entries","g","NOT_SELECTOR_REGEX","_curryChildFilter","children","evt","nc","sel","m","match","_fn","pathInfo","DefaultHandler","tfn","getAttribute","_tapProfiles","taps","meeHelper","__tamee","TapHandler","clickThreshold","dblClickThreshold","__taTapHandler","tt","tap","dbltap","down","downSelectors","finished","setTimeout","clearSingle","clearDouble","up","currentTarget","tc","eventId","pLoop","downHandler","upHandler","ds","MouseEnterExitHandler","activeElements","over","mouseenter","mouseexit","relatedTarget","toElement","EventManager","mouseEnterExitHandler","generate","tapHandler","_c","_f","_doBind","originalEvent","payload","detail","originalIsMouse","MouseEvent","eventToBind","bindingAMouseEvent","pl","sl","screenX","screenY","clientX","clientY","evtName","ite","createEvent","eventGenerators","pageX","pageY","touchList","_touchList","index","Touch","identifier","initTouchEvent","initEvent","initMouseEvent","_evt","dispatchEvent","segmentMultipliers","inverseSegmentMultipliers","TWO_PI","gradient","p1","p2","lineLength","sqrt","pow","quadrant","intersects","r1","r2","a1","a2","b1","b2","pointOnLine","fromPoint","toPoint","distance","segmentMultiplier","theta","atan","abs","isInsideParent","pos","getSize","ss","leftEdge","rightEdge","topEdge","bottomEdge","EVENT_START","EVENT_BEFORE_START","EVENT_DRAG","EVENT_STOP","TRUE","FALSE","_classes","delegatedDraggable","noSelect","ghostProxy","clonedDrag","positionerSetters","Map","absolutePosition","concat","xyAttributes","positionerGetters","offsetLeft","offsetTop","parseFloat","sizeSetters","sizeGetters","offsetWidth","offsetHeight","_events","_devNull","_each","tagName","Base","manager","eventManager","enabled","scopes","Drag","_Base","_super","_class","css","draggable","downListener","_downListener","bind","upListener","_upListener","moveListener","_moveListener","rightButtonCanDrag","consumeStartEvent","_dragEl","scroll","trackScroll","_multipleDrop","multipleDrop","_canDrag","canDrag","_consumeFilteredEvents","consumeFilteredEvents","_parent","_ignoreZoom","ignoreZoom","_ghostProxyParent","ghostProxyParent","scrollTracker","_trackScroll","_useGhostProxy","dragEl","_activeSelectorParams","useGhostProxy","makeGhostProxy","_ghostProxyFunction","cloneNode","draggableId","_availableSelectors","on","_moving","currentScrollValues","dsx","_lastScrollValues","dsy","_lastPosition","dx","_downAt","dy","_z","getZoom","_initialScroll","moveBy","listeners","off","unmark","stop","removeChild","revertFunction","getPosition","setPosition","_posAtDown","_dispatch","defaultPrevented","which","button","isEnabled","collicat","_testFilter","getInputFilterSelector","_elementToDrag","eventTarget","findMatchingSelector","availableSelectors","parentElement","childElement","findDelegateElement","currentParent","filter","matches","exclude","filterExclude","initial","dragInit","position","_p2","_pagePosAtDown","_pageDelta","_size","drag","size","dispatchResult","mark","abort","_pos2","_z2","_constrainRect","_ghostDx","_ghostDy","_isConstrained","_ghostProxyOffsets","desiredLoc","toGrid","cPos","_doConstrain","gp","_currentParentPosition","_ghostParentPosition","originalPos","retrieveOriginalElement","force","positions","dPos","finalPos","selection","dragAbort","grid","thresholdX","DEFAULT_GRID_X","thresholdY","DEFAULT_GRID_Y","snapThreshold","_dx","_dxl","_dxt","_dy","_dyl","_dyt","_this$resolveGrid","resolveGrid","tx","ty","val","constrainFunction","_filters","rv","_exclude","_this2","_katavorioId","atStart","Collicat","inputFilterSelector","DEFAULT_INPUTS","zoom","positioningStrategy","_positionGetter","_positionSetter","_sizeGetter","_sizeSetter","_p","events","_katavorioDrag","_prepareParams","destroy","CLASS_DRAG_SELECTED","DragSelection","__activeSet","_dragSelection","reset","jel","_dragElementStartPositions","clear","_dragElementPositions","_dragSizes","_dragElements","_this3","_activeSet","vp","viewport","parseInt","currentPosition","originalPosition","callback","_this4","op","_jsPlumbParentGroup","constrain","constrainRect","max","min","_this5","orig","getId","_this6","CLASS_DRAG_ACTIVE","CLASS_DRAG_HOVER","DragManager","dragSelection","dragSelectClass","selected","active","hover","setZoom","handler","dragOptions","start","onStart","onDrag","onStop","handlerBeforeStart","onBeforeStart","beforeStart","onDragInit","onDragAbort","containment","notNegative","padding","containmentPadding","parentEnclosed","_filtersToAdd","filterToAdd","addFilter","revalidate","addSelector","handlers","removeFilter","filters","currentFilters","destroyDraggable","handlerAndOptions","ElementDragHandler","dropGroup","_intersectingGroups","targetGroup","groupLoc","group","intersectingElement","currentGroup","overrideDrop","_this$_currentDragGro","getDragElement","getDropGroup","elementsToProcess","addElementToProcess","currentPos","originalGroup","redrawResult","reverted","each","_currentDragGroup","members","offset","_currentDragGroupOffsets","elId","_currentDragGroupSizes","pp","_currentDragGroupOriginalPositions","wasInGroup","isInOriginalGroup","parentOffset","orphanedPosition","_pruneOrOrphan","pruned","revert","_computeOffsetByParentGroup","groupManager","addToGroup","setElementPosition","select","source","elementDraggingClass","sourceElementDraggingClass","targetElementDraggingClass","originalElement","ghost","getGroupContentArea","fire","elements","_dragPayload","_cleanup","_groupLocations","_currentDragParentGroup","hoverSuspended","_dragOffset","elSize","ui","bounds","findIntersectingGroups","ancestorsOfIntersectingGroups","Set","getAncestors","elBounds","updatePositions","k","parentGroupOffset","contentArea","caOffset","ancestorOffset","elOffset","cont","nd","elementsDraggable","details","descendants","ancestors","filterActiveSet","initialisePositions","dragGroup","dragGroupMemberSpec","_isJsPlumbGroup","allowNestedGroups","isNotInAGroup","membersAreDroppable","dropOverride","isGhostOrNotConstrained","getGroups","elementGroup","_jsPlumbGroup","droppable","isDescendant","groupEl","groupElId","boundingRect","sort","isAncestor","_dragGroupByElementIdMap","dragStartReturn","spec","_dragGroupMap","els","removeFromDragGroup","_len2","_key2","member","_this7","_this8","doNotTransferToAncestor","isDefinitelyNotInsideParent","prune","removeGroup","orphan","endpointMap$1","endpointComputers","EndpointFactory","ep","message","epr","endpoint","getParams","compute","anchorPoint","orientation","endpointStyle","registerHandler","eph","EndpointRepresentation","cssClass","addEndpointClass","removeEndpointClass","computedValue","setEndpointVisible","TOP","LEFT","RIGHT","right","BOTTOM","bottom","X_AXIS_FACES","Y_AXIS_FACES","LightweightFloatingAnchor","element","elementId","locations","ox","oy","offx","offy","iox","ioy","router","setAnchorOrientation","getEndpointOrientation","_updateOrientationInRouter","opposites","clockwiseOptions","antiClockwiseOptions","_isFaceAvailable","face","faces","isEdgeSupported","edge","lockedAxis","lockedFace","_top","_bottom","_left","_right","namedValues","namedContinuousValues","getNamedAnchor","Perimeter","_createPerimeterAnchor","anchorCount","shape","anchorGenerators","da","rotate$1","points","amountInDegrees","_x","_y","_createAnchor","ca","_a","currentLocation","locked","isFloating","isContinuous","timestamp","clockwise","__currentFace","verifyFace","secondBest","lastChoice","isDynamic","isPrimitiveAnchorSpec","sa","every","makeLightweightAnchorFromSpec","_spec","aSpec","circleGenerator","step","current","shapeGenerator","_path","segments","anchorsPerFace","_computeFace","fractionalLength","rectangleGenerator","Circle","Ellipse","Rectangle","Square","Diamond","Triangle","ConnectionDragSelector","def","undefined","redrop","REDROP_POLICY_STRICT","SELECTOR_DRAG_ACTIVE_OR_HOVER","SOURCE_SELECTOR_UNIQUE_ENDPOINT_DATA","EndpointDragHandler","mousedownHandler","_mousedownHandler","mouseupHandler","_mouseupHandler","parentSelector","child","sourceSelector","_getSourceDefinition","sourceEl","_resolveDragParent","sourceElement","_activeDefinition","canAcceptNewConnection","elxy","getPositionOnElement","tempEndpointParams","isTemporarySource","scope","scopeFromElement","parameterExtractor","maxConnections","sourceCount","onMaxConnections","stopImmediatePropagation","anchorPositionFinder","maybeAnchorSpec","anchor","_originalAnchorSpec","areDefaultAnchorsSet","defaults","anchors","_originalAnchor","prepareAnchor","anchorSpecToUse","deleteOnEmpty","_internal_newEndpoint","extract","mergeParameters","uniqueEndpoint","existingUniqueEndpoint","getManagedData","setManagedData","finalEndpoint","_jsPlumbOrphanedEndpoints","trigger","canvas","_i2","_maybePruneEndpoint","ipco","ips","_makeDraggablePlaceholder","placeholderInfo","jtk","_cleanupDraggablePlaceholder","_appendElementToContainer","manage","unmanage","data","jpc","_newConnection","sourceEndpoint","targetEndpoint","floatingEndpoint","paintStyle","connectorStyle","hoverPaintStyle","connectorHoverStyle","connector","overlays","connectorOverlays","edgeType","connectorClass","hoverClass","connectorHoverClass","pending","draggingClass","existingJpc","setHover","anchorIdx","endpoints","detachFromConnection","addConnection","sourceOrTargetChanged","suspendedEndpoint","suspendedElement","suspendedElementId","suspendedElementType","referenceEndpoint","parameters","floatingId","floatingIndex","_refreshEndpoint","_continue","isSource","isFull","dragAllowedWhenFull","isDetachable","beforeDrag","checkCondition","sourceId","connection","canvasElement","sourceElementId","floatingAnchor","actualEndpoint","endpointToFloat","aae","_deriveEndpointAndAnchorSpec","getPaintStyle","preparedAnchor","existingEndpoint","_paintEndpoint","_anchor","floatingElement","isSourceDrag","candidate","isTarget","endpointDropTargets","targetEl","sourceDef","sourceSelectors","sSel","_findTargetZones","rank","targetDefs","indexes","findAllWithFunction","predicate","targetSelectors","tSel","targetDef","allowLoopback","dragSelector","targetZonesSelector","currentDropTarget","_stopped","endpointRepresentation","connectorSelector","_this$_shouldStartDra2","_shouldStartDrag","isConnectionBeingDragged","_createFloatingEndpoint","_populateTargets","startNewConnectionDrag","startExistingConnectionDrag","_registerFloatingConnection","currentlyDragging","beforeStartParams","floatingElementSize","newDropTarget","_getFloatingAnchorIndex","endpointDropAllowedClass","endpointDropForbiddenClass","_paintConnection","_mtNew","connections","deleteEndpoint","existingConnection","_shouldReattach","targetId","_doForceReattach","_discard","dropEndpoint","_getDropEndpoint","_reattachOrDiscard","_doContinue","isDetachAllowed","isDropAllowed","_drop","suspendedIndex","_maybeCleanup","selectorFilter","_instance","negate","ok","getSelector","targetDefinition","targetElement","eps","getType","anchorsToUse","validAnchorsSpec","anchorFromDef","anchorFromPositionFinder","dropAnchor","portId","tpayload","_forceDetach","repaint","isReattach","_forceReattach","otherEndpointIdx","otherEndpoint","deleteConnection","optionalData","fireMoveEvent","originalSourceId","newSourceId","originalTargetId","newTargetId","originalEndpoint","newEndpoint","_toDelete","mergeData","setAnchor","_finaliseConnection","info","conn","floatingConnections","GroupDragHandler","_ElementDragHandler","doRevalidate","_revalidate","newEl","HTMLElementOverlay","overlay","htmlElementOverlay","component","elementCreator","overlayClass","_appendElement","ts","webkitTransform","mozTransform","msTransform","oTransform","transform","isVisible","display","cachedDimensions","forceRefresh","EventGenerator","ret","tick","queue","eventsSuspended","_listeners","_gone","shouldFireEvent","eventsToDieOn","_drain","pop","eventOrListener","listener","__jsPlumb","forEvent","setSuspendEvents","convertToFullOverlaySpec","_EventGenerator","OptimisticEventGenerator","Overlay","_event","setLocation","location","newLocation","_l","isNaN","visible","setOverlayVisible","overlayMap","OverlayFactory","LabelOverlay","_Overlay","label","setLabel","labelText","updateLabel","isLabelOverlay","_splitType","_mapType","typeId","DEFAULT_TYPE_KEY","_internalLabelOverlayId","TYPE_ITEM_OVERLAY","ACTION_REMOVE","_applyTypes","getDefaultType","model","getValue","td","getTypeDescriptor","defType","_types","tid","overrides","mergeStrategy","fromString","values","substring","_val","applyType","_removeTypeCssHelper","_updateHoverStyle","mergedHoverStyle","Component","beforeDetach","beforeDrop","_typeCache","getIdPrefix","_defaultType","defaultScope","overlayPositions","oo","defaultOverlayKey","getDefaultOverlayKey","defaultOverlays","fo","labelLocation","defaultLabelLocation","clearTypes","_somethingAdded","_cont","setPaintStyle","setHoverPaintStyle","paintStyleInUse","keep","existing","updateFrom","reattachOverlay","getCachedTypeItem","setVisible","addOverlay","removeOverlay","destroyOverlay","unbind","_hover","showOverlays","hideOverlays","xy","action","addOverlayClass","removeOverlayClass","cascade","_clazzManip","_processOverlay","_newOverlay","oa","cacheTypeItem","getData","loc","labelLocationAttribute","getOverlay","ids","overlayPlacements","overlayId","dontCleanup","lo","getLabelOverlay","getLabel","ll","mergedParams","_params2","typeParameters","Endpoint","_Component","appendToDefaultType","endpointHoverStyle","connectionCost","connectionsDirected","currentAnchorClass","reattachConnections","connectionsDetachable","setEndpoint","setPreparedAnchor","anchorParamsToUse","Top","addType","ac","oldAnchorClass","endpointAnchorClassPrefix","anchorClass","_updateAnchorClass","currentAnchor","anchorParams","transientDetach","count","doNotChangeConnections","doNotNotifyOtherEndpoint","oIdx","typeMap","applyEndpointType","deleted","destroyEndpoint","found","allowed","endpointArgs","fep","_ep","prepareEndpoint","setPreparedEndpoint","TYPE_ITEM_ANCHORS","TYPE_ITEM_CONNECTOR","endpointSpec","endpointsSpec","es","endpointStyles","outlineStroke","outlineWidth","ehs","endpointHoverStyles","u","uuids","reattach","detachable","Connection","previousConnection","sourceAnchor","targetAnchor","lastPaintedAt","makeEndpoint","deleteEndpointsOnEmpty","_detachable","_reattach","initialPaintStyle","outlineColor","lineWidth","color","_suspendDrawing","initialTimestamp","_suspendedAt","cost","directed","_setConnector","setData","_connector","prepareConnector","setPreparedConnector","setDetachable","setReattach","_anchors","setConnectionAnchors","isDynamicAnchor","applyConnectorType","addConnectorClass","removeConnectorClass","setConnectorVisible","destroyConnector","getUuid","connectorSpec","connectorArgs","_makeConnector","co","doNotRepaint","doNotChangeListenerComponent","previous","previousClasses","getConnectorClass","getOverlays","endpointDef","ebe","getEndpoints","_idx","_new","ensureSVGOverlayPath","SVGElementOverlay","SvgComponent","extents","wh","isFinite","attrs","containerType","SvgEndpoint","endpointClass","getEndpointElement","paint","makeNode","updateNode","AbstractConnector","stub","getDefaultStubs","sourceStub","targetStub","gap","sourceGap","targetGap","maxStub","internal","geometry","edited","curX","curY","connectorLocation","findClosestPointOnPath","segmentProportions","boundingBoxIntersection","curLoc","getLength","segmentProportionalLengths","totalLength","absolute","inSegmentProportion","segment","proportion","updateBounds","sourcePos","targetPos","swapX","swapY","so","to","noSourceOrientation","noTargetOrientation","oIndex","v1","v2","sx","sy","oProduct","xSpan","ySpan","mx","my","startStubX","startStubY","endStubX","endStubY","isXGreaterThanStubTimes2","isYGreaterThanStubTimes2","opposite","perpendicular","orthogonal","sourceAxis","stubs","anchorOrientation","segBounds","seg","_findSegmentForLocation","pointOnPath","gradientAtPoint","pointAlongPathFrom","paintInfo","_prepareCompute","_clearSegments","_compute","_updateSegmentProportions","ArrowOverlay","direction","foldback","currentConnectionPaintStyle","hxy","txy","tail","cxy","length1","theta2","fromLoc","_","__","isArrowOverlay","DiamondOverlay","_ArrowOverlay","isDiamondOverlay","PlainArrowOverlay","isPlainArrowOverlay","CustomOverlay","isCustomOverlay","DEFAULT_KEY_PAINT_STYLE","DotEndpoint","_EndpointRepresentati","radius","defaultOffset","defaultInnerRadius","DotEndpointHandler","lw","UINode","UIGroup","_UINode","proxied","endpointIndex","doNotFireEvent","dragArea","__el","_updateConnectionsForGroup","manipulateDOM","doNotUpdateConnections","uiNode","resolveNode","_doRemove","orphanedPositions","newPosition","entry","getManagedElements","elpos","getOffsetRelativeToRoot","cpos","collapsed","_appendElementToGroup","cg","GroupManager","sourceGroup","getGroupFor","_connectionSourceMap","_connectionTargetMap","_cleanupDetachedConnection","newElement","newGroup","connMap","otherConnMap","proxies","groupMap","collapseGroup","groupId","deleteMembers","manipulateView","actualGroup","getGroup","expandGroup","newPositions","removeAll","orphanAll","_g","getOffset","childMembers","gs","gt","c1","getConnections","c2","processed","oneSet","otherEl","esg","esgcp","collapseParent","etg","et","etgcp","proxyConnection","getEndpoint","getAnchor","unproxyConnection","parentEl","setGroupVisible","collapsedConnectionIds","_collapseSet","conns","_collapseConnection","cascadeCollapse","repaintGroup","collapsedGroup","collapsedIds","_expandSet","_expandConnection","_expandNestedGroup","ignoreCollapsedStateForNested","isGroup","droppingGroup","addGroup","handleDroppedConnections","oidx","proxiedElement","originalEp","isElementDescendant","possibleAncestor","childGroups","possibleDescendant","ancestor","getDescendants","SelectionBase","removeAllOverlays","removeOverlays","showOverlay","hideOverlay","suspend","toggleType","removeType","EndpointSelection","_SelectionBase","deleteEveryConnection","ConnectionSelection","Transaction","EMPTY_POSITION","dirty","entryComparator","arrayEntry","reverseEntryComparator","_updateElementIndex","array","sortDescending","insertSorted","comparator","flip","_clearElementIndex","Viewport","minx","maxx","miny","maxy","updatedElement","doNotRecalculateBounds","_sortedElements","_recalculateBounds","_bounds","_elementMap","_point","p3","p4","_transformedElementMap","_updateBounds","_currentTransaction","affectedElements","_finaliseUpdate","recomputeBounds","updateElement","me","_rightAndBottomSort","_leftAndTopSort","edgeSortFunctions","_isFloating","getCurrentLocation","LightweightRouter","_removeEndpointFromAnchorLists","anchorLocations","cx","cy","targetRotation","ax","ay","acx","acy","rotated","_applyRotations","twh","minIdx","minDist","_distance","_setComputedPosition","computedPosition","_o","_getCurrentLocation2","currentLoc","_computeSingleLocation","_singleAnchorCompute","_getCurrentLocation4","currentIdx","_this$_anchorSelector2","_anchorSelector","tRotation","newIdx","newLoc","_anchorLocationChanged","_anchorLists","cd","placeSomeAnchors","unsortedConnections","isHorizontal","otherMultiplier","_placeAnchorsOnLine","horizontal","reverse","sizeInAxis","sizeInOtherAxis","other","xp","yp","xLoc","yLoc","weAreSource","lists","order","aBoolean","otherElId","edgeId","connsToPaint","endpointsToPaint","endpointId","listToAddTo","listToRemoveFrom","_continuousAnchorEdge","rIdx","epId","placeholder","insertIdx","listsForElement","anchorLists","total","eId","_floatingAnchorCompute","_defaultAnchorCompute","sourceInfo","targetInfo","sE","tE","sAnchorP","getEndpointLocation","_getRotations","tAnchorP","resetBounds","computeAnchorLocation","getAnchorOrientation","anchorLoc","offsetToUI","connectionsToPaint","anchorsToUpdate","endpointsByElement","anEndpoint","orientationCache","_updateAnchorList","sourceContinuous","targetContinuous","oKey","sd","sourceRotation","_calculateOrientation","elementWithPrecedence","_placeAnchors","atan2","candidates","midpoints","types","dim","_midpoints$types$i","axis","_applyRotationsXY","FACES","sf","tf","dist","_axisIndices","axisIndices","ais","bis","ait","bit","sourceEdge","targetEdge","currentFace","setCurrentFace","overrideLock","coords","l1","l2","connectorMap","StraightSegment","_AbstractSegment","segmentType","_setCoordinates","isFirstSegment","m2","_recalc","farAwayPoint","within","closest","_x1","_y1","fractionInSegment","q","_x2","_y2","X","Y","m1","_pointLiesBetween","StraightConnector","_AbstractConnector","_addSegment","transformAnchorPlacement","prepareList","input","doNotGetIds","_r","_resolveId","addManagedConnection","connectedClass","removeManagedConnection","targetCount","JsPlumbInstance","_instanceIndex","Bottom","connectionOverlays","endpointOverlays","listStyle","_initialDefaults","DEFAULT_SCOPE","setContainer","_zoom","_container","repaintEverything","_curIdStamp","conditionName","getListener","_idstamp","flat","String","sources","targets","results","jj","_c2","_addOne","noElementFilters","_el2","either","sourceMatchExact","targetMatchExact","ii","noMatchSource","noMatchTarget","sid","_st","stTypes","cId","oldEndpoint","evtParams","_managedElements","_set","setType","repaintAfterwards","curVal","doNotRepaintAfterwards","_wasSuspended","setSuspendDrawing","recalc","refreshElement","fireDetachEvent","fireEvent","_sourceEndpoint","endpointToIgnore","deletedCount","batch","doFireEvent","argIsConnection","nl","internalId","viewportElement","updateOffset","registerElement","dataIdentifier","removeElement","removeAllEndpoints","removeAttribute","_removeElement","_getAssociatedElements","_doNotRepaint","rotateElement","rotations","_oneLevel","gEntry","managedElement","endpointsByUUID","dontPrependDefault","bits","as","getConnectionType","offsetsWereJustCalculated","_mergeRedraw","repaintEls","redraw","proxy","proxiedBy","connectionsToDelete","unregisterEndpoint","referenceParams","addEndpoint","silently","_connectionTypes","_endpointTypes","_prepareConnectionParams","errorMessage","temp","_scopeMatch","e1","e2","s1","s2","doNotFireConnectionEvent","recurse","_createSourceDefinition","_createTargetDefinition","changeEndpoints","_setVisible","state","alsoChangeEndpoints","endpointFunc","_operation","func","registerConnectionType","registerEndpointType","typeDescriptor","getEndpointType","proxyEl","endpointGenerator","anchorGenerator","proxyEp","alreadyProxied","originalElementId","proxyElId","isProxyEndpoint","originalId","newId","_this$groupManager","toggleGroup","_manipulateView","_doNotFireEvent","removeAllGroups","removeFromGroup","ap","_c3","findConnectionToUseForDynamicAnchor","oId","oInfo","tElement","renderEndpoint","drawOverlay","getAbsoluteOverlayPosition","_paintOverlay","computePath","overlayExtents","_extents","paintConnector","endpointConnectedClass","endpointFullClass","Connectors","doNotRevalidate","relatedElement","getPath","endpointMap","pst","psl","isSVGElementOverlay","cleanup","getEndpointCanvas","getLabelElement","getElement","getCustomElement","groupDragConstrain","BrowserJsPlumbInstance","_JsPlumbInstance","attr","managedElementsSelector","dragManager","addHandler","groupDragOptions","elementDragHandler","elementDragOptions","_createEventListeners","_attachEventDelegates","resizeObserver","_resizeObserver","ResizeObserver","updates","contentRect","mappedEvent","_jsPlumbOverlay","setOption","contains","toggleClass","toggle","hasClass","callbackOrSelector","offsetParent","getStyle","svgWidthHeightSize","svgXYPosition","prop","getComputedStyle","getPropertyValue","currentStyle","nodeList","createDocumentFragment","isDraggable","setDraggable","_connClick","connectorElement","_connectorClick","_connectorDblClick","_connectorTap","_connectorDblTap","_connectorHover","setConnectorHover","hoverSourceClass","hoverTargetClass","_connectorMouseover","_connectorMouseout","_connectorMouseupdown","_connectorMouseup","_connectorMousedown","_connectorContextmenu","_epClick","endpointElement","_endpointClick","_endpointDblClick","_endpointHover","setEndpointHover","_endpointMouseover","_endpointMouseout","_endpointMouseupdown","_endpointMouseup","_endpointMousedown","_oClick","method","overlayElement","fireOverlayMethod","_overlayClick","_overlayDblClick","_overlayTap","_overlayDblTap","_overlayHover","setOverlayHover","_overlayMouseover","_overlayMouseout","_elementClick","_elementTap","_elementDblTap","_elementHover","_elementMouseenter","_elementMouseexit","_elementMousemove","_elementMouseup","_elementMousedown","_elementContextmenu","currentContainer","newContainer","dragFilters","_detachEventDelegates","setFilters","disconnect","clearDragSelection","unobserve","removeFromDragSelection","_this$elementDragHand","_len4","_key4","addToDragGroup","_this$elementDragHand2","_this$elementDragHand3","_len5","_key5","setDragGroupState","clearDragGroup","transformOrigin","XY","getXY","_XY","bgPath","_el3","_getDimensions","locToUse","draw","lt","innerText","paintSvgConnector","getConnectorElement","getPathData","outlineStyle","outlineStrokeWidth","connectorOutlineClass","cany","isHoverSuspended","renderer","doNotCascade","genericHoverClass","show","hide","addDragFilter","removeDragFilter","observe","RectangleEndpoint","RectangleEndpointHandler","BlankEndpoint","BlankEndpointHandler","BLANK_ATTRIBUTES","DEFAULT_ANCHOR_LOCATIONS","TopRight","TopLeft","BottomRight","BottomLeft","DEFAULT_LIST_OPTIONS","deriveAnchor","ATTR_SCROLLABLE_LIST","SELECTOR_SCROLLABLE_LIST","EVENT_SCROLL","JsPlumbListManager","scrollableLists","addList","removeList","targetParent","findParentList","newConnection","sourceParent","dropList","domElement","dp","JsPlumbList","listId","getList","parentList","_scrollHandler","scrollHandler","_jsPlumbScrollHandler","deriveEndpoint","_proxyConnection","_loop","_jsPlumbProxies","gentleRound","ceil","ArcSegment","anticlockwise","startAngle","endAngle","_calcAngle","ea","sweep","circumference","frac","laf","angle","_calcAngleForLocation","arcSpan","dir","AbstractBezierConnector","showLoopback","curviness","margin","proximityLimit","loopbackRadius","isLoopbackCurrently","sp","tp","_w","_h","loopback","_computeBezier","controlPoints","setGeometry","Vectors","subtract","dotProduct","square","scale","_bezier","curve","degree","_j","_j2","_j3","_curveFunctionCache","pointOnCurve","cc","_getCurveFunctions","c_term","_termFunc","terms","_j4","isPoint","pointAlongPath","prev","tally","cur","_computeCoefficientsForAxis","_cubicRoots","S","T","A","B","Q","R","D","th","acos","BezierSegment","cp1x","cp1y","cp2x","cp2y","_translateLocation","computeBezierLength","lut","_getLUT","steps","_computeLookup","EMPTY_POINT","distanceFromCurve","newDist","_convertToBezier","higherDegree","cdTable","row","column","lb","ub","numSolutions","_findRoots","depth","XNM","YNM","XMK","left_count","right_count","left_t","right_t","_getCrossingCount","sign","old_sign","n_crossings","_isFlatEnough","max_distance_above","max_distance_below","intercept_1","intercept_2","left_intercept","dInv","error","XLK","_i4","bezierLineIntersection","coeffs","intersections","t2","t3","_curve","BezierConnector","_AbstractBezierConnec","majorAnchor","minorAnchor","sourceAnchorPosition","targetAnchorPosition","soo","too","_CP","_CP2","_sx","_sy","_tx","_ty","_findControlPoint","StateMachineConnector","_midx","_midy","_controlPoint","midx","midy","sgn","segmentDirections","segLength","_cloneArray","midpoint","cornerRadius","alwaysRespectStubs","lastx","lasty","lastOrientation","lx","ly","internalSegments","currentDirection","nextDirection","minSegLength","radiusToUse","sgnEqual","sgny","commonStubCalculator","stubCalculators","areInProximity","pi","oss","oes","addASegment","orientations","lineCalculators","midLines","linesToEnd","startToEnd","startToMidToEnd","otherStubs","soIdx","toIdx","_so","_to","otherFlipped","stub1","stub2","segmentIndexes","sis","startStub","otherStartStub","endStub","otherEndStub","extent","toUpperCase","writeSegments","_distantPointEvent","BrowserUITestSupport","_jsPlumb","equal","mottle","innerHTML","_divs","addDiv","epl","_mel","div","makeEvent","before","downEvent","beforeMouseMove","beforeMouseUp","after","cb","targetGroupId","tgo","dragNodeTo","functionToAssertWhileDragging","assertMessage","_randomEvent","mouseUpOnTarget","el1","getCanvas","el2","detachConnection","relocate","epOrEl","getConnectionCanvas","fireEventOnElement","fireEventOnConnection","clickCount","getOverlayCanvas","fireEventOnOverlay","_i5","getElementById","connCount","epCount","selectEndpoints","epElCount","connElCount","kk","firstChild","_i6","_i7","_jsPlumbInstanceIndex","_do","readyState","$gYAp4","$83625ed049aab94e$export$f78be8d334fd9409","whiteboard","outputs","frozen","mainRowContainer","lhsSpan","updateSelf","updateChildren","$953f4e1cfd7c4c4b$var$whiteboard","nodes"],"version":3,"file":"whiteboard-main.js.map"}